androidx.core.view.ViewCompat$ScrollIndicators
com.google.gson.internal.LinkedHashTreeMap$1
androidx.vectordrawable.R
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter
com.google.gson.internal.bind.TypeAdapters$34
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
io.reactivex.subscribers.TestSubscriber$EmptySubscriber
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer
androidx.vectordrawable.R$attr
org.aspectj.lang.reflect.InterTypeConstructorDeclaration
androidx.loader.content.ModernAsyncTask$AsyncTaskResult
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback
androidx.drawerlayout.R$attr
androidx.appcompat.widget.TintResources
com.google.gson.internal.bind.TypeAdapters$29
androidx.appcompat.app.AlertController$1
okio.HashingSource
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver
io.reactivex.internal.schedulers.SchedulerWhen
androidx.activity.R$layout
io.reactivex.internal.schedulers.DisposeOnCancel
androidx.lifecycle.ClassesInfoCache$CallbackInfo
io.reactivex.exceptions.CompositeException
io.reactivex.internal.subscribers.QueueDrainSubscriberWip
io.reactivex.observables.ConnectableObservable
androidx.core.view.accessibility.AccessibilityEventCompat
androidx.activity.R
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
android.support.v4.app.RemoteActionCompatParcelizer
com.google.gson.internal.bind.TypeAdapters$32
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver
com.xuexiang.xhttp2.interceptor.BaseRequestInterceptor
okhttp3.internal.Util
androidx.core.view.ViewCompat
androidx.viewpager.R$attr
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver
androidx.core.app.NotificationCompat$WearableExtender
androidx.loader.content.Loader
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast
io.reactivex.internal.operators.observable.ObservableDoOnLifecycle
org.reactivestreams.FlowAdapters
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber
org.aspectj.lang.reflect.DeclareParents
io.reactivex.internal.operators.single.SingleDoOnSuccess$DoOnSuccess
com.xuexiang.xhttp2.interceptor.BaseExpiredInterceptor
androidx.lifecycle.Lifecycling
io.reactivex.internal.operators.observable.ObservableConcatMapEager
io.reactivex.internal.operators.completable.CompletableDisposeOn
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable
io.reactivex.internal.subscribers.FutureSubscriber
io.reactivex.CompletableSource
io.reactivex.internal.observers.CallbackCompletableObserver
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable
okio.Okio$3
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager
io.reactivex.internal.operators.flowable.FlowableConcatMap$SimpleScalarSubscription
io.reactivex.internal.schedulers.AbstractDirectTask
androidx.drawerlayout.R$string
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast
retrofit2.http.Path
com.xuexiang.xhttp2.request.DeleteRequest
androidx.activity.ComponentActivity$2
com.xuexiang.xhttp2.R$layout
androidx.lifecycle.ViewModel
com.xuexiang.xhttp2.XHttp
androidx.appcompat.widget.ActionMenuView
okhttp3.internal.ws.RealWebSocket$CancelRunnable
io.reactivex.internal.operators.maybe.MaybeLift
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver
io.reactivex.internal.operators.observable.ObservableNever
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver
io.reactivex.internal.observers.BlockingBaseObserver
androidx.core.R$layout
io.reactivex.internal.operators.observable.ObservableDoAfterNext
io.reactivex.internal.functions.Functions$Array2Func
androidx.core.graphics.PaintCompat
okhttp3.internal.http2.Http2Stream$FramingSource
androidx.appcompat.view.menu.CascadingMenuPopup$3$1
androidx.appcompat.widget.AppCompatSpinner
okio.Okio$1
io.reactivex.internal.util.HalfSerializer
io.reactivex.internal.operators.flowable.FlowableCollect
org.aspectj.lang.reflect.DeclarePrecedence
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener
androidx.lifecycle.ViewModelProvider$Factory
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache
com.appspa.demo.utils.SettingSPUtils
io.reactivex.internal.observers.BlockingObserver
com.xuexiang.xhttp2.R$drawable
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver
androidx.annotation.Dimension
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver
androidx.loader.content.ModernAsyncTask$InternalHandler
io.reactivex.observers.ResourceObserver
io.reactivex.internal.operators.flowable.FlowableCreate
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver
androidx.versionedparcelable.VersionedParcelParcel
okio.GzipSink
okio.Okio$2
androidx.annotation.RequiresPermission$Write
androidx.core.view.DragStartHelper
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup
io.reactivex.internal.operators.observable.ObservableOnErrorReturn
io.reactivex.internal.util.EmptyComponent
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner
com.xuexiang.xhttp2.cache.stategy.FirstRemoteStrategy
com.xuexiang.xhttp2.model.ExpiredInfo
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver$DisposeTask
androidx.collection.LongSparseArray
io.reactivex.internal.operators.maybe.MaybeUsing
androidx.core.provider.FontsContractCompat$TypefaceResult
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber
org.aspectj.runtime.internal.CFlowPlusState
com.xuexiang.xhttp2.request.CustomRequest
com.appspa.update.entity.UpdateError$ERROR
androidx.annotation.UiThread
io.reactivex.internal.operators.observable.ObservableTakeLastTimed
io.reactivex.subjects.MaybeSubject$MaybeDisposable
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver
com.google.gson.JsonElement
androidx.core.provider.FontsContractCompat$Columns
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker
com.xuexiang.xhttp2.https.HttpsUtils$UnSafeTrustManager
com.google.gson.internal.Excluder$1
androidx.appcompat.R$anim
com.google.gson.FieldNamingPolicy$4
androidx.fragment.app.FragmentTransitionCompat21$1
androidx.fragment.app.FragmentFactory
org.aspectj.runtime.reflect.JoinPointImpl$StaticPartImpl
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber
io.reactivex.internal.operators.single.SingleDoOnSubscribe
io.reactivex.internal.operators.maybe.MaybeFilter
androidx.appcompat.widget.ActionMenuPresenter$SavedState
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector
com.zhy.http.okhttp.callback.FileCallBack$1
okhttp3.internal.http.HttpMethod
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver
androidx.savedstate.SavedStateRegistry$AutoRecreated
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback
io.reactivex.internal.schedulers.SchedulerWhen$ImmediateAction
androidx.core.provider.FontsContractCompat$2
retrofit2.HttpServiceMethod
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver
com.google.gson.internal.GsonBuildConfig
androidx.core.app.JobIntentService
io.reactivex.internal.operators.flowable.FlowableDoOnEach
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver
androidx.vectordrawable.R$layout
okio.AsyncTimeout$Watchdog
androidx.lifecycle.ViewModelProvider
io.reactivex.internal.subscriptions.ArrayCompositeSubscription
io.reactivex.internal.operators.flowable.FlowableFromFuture
io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver
okio.ForwardingTimeout
io.reactivex.internal.operators.flowable.FlowableSkipWhile
io.reactivex.internal.operators.flowable.FlowableSingle
androidx.core.content.ContextCompat$MainHandlerExecutor
androidx.vectordrawable.animated.R$drawable
io.reactivex.internal.operators.observable.ObservableCombineLatest
org.aspectj.lang.annotation.DeclareMixin
androidx.core.net.TrafficStatsCompat
androidx.appcompat.view.menu.ExpandedMenuView
retrofit2.http.QueryName
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver
androidx.core.app.ComponentActivity
io.reactivex.internal.operators.maybe.MaybeFromSingle
androidx.core.app.AppComponentFactory
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
org.aspectj.runtime.internal.cflowstack.ThreadCounter
org.aspectj.lang.annotation.RequiredTypes
io.reactivex.internal.util.OpenHashSet
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver
io.reactivex.internal.operators.mixed.SingleFlatMapObservable
com.google.gson.internal.ConstructorConstructor$9
androidx.collection.SimpleArrayMap
io.reactivex.internal.observers.InnerQueuedObserver
androidx.collection.MapCollections$MapIterator
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver
io.reactivex.internal.operators.single.SingleTimer
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver
io.reactivex.flowables.GroupedFlowable
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber
com.google.gson.internal.bind.TypeAdapters$12
okhttp3.WebSocketListener
com.xuexiang.xhttp2.reflect.TypeException
org.aspectj.lang.reflect.PointcutBasedPerClause
org.aspectj.lang.NoAspectBoundException
io.reactivex.internal.operators.completable.CompletableDoFinally
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable
androidx.core.os.LocaleListPlatformWrapper
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary
androidx.annotation.StyleableRes
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterSubscriber
org.aspectj.internal.lang.reflect.DeclareSoftImpl
io.reactivex.internal.operators.observable.ObservableFlattenIterable
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
androidx.appcompat.view.menu.MenuPresenter$Callback
okhttp3.internal.http.RetryAndFollowUpInterceptor
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle
com.appspa.update.service.DownloadService$FileDownloadCallBack$4
com.google.gson.JsonSyntaxException
com.zhy.http.okhttp.builder.PostStringBuilder
androidx.lifecycle.OnLifecycleEvent
io.reactivex.parallel.ParallelTransformer
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver
androidx.core.view.ViewPropertyAnimatorUpdateListener
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$1
androidx.activity.R$color
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
org.aspectj.runtime.internal.cflowstack.ThreadStackFactory
androidx.annotation.FloatRange
io.reactivex.internal.queue.SpscLinkedArrayQueue
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable
io.reactivex.Notification
retrofit2.ParameterHandler
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer
androidx.core.app.JobIntentService$CommandProcessor
androidx.loader.R$string
com.xuexiang.xhttp2.cache.RxCache$SimpleSubscribe
io.reactivex.internal.operators.observable.ObservableTimeout
com.jakewharton.disklrucache.DiskLruCache$Editor
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber
androidx.core.os.LocaleListInterface
androidx.core.app.NotificationCompat$Action
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy
com.google.gson.internal.bind.JsonTreeWriter$1
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl
com.xuexiang.xhttp2.subsciber.impl.IProgressLoader
io.reactivex.internal.operators.single.SingleDelay$Delay
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast
androidx.core.app.ActivityCompat
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver
com.google.gson.internal.bind.TypeAdapters$28
androidx.viewpager.widget.ViewPager$ViewPositionComparator
io.reactivex.internal.operators.observable.ObservableDelay
io.reactivex.internal.queue.SpscArrayQueue
io.reactivex.internal.operators.observable.ObservableRefCount
androidx.core.widget.NestedScrollView$SavedState
io.reactivex.subjects.AsyncSubject$AsyncDisposable
io.reactivex.internal.functions.Functions$Array6Func
okhttp3.Response$Builder
io.reactivex.internal.operators.single.SingleDoOnDispose
androidx.core.app.Person
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry
io.reactivex.disposables.CompositeDisposable
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver
okio.AsyncTimeout
androidx.cursoradapter.R
androidx.fragment.app.FragmentTransition$2
io.reactivex.internal.operators.single.SingleDelayWithObservable
androidx.vectordrawable.R$style
com.zhy.http.okhttp.https.HttpsUtils$UnSafeTrustManager
androidx.core.graphics.drawable.RoundedBitmapDrawable21
okhttp3.internal.platform.Jdk9Platform
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber
androidx.fragment.app.FragmentTransition$FragmentContainerTransition
io.reactivex.internal.operators.single.SingleJust
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber
androidx.core.R$style
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask
androidx.activity.R$attr
com.appspa.update.logs.LogcatLogger
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher
io.reactivex.observers.ResourceMaybeObserver
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver
com.xuexiang.xhttp2.utils.Utils
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$2
com.xuexiang.xhttp2.cookie.CookieManager
androidx.core.view.DragStartHelper$2
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection
org.aspectj.internal.lang.reflect.DeclareParentsImpl
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
androidx.core.view.ViewCompat$5
io.reactivex.internal.operators.observable.ObservableRetryWhen
androidx.viewpager.widget.ViewPager$ItemInfo
io.reactivex.internal.operators.observable.ObservableDebounceTimed
com.xuexiang.xhttp2.callback.SimpleCallBack
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall
com.xuexiang.xhttp2.subsciber.BaseSubscriber
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed
com.appspa.update.logs.UpdateLog
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleGenerator
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable
com.xuexiang.xhttp2.cache.RxCache$5
org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11
io.reactivex.internal.operators.flowable.FlowablePublish$FlowablePublisher
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener
com.xuexiang.xhttp2.R$string
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState
androidx.fragment.app.FragmentTransition$3
io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable
org.aspectj.lang.reflect.NoSuchPointcutException
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
io.reactivex.internal.util.ExceptionHelper
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments
okhttp3.ConnectionSpec
okhttp3.Cache$1
io.reactivex.parallel.ParallelFailureHandling
io.reactivex.internal.operators.observable.ObservableAllSingle
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
androidx.appcompat.app.WindowDecorActionBar
okhttp3.internal.cache.DiskLruCache$3
androidx.viewpager.widget.ViewPager$SavedState$1
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable
androidx.core.widget.PopupWindowCompat
com.google.gson.internal.bind.TypeAdapters$23
io.reactivex.internal.operators.observable.ObservableBuffer
io.reactivex.internal.operators.flowable.FlowableCreate$ErrorAsyncEmitter
androidx.appcompat.app.AlertController$2
io.reactivex.internal.disposables.ResettableConnectable
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver
com.google.gson.internal.ConstructorConstructor$12
io.reactivex.internal.operators.single.SingleDelayWithPublisher
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription
com.google.gson.LongSerializationPolicy$1
com.appspa.update.utils.ShellUtils$CommandResult
io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle
androidx.lifecycle.livedata.R
androidx.viewpager.widget.ViewPager$PageTransformer
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver
retrofit2.http.Header
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager
androidx.annotation.StringRes
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner
io.reactivex.processors.ReplayProcessor$Node
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver
android.support.v4.os.ResultReceiver$MyResultReceiver
androidx.fragment.app.FragmentTransitionCompat21$2
com.appspa.update.widget.NumberProgressBar$OnProgressBarListener
androidx.core.graphics.TypefaceCompatApi21Impl
androidx.appcompat.widget.SearchView$SavedState
okhttp3.ConnectionSpec$Builder
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver
androidx.core.content.ContentResolverCompat
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver
androidx.fragment.app.FragmentTransitionImpl$1
com.appspa.update.proxy.IUpdateHttpService
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver
androidx.appcompat.R$styleable
androidx.collection.ContainerHelpers
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver
org.aspectj.internal.lang.reflect.PerClauseImpl
retrofit2.package-info
io.reactivex.internal.operators.completable.CompletableTimeout
androidx.fragment.app.FragmentTabHost$TabInfo
com.xuexiang.xhttp2.R$attr
com.appspa.update.listener.impl.DefaultUpdateFailureListener
io.reactivex.processors.BehaviorProcessor
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver
io.reactivex.functions.Function
com.zhy.http.okhttp.callback.Callback$1
androidx.lifecycle.ReportFragment$ActivityInitializationListener
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver
io.reactivex.internal.operators.observable.ObservableBufferBoundary
io.reactivex.internal.operators.flowable.FlowableReplay$SizeBoundReplayBuffer
androidx.core.graphics.TypefaceCompatApi28Impl
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
com.xuexiang.xhttp2.cookie.PersistentCookieStore
com.xuexiang.xhttp2.https.HttpsUtils$SSLParams
org.aspectj.runtime.reflect.ConstructorSignatureImpl
androidx.collection.ArrayMap
okio.package-info
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver
io.reactivex.internal.operators.completable.CompletableConcatIterable
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundaryObserver
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver
androidx.appcompat.widget.ForwardingListener$TriggerLongPress
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver
io.reactivex.internal.schedulers.NewThreadWorker
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBufferTask
retrofit2.http.PATCH
io.reactivex.observers.DisposableSingleObserver
io.reactivex.internal.fuseable.HasUpstreamCompletableSource
io.reactivex.internal.operators.observable.ObservableCreate
com.zhy.http.okhttp.request.CountingRequestBody$Listener
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver
io.reactivex.internal.operators.observable.ObservableGenerate
com.zhy.http.okhttp.cookie.store.SerializableHttpCookie
androidx.appcompat.widget.AppCompatTextView
retrofit2.KotlinExtensions$await$4$2
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper
androidx.versionedparcelable.CustomVersionedParcelable
okhttp3.internal.http.RequestLine
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl$1
androidx.appcompat.widget.WithHint
io.reactivex.observers.TestObserver
androidx.appcompat.widget.ActionMenuView$LayoutParams
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$2
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber
com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver
io.reactivex.internal.operators.flowable.FlowableReplay$Node
io.reactivex.internal.operators.flowable.FlowableCache$Node
com.google.gson.JsonDeserializationContext
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level
androidx.appcompat.widget.AppCompatDrawableManager
io.reactivex.internal.functions.Functions$NotificationOnError
com.appspa.update.R$dimen
org.aspectj.lang.reflect.CatchClauseSignature
io.reactivex.internal.operators.completable.CompletableToSingle
io.reactivex.functions.Function7
io.reactivex.internal.operators.flowable.FlowableConcatMap
io.reactivex.internal.operators.single.SingleDoAfterSuccess
com.google.gson.internal.LinkedHashTreeMap$KeySet
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver
io.reactivex.SingleSource
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainNoLast
androidx.core.view.ViewCompat$FocusRealDirection
androidx.savedstate.SavedStateRegistry
androidx.appcompat.widget.DialogTitle
com.xuexiang.xhttp2.request.BaseRequest$5
io.reactivex.internal.operators.maybe.MaybeHide
retrofit2.ParameterHandler$Tag
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.viewpager.R
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
androidx.core.provider.SelfDestructiveThread$3
com.appspa.update.R$attr
androidx.lifecycle.LifecycleRegistry$ObserverWithState
io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker
androidx.appcompat.widget.AppCompatImageButton
io.reactivex.android.schedulers.AndroidSchedulers$1
io.reactivex.internal.util.ObservableQueueDrain
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup
okhttp3.internal.tls.CertificateChainCleaner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver
androidx.appcompat.app.AppCompatDelegate
org.aspectj.runtime.reflect.SourceLocationImpl
androidx.core.app.NotificationCompat$BigPictureStyle
io.reactivex.internal.operators.flowable.FlowableEmpty
io.reactivex.Maybe
com.zhy.http.okhttp.OkHttpUtils
com.google.gson.FieldNamingPolicy$3
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong
androidx.core.util.Preconditions
androidx.core.content.res.ResourcesCompat$FontCallback
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray
io.reactivex.internal.operators.flowable.FlowableConcatMap$1
org.aspectj.internal.lang.reflect.SignaturePatternImpl
io.reactivex.internal.fuseable.FuseToObservable
androidx.lifecycle.LiveData$1
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable
com.google.gson.internal.reflect.PreJava9ReflectionAccessor
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory
retrofit2.BuiltInConverters$BufferingResponseBodyConverter
androidx.annotation.NonNull
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary
io.reactivex.internal.functions.Functions$NotificationOnNext
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle
androidx.annotation.InspectableProperty$ValueType
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker
androidx.fragment.app.FragmentTransitionCompat21$3
androidx.appcompat.widget.ListPopupWindow$1
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.appcompat.R$string
androidx.loader.R$style
io.reactivex.disposables.SerialDisposable
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber
okhttp3.internal.connection.RouteSelector
androidx.appcompat.app.ToolbarActionBar$1
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver
androidx.annotation.BoolRes
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom
org.aspectj.lang.annotation.AfterReturning
com.google.gson.internal.$Gson$Types
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache
io.reactivex.internal.operators.observable.ObservableElementAtMaybe
io.reactivex.internal.operators.single.SingleToObservable
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter
com.xuexiang.xhttp2.model.SchedulerType
io.reactivex.internal.operators.observable.ObservableReplay
io.reactivex.internal.operators.maybe.MaybeError
com.xuexiang.xhttp2.cache.stategy.NoStrategy
io.reactivex.CompletableTransformer
androidx.collection.ArrayMap$1
io.reactivex.internal.operators.observable.ObservableDematerialize
androidx.activity.OnBackPressedDispatcher
com.appspa.update.entity.PromptEntity
io.reactivex.internal.fuseable.QueueDisposable
androidx.core.graphics.PathSegment
com.appspa.demo.R$xml
com.google.gson.internal.LinkedHashTreeMap$Node
io.reactivex.internal.subscriptions.BooleanSubscription
io.reactivex.internal.operators.flowable.FlowableAll
com.appspa.demo.entity.CustomResult
okhttp3.ConnectionPool$1
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter
androidx.core.graphics.PathParser$PathDataNode
androidx.core.app.JobIntentService$GenericWorkItem
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber
com.appspa.update.widget.WeakFileDownloadListener
io.reactivex.internal.operators.flowable.FlowableScanSeed
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
androidx.viewpager.R$drawable
com.appspa.demo.http.OKHttpUpdateHttpService$2
com.google.gson.internal.ConstructorConstructor$4
io.reactivex.internal.operators.observable.ObservableRange
io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription
com.appspa.update.listener.OnUpdateFailureListener
org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver
androidx.fragment.app.FragmentTransaction
okhttp3.Request$Builder
androidx.core.provider.SelfDestructiveThread
io.reactivex.Emitter
io.reactivex.functions.IntFunction
androidx.appcompat.widget.AppCompatHintHelper
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback
androidx.core.content.FileProvider
okio.DeflaterSink
androidx.annotation.DrawableRes
androidx.appcompat.app.AppCompatDelegateImpl$5
androidx.core.text.util.LinkifyCompat$1
androidx.core.widget.NestedScrollView
io.reactivex.internal.operators.observable.ObservableReplay$ScheduledReplaySupplier
io.reactivex.internal.operators.single.SingleTakeUntil
androidx.appcompat.app.AppCompatDelegateImpl$1
io.reactivex.internal.operators.flowable.FlowableJust
io.reactivex.internal.operators.flowable.FlowableAny
io.reactivex.internal.observers.QueueDrainObserver
org.aspectj.lang.annotation.DeclareAnnotation
io.reactivex.internal.operators.flowable.FlowableCreate$DropAsyncEmitter
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker
androidx.appcompat.widget.ToolbarWidgetWrapper
io.reactivex.internal.operators.observable.ObservablePublishClassic
io.reactivex.internal.operators.single.SingleFromPublisher
androidx.fragment.app.FragmentHostCallback
androidx.appcompat.app.AppCompatDelegateImpl$6
androidx.activity.R$id
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener
androidx.core.widget.AutoScrollHelper$ClampedScroller
androidx.core.R$dimen
androidx.versionedparcelable.R
io.reactivex.internal.schedulers.RxThreadFactory$RxCustomThread
com.google.gson.internal.PreJava9DateFormatProvider
io.reactivex.internal.operators.flowable.FlowableLimit
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver
com.google.gson.Gson$1
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1
io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb
com.google.gson.internal.bind.TypeAdapters$1
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil
org.aspectj.runtime.internal.CFlowCounter
io.reactivex.internal.operators.single.SingleOnErrorReturn
androidx.appcompat.app.AppCompatDelegateImpl$2
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
io.reactivex.subscribers.SafeSubscriber
androidx.core.util.ObjectsCompat
com.zhy.http.okhttp.builder.PostFormBuilder
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber
io.reactivex.internal.util.NotificationLite
androidx.fragment.app.Fragment$3
io.reactivex.internal.operators.single.SingleLift
okhttp3.Cache$CacheResponseBody
androidx.customview.view.AbsSavedState
io.reactivex.internal.operators.single.SingleFlatMapPublisher
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber
com.xuexiang.xhttp2.XHttp$3
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector
androidx.appcompat.app.ActionBarDrawerToggle
io.reactivex.internal.operators.completable.CompletableFromUnsafeSource
androidx.core.content.pm.ShortcutManagerCompat
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor
com.xuexiang.xhttp2.logs.ILogger
io.reactivex.internal.operators.maybe.MaybeMergeArray
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver
io.reactivex.internal.subscribers.BlockingFirstSubscriber
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver
androidx.core.app.RemoteActionCompat
com.appspa.update.utils.DialogUtils
com.google.gson.InstanceCreator
androidx.core.view.ViewCompat$NestedScrollType
androidx.loader.content.Loader$ForceLoadContentObserver
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapIntoIterable
androidx.fragment.app.Fragment$OnStartEnterTransitionListener
androidx.appcompat.widget.TintContextWrapper
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle
org.aspectj.runtime.internal.cflowstack.ThreadStack
io.reactivex.MaybeTransformer
androidx.activity.R$dimen
io.reactivex.internal.operators.observable.ObservablePublishSelector
androidx.appcompat.view.menu.BaseMenuWrapper
com.appspa.update.proxy.impl.AbstractUpdateParser
io.reactivex.internal.util.SuppressAnimalSniffer
io.reactivex.internal.operators.parallel.ParallelReduceFull
androidx.fragment.app.BackStackRecord
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor
io.reactivex.internal.operators.parallel.ParallelFilter
androidx.lifecycle.FullLifecycleObserver
io.reactivex.schedulers.Timed
androidx.collection.CircularArray
androidx.annotation.ColorRes
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
com.appspa.update.widget.UpdateDialogActivity
io.reactivex.internal.operators.flowable.FlowableFromArray
androidx.appcompat.app.AlertController$CheckedItemAdapter
com.appspa.update.service.OnFileDownloadListener
okhttp3.EventListener$Factory
androidx.appcompat.app.AppCompatViewInflater
com.zhy.http.okhttp.log.LoggerInterceptor
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber
com.google.gson.internal.bind.TypeAdapters$22
io.reactivex.functions.Predicate
androidx.lifecycle.FullLifecycleObserverAdapter$1
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber
android.support.v4.os.ResultReceiver
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver
io.reactivex.internal.operators.single.SingleCreate
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber
com.xuexiang.xhttp2.cache.RxCache$Builder
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool
androidx.appcompat.view.menu.MenuItemImpl
okhttp3.MultipartBody$Part
okhttp3.MultipartBody
okhttp3.internal.io.FileSystem
androidx.vectordrawable.graphics.drawable.ArgbEvaluator
retrofit2.http.Url
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber
io.reactivex.internal.operators.observable.ObservableFromArray
com.google.gson.stream.JsonToken
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher
androidx.versionedparcelable.VersionedParcelize
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription
io.reactivex.internal.operators.flowable.FlowableDematerialize
io.reactivex.functions.BiPredicate
androidx.core.text.PrecomputedTextCompat$Params$Builder
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerInner
okhttp3.RequestBody$2
androidx.core.content.PermissionChecker$PermissionResult
okio.SegmentPool
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber
androidx.appcompat.app.AlertDialog
androidx.arch.core.internal.FastSafeIterableMap
androidx.viewpager.widget.PagerTitleStrip
androidx.appcompat.widget.ToolbarWidgetWrapper$2
okhttp3.CacheControl
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver
io.reactivex.internal.operators.parallel.ParallelFromPublisher
androidx.core.util.TimeUtils
io.reactivex.internal.operators.maybe.MaybeIgnoreElement
androidx.core.app.NotificationCompat$Extender
okhttp3.internal.platform.AndroidPlatform
androidx.appcompat.app.AppCompatDelegateImpl$6$1
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer
androidx.core.math.MathUtils
com.google.gson.internal.bind.TypeAdapters$35$1
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber
com.xuexiang.xhttp2.model.HttpParams$FileWrapper
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter
androidx.appcompat.R$attr
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber
androidx.core.text.HtmlCompat
androidx.core.text.util.LinkifyCompat$LinkSpec
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy
androidx.appcompat.app.AppCompatDelegateImpl$4
okhttp3.internal.http2.StreamResetException
com.google.gson.internal.UnsafeAllocator$1
io.reactivex.observers.BaseTestConsumer
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
com.jakewharton.disklrucache.Util
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver
io.reactivex.internal.operators.maybe.MaybeToSingle
com.appspa.update.R$string
retrofit2.ServiceMethod
io.reactivex.internal.operators.flowable.FlowableLift
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
io.reactivex.SingleConverter
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver
io.reactivex.internal.operators.observable.ObservableRetryPredicate
retrofit2.Utils
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber
androidx.appcompat.widget.DropDownListView
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver
androidx.loader.content.ModernAsyncTask$3
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver
androidx.appcompat.content.res.AppCompatResources
io.reactivex.internal.operators.flowable.FlowableWindow
androidx.core.widget.ImageViewCompat
androidx.lifecycle.MutableLiveData
io.reactivex.FlowableTransformer
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver
io.reactivex.internal.functions.Functions$ToMultimapKeyValueSelector
com.google.gson.internal.ObjectConstructor
androidx.appcompat.widget.Toolbar$3
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutSupport
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedReplayCallable
com.xuexiang.xhttp2.cache.model.CacheResult
com.appspa.update.entity.UpdateError
androidx.core.graphics.drawable.WrappedDrawableState
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber
io.reactivex.internal.operators.flowable.FlowableRepeatUntil
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl
io.reactivex.internal.subscriptions.SubscriptionArbiter
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState
androidx.core.view.KeyEventDispatcher$Component
retrofit2.OkHttpCall$1
io.reactivex.internal.operators.maybe.MaybeFromRunnable
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter
okhttp3.FormBody$Builder
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper
androidx.appcompat.app.AlertController$3
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBuffer
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver
io.reactivex.internal.functions.Functions$EmptyAction
androidx.core.provider.FontsContractCompat$4$9
androidx.customview.widget.ViewDragHelper$2
okhttp3.internal.http2.Http2
io.reactivex.subscribers.TestSubscriber
io.reactivex.internal.operators.observable.ObservableOnErrorNext
org.aspectj.internal.lang.annotation.ajcDeclareEoW
io.reactivex.internal.operators.flowable.FlowableWindowBoundary
io.reactivex.internal.util.ArrayListSupplier
okio.AsyncTimeout$1
androidx.core.graphics.TypefaceCompatBaseImpl$2
androidx.core.view.LayoutInflaterFactory
io.reactivex.MaybeEmitter
androidx.core.content.PermissionChecker
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber
org.aspectj.lang.Aspects14
androidx.fragment.app.Fragment$1
androidx.vectordrawable.R$styleable
androidx.versionedparcelable.VersionedParcel$ParcelException
androidx.fragment.app.FragmentTabHost$SavedState$1
org.aspectj.lang.annotation.DeclareWarning
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver
androidx.core.widget.ContentLoadingProgressBar$2
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$3
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver
io.reactivex.internal.operators.completable.CompletableToObservable
io.reactivex.internal.operators.completable.CompletableDetach
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber
androidx.loader.content.Loader$OnLoadCompleteListener
io.reactivex.android.MainThreadDisposable$1
io.reactivex.internal.subscribers.QueueDrainSubscriberPad4
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1
androidx.core.app.ActivityCompat$PermissionCompatDelegate
androidx.core.os.LocaleListCompatWrapper
org.aspectj.runtime.reflect.MemberSignatureImpl
androidx.core.content.res.ConfigurationHelper
androidx.loader.content.ModernAsyncTask$Status
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1
org.aspectj.internal.lang.annotation.ajcPrivileged
okhttp3.internal.http2.ConnectionShutdownException
com.xuexiang.xhttp2.transform.func.OriginalStringFuc
io.reactivex.internal.operators.single.SingleZipArray$SingletonArrayFunc
androidx.fragment.app.FragmentState
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver
androidx.fragment.app.FragmentViewLifecycleOwner
io.reactivex.internal.functions.Functions$FutureAction
io.reactivex.internal.operators.observable.ObservableReplay$ReplayBufferSupplier
okhttp3.internal.http2.Http2Connection$ReaderRunnable
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback
androidx.core.view.ScrollingView
io.reactivex.FlowableOnSubscribe
io.reactivex.internal.operators.flowable.FlowablePublishMulticast
androidx.core.graphics.drawable.DrawableCompat
io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver
com.zhy.http.okhttp.cookie.store.CookieStore
io.reactivex.internal.operators.flowable.FlowableDefer
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver
androidx.core.app.NotificationCompat
androidx.lifecycle.Transformations$1
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber
io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver
androidx.core.content.FileProvider$SimplePathStrategy
androidx.annotation.RequiresApi
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
io.reactivex.subscribers.SerializedSubscriber
okhttp3.RealCall$1
okio.Buffer$1
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle
androidx.appcompat.widget.ViewUtils
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver
io.reactivex.internal.operators.flowable.FlowableSerialized
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback
okhttp3.internal.http2.Header
androidx.appcompat.app.AlertController$5
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedDispose
androidx.fragment.app.Fragment$2
androidx.appcompat.graphics.drawable.DrawableWrapper
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate
androidx.lifecycle.ReportFragment
com.google.gson.internal.ConstructorConstructor$7
androidx.lifecycle.AndroidViewModel
okhttp3.internal.ws.WebSocketWriter$FrameSink
androidx.versionedparcelable.ParcelUtils
androidx.viewpager.R$styleable
okhttp3.internal.http2.Http2Connection$1
androidx.core.widget.PopupMenuCompat
androidx.appcompat.app.ActionBarDrawerToggle$1
okhttp3.internal.ws.WebSocketProtocol
androidx.arch.core.internal.SafeIterableMap$Entry
androidx.lifecycle.ComputableLiveData$1
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver
io.reactivex.internal.operators.flowable.FlowableSkipLast
com.xuexiang.xhttp2.cache.core.ICache
io.reactivex.functions.BiConsumer
androidx.loader.app.LoaderManager$LoaderCallbacks
com.xuexiang.xhttp2.interceptor.BaseResponseInterceptor
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator
androidx.appcompat.view.SupportMenuInflater
io.reactivex.internal.operators.observable.ObservableAnySingle
com.zhy.http.okhttp.request.PostFileRequest$1
com.google.gson.TypeAdapterFactory
io.reactivex.schedulers.TestScheduler
org.aspectj.lang.reflect.Pointcut
io.reactivex.internal.util.NotificationLite$ErrorNotification
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber
io.reactivex.internal.operators.completable.CompletableCache
org.reactivestreams.Processor
androidx.viewpager.widget.ViewPager$DecorView
io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver
com.google.gson.internal.ConstructorConstructor$11
androidx.appcompat.widget.AppCompatPopupWindow
androidx.viewpager.widget.ViewPager$LayoutParams
androidx.core.app.CoreComponentFactory
androidx.drawerlayout.R$layout
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver
androidx.appcompat.app.AlertController$AlertParams$1
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError
androidx.viewpager.widget.ViewPager$SavedState
io.reactivex.internal.operators.maybe.MaybeSubscribeOn
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer
com.appspa.update.listener.impl.DefaultInstallListener
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver
io.reactivex.processors.ReplayProcessor$TimedNode
io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber
androidx.appcompat.widget.DrawableUtils
androidx.loader.content.ModernAsyncTask
org.aspectj.lang.reflect.MemberSignature
androidx.vectordrawable.animated.R$color
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3
okhttp3.internal.http.StatusLine
io.reactivex.subjects.SingleSubject
androidx.appcompat.widget.SwitchCompat$1
androidx.core.view.inputmethod.EditorInfoCompat
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber
androidx.core.view.ViewParentCompat
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments
androidx.loader.content.ModernAsyncTask$2
org.aspectj.runtime.reflect.MethodSignatureImpl
androidx.fragment.app.DialogFragment$1
androidx.core.app.NotificationCompat$MessagingStyle$Message
androidx.appcompat.widget.ForwardingListener$DisallowIntercept
okhttp3.HttpUrl
androidx.annotation.Nullable
com.google.gson.internal.UnsafeAllocator$2
androidx.core.os.UserManagerCompat
io.reactivex.internal.functions.Functions$TimestampFunction
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver
io.reactivex.android.MainThreadDisposable
com.google.gson.stream.JsonScope
androidx.loader.R$drawable
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable
io.reactivex.internal.operators.flowable.FlowableError
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup
androidx.customview.widget.ExploreByTouchHelper$1
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber
io.reactivex.internal.functions.Functions$HashSetCallable
io.reactivex.internal.schedulers.TrampolineScheduler
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
com.google.gson.JsonDeserializer
androidx.fragment.app.FragmentManagerImpl$PopBackStackState
io.reactivex.internal.operators.completable.CompletableDefer
io.reactivex.internal.operators.flowable.FlowableZip
okhttp3.internal.annotations.EverythingIsNonNull
androidx.core.content.res.GradientColorInflaterCompat$ColorStops
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$5
okhttp3.internal.Util$1
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.core.graphics.ColorUtils
io.reactivex.internal.operators.completable.CompletableAmb
io.reactivex.internal.operators.observable.ObservableBlockingSubscribe
androidx.core.view.inputmethod.InputContentInfoCompat
okhttp3.internal.cache.DiskLruCache$Entry
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber
androidx.appcompat.widget.AppCompatImageHelper
androidx.core.view.animation.PathInterpolatorCompat
com.appspa.update.R$xml
androidx.core.view.VelocityTrackerCompat
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver
com.appspa.update.widget.BaseDialog
com.google.gson.FieldNamingPolicy$1
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
retrofit2.http.HEAD
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription
androidx.core.internal.view.SupportMenuItem
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
com.appspa.demo.R$dimen
com.xuexiang.xhttp2.callback.CallClazzProxy
androidx.annotation.WorkerThread
androidx.drawerlayout.widget.DrawerLayout$SavedState$1
io.reactivex.functions.Function9
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax
io.reactivex.SingleObserver
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber
io.reactivex.internal.operators.observable.ObservableTakeUntil
android.support.v4.app.INotificationSideChannel
androidx.arch.core.util.Function
io.reactivex.internal.operators.flowable.FlowableElementAtSingle
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation
io.reactivex.internal.operators.flowable.FlowableZipIterable
androidx.collection.MapCollections
androidx.activity.ComponentActivity$NonConfigurationInstances
io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter
io.reactivex.internal.operators.maybe.MaybeDelay
androidx.appcompat.view.ActionBarPolicy
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber
androidx.appcompat.widget.ActivityChooserView$4
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber
okhttp3.internal.platform.Platform
androidx.loader.app.LoaderManagerImpl$LoaderInfo
androidx.core.app.AlarmManagerCompat
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany
com.google.gson.internal.bind.TreeTypeAdapter$1
androidx.annotation.TransitionRes
com.google.gson.internal.Streams
retrofit2.Retrofit$1
com.appspa.demo.R$styleable
androidx.versionedparcelable.VersionedParcelStream
io.reactivex.parallel.ParallelFlowableConverter
androidx.annotation.ArrayRes
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
androidx.core.view.ViewCompat$1
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator
retrofit2.converter.gson.package-info
androidx.appcompat.widget.SearchView
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$2
io.reactivex.internal.schedulers.InstantPeriodicTask
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
androidx.appcompat.widget.ActionBarContextView
androidx.annotation.InspectableProperty
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError
io.reactivex.internal.subscribers.InnerQueuedSubscriber
retrofit2.http.POST
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$3
okhttp3.internal.ws.RealWebSocket$Message
org.aspectj.lang.reflect.InterTypeMethodDeclaration
androidx.core.content.pm.ShortcutManagerCompat$1
com.google.gson.internal.bind.JsonTreeReader$1
com.google.gson.reflect.TypeToken
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver
io.reactivex.internal.functions.Functions$ArrayListCapacityCallable
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver
org.aspectj.lang.Signature
okhttp3.internal.connection.RouteDatabase
io.reactivex.exceptions.OnErrorNotImplementedException
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver
com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType
org.aspectj.lang.reflect.SignaturePattern
org.aspectj.lang.reflect.NoSuchAdviceException
org.aspectj.internal.lang.reflect.DeclarePrecedenceImpl
com.google.gson.internal.bind.TypeAdapters$15
okhttp3.internal.ws.RealWebSocket$2
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
io.reactivex.processors.PublishProcessor
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber
com.google.gson.JsonIOException
com.google.gson.internal.bind.DateTypeAdapter
androidx.appcompat.view.menu.StandardMenuPopup$2
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener
io.reactivex.internal.operators.parallel.ParallelReduce
okhttp3.Cache$CacheRequestImpl$1
okio.Okio
com.google.gson.internal.bind.TypeAdapters$3
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber
androidx.appcompat.widget.PopupMenu$2
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription
io.reactivex.internal.operators.flowable.FlowableThrottleLatest
okhttp3.Request
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber
okhttp3.internal.cache2.FileOperator
retrofit2.KotlinExtensions$awaitResponse$2$2
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver
androidx.annotation.AnimRes
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable
com.appspa.update.R$styleable
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver
androidx.appcompat.widget.SearchView$5
org.aspectj.lang.reflect.DeclareSoft
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe
com.appspa.update.R
io.reactivex.internal.operators.observable.ObservableEmpty
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
androidx.core.content.SharedPreferencesCompat
io.reactivex.exceptions.ProtocolViolationException
retrofit2.KotlinExtensions$await$2$2
retrofit2.http.Headers
com.google.gson.Gson$FutureTypeAdapter
androidx.core.widget.AutoSizeableTextView
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper
com.google.gson.internal.bind.TypeAdapters$25
okhttp3.CertificatePinner
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$SubjectWork
androidx.appcompat.app.WindowDecorActionBar$3
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver
io.reactivex.internal.operators.observable.ObservableScan
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
retrofit2.ParameterHandler$FieldMap
com.xuexiang.xhttp2.request.BaseBodyRequest
androidx.core.os.CancellationSignal
com.google.gson.internal.bind.TypeAdapters$31
androidx.lifecycle.Lifecycle$State
com.google.gson.internal.bind.TypeAdapters$9
io.reactivex.internal.operators.observable.ObserverResourceWrapper
io.reactivex.internal.operators.flowable.FlowableFlattenIterable
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription
androidx.core.app.NotificationCompat$Action$Extender
com.zhy.http.okhttp.utils.L
retrofit2.adapter.rxjava2.HttpException
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber
androidx.core.app.JobIntentService$CompatWorkEnqueuer
okhttp3.CookieJar
androidx.viewpager.widget.ViewPager$2
androidx.core.view.ViewPropertyAnimatorCompat$1
com.xuexiang.xhttp2.cache.RxCache$6
io.reactivex.internal.operators.parallel.ParallelMapTry
io.reactivex.internal.functions.Functions$Array3Func
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver
androidx.core.view.WindowInsetsCompat
io.reactivex.disposables.ActionDisposable
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription
com.appspa.demo.entity.CustomResult$VersionInfo
io.reactivex.internal.operators.flowable.FlowableDelay
com.zhy.http.okhttp.request.CountingRequestBody$CountingSink
androidx.annotation.RequiresFeature
retrofit2.ParameterHandler$RawPart
com.xuexiang.xhttp2.model.HttpParams
com.xuexiang.xhttp2.R
io.reactivex.internal.operators.single.SingleDelay
io.reactivex.internal.operators.single.SingleCache
io.reactivex.CompletableOnSubscribe
androidx.appcompat.widget.AbsActionBarView
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver
androidx.fragment.app.FragmentTabHost
androidx.fragment.app.Fragment$SavedState$1
androidx.appcompat.app.AppCompatDialogFragment
io.reactivex.internal.operators.flowable.FlowableRepeatWhen
com.google.gson.internal.bind.TypeAdapters$11
io.reactivex.internal.schedulers.IoScheduler
io.reactivex.internal.subscribers.ForEachWhileSubscriber
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver
io.reactivex.functions.Function8
io.reactivex.internal.operators.flowable.FlowableTakeUntil
com.xuexiang.xhttp2.transform.HttpResultTransformer
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver
androidx.annotation.Size
org.aspectj.internal.lang.reflect.StringToType$1
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver
androidx.core.app.TaskStackBuilder$SupportParentable
io.reactivex.internal.schedulers.ImmediateThinScheduler
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber
com.google.gson.internal.bind.TypeAdapters$35
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver
androidx.core.content.res.ResourcesCompat$FontCallback$2
io.reactivex.internal.operators.completable.CompletableFromRunnable
io.reactivex.internal.operators.maybe.MaybeEqualSingle
com.appspa.demo.R$anim
io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable
com.xuexiang.xhttp2.interceptor.CacheInterceptor
com.google.gson.internal.LinkedTreeMap$KeySet$1
okhttp3.EventListener$2
androidx.appcompat.app.ActionBar$OnNavigationListener
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber
io.reactivex.internal.subscribers.BoundedSubscriber
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver
io.reactivex.processors.AsyncProcessor$AsyncSubscription
androidx.appcompat.R
io.reactivex.internal.operators.completable.CompletableFromPublisher
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener
androidx.lifecycle.Lifecycle$Event
io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier
io.reactivex.internal.operators.observable.ObservableThrottleLatest
com.xuexiang.xhttp2.interceptor.BaseInterceptor
okhttp3.internal.http2.Http2Codec
io.reactivex.internal.observers.BasicQueueDisposable
io.reactivex.annotations.Nullable
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscriber
androidx.core.provider.SelfDestructiveThread$2
androidx.arch.core.internal.SafeIterableMap$AscendingIterator
okhttp3.internal.Version
io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable
androidx.core.view.ViewCompat$AccessibilityViewProperty
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction$WorkerCompletable
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair
androidx.core.util.PatternsCompat
io.reactivex.internal.operators.mixed.ScalarXMapZHelper
com.google.gson.internal.ConstructorConstructor$2
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
org.aspectj.lang.reflect.UnlockSignature
io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1
com.google.gson.TypeAdapter$1
com.xuexiang.xhttp2.exception.ApiException
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$SingletonArrayFunc
okhttp3.EventListener$1
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer
io.reactivex.disposables.RunnableDisposable
retrofit2.Retrofit
androidx.core.view.GestureDetectorCompat
io.reactivex.internal.operators.maybe.MaybeAmb
io.reactivex.internal.operators.observable.ObservableSampleTimed
androidx.loader.app.LoaderManager
com.google.gson.internal.bind.ArrayTypeAdapter
androidx.annotation.RestrictTo$Scope
io.reactivex.internal.operators.flowable.FlowableGroupJoin
androidx.appcompat.resources.R$layout
okio.RealBufferedSink
com.xuexiang.xhttp2.cache.key.ICacheKeyCreator
androidx.core.view.accessibility.AccessibilityViewCommand
com.google.gson.annotations.Expose
androidx.core.widget.TextViewCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject
io.reactivex.internal.operators.flowable.FlowableCollectSingle
okhttp3.internal.http2.Hpack
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback
io.reactivex.ObservableConverter
okhttp3.internal.cache.CacheInterceptor$1
androidx.core.text.util.LinkifyCompat$LinkifyMask
io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback
io.reactivex.annotations.CheckReturnValue
androidx.appcompat.app.ActionBar$LayoutParams
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription
androidx.appcompat.R$id
androidx.appcompat.widget.ActivityChooserModel
com.xuexiang.xhttp2.utils.ApiUtils$1
androidx.appcompat.widget.ViewStubCompat
com.google.gson.internal.$Gson$Types$WildcardTypeImpl
com.xuexiang.xhttp2.XHttpRequestPool
com.zhy.http.okhttp.request.OtherRequest
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask
io.reactivex.observers.ResourceCompletableObserver
okhttp3.Headers$Builder
io.reactivex.internal.operators.maybe.MaybeToPublisher
androidx.lifecycle.LifecycleObserver
io.reactivex.internal.operators.flowable.FlowableAmb
androidx.core.content.res.TypedArrayUtils
retrofit2.BuiltInConverters$VoidResponseBodyConverter
io.reactivex.internal.operators.single.SingleUsing
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver
retrofit2.DefaultCallAdapterFactory
androidx.appcompat.widget.AppCompatBackgroundHelper
com.xuexiang.xhttp2.cache.converter.GsonDiskConverter
androidx.viewpager.R$color
io.reactivex.internal.operators.single.SingleMaterialize
androidx.core.util.Pools$SynchronizedPool
androidx.appcompat.app.ActionBar$TabListener
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable
androidx.appcompat.widget.SearchView$7
io.reactivex.internal.schedulers.SchedulerWhen$SubscribedDisposable
io.reactivex.internal.operators.flowable.FlowableAllSingle
com.xuexiang.xhttp2.utils.TypeUtils
androidx.cursoradapter.widget.CursorAdapter
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber
io.reactivex.internal.operators.observable.ObservableAll$AllObserver
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnComplete
androidx.annotation.BinderThread
androidx.vectordrawable.graphics.drawable.Animatable2Compat
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay
androidx.appcompat.resources.R$color
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1
com.zhy.http.okhttp.BuildConfig
okhttp3.CertificatePinner$Builder
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber
okhttp3.CertificatePinner$Pin
androidx.fragment.app.FragmentTransaction$Op
androidx.appcompat.view.menu.ShowableListMenu
okhttp3.internal.ws.WebSocketReader
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable
io.reactivex.internal.operators.flowable.FlowableReplay$ConnectableFlowableReplay
androidx.annotation.IntRange
androidx.core.app.JobIntentService$WorkEnqueuer
io.reactivex.internal.disposables.CancellableDisposable
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber
io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber
org.aspectj.lang.reflect.AdviceSignature
androidx.interpolator.R
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber
io.reactivex.internal.operators.observable.ObservableFromIterable
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter
io.reactivex.internal.operators.maybe.MaybeZipArray$SingletonArrayFunc
retrofit2.http.QueryMap
io.reactivex.internal.operators.parallel.ParallelFromArray
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber
io.reactivex.internal.observers.DisposableLambdaObserver
com.appspa.demo.R$bool
okhttp3.internal.http.UnrepeatableRequestBody
io.reactivex.internal.operators.flowable.FlowablePublishClassic
okhttp3.internal.http2.PushObserver$1
com.zhy.http.okhttp.cookie.CookieJarImpl
org.aspectj.runtime.internal.CFlowStack
com.xuexiang.xhttp2.utils.ApiUtils
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber
okio.Timeout$1
com.xuexiang.xhttp2.cache.stategy.BaseStrategy
androidx.core.app.RemoteInput$Builder
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber
io.reactivex.internal.operators.observable.ObservableJust
androidx.fragment.app.FragmentManagerImpl$3
io.reactivex.internal.operators.single.SingleUnsubscribeOn
com.xuexiang.xhttp2.transform.func.ApiResultFunc
okhttp3.Interceptor
androidx.annotation.InspectableProperty$FlagEntry
androidx.lifecycle.MediatorLiveData
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver
com.appspa.update.R$anim
okio.Sink
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnError
okhttp3.internal.publicsuffix.PublicSuffixDatabase
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
io.reactivex.internal.operators.completable.CompletableTimer
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
okhttp3.internal.http2.Http2Connection$Listener$1
okio.Buffer
com.appspa.update.widget.IDownloadEventHandler
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver
androidx.appcompat.widget.LinearLayoutCompat
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver
io.reactivex.internal.schedulers.ScheduledDirectTask
com.xuexiang.xhttp2.https.HttpsUtils$MyTrustManager
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver
androidx.savedstate.SavedStateRegistryController
okhttp3.internal.http2.Http2Connection$3
androidx.core.provider.FontsContractCompat$4$6
androidx.annotation.DimenRes
okhttp3.internal.cache.DiskLruCache$2
androidx.core.view.NestedScrollingParent3
androidx.core.view.ViewCompat$ScrollAxis
androidx.core.view.ViewPropertyAnimatorListener
io.reactivex.internal.operators.flowable.FlowableLastMaybe
com.appspa.demo.activity.MainActivity$1
okhttp3.internal.http1.Http1Codec
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor
androidx.appcompat.view.menu.MenuItemImpl$1
io.reactivex.processors.ReplayProcessor$ReplaySubscription
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver
okio.SegmentedByteString
io.reactivex.internal.operators.completable.CompletableDelay$Delay
io.reactivex.ObservableSource
androidx.appcompat.app.TwilightCalculator
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable
org.aspectj.runtime.internal.cflowstack.ThreadStackImpl11
io.reactivex.internal.operators.observable.ObservableMap$MapObserver
io.reactivex.MaybeObserver
io.reactivex.internal.operators.maybe.MaybeFromFuture
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber
io.reactivex.disposables.FutureDisposable
io.reactivex.internal.operators.observable.ObservableSequenceEqual
okhttp3.internal.ws.WebSocketWriter
androidx.appcompat.widget.ShareActionProvider
androidx.appcompat.view.menu.SubMenuBuilder
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer
com.xuexiang.xhttp2.BuildConfig
com.appspa.demo.Constants
androidx.appcompat.app.ActionBar$DisplayOptions
androidx.core.view.accessibility.AccessibilityClickableSpanCompat
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver
com.xuexiang.xhttp2.cache.converter.IDiskConverter
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper
com.appspa.update.proxy.IUpdateChecker
androidx.appcompat.widget.TooltipPopup
io.reactivex.internal.fuseable.ConditionalSubscriber
io.reactivex.internal.operators.observable.ObservableRepeatUntil
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayFunction
androidx.appcompat.widget.AppCompatRatingBar
io.reactivex.processors.SerializedProcessor
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer
okhttp3.internal.ws.RealWebSocket
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnNext
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc
androidx.appcompat.R$integer
androidx.core.widget.TextViewCompat$OreoCallback
com.appspa.update.utils.DialogUtils$IWindowShower
io.reactivex.internal.operators.observable.ObservableFlatMap
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver
io.reactivex.subjects.PublishSubject
com.appspa.update.proxy.impl.DefaultUpdateParser$APIConstant
io.reactivex.internal.schedulers.RxThreadFactory
androidx.core.view.inputmethod.InputConnectionCompat$2
okhttp3.internal.http2.Http2Codec$StreamFinishingSource
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver
androidx.core.provider.FontsContractCompat$4$8
retrofit2.ParameterHandler$QueryName
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast
io.reactivex.observers.DisposableCompletableObserver
io.reactivex.internal.operators.observable.ObservableToListSingle
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver
com.google.gson.stream.JsonWriter
retrofit2.ParameterHandler$RelativeUrl
io.reactivex.schedulers.Schedulers$NewThreadTask
androidx.core.graphics.PathParser
androidx.core.provider.SelfDestructiveThread$2$1
com.google.gson.internal.bind.TypeAdapters$30
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayCallable
io.reactivex.internal.operators.observable.ObservableSkipWhile
io.reactivex.internal.operators.completable.CompletableDoOnEvent$DoOnEvent
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError
com.zhy.http.okhttp.https.HttpsUtils$UnSafeHostnameVerifier
com.google.gson.internal.bind.SqlDateTypeAdapter
io.reactivex.internal.operators.observable.ObservableError
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$6
io.reactivex.ObservableTransformer
io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleBiGenerator
okhttp3.FormBody
io.reactivex.schedulers.Schedulers$ComputationHolder
androidx.appcompat.app.AppCompatDelegateImpl$7
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable
io.reactivex.internal.observers.BlockingFirstObserver
com.appspa.update.listener.OnInstallListener
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber
io.reactivex.internal.operators.completable.CompletableError
io.reactivex.internal.operators.observable.ObservableReplay$DisposeConsumer
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe
androidx.core.view.ViewPropertyAnimatorCompat
androidx.appcompat.view.menu.SubMenuWrapperICS
io.reactivex.functions.Cancellable
retrofit2.ParameterHandler$Query
androidx.core.graphics.TypefaceCompatBaseImpl
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$6
okio.RealBufferedSink$1
androidx.appcompat.widget.SearchView$10
androidx.viewpager.widget.ViewPager$1
io.reactivex.internal.operators.flowable.FlowableSamplePublisher
androidx.activity.R$integer
com.appspa.demo.activity.MainActivity
androidx.appcompat.graphics.drawable.DrawerArrowDrawable
io.reactivex.internal.operators.observable.ObservableLastSingle
com.xuexiang.xhttp2.XHttp$4
com.xuexiang.xhttp2.cache.core.LruMemoryCache
io.reactivex.internal.operators.single.SingleResumeNext
io.reactivex.internal.subscribers.BasicFuseableSubscriber
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle
com.appspa.update.proxy.impl.DefaultUpdateChecker$2
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
io.reactivex.internal.operators.flowable.FlowableConcatArray
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool
androidx.appcompat.app.AppCompatActivity
com.appspa.update.utils.Md5Utils
androidx.arch.core.R
io.reactivex.internal.operators.maybe.MaybeIsEmpty
androidx.core.content.res.GradientColorInflaterCompat
com.google.gson.internal.bind.TypeAdapters$18
com.appspa.update.proxy.IUpdateProxy
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor
androidx.core.view.ActionProvider
io.reactivex.subscribers.ResourceSubscriber
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper
androidx.appcompat.widget.TooltipCompatHandler$2
io.reactivex.internal.operators.completable.CompletableConcat
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable
retrofit2.http.Multipart
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable
io.reactivex.internal.operators.flowable.FlowableFromObservable
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver
io.reactivex.internal.operators.single.SingleHide
okio.BufferedSource
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber
androidx.appcompat.widget.DecorContentParent
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver
io.reactivex.internal.operators.flowable.FlowableRetryPredicate
androidx.core.os.EnvironmentCompat
io.reactivex.internal.operators.flowable.FlowableSingleSingle
org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
androidx.lifecycle.R
io.reactivex.internal.operators.single.SingleDelayWithCompletable
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver
io.reactivex.internal.operators.single.SingleFromUnsafeSource
com.xuexiang.xhttp2.https.HttpsUtils$1
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber
androidx.arch.core.executor.DefaultTaskExecutor$1
io.reactivex.internal.operators.maybe.MaybeToObservable
androidx.fragment.app.FragmentTransition$4
com.appspa.update.proxy.impl.DefaultUpdateChecker
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator
androidx.annotation.StyleRes
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$InnerObserver
androidx.lifecycle.viewmodel.R
retrofit2.OptionalConverterFactory
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback
io.reactivex.schedulers.Schedulers$ComputationTask
androidx.core.app.NotificationCompat$Action$Builder
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$4
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnSubscriber
com.zhy.http.okhttp.cookie.store.PersistentCookieStore
androidx.appcompat.widget.ActionBarContextView$1
androidx.appcompat.widget.PopupMenu
io.reactivex.internal.functions.Functions$EmptyConsumer
androidx.core.content.res.ResourcesCompat
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnError
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable
com.google.gson.internal.UnsafeAllocator$4
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
io.reactivex.internal.operators.flowable.FlowableToList
com.xuexiang.xhttp2.XHttpProxy
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber
com.xuexiang.xhttp2.R$interpolator
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker
io.reactivex.schedulers.Schedulers$SingleTask
io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber
okhttp3.internal.tls.BasicCertificateChainCleaner
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess
androidx.core.graphics.PathParser$ExtractFloatResult
io.reactivex.internal.operators.flowable.FlowableRange
androidx.core.util.Consumer
okhttp3.internal.cache.CacheRequest
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate
io.reactivex.internal.operators.completable.CompletableUsing
com.google.gson.internal.Streams$AppendableWriter
androidx.core.provider.FontsContractCompat$4$5
okhttp3.internal.http1.Http1Codec$FixedLengthSink
io.reactivex.internal.functions.Functions$NaturalObjectComparator
androidx.fragment.app.FragmentController
com.zhy.http.okhttp.https.HttpsUtils$MyTrustManager
okhttp3.RequestBody
okhttp3.internal.http1.Http1Codec$UnknownLengthSource
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$UIHandler
okio.Options
retrofit2.http.HTTP
org.aspectj.internal.lang.reflect.PointcutBasedPerClauseImpl$1
com.google.gson.internal.bind.ArrayTypeAdapter$1
io.reactivex.internal.schedulers.SchedulerPoolFactory$SystemPropertyAccessor
com.xuexiang.xhttp2.interceptor.HeadersInterceptor
androidx.appcompat.widget.TooltipCompatHandler$1
okhttp3.Challenge
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber
androidx.core.provider.FontsContractCompat$1
org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl
okhttp3.internal.http2.ErrorCode
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver
androidx.lifecycle.FullLifecycleObserverAdapter
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber
androidx.vectordrawable.R$dimen
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver
androidx.core.app.NotificationCompat$Style
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2
io.reactivex.internal.operators.parallel.ParallelFilterTry
io.reactivex.internal.observers.BasicIntQueueDisposable
com.xuexiang.xhttp2.annotation.ThreadType
com.google.gson.internal.LinkedHashTreeMap$AvlIterator
androidx.core.content.res.ResourcesCompat$FontCallback$1
io.reactivex.internal.operators.flowable.FlowableDoFinally
androidx.fragment.app.FragmentManagerViewModel
androidx.annotation.Px
androidx.appcompat.widget.ActionBarOverlayLayout$2
io.reactivex.internal.operators.observable.ObservableCache
com.google.gson.internal.LinkedTreeMap$EntrySet$1
com.zhy.http.okhttp.callback.FileCallBack
androidx.loader.content.Loader$OnLoadCanceledListener
com.google.gson.internal.bind.TypeAdapters$27
retrofit2.Converter
io.reactivex.internal.operators.observable.ObservableIntervalRange
io.reactivex.internal.observers.LambdaObserver
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection
io.reactivex.internal.operators.flowable.FlowableFromIterable
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver
androidx.core.view.WindowCompat
com.appspa.update.service.DownloadService$FileDownloadCallBack
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver
com.google.gson.internal.bind.SqlDateTypeAdapter$1
androidx.lifecycle.LiveData$AlwaysActiveObserver
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$1
io.reactivex.internal.operators.observable.ObservableFromFuture
io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn
com.google.gson.internal.bind.DateTypeAdapter$1
io.reactivex.internal.operators.flowable.FlowableNever
androidx.core.app.NotificationCompat$CarExtender
androidx.appcompat.widget.SearchView$6
io.reactivex.internal.subscribers.QueueDrainSubscriberPad0
com.appspa.update.utils.ApkUtils
io.reactivex.internal.operators.single.SingleEquals$InnerObserver
androidx.loader.R$id
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver
org.aspectj.lang.reflect.AjType
androidx.collection.MapCollections$KeySet
io.reactivex.internal.disposables.ListCompositeDisposable
androidx.core.provider.SelfDestructiveThread$ReplyCallback
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
io.reactivex.internal.operators.mixed.MaterializeSingleObserver
org.aspectj.internal.lang.annotation.ajcDeclareAnnotation
io.reactivex.disposables.Disposables
okhttp3.RequestBody$1
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$1
io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver
okhttp3.internal.ws.RealWebSocket$1
io.reactivex.internal.operators.single.SingleDoOnSuccess
io.reactivex.Completable
com.google.gson.internal.bind.TypeAdapters$2
org.aspectj.runtime.reflect.LockSignatureImpl
io.reactivex.internal.subscribers.QueueDrainSubscriberPad2
io.reactivex.internal.operators.parallel.ParallelCollect
androidx.appcompat.view.menu.CascadingMenuPopup
androidx.appcompat.text.AllCapsTransformationMethod
retrofit2.HttpServiceMethod$SuspendForResponse
androidx.appcompat.widget.AppCompatCheckedTextView
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver
org.aspectj.runtime.reflect.JoinPointImpl
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue
com.appspa.update.proxy.IUpdateParser
io.reactivex.internal.operators.observable.ObservableSwitchMap
androidx.customview.R$color
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
com.google.gson.internal.LinkedTreeMap$KeySet
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver
androidx.core.os.MessageCompat
androidx.core.content.pm.PermissionInfoCompat
androidx.loader.app.LoaderManagerImpl
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop
androidx.activity.R$drawable
com.google.gson.JsonObject
com.appspa.update.proxy.IFileEncryptor
retrofit2.HttpException
androidx.appcompat.view.ContextThemeWrapper
io.reactivex.internal.disposables.DisposableContainer
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther
io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable
androidx.appcompat.widget.AppCompatToggleButton
io.reactivex.internal.functions.Functions$FalsePredicate
com.zhy.http.okhttp.https.HttpsUtils$SSLParams
okhttp3.internal.cache.DiskLruCache
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
androidx.core.graphics.PathUtils
androidx.core.util.Pools$Pool
io.reactivex.internal.operators.observable.ObservableCountSingle
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver
androidx.core.content.pm.ActivityInfoCompat
androidx.core.text.PrecomputedTextCompat
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber
androidx.core.hardware.fingerprint.FingerprintManagerCompat
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle
com.google.gson.internal.LinkedTreeMap$EntrySet
androidx.core.app.NotificationBuilderWithBuilderAccessor
io.reactivex.internal.subscribers.StrictSubscriber
okhttp3.internal.http2.Hpack$Writer
androidx.appcompat.view.WindowCallbackWrapper
io.reactivex.Observable
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber
io.reactivex.internal.fuseable.SimplePlainQueue
com.appspa.demo.utils.NotifyUtils
com.xuexiang.xhttp2.cache.key.DefaultObjectSerializer
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable
io.reactivex.functions.Function5
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl11
com.appspa.update.proxy.impl.DefaultFileEncryptor
org.aspectj.lang.annotation.DeclarePrecedence
androidx.customview.R$style
io.reactivex.internal.operators.flowable.FlowableSwitchMap
io.reactivex.internal.operators.completable.CompletableFromAction
io.reactivex.CompletableEmitter
androidx.core.provider.SelfDestructiveThread$1
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe
com.google.gson.internal.Primitives
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber
io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$CompletionTask
androidx.appcompat.app.AlertController$AlertParams
androidx.activity.ComponentActivity$3
io.reactivex.internal.operators.completable.CompletableObserveOn
androidx.vectordrawable.animated.R
androidx.core.content.ContextCompat
io.reactivex.internal.operators.flowable.FlowableInternalHelper$TimedReplay
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle
retrofit2.BuiltInConverters$UnitResponseBodyConverter
io.reactivex.disposables.SubscriptionDisposable
androidx.appcompat.widget.SwitchCompat
androidx.arch.core.internal.SafeIterableMap$ListIterator
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber
retrofit2.http.Field
io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver$OnComplete
com.appspa.update.R$id
retrofit2.http.PUT
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver
okhttp3.internal.http.HttpDate
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader$1
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber
androidx.core.app.NotificationCompatBuilder
androidx.lifecycle.ViewModelStore
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber
androidx.appcompat.widget.SearchView$9
okhttp3.internal.tls.DistinguishedNameParser
io.reactivex.internal.operators.observable.ObservableElementAt
com.appspa.demo.BuildConfig
io.reactivex.internal.util.BackpressureHelper
io.reactivex.internal.subscribers.DeferredScalarSubscriber
androidx.versionedparcelable.ParcelImpl$1
com.google.gson.internal.bind.TimeTypeAdapter
com.google.gson.LongSerializationPolicy
org.aspectj.lang.annotation.After
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher
com.xuexiang.xhttp2.request.BaseRequest$1
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback
io.reactivex.internal.schedulers.IoScheduler$ThreadWorker
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayFunction
com.zhy.http.okhttp.builder.HeadBuilder
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerInner
androidx.core.app.ActivityRecreator$2
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapIntoIterable
com.xuexiang.xhttp2.R$bool
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
com.xuexiang.xhttp2.transform.func.CacheResultFunc
io.reactivex.Scheduler
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber
androidx.collection.MapCollections$ArrayIterator
androidx.appcompat.app.AlertDialog$Builder
io.reactivex.internal.functions.Functions$CastToClass
retrofit2.BuiltInConverters$ToStringConverter
io.reactivex.internal.operators.maybe.MaybeMergeArray$SimpleQueueWithConsumerIndex
androidx.appcompat.widget.ButtonBarLayout
io.reactivex.annotations.SchedulerSupport
androidx.core.app.NotificationCompat$Action$WearableExtender
io.reactivex.internal.operators.observable.ObservableCollectSingle
io.reactivex.internal.observers.QueueDrainSubscriberPad2
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator
com.appspa.update.proxy.impl.DefaultUpdateParser$APIKeyUpper
io.reactivex.internal.operators.observable.ObservableDefer
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber
androidx.fragment.app.SuperNotCalledException
androidx.appcompat.app.AlertController$ButtonHandler
io.reactivex.internal.operators.flowable.FlowableBuffer
androidx.appcompat.R$drawable
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker
androidx.appcompat.widget.ScrollingTabContainerView
com.google.gson.internal.bind.CollectionTypeAdapterFactory
androidx.fragment.app.FragmentStatePagerAdapter
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy
androidx.core.provider.FontsContractCompat$5
io.reactivex.subscribers.DisposableSubscriber
okio.Pipe$PipeSink
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterConditionalSubscriber
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport
io.reactivex.internal.operators.observable.ObservableBufferTimed
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter
androidx.appcompat.widget.ResourceManagerInternal
io.reactivex.subjects.UnicastSubject
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete
io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream
android.support.v4.os.IResultReceiver$Stub$Proxy
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber
androidx.core.content.IntentCompat
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.core.view.ViewPropertyAnimatorListenerAdapter
androidx.collection.LruCache
com.zhy.http.okhttp.builder.PostFileBuilder
io.reactivex.internal.operators.flowable.FlowableRetryWhen$RetryWhenSubscriber
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle
io.reactivex.internal.operators.single.SingleContains$ContainsSingleObserver
retrofit2.Response
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable
io.reactivex.internal.functions.Functions$Array8Func
okhttp3.internal.cache.CacheInterceptor
com.zhy.http.okhttp.R
androidx.drawerlayout.R$styleable
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$1
androidx.interpolator.view.animation.FastOutSlowInInterpolator
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable
androidx.vectordrawable.R$id
com.google.gson.internal.bind.TypeAdapters$4
androidx.appcompat.view.menu.ListMenuItemView
retrofit2.adapter.rxjava2.BodyObservable
com.xuexiang.xhttp2.request.BaseRequest$6
androidx.appcompat.view.menu.MenuPopup
com.google.gson.FieldNamingPolicy$2
okhttp3.WebSocket$Factory
androidx.core.app.DialogCompat
org.reactivestreams.FlowAdapters$FlowToReactiveProcessor
androidx.appcompat.view.menu.MenuWrapperICS
androidx.appcompat.widget.Toolbar
com.appspa.update.proxy.IPrompterProxy
io.reactivex.internal.operators.single.SingleCache$CacheDisposable
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable
androidx.appcompat.widget.AppCompatEditText
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator
io.reactivex.internal.observers.SubscriberCompletableObserver
retrofit2.adapter.rxjava2.package-info
okhttp3.internal.http.RealResponseBody
io.reactivex.BackpressureOverflowStrategy
com.jakewharton.disklrucache.DiskLruCache$Snapshot
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable
androidx.fragment.R$dimen
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber
io.reactivex.flowables.ConnectableFlowable
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver$ConsumerIndexHolder
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks
io.reactivex.internal.subscriptions.EmptySubscription
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator
com.zhy.http.okhttp.request.CountingRequestBody
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable
okhttp3.Authenticator
io.reactivex.internal.operators.observable.ObservableInterval
io.reactivex.internal.operators.flowable.FlowableSubscribeOn
androidx.cursoradapter.widget.SimpleCursorAdapter
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber
io.reactivex.internal.operators.observable.ObservableTimeInterval
okhttp3.EventListener
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber
io.reactivex.internal.functions.Functions$JustValue
com.google.gson.internal.bind.TypeAdapters
retrofit2.Utils$WildcardTypeImpl
okhttp3.internal.platform.OptionalMethod
io.reactivex.internal.operators.flowable.FlowablePublishAlt
androidx.annotation.FontRes
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed
io.reactivex.CompletableOperator
retrofit2.http.GET
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber
androidx.lifecycle.Transformations$2
com.xuexiang.xhttp2.interceptor.CacheInterceptorOffline
io.reactivex.internal.operators.flowable.FlowableBufferTimed
com.zhy.http.okhttp.builder.PostFormBuilder$FileInput
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator
com.xuexiang.xhttp2.request.CustomRequest$1
io.reactivex.internal.fuseable.QueueFuseable
com.google.gson.internal.LinkedHashTreeMap$KeySet$1
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver
okio.ForwardingSink
androidx.core.view.ViewPropertyAnimatorCompat$2
androidx.appcompat.widget.AppCompatSpinner$SavedState
com.google.gson.TypeAdapter
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
io.reactivex.internal.operators.flowable.FlowableToListSingle
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver
androidx.collection.ArraySet$1
com.google.gson.FieldNamingPolicy
androidx.core.app.ActivityRecreator$1
androidx.appcompat.widget.AppCompatSpinner$SavedState$1
io.reactivex.internal.operators.parallel.ParallelRunOn$MultiWorkerCallback
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferBoundaryObserver
com.appspa.update.UpdateManager$2
org.reactivestreams.FlowAdapters$ReactivePublisherFromFlow
com.google.gson.internal.reflect.UnsafeReflectionAccessor
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed
com.google.gson.internal.bind.TypeAdapters$19
io.reactivex.internal.operators.single.SingleDoOnError$DoOnError
com.appspa.update.R$integer
io.reactivex.internal.operators.single.SingleNever
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber
org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11$Counter
androidx.core.util.Pools$SimplePool
io.reactivex.android.R
org.aspectj.internal.lang.reflect.TypePatternBasedPerClauseImpl
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther
androidx.core.view.DisplayCutoutCompat
androidx.appcompat.view.menu.MenuAdapter
io.reactivex.processors.AsyncProcessor
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription
io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction
org.aspectj.lang.annotation.Around
io.reactivex.FlowableSubscriber
com.xuexiang.xhttp2.cache.stategy.IStrategy
io.reactivex.internal.operators.flowable.BlockingFlowableLatest
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber$ConsumerIndexHolder
org.aspectj.lang.reflect.CodeSignature
androidx.activity.R$string
io.reactivex.internal.operators.flowable.FlowableReplay
com.xuexiang.xhttp2.utils.PathUtils
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver
io.reactivex.internal.util.ExceptionHelper$Termination
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver
androidx.core.view.NestedScrollingChild
io.reactivex.internal.subscriptions.AsyncSubscription
com.appspa.demo.http.OKHttpUpdateHttpService$1
com.zhy.http.okhttp.builder.GetBuilder
androidx.fragment.app.FragmentManagerImpl$6
androidx.core.content.MimeTypeFilter
io.reactivex.internal.operators.maybe.MaybeMaterialize
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber
com.appspa.update.service.DownloadService$FileDownloadCallBack$3
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker
androidx.savedstate.SavedStateRegistry$1
retrofit2.ParameterHandler$QueryMap
androidx.core.graphics.TypefaceCompat
androidx.appcompat.app.WindowDecorActionBar$2
androidx.core.graphics.drawable.WrappedDrawableApi21
retrofit2.adapter.rxjava2.CallEnqueueObservable
androidx.core.app.ServiceCompat$StopForegroundFlags
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleBiGenerator
retrofit2.Call
com.appspa.update.service.DownloadService$DownloadBinder
com.appspa.demo.R$integer
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver
io.reactivex.internal.operators.observable.ObservableCount
io.reactivex.ObservableOnSubscribe
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$1
com.appspa.update.widget.UpdateDialog
io.reactivex.internal.operators.observable.ObservableDistinct
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable
com.appspa.update.R$interpolator
okhttp3.internal.cache.CacheStrategy$Factory
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber
com.xuexiang.xhttp2.api.ApiService
io.reactivex.internal.operators.flowable.FlowableTakeWhile
androidx.appcompat.widget.ScrollingTabContainerView$TabView
io.reactivex.internal.operators.completable.CompletableFromObservable
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams
io.reactivex.internal.operators.flowable.FlowableHide
androidx.core.os.ConfigurationCompat
com.google.gson.internal.bind.TypeAdapters$36
androidx.core.view.animation.PathInterpolatorApi14
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver
com.google.gson.internal.bind.TypeAdapters$17
androidx.viewpager.R$id
com.zhy.http.okhttp.request.GetRequest
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver
io.reactivex.internal.util.Pow2
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition
android.support.v4.app.INotificationSideChannel$Stub
androidx.vectordrawable.R$color
androidx.appcompat.app.AlertController$AlertParams$4
io.reactivex.internal.operators.observable.ObservableTimer
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor
io.reactivex.internal.operators.completable.CompletableResumeNext
io.reactivex.SingleEmitter
com.xuexiang.xhttp2.annotation.RequestParams
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
androidx.core.app.ActivityManagerCompat
io.reactivex.internal.operators.maybe.MaybeUnsafeCreate
androidx.appcompat.widget.Toolbar$2
retrofit2.converter.gson.GsonRequestBodyConverter
com.appspa.update.proxy.impl.DefaultUpdateDownloader
androidx.core.content.SharedPreferencesCompat$EditorCompat
okhttp3.internal.tls.BasicTrustRootIndex
io.reactivex.internal.operators.observable.ObservableReplay$Replay
io.reactivex.internal.operators.flowable.FlowableCombineLatest
io.reactivex.internal.functions.Functions$Array9Func
androidx.lifecycle.ComputableLiveData$3
io.reactivex.observers.BaseTestConsumer$1
okhttp3.Call
io.reactivex.internal.observers.DeferredScalarDisposable
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
com.google.gson.GsonBuilder
io.reactivex.functions.Consumer
io.reactivex.internal.operators.observable.ObservableConcatWithSingle
androidx.appcompat.view.menu.BaseMenuPresenter
okhttp3.Call$Factory
com.google.gson.annotations.Since
okio.Source
androidx.activity.ComponentActivity
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher
io.reactivex.subjects.MaybeSubject
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber
androidx.appcompat.widget.AppCompatSeekBarHelper
androidx.core.widget.ContentLoadingProgressBar$1
io.reactivex.internal.operators.observable.ObservableReplay$ReplaySource
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription
androidx.customview.widget.FocusStrategy$BoundsAdapter
org.aspectj.runtime.reflect.UnlockSignatureImpl
com.google.gson.Gson
io.reactivex.internal.operators.single.SingleFromCallable
okhttp3.internal.http2.Huffman
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver
androidx.appcompat.resources.R$integer
io.reactivex.internal.operators.observable.ObservableRepeat
androidx.core.app.NavUtils
androidx.core.view.ScaleGestureDetectorCompat
io.reactivex.Observer
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable
androidx.appcompat.app.TwilightManager
androidx.fragment.app.FragmentManager
io.reactivex.internal.operators.mixed.CompletableAndThenObservable
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver
androidx.lifecycle.Observer
retrofit2.HttpServiceMethod$CallAdapted
io.reactivex.internal.operators.observable.ObservableZip
org.aspectj.lang.annotation.AdviceName
io.reactivex.internal.operators.observable.ObservableMaterialize
io.reactivex.internal.util.QueueDrain
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer
com.xuexiang.xhttp2.request.PostRequest
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber
org.aspectj.runtime.reflect.Factory
com.xuexiang.xhttp2.request.DownloadRequest$1
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient
org.aspectj.internal.lang.reflect.PointcutExpressionImpl
io.reactivex.internal.operators.single.SingleDelay$Delay$OnSuccess
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber
io.reactivex.internal.operators.flowable.FlowableInternalHelper
androidx.core.graphics.BitmapCompat
io.reactivex.internal.operators.observable.ObservableSkipLast
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
io.reactivex.internal.operators.observable.ObservableAny
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator
io.reactivex.internal.operators.observable.ObservableJoin
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer
androidx.core.internal.view.SupportMenu
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver
com.xuexiang.xhttp2.reflect.TypeBuilder
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable
io.reactivex.internal.functions.Functions$ActionConsumer
io.reactivex.plugins.RxJavaPlugins
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport
androidx.appcompat.app.AppCompatDialog$1
androidx.core.util.LogWriter
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber
androidx.core.content.res.GrowingArrayUtils
androidx.appcompat.widget.SearchView$4
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
androidx.versionedparcelable.VersionedParcel$1
androidx.core.app.NotificationCompat$StreamType
androidx.core.R
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry
org.aspectj.internal.lang.reflect.AdviceImpl$1
androidx.fragment.app.FragmentManagerImpl$3$1
androidx.core.widget.ListViewAutoScrollHelper
androidx.arch.core.executor.DefaultTaskExecutor
androidx.core.view.KeyEventDispatcher
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterConditionalSubscriber
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider
androidx.vectordrawable.animated.R$style
androidx.appcompat.widget.AppCompatImageView
com.google.gson.internal.bind.TypeAdapters$16
androidx.appcompat.widget.SearchView$3
io.reactivex.internal.operators.flowable.FlowableConcatMapEager
okhttp3.internal.http2.Header$Listener
androidx.lifecycle.ReflectiveGenericLifecycleObserver
io.reactivex.android.schedulers.HandlerScheduler
okhttp3.internal.http.CallServerInterceptor
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable
androidx.core.app.AppOpsManagerCompat
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver
androidx.arch.core.internal.SafeIterableMap$SupportRemove
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapSupport
io.reactivex.internal.operators.observable.ObservableTakeLastOne
com.xuexiang.xhttp2.utils.RxSchedulers
com.appspa.demo.R$drawable
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain
androidx.fragment.app.FragmentTransitionImpl
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver
androidx.appcompat.view.menu.MenuPopupHelper$1
com.xuexiang.xhttp2.request.DownloadRequest
io.reactivex.internal.util.BlockingHelper
androidx.appcompat.view.menu.MenuHelper
androidx.arch.core.executor.ArchTaskExecutor$1
okhttp3.internal.cache.DiskLruCache$Editor
io.reactivex.observers.LambdaConsumerIntrospection
io.reactivex.functions.Function4
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer
com.google.gson.stream.JsonReader$1
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver
io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate
androidx.interpolator.view.animation.LinearOutSlowInInterpolator
com.xuexiang.xhttp2.cache.RxCache
io.reactivex.internal.operators.flowable.BlockingFlowableIterable
io.reactivex.internal.operators.single.SingleDematerialize
okhttp3.OkHttpClient$Builder
androidx.customview.widget.FocusStrategy
io.reactivex.observers.DisposableObserver
androidx.lifecycle.LiveData$ObserverWrapper
okio.ForwardingSource
io.reactivex.internal.operators.completable.CompletableLift
io.reactivex.internal.fuseable.FuseToFlowable
io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError
androidx.appcompat.widget.MenuPopupWindow
io.reactivex.internal.queue.MpscLinkedQueue
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver
org.aspectj.lang.internal.lang.PlaceHolder
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher$RailSubscription
androidx.core.graphics.drawable.WrappedDrawableApi14
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$1
androidx.arch.core.executor.ArchTaskExecutor
io.reactivex.internal.operators.single.SingleContains
okhttp3.package-info
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
androidx.collection.SparseArrayCompat
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
com.google.gson.internal.bind.TypeAdapters$14
okio.Timeout
org.aspectj.runtime.reflect.SignatureImpl$Cache
com.xuexiang.xhttp2.annotation.ParamKey
okhttp3.CipherSuite
okhttp3.internal.http.RealInterceptorChain
androidx.core.R$attr
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber
com.zhy.http.okhttp.utils.Platform$Android$MainThreadExecutor
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1
io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber
org.aspectj.lang.reflect.InitializerSignature
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe
com.appspa.update.service.DownloadService$FileDownloadCallBack$2
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver
io.reactivex.internal.functions.Functions$EmptyRunnable
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver
io.reactivex.internal.functions.Functions$ClassFilter
com.google.gson.internal.LinkedTreeMap
com.appspa.demo.R$color
androidx.savedstate.Recreator
com.google.gson.internal.bind.TypeAdapters$6
androidx.customview.R$integer
okhttp3.internal.http.HttpDate$1
androidx.annotation.FractionRes
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory
io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream
com.appspa.update.entity.PromptEntity$1
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver
io.reactivex.internal.operators.observable.ObservableSampleWithObservable
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver
io.reactivex.internal.schedulers.NonBlockingThread
androidx.annotation.AttrRes
retrofit2.RequestFactory
androidx.fragment.app.FragmentManagerImpl$FragmentTag
com.appspa.demo.App$1
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn
androidx.core.view.DragStartHelper$1
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter
io.reactivex.internal.operators.completable.CompletableEmpty
io.reactivex.internal.schedulers.ComputationScheduler
com.xuexiang.xhttp2.subsciber.CallBackSubscriber
io.reactivex.Scheduler$Worker
com.google.gson.internal.LinkedHashTreeMap
androidx.appcompat.widget.ActionBarContainer
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver
androidx.fragment.app.FragmentManagerImpl$OpGenerator
androidx.appcompat.R$color
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber
io.reactivex.android.schedulers.AndroidSchedulers
io.reactivex.schedulers.Schedulers$IOTask
com.xuexiang.xhttp2.cookie.SerializableOkHttpCookies
com.zhy.http.okhttp.OkHttpUtils$METHOD
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver
io.reactivex.internal.util.BlockingIgnoringReceiver
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged
io.reactivex.internal.operators.observable.ObservablePublishAlt
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver
io.reactivex.subjects.ReplaySubject$ReplayDisposable
io.reactivex.internal.functions.ObjectHelper
okhttp3.Credentials
androidx.fragment.app.FragmentTransitionImpl$3
io.reactivex.internal.operators.observable.ObservableHide
io.reactivex.internal.operators.flowable.FlowableMapNotification
androidx.viewpager.widget.ViewPager$PagerObserver
androidx.appcompat.widget.AppCompatAutoCompleteTextView
com.xuexiang.xhttp2.transform.HttpSchedulersTransformer$1
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver
androidx.core.widget.CompoundButtonCompat
androidx.lifecycle.GenericLifecycleObserver
org.aspectj.runtime.internal.PerObjectMap
androidx.customview.R$attr
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn
androidx.appcompat.view.menu.CascadingMenuPopup$1
androidx.fragment.app.DialogFragment
androidx.appcompat.app.ActionBar$NavigationMode
org.aspectj.lang.JoinPoint$StaticPart
androidx.core.provider.FontsContractCompat$FontRequestCallback
retrofit2.Retrofit$Builder
io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver
io.reactivex.internal.operators.maybe.MaybeCreate
io.reactivex.subjects.BehaviorSubject
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
androidx.loader.R$color
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver
retrofit2.RequestFactory$Builder
com.xuexiang.xhttp2.cache.core.LruDiskCache
org.aspectj.internal.lang.annotation.ajcDeclareParents
io.reactivex.internal.operators.maybe.MaybeFromCompletable
androidx.appcompat.widget.PopupMenu$1
okhttp3.internal.http1.Http1Codec$ChunkedSource
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber
androidx.appcompat.widget.ContentFrameLayout
com.appspa.demo.R$interpolator
com.appspa.update.proxy.impl.DefaultUpdateParser$APIKeyLower
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference
androidx.fragment.R$color
io.reactivex.internal.operators.flowable.FlowableReduceWithSingle
androidx.appcompat.widget.TooltipCompat
com.appspa.update.widget.UpdateDialogFragment
androidx.core.app.JobIntentService$CompatJobEngine
com.zhy.http.okhttp.request.PostFileRequest$1$1
io.reactivex.internal.operators.flowable.FlowableDebounceTimed
com.appspa.demo.http.OKHttpUpdateHttpService
com.google.gson.internal.ConstructorConstructor$6
retrofit2.Utils$GenericArrayTypeImpl
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ItemDelayFunction
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterable
androidx.fragment.app.FragmentActivity$HostCallbacks
okhttp3.internal.http1.Http1Codec$ChunkedSink
okhttp3.Cookie$Builder
androidx.appcompat.app.WindowDecorActionBar$1
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadStackImpl
io.reactivex.internal.operators.single.SingleFlatMapMaybe
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener
io.reactivex.internal.operators.observable.ObservableElementAtSingle
io.reactivex.internal.operators.single.SingleObserveOn
org.aspectj.lang.reflect.PerClause
retrofit2.OkHttpCall
com.xuexiang.xhttp2.model.XHttpRequest
io.reactivex.internal.schedulers.ImmediateThinScheduler$ImmediateThinWorker
com.google.gson.internal.UnsafeAllocator$3
org.aspectj.lang.reflect.DeclareAnnotation
io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent
androidx.fragment.app.FragmentManagerState
retrofit2.ParameterHandler$Headers
io.reactivex.internal.operators.observable.ObservableTake
io.reactivex.internal.operators.completable.CompletablePeek
androidx.appcompat.widget.ResourcesWrapper
okhttp3.internal.http2.Http2Stream$StreamTimeout
com.google.gson.internal.bind.TimeTypeAdapter$1
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request
androidx.core.content.res.FontResourcesParserCompat
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams
io.reactivex.internal.operators.observable.ObservableReduceWithSingle
androidx.loader.R$styleable
androidx.fragment.app.Fragment$4
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber
com.xuexiang.xhttp2.request.BaseRequest$3
org.aspectj.runtime.reflect.AdviceSignatureImpl
androidx.appcompat.widget.SearchView$SavedState$1
androidx.core.provider.FontsContractCompat$4
androidx.core.app.RemoteInput
com.appspa.update.entity.UpdateEntity$1
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest
io.reactivex.MaybeOperator
io.reactivex.ObservableEmitter
io.reactivex.internal.operators.flowable.FlowableSampleTimed
io.reactivex.internal.operators.observable.ObservableRangeLong
org.aspectj.runtime.internal.AroundClosure
com.zhy.http.okhttp.utils.Platform
androidx.collection.CircularIntArray
androidx.loader.content.AsyncTaskLoader$LoadTask
androidx.versionedparcelable.ParcelField
retrofit2.http.Tag
io.reactivex.parallel.ParallelFlowable
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter
org.aspectj.lang.SoftException
androidx.annotation.PluralsRes
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9
androidx.fragment.R$integer
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
retrofit2.http.Body
com.appspa.update.utils.FileUtils
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver
io.reactivex.internal.util.ListAddBiConsumer
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver
androidx.fragment.app.FragmentManagerImpl$2
io.reactivex.internal.schedulers.SingleScheduler
io.reactivex.internal.operators.observable.ObservableScalarXMap
io.reactivex.internal.operators.completable.CompletableAndThenCompletable
io.reactivex.disposables.ReferenceDisposable
io.reactivex.internal.operators.observable.ObservableSkip
io.reactivex.subscribers.DefaultSubscriber
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed
androidx.appcompat.widget.ActivityChooserView$InnerLayout
io.reactivex.internal.util.SorterFunction
androidx.vectordrawable.animated.R$styleable
androidx.versionedparcelable.VersionedParcel
io.reactivex.internal.disposables.ArrayCompositeDisposable
io.reactivex.internal.operators.parallel.ParallelFlatMap
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy
io.reactivex.internal.operators.completable.CompletableHide
retrofit2.Callback
com.google.gson.internal.ConstructorConstructor$10
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver
okhttp3.internal.http.BridgeInterceptor
androidx.annotation.RequiresPermission
io.reactivex.internal.operators.observable.ObservablePublish
retrofit2.http.Part
com.zhy.http.okhttp.builder.OkHttpRequestBuilder
io.reactivex.internal.functions.Functions$NaturalComparator
okhttp3.Dns
com.jakewharton.disklrucache.StrictLineReader
io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator
androidx.fragment.app.FragmentManagerImpl$4
io.reactivex.internal.functions.Functions$EmptyLongConsumer
io.reactivex.internal.operators.observable.ObservableWithLatestFrom
androidx.core.R$color
io.reactivex.internal.operators.observable.BlockingObservableLatest
okhttp3.RealCall
androidx.activity.Cancellable
io.reactivex.internal.operators.observable.ObservableFromCallable
com.google.gson.internal.ConstructorConstructor$1
androidx.core.app.RemoteInput$Source
io.reactivex.processors.ReplayProcessor$ReplayBuffer
androidx.core.R$drawable
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1
io.reactivex.internal.operators.completable.CompletableMergeIterable
io.reactivex.internal.operators.maybe.MaybeOnErrorNext
io.reactivex.internal.operators.single.SingleError
com.xuexiang.xhttp2.cache.RxCache$2
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1
androidx.core.R$string
io.reactivex.subjects.ReplaySubject$TimedNode
io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver
androidx.appcompat.widget.ActivityChooserView$2
okhttp3.OkHttpClient
androidx.core.graphics.drawable.IconCompat
androidx.customview.widget.ViewDragHelper
com.zhy.http.okhttp.callback.StringCallback
androidx.appcompat.widget.TintTypedArray
org.aspectj.lang.ProceedingJoinPoint
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1
com.google.gson.internal.bind.util.ISO8601Utils
androidx.appcompat.view.StandaloneActionMode
androidx.appcompat.graphics.drawable.StateListDrawable
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver
io.reactivex.internal.operators.maybe.MaybeToFlowable
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterator
androidx.viewpager.widget.ViewPager$3
io.reactivex.internal.schedulers.SchedulerPoolFactory
com.appspa.update.UpdateManager
io.reactivex.exceptions.CompositeException$WrappedPrintWriter
okhttp3.Dispatcher
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$SubjectWork
io.reactivex.functions.Action
com.zhy.http.okhttp.callback.BitmapCallback
io.reactivex.internal.util.ErrorMode
androidx.appcompat.app.ActionBar
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver
androidx.core.R$id
androidx.core.app.NotificationManagerCompat$SideChannelManager
androidx.appcompat.app.AlertController$RecycleListView
io.reactivex.internal.disposables.EmptyDisposable
androidx.appcompat.widget.SearchView$OnSuggestionListener
androidx.appcompat.widget.Toolbar$1
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnComplete
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription
androidx.fragment.app.FragmentManagerNonConfig
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
io.reactivex.internal.operators.flowable.FlowableFlatMap
io.reactivex.internal.operators.single.SingleTimeout
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber
org.aspectj.lang.annotation.Aspect
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$2
io.reactivex.internal.operators.flowable.FlowableTake
io.reactivex.internal.operators.flowable.FlowableCache
io.reactivex.subjects.ReplaySubject$Node
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel
io.reactivex.internal.operators.flowable.FlowableIgnoreElements
retrofit2.http.Streaming
okhttp3.internal.connection.RealConnection
retrofit2.adapter.rxjava2.Result
org.aspectj.lang.annotation.SuppressAjWarnings
okhttp3.Cookie
org.aspectj.lang.reflect.ConstructorSignature
io.reactivex.internal.subscriptions.BasicIntQueueSubscription
androidx.core.graphics.drawable.IconCompatParcelizer
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber
androidx.activity.ImmLeaksCleaner
com.google.gson.internal.bind.TypeAdapters$26
io.reactivex.internal.operators.flowable.FlowableCountSingle
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback
io.reactivex.internal.operators.observable.ObservableLift
androidx.core.app.NotificationManagerCompat$CancelTask
androidx.core.app.CoreComponentFactory$CompatWrapped
io.reactivex.internal.operators.parallel.ParallelFilterTry$1
androidx.fragment.app.Fragment
androidx.appcompat.resources.R$dimen
io.reactivex.internal.operators.flowable.FlowableGroupBy$EvictionAction
io.reactivex.internal.observers.FutureObserver
com.xuexiang.xhttp2.R$style
androidx.loader.R$attr
io.reactivex.internal.operators.completable.CompletableFromCallable
io.reactivex.internal.operators.flowable.FlowableAnySingle
androidx.appcompat.view.menu.StandardMenuPopup$1
okio.HashingSink
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode
io.reactivex.exceptions.CompositeException$WrappedPrintStream
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver
io.reactivex.internal.operators.observable.ObservableMapNotification
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
androidx.core.widget.ListPopupWindowCompat
org.aspectj.runtime.reflect.FieldSignatureImpl
com.google.gson.JsonSerializer
retrofit2.ParameterHandler$HeaderMap
androidx.customview.widget.FocusStrategy$CollectionAdapter
okio.RealBufferedSource
androidx.appcompat.widget.AppCompatSpinner$DialogPopup
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$RepeatWhenSubscriber
io.reactivex.internal.operators.observable.ObservableFromUnsafeSource
androidx.core.widget.ScrollerCompat
io.reactivex.internal.fuseable.ScalarCallable
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver
com.xuexiang.xhttp2.callback.CallBack
androidx.core.graphics.TypefaceCompatApi24Impl
org.aspectj.lang.reflect.FieldSignature
androidx.appcompat.widget.AppCompatSpinner$2
com.google.gson.internal.ConstructorConstructor$14
androidx.fragment.R$attr
io.reactivex.internal.functions.Functions$Array7Func
retrofit2.ParameterHandler$Path
androidx.fragment.app.Fragment$SavedState
com.appspa.update.R$drawable
io.reactivex.SingleTransformer
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector
io.reactivex.subjects.PublishSubject$PublishDisposable
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
okhttp3.CacheControl$Builder
androidx.core.app.NotificationManagerCompat$Task
androidx.vectordrawable.animated.R$string
com.appspa.update.proxy.impl.DefaultPrompterProxyImpl
okhttp3.internal.http2.Http2Reader
androidx.collection.ArraySet
retrofit2.KotlinExtensions
io.reactivex.internal.schedulers.ScheduledRunnable
androidx.viewpager.R$string
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe
io.reactivex.exceptions.Exceptions
androidx.drawerlayout.R$style
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber
androidx.appcompat.app.ToolbarActionBar
androidx.drawerlayout.R
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty
io.reactivex.schedulers.Schedulers$NewThreadHolder
com.xuexiang.xhttp2.utils.ApiUtils$IRequestHandler
io.reactivex.internal.operators.flowable.FlowablePublish
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream
io.reactivex.internal.operators.completable.CompletableOnErrorComplete
androidx.appcompat.view.menu.MenuView$ItemView
androidx.appcompat.widget.ToolbarWidgetWrapper$1
io.reactivex.internal.operators.flowable.FlowableSkip
io.reactivex.internal.fuseable.HasUpstreamPublisher
okhttp3.internal.http2.Huffman$Node
com.xuexiang.xhttp2.model.HttpHeaders
io.reactivex.observers.ResourceSingleObserver
androidx.appcompat.app.AppCompatDialog
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
io.reactivex.internal.operators.single.SingleMap$MapSingleObserver
androidx.appcompat.widget.AppCompatTextClassifierHelper
com.google.gson.Gson$5
androidx.core.text.BidiFormatter
androidx.appcompat.widget.ActionBarOverlayLayout$3
org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl
androidx.appcompat.widget.ListPopupWindow$2
okio.RealBufferedSource$1
com.appspa.update.entity.DownloadEntity
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver
retrofit2.ParameterHandler$Header
androidx.appcompat.app.AlertController$4
okhttp3.internal.ws.RealWebSocket$Streams
com.google.gson.internal.bind.TypeAdapters$10
androidx.appcompat.widget.AppCompatTextHelper
io.reactivex.internal.operators.observable.ObservableDebounce
androidx.core.view.accessibility.AccessibilityManagerCompat
okhttp3.internal.Util$2
io.reactivex.internal.util.EndConsumerHelper
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments
io.reactivex.internal.operators.completable.CompletableFromSingle
androidx.appcompat.view.menu.MenuPopupHelper
okio.InflaterSource
com.appspa.update.utils.UpdateUtils
androidx.core.app.NotificationCompat$InboxStyle
io.reactivex.internal.operators.single.SingleFlatMapCompletable
io.reactivex.internal.operators.observable.ObservableFromPublisher
org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver
io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction
com.xuexiang.xhttp2.utils.HttpUtils
okio.Utf8
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError
androidx.core.provider.FontsContractCompat$FontFamilyResult
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1
com.xuexiang.xhttp2.exception.ApiExceptionHandler
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
androidx.core.view.ViewConfigurationCompat
io.reactivex.internal.functions.Functions$OnErrorMissingConsumer
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber
androidx.core.hardware.display.DisplayManagerCompat
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable
androidx.appcompat.widget.AppCompatProgressBarHelper
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver
com.xuexiang.xhttp2.R$styleable
io.reactivex.internal.operators.single.SingleCreate$Emitter
com.xuexiang.xhttp2.R$anim
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable
okhttp3.Protocol
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver
org.aspectj.lang.reflect.PerClauseKind
androidx.core.app.JobIntentService$JobWorkEnqueuer
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
io.reactivex.internal.util.AtomicThrowable
io.reactivex.internal.operators.flowable.FlowableRetryWhen
androidx.appcompat.app.AppCompatCallback
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator
androidx.core.app.BundleCompat$BundleCompatBaseImpl
com.xuexiang.xhttp2.https.HttpsUtils
com.xuexiang.xhttp2.interceptor.NoCacheInterceptor
org.reactivestreams.FlowAdapters$FlowPublisherFromReactive
okhttp3.Authenticator$1
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver
io.reactivex.observers.DisposableMaybeObserver
io.reactivex.internal.fuseable.FuseToMaybe
androidx.appcompat.view.SupportMenuInflater$MenuState
retrofit2.http.OPTIONS
androidx.appcompat.app.TwilightManager$TwilightState
androidx.fragment.app.FragmentTransitionImpl$2
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber
io.reactivex.internal.operators.flowable.FlowableBufferBoundary
androidx.appcompat.widget.ScrollingTabContainerView$1
androidx.core.widget.TintableImageSourceView
io.reactivex.disposables.Disposable
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable
androidx.core.provider.FontsContractCompat$3
io.reactivex.internal.operators.observable.ObservableGroupBy$State
androidx.core.provider.FontsContractCompat$4$7
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator
androidx.core.text.TextUtilsCompat
okhttp3.internal.http1.Http1Codec$1
com.zhy.http.okhttp.OkHttpUtils$2
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
io.reactivex.internal.operators.completable.CompletableMergeArray
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate
com.xuexiang.xhttp2.subsciber.DownloadSubscriber
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
androidx.appcompat.resources.R$styleable
okhttp3.internal.http2.Http2Connection$7
okhttp3.internal.tls.TrustRootIndex
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker
com.google.gson.internal.bind.ObjectTypeAdapter$1
io.reactivex.internal.operators.flowable.FlowableCombineLatest$SingletonArrayFunc
androidx.core.view.ViewGroupCompat
io.reactivex.internal.operators.flowable.FlowableCreate$1
com.appspa.update.utils.ShellUtils
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver
io.reactivex.internal.observers.BiConsumerSingleObserver
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast
io.reactivex.internal.operators.flowable.FlowableIntervalRange
androidx.core.provider.FontRequest
okhttp3.internal.cache2.Relay$RelaySource
androidx.appcompat.app.AlertController
androidx.loader.content.ModernAsyncTask$WorkerRunnable
com.xuexiang.xhttp2.exception.IExceptionHandler
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask
io.reactivex.functions.LongConsumer
androidx.appcompat.widget.SearchView$1
retrofit2.KotlinExtensions$suspendAndThrow$1
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer
com.xuexiang.xhttp2.cache.converter.SerializableDiskConverter
io.reactivex.subjects.ReplaySubject$ReplayBuffer
io.reactivex.internal.operators.maybe.MaybeDoFinally
io.reactivex.internal.operators.single.SingleDelayWithSingle
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
retrofit2.BuiltInConverters$StreamingResponseBodyConverter
io.reactivex.internal.operators.completable.CompletableConcatArray
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber
io.reactivex.functions.Function3
io.reactivex.internal.operators.completable.CompletableSubscribeOn
io.reactivex.processors.ReplayProcessor
io.reactivex.internal.fuseable.SimpleQueue
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowOperation
com.google.gson.internal.ConstructorConstructor$13
com.xuexiang.xhttp2.request.PutRequest
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver
androidx.appcompat.view.menu.ActionMenuItem
androidx.core.app.ActivityOptionsCompat
com.appspa.update.proxy.impl.DefaultUpdateDownloader$1
androidx.fragment.app.FragmentManagerImpl$5
androidx.vectordrawable.R$integer
okhttp3.Callback
io.reactivex.annotations.BackpressureKind
org.aspectj.lang.reflect.LockSignature
retrofit2.DefaultCallAdapterFactory$1
androidx.savedstate.R
io.reactivex.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate
retrofit2.RequestBuilder
androidx.vectordrawable.animated.R$layout
retrofit2.CallAdapter
androidx.fragment.R$layout
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver
okhttp3.Dns$1
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast
androidx.lifecycle.CompositeGeneratedAdaptersObserver
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver
androidx.core.graphics.drawable.WrappedDrawable
androidx.annotation.Keep
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver
com.appspa.update.proxy.IUpdateHttpService$Callback
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator
androidx.core.provider.FontsContractCompat$FontInfo
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1
androidx.core.app.NotificationCompat$MessagingStyle
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver
io.reactivex.functions.BooleanSupplier
androidx.drawerlayout.R$dimen
io.reactivex.internal.functions.Functions$Array4Func
com.google.gson.internal.reflect.ReflectionAccessor
androidx.core.widget.TextViewCompat$AutoSizeTextType
org.aspectj.runtime.reflect.CatchClauseSignatureImpl
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable
androidx.appcompat.resources.R$attr
io.reactivex.internal.operators.parallel.ParallelMap
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver
androidx.core.app.NotificationCompat$NotificationVisibility
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SamplerObserver
com.appspa.update.utils.UpdateFileProvider
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver
com.google.gson.annotations.JsonAdapter
com.xuexiang.xhttp2.utils.RequestBodyUtils$1
androidx.annotation.XmlRes
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase
retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver
androidx.core.app.FrameMetricsAggregator
com.xuexiang.xhttp2.request.BaseRequest$7
io.reactivex.internal.operators.observable.ObservableSubscribeOn
okhttp3.internal.connection.RealConnection$1
android.support.v4.os.IResultReceiver
io.reactivex.schedulers.Schedulers
androidx.annotation.AnyThread
androidx.fragment.R$style
io.reactivex.internal.operators.flowable.FlowableDistinct
com.google.gson.Gson$2
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver
androidx.lifecycle.ComputableLiveData
androidx.versionedparcelable.NonParcelField
io.reactivex.internal.operators.single.SingleDefer
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver
androidx.fragment.R
androidx.lifecycle.MethodCallsLogger
com.xuexiang.xhttp2.request.GetRequest
com.xuexiang.xhttp2.reflect.TypeToken
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
io.reactivex.internal.operators.single.SingleDoAfterTerminate
io.reactivex.internal.operators.observable.ObservableCount$CountObserver
com.xuexiang.xhttp2.cache.core.BaseDiskCache
androidx.core.view.NestedScrollingChildHelper
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver
androidx.core.app.AppLaunchChecker
com.google.gson.JsonNull
androidx.appcompat.view.menu.CascadingMenuPopup$3
androidx.core.text.TextDirectionHeuristicCompat
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerOuter
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber
okhttp3.internal.http2.Http2Connection$Builder
androidx.core.view.MarginLayoutParamsCompat
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate
org.aspectj.lang.annotation.Pointcut
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber
androidx.activity.ComponentActivity$1
androidx.fragment.app.FragmentActivity
org.aspectj.runtime.reflect.JoinPointImpl$EnclosingStaticPartImpl
androidx.lifecycle.LiveData
com.google.gson.annotations.Until
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber
androidx.appcompat.view.menu.MenuBuilder
com.google.gson.JsonSerializationContext
io.reactivex.internal.fuseable.HasUpstreamObservableSource
okhttp3.MultipartBody$Builder
androidx.activity.OnBackPressedCallback
io.reactivex.schedulers.Schedulers$SingleHolder
io.reactivex.internal.operators.maybe.MaybeZipIterable$SingletonArrayFunc
androidx.appcompat.widget.AppCompatSeekBar
androidx.drawerlayout.widget.DrawerLayout
androidx.appcompat.widget.ListPopupWindow
androidx.appcompat.widget.SearchView$SearchAutoComplete$1
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$SequentialDispose
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryOpenSubscriber
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite
androidx.core.view.NestedScrollingChild3
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber
com.appspa.update.R$style
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast
org.aspectj.runtime.reflect.CodeSignatureImpl
androidx.core.widget.AutoScrollHelper
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber
io.reactivex.internal.functions.Functions$NullCallable
io.reactivex.internal.subscriptions.BasicQueueSubscription
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber
io.reactivex.internal.operators.maybe.MaybeFromCallable
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver
androidx.fragment.R$drawable
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
io.reactivex.internal.operators.flowable.FlowableDoAfterNext
androidx.customview.widget.ViewDragHelper$1
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments
androidx.cursoradapter.widget.ResourceCursorAdapter
okio.Buffer$UnsafeCursor
com.zhy.http.okhttp.request.PostFormRequest$1$1
org.aspectj.internal.lang.annotation.ajcITD
okhttp3.Response
io.reactivex.internal.operators.flowable.FlowableTakeLast
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver
org.aspectj.internal.lang.reflect.StringToType
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator
okhttp3.internal.cache.InternalCache
io.reactivex.internal.operators.single.SingleDoOnTerminate$DoOnTerminate
okhttp3.internal.http.HttpCodec
com.appspa.demo.App
androidx.cursoradapter.widget.CursorFilter
retrofit2.BuiltInConverters$RequestBodyConverter
io.reactivex.internal.operators.single.SingleFlatMap
androidx.lifecycle.ClassesInfoCache
io.reactivex.functions.BiFunction
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver
androidx.core.view.DragStartHelper$OnDragStartListener
io.reactivex.internal.subscribers.BlockingLastSubscriber
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$NextObserver
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver
androidx.core.view.MotionEventCompat
okhttp3.internal.Internal
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable
io.reactivex.processors.UnicastProcessor
okhttp3.internal.http2.Http2Connection$5
androidx.fragment.app.FragmentPagerAdapter
androidx.core.provider.FontsContractCompat
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$5
io.reactivex.internal.operators.observable.ObservableDoFinally
androidx.annotation.ColorInt
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber
okio.Segment
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber
androidx.annotation.GuardedBy
androidx.lifecycle.ComputableLiveData$2
androidx.core.view.inputmethod.InputConnectionCompat$1
io.reactivex.annotations.Experimental
com.zhy.http.okhttp.https.HttpsUtils$1
androidx.interpolator.view.animation.LookupTableInterpolator
androidx.appcompat.view.ActionMode
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSupport
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver
okhttp3.internal.http1.Http1Codec$FixedLengthSource
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayPublisher
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter
androidx.lifecycle.Lifecycle
androidx.vectordrawable.animated.R$integer
com.google.gson.internal.$Gson$Preconditions
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver
androidx.lifecycle.MediatorLiveData$Source
androidx.fragment.app.FragmentContainer
androidx.versionedparcelable.ParcelImpl
androidx.appcompat.view.menu.CascadingMenuPopup$2
retrofit2.internal.EverythingIsNonNull
androidx.appcompat.app.ResourcesFlusher
com.zhy.http.okhttp.https.HttpsUtils
okio.Util
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnConditionalSubscriber
androidx.viewpager.R$style
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments
io.reactivex.internal.operators.flowable.FlowableGroupJoin$JoinSupport
androidx.core.app.ShareCompat$IntentReader
io.reactivex.internal.operators.maybe.MaybeErrorCallable
androidx.lifecycle.Transformations$2$1
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator
com.xuexiang.xhttp2.transform.HttpSchedulersTransformer
androidx.appcompat.view.SupportActionModeWrapper
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber
io.reactivex.internal.functions.Functions$NotificationOnComplete
androidx.core.widget.TintableCompoundButton
androidx.fragment.app.FragmentTransitionCompat21
com.appspa.update.entity.DownloadEntity$1
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe
androidx.core.util.DebugUtils
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowOperation
io.reactivex.Scheduler$PeriodicDirectTask
com.google.gson.internal.bind.TypeAdapters$21
io.reactivex.internal.operators.completable.CompletableFromSingle$CompletableFromSingleObserver
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher
org.aspectj.internal.lang.reflect.TypePatternImpl
okhttp3.internal.ws.WebSocketReader$FrameCallback
androidx.annotation.CheckResult
io.reactivex.internal.operators.flowable.FlowableTimer
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$Cancellation
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver
okhttp3.Cache$CacheRequestImpl
androidx.core.app.BundleCompat
retrofit2.OptionalConverterFactory$OptionalConverter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
io.reactivex.internal.operators.single.SingleDoOnTerminate
androidx.appcompat.widget.AppCompatRadioButton
io.reactivex.internal.util.AppendOnlyLinkedArrayList
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl
io.reactivex.internal.util.VolatileSizeArrayList
io.reactivex.internal.operators.maybe.MaybeEmpty
androidx.core.app.TaskStackBuilder
io.reactivex.internal.operators.flowable.FlowableTimeout
androidx.appcompat.graphics.drawable.DrawableContainer$1
com.xuexiang.xhttp2.cache.key.Strings
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver
com.appspa.update.logs.ILogger
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver
com.google.gson.stream.MalformedJsonException
okhttp3.internal.http2.Settings
androidx.appcompat.view.ActionMode$Callback
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier
io.reactivex.internal.operators.observable.ObservableRepeatWhen
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver
io.reactivex.internal.operators.flowable.FlowableGroupBy
io.reactivex.internal.operators.observable.ObservableUsing
org.aspectj.runtime.reflect.StringMaker
io.reactivex.annotations.BackpressureSupport
io.reactivex.subjects.Subject
org.aspectj.lang.reflect.TypePatternBasedPerClause
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16
androidx.appcompat.resources.R
io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt
okhttp3.internal.cache.FaultHidingSink
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver
androidx.vectordrawable.graphics.drawable.AndroidResources
androidx.appcompat.app.WindowDecorActionBar$TabImpl
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber
android.support.v4.os.ResultReceiver$MyRunnable
androidx.appcompat.view.menu.StandardMenuPopup
io.reactivex.internal.observers.EmptyCompletableObserver
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle
androidx.customview.view.AbsSavedState$2
okhttp3.ResponseBody
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver
io.reactivex.internal.util.LinkedArrayList
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2
org.aspectj.lang.reflect.Advice
androidx.core.provider.FontsContractCompat$4$3
androidx.loader.content.CursorLoader
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnNext
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3
androidx.core.view.MenuItemCompat$1
androidx.fragment.app.FragmentManager$OnBackStackChangedListener
androidx.viewpager.R$dimen
androidx.core.view.NestedScrollingParent
com.xuexiang.xhttp2.transform.func.HttpResponseThrowableFunc
io.reactivex.observers.SerializedObserver
com.google.gson.internal.bind.TypeAdapters$7
io.reactivex.internal.subscriptions.ScalarSubscription
androidx.fragment.app.FragmentManagerViewModel$1
okhttp3.internal.connection.RouteSelector$Selection
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty
androidx.core.view.ViewCompat$2
androidx.lifecycle.livedata.core.R
androidx.versionedparcelable.VersionedParcelStream$1
io.reactivex.android.plugins.RxAndroidPlugins
com.google.gson.internal.bind.TypeAdapters$8
androidx.appcompat.widget.AbsActionBarView$1
okio.Buffer$2
androidx.fragment.app.FragmentManagerImpl
com.appspa.update._AppSpace$1
io.reactivex.observers.SafeObserver
com.xuexiang.xhttp2.callback.impl.IType
androidx.appcompat.widget.AppCompatCompoundButtonHelper
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView
io.reactivex.internal.operators.observable.ObservableFlatMapSingle
androidx.core.view.MenuItemCompat$OnActionExpandListener
io.reactivex.internal.operators.maybe.MaybeJust
androidx.vectordrawable.animated.R$dimen
io.reactivex.internal.operators.maybe.MaybeTimer
okhttp3.internal.proxy.NullProxySelector
io.reactivex.internal.operators.flowable.FlowableReduce
io.reactivex.internal.util.ConnectConsumer
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver
androidx.core.os.ParcelCompat
io.reactivex.internal.operators.observable.ObservableIgnoreElements
io.reactivex.internal.operators.flowable.FlowableReduceMaybe
androidx.appcompat.widget.ForwardingListener
androidx.core.app.NotificationCompat$BigTextStyle
androidx.core.app.ActivityCompat$1
androidx.appcompat.widget.ViewStubCompat$OnInflateListener
com.google.gson.FieldNamingPolicy$6
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver
androidx.annotation.InterpolatorRes
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription
androidx.appcompat.widget.AlertDialogLayout
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver
okhttp3.internal.NamedRunnable
io.reactivex.internal.observers.DeferredScalarObserver
io.reactivex.internal.operators.observable.AbstractObservableWithUpstream
androidx.appcompat.widget.AppCompatSpinner$1
io.reactivex.functions.Function6
okhttp3.internal.http2.Http2Reader$ContinuationSource
com.google.gson.Gson$3
androidx.core.graphics.TypefaceCompatUtil
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener
androidx.core.app.JobIntentService$CompatWorkItem
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher
androidx.core.app.Person$Builder
androidx.fragment.app.FragmentTransition$1
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver
androidx.loader.content.AsyncTaskLoader
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate
com.google.gson.JsonParser
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$Completion
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast
androidx.annotation.InspectableProperty$EnumEntry
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeTask
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl
androidx.core.widget.NestedScrollView$AccessibilityDelegate
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
androidx.fragment.app.FragmentManagerState$1
io.reactivex.observers.TestObserver$EmptyObserver
androidx.core.provider.FontsContractCompat$4$1
io.reactivex.subjects.SingleSubject$SingleDisposable
androidx.lifecycle.Lifecycling$1
androidx.lifecycle.LifecycleOwner
io.reactivex.internal.operators.flowable.FlowableTakePublisher
io.reactivex.internal.functions.Functions
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn
retrofit2.OkHttpCall$ExceptionCatchingResponseBody
com.google.gson.internal.JavaVersion
androidx.core.view.AccessibilityDelegateCompat
okhttp3.RequestBody$3
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
androidx.core.view.OnApplyWindowInsetsListener
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation
io.reactivex.internal.operators.observable.ObservableSingleMaybe
okhttp3.ResponseBody$1
io.reactivex.internal.operators.flowable.FlowableRangeLong
androidx.core.content.pm.ShortcutInfoCompat$Builder
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver
io.reactivex.internal.operators.observable.BlockingObservableNext
androidx.annotation.MainThread
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier
io.reactivex.internal.subscriptions.DeferredScalarSubscription
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState
com.appspa.update.proxy.impl.DefaultUpdateParser
androidx.appcompat.view.menu.MenuItemWrapperICS
io.reactivex.internal.operators.parallel.ParallelJoin
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator
retrofit2.converter.gson.GsonResponseBodyConverter
org.reactivestreams.FlowAdapters$FlowToReactiveSubscription
androidx.viewpager.widget.PagerAdapter
io.reactivex.Observable$1
io.reactivex.internal.operators.completable.CompletableNever
io.reactivex.internal.operators.flowable.FlowableRepeat
okio.ByteString
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks
androidx.fragment.app.FragmentState$1
okio.Base64
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
androidx.core.view.ViewCompat$4
androidx.activity.OnBackPressedDispatcherOwner
androidx.appcompat.widget.ActionBarOverlayLayout$1
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
androidx.appcompat.widget.ActionMenuPresenter
androidx.appcompat.widget.PopupMenu$OnDismissListener
io.reactivex.internal.functions.Functions$EqualsPredicate
io.reactivex.internal.operators.flowable.FlowableJoin
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable
com.google.gson.Gson$4
io.reactivex.internal.operators.completable.CompletableCreate$Emitter
io.reactivex.internal.operators.flowable.FlowableDetach
org.aspectj.lang.annotation.AfterThrowing
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber
com.xuexiang.xhttp2.cache.stategy.OnlyCacheStrategy
androidx.lifecycle.Transformations
androidx.core.app.RemoteActionCompatParcelizer
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver
io.reactivex.internal.schedulers.SchedulerWhen$OnCompletedAction
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver
io.reactivex.internal.util.QueueDrainHelper
androidx.loader.content.ModernAsyncTask$1
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback
io.reactivex.internal.observers.BasicFuseableObserver
androidx.viewpager.widget.PagerTabStrip$2
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField
okhttp3.TlsVersion
com.zhy.http.okhttp.utils.Platform$Android
androidx.viewpager.widget.PagerTitleStrip$PageListener
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver
androidx.core.provider.FontsContractCompat$4$4
io.reactivex.internal.functions.Functions$BooleanSupplierPredicateReverse
androidx.appcompat.view.menu.MenuBuilder$Callback
androidx.annotation.ContentView
org.aspectj.lang.annotation.Before
com.jakewharton.disklrucache.DiskLruCache
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext
com.google.gson.internal.JsonReaderInternalAccess
androidx.core.text.BidiFormatter$Builder
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$SingletonArrayFunc
org.aspectj.lang.JoinPoint$EnclosingStaticPart
io.reactivex.internal.operators.parallel.ParallelRunOn
androidx.vectordrawable.R$string
androidx.drawerlayout.widget.DrawerLayout$DrawerListener
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber
retrofit2.BuiltInConverters
android.support.v4.app.INotificationSideChannel$Stub$Proxy
io.reactivex.internal.operators.flowable.FlowableElementAt
androidx.appcompat.view.menu.MenuDialogHelper
io.reactivex.internal.operators.flowable.FlowableScan
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterConditionalSubscriber
androidx.appcompat.app.AlertController$AlertParams$2
androidx.core.view.accessibility.AccessibilityRecordCompat
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher
androidx.appcompat.widget.DecorToolbar
com.xuexiang.xhttp2.request.BaseRequest$4
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher
io.reactivex.internal.operators.completable.CompletableAmb$Amb
io.reactivex.internal.operators.flowable.FlowableMaterialize
io.reactivex.internal.operators.flowable.FlowableFilter
io.reactivex.internal.operators.flowable.FlowableObserveOn
io.reactivex.internal.operators.observable.ObservableDetach
androidx.appcompat.widget.MenuItemHoverListener
com.google.gson.internal.bind.TypeAdapters$5
androidx.customview.widget.ViewDragHelper$Callback
okhttp3.Cache$CacheResponseBody$1
com.xuexiang.xhttp2.request.BaseRequest$2
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber
io.reactivex.internal.functions.Functions$Array5Func
retrofit2.http.FieldMap
io.reactivex.internal.observers.ConsumerSingleObserver
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
androidx.core.content.pm.PermissionInfoCompat$Protection
androidx.core.content.res.ColorStateListInflaterCompat
androidx.core.util.Pair
androidx.core.content.pm.ShortcutInfoCompat
com.xuexiang.xhttp2.request.CustomRequest$2
io.reactivex.internal.operators.flowable.FlowableSequenceEqual
com.google.gson.internal.bind.JsonTreeWriter
com.xuexiang.xhttp2.R$integer
com.google.gson.internal.ConstructorConstructor$8
androidx.appcompat.widget.SearchView$2
retrofit2.SkipCallbackExecutor
com.jakewharton.disklrucache.DiskLruCache$1
androidx.appcompat.widget.FitWindowsViewGroup
androidx.core.app.NotificationManagerCompat$NotifyTask
com.zhy.http.okhttp.request.RequestCall
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver
io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber
okio.Pipe
androidx.lifecycle.LifecycleRegistry
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$1
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterSubscriber
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
com.xuexiang.xhttp2.cache.stategy.NoStrategy$1
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver
retrofit2.Platform$Android$MainThreadExecutor
io.reactivex.internal.operators.maybe.MaybeFlatten
io.reactivex.internal.operators.flowable.FlowableOnErrorNext
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19
io.reactivex.internal.operators.maybe.MaybeObserveOn
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14
io.reactivex.internal.observers.QueueDrainSubscriberPad0
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator
io.reactivex.internal.operators.flowable.FlowableTakeLastOne
io.reactivex.internal.operators.observable.ObservableInternalHelper
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutTask
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnComplete
androidx.annotation.AnimatorRes
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter
androidx.annotation.IntDef
androidx.core.view.ViewCompat$FocusRelativeDirection
com.appspa.demo.R$style
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1
androidx.vectordrawable.R$drawable
okhttp3.RealCall$AsyncCall
org.aspectj.runtime.reflect.InitializerSignatureImpl
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl
io.reactivex.internal.functions.Functions$BoundedConsumer
com.appspa.update.R$color
org.aspectj.internal.lang.annotation.ajcDeclarePrecedence
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription
com.google.gson.internal.bind.TypeAdapters$24
okio.Okio$4
io.reactivex.internal.operators.completable.CompletableToFlowable
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
androidx.core.app.FrameMetricsAggregator$MetricType
androidx.fragment.app.FragmentTabHost$DummyTabFactory
io.reactivex.internal.operators.flowable.FlowableDebounce
androidx.core.telephony.mbms.MbmsHelper
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask
io.reactivex.processors.PublishProcessor$PublishSubscription
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver
com.google.gson.internal.LinkedTreeMap$1
androidx.annotation.AnyRes
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber
org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl
androidx.annotation.LayoutRes
androidx.appcompat.widget.TooltipCompatHandler
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver
androidx.core.app.NotificationCompat$BadgeIconType
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber
io.reactivex.internal.operators.observable.ObservableLastMaybe
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback
androidx.drawerlayout.R$drawable
androidx.loader.app.LoaderManagerImpl$LoaderObserver
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber
com.google.gson.FieldNamingStrategy
retrofit2.HttpServiceMethod$SuspendForBody
io.reactivex.internal.operators.observable.ObservableTakeWhile
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber
com.appspa.demo.R$string
io.reactivex.SingleOnSubscribe
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy$1
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase
io.reactivex.internal.operators.completable.CompletableErrorSupplier
okhttp3.OkHttpClient$1
okhttp3.internal.cache.DiskLruCache$Snapshot
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver
okhttp3.internal.io.FileSystem$1
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber
androidx.drawerlayout.R$integer
com.google.gson.internal.ConstructorConstructor$3
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent
org.aspectj.lang.reflect.DeclareAnnotation$Kind
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty
androidx.fragment.app.FragmentManagerImpl$1
androidx.lifecycle.LifecycleEventObserver
io.reactivex.annotations.Beta
com.xuexiang.xhttp2.cache.RxCache$1
androidx.appcompat.view.menu.ListMenuPresenter
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber
okhttp3.internal.http2.Http2Stream
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask$DisposeObserver
androidx.fragment.app.FragmentTransition
androidx.core.app.NotificationManagerCompat
androidx.appcompat.R$bool
org.aspectj.lang.reflect.InterTypeFieldDeclaration
androidx.core.app.NotificationCompatJellybean
androidx.core.widget.NestedScrollView$OnScrollChangeListener
androidx.fragment.app.FragmentTabHost$SavedState
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedReplayCallable
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber
com.xuexiang.xhttp2.exception.ServerException
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber
retrofit2.adapter.rxjava2.ResultObservable$ResultObserver
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
androidx.customview.R$id
io.reactivex.internal.subscribers.QueueDrainSubscriberPad3
okhttp3.internal.http2.Http2Connection$2
com.google.gson.internal.bind.ObjectTypeAdapter$2
androidx.appcompat.widget.VectorEnabledTintResources
okhttp3.Cache$2
io.reactivex.internal.observers.ForEachWhileObserver
androidx.core.content.res.ComplexColorCompat
io.reactivex.subjects.CompletableSubject
retrofit2.adapter.rxjava2.CallExecuteObservable
io.reactivex.internal.operators.maybe.MaybeFilterSingle
androidx.annotation.IdRes
okhttp3.internal.platform.JdkWithJettyBootPlatform
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription
androidx.lifecycle.LifecycleRegistryOwner
androidx.appcompat.app.NavItemSelectedListener
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
io.reactivex.internal.operators.observable.ObservableDoOnEach
androidx.fragment.R$styleable
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver
androidx.lifecycle.ViewModelStoreOwner
io.reactivex.internal.operators.completable.CompletableMaterialize
com.appspa.update.service.DownloadService
com.xuexiang.xhttp2.cache.core.CacheCore
androidx.arch.core.internal.SafeIterableMap$DescendingIterator
io.reactivex.internal.operators.single.SingleDoFinally
com.appspa.update.proxy.impl.DefaultUpdatePrompter
com.appspa.demo.custom.CustomUpdateParser
com.google.gson.internal.bind.MapTypeAdapterFactory
io.reactivex.internal.subscribers.SubscriberResourceWrapper
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe
com.appspa.demo.R
androidx.activity.R$styleable
org.aspectj.internal.lang.reflect.AdviceImpl
okhttp3.internal.http2.Http2Writer
androidx.core.app.SharedElementCallback
org.aspectj.lang.annotation.DeclareParents
com.google.gson.internal.ConstructorConstructor
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer
io.reactivex.MaybeSource
retrofit2.CallAdapter$Factory
androidx.core.text.util.FindAddress$ZipRange
androidx.appcompat.view.menu.ActionMenuItemView
androidx.core.content.FileProvider$PathStrategy
io.reactivex.internal.operators.single.SingleInternalHelper
androidx.appcompat.widget.ActivityChooserView$Callbacks
retrofit2.http.HeaderMap
io.reactivex.internal.schedulers.NewThreadScheduler
io.reactivex.internal.operators.single.SingleMap
retrofit2.SkipCallbackExecutorImpl
com.appspa.demo.entity.CustomResult$PatchInfo
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber
okhttp3.internal.cache2.Relay
io.reactivex.internal.operators.maybe.MaybeFromAction
okhttp3.ConnectionPool
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber
retrofit2.ParameterHandler$1
androidx.collection.MapCollections$EntrySet
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver
com.xuexiang.xhttp2.cache.key.IObjectSerializer
com.appspa.update.BuildConfig
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition
io.reactivex.internal.operators.observable.ObservableGroupJoin
okhttp3.Cache$Entry
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable
androidx.drawerlayout.R$id
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy
io.reactivex.internal.operators.flowable.FlowableUsing
io.reactivex.internal.operators.flowable.FlowableSingleMaybe
androidx.core.text.ICUCompat
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable
com.google.gson.JsonParseException
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle
com.jakewharton.disklrucache.DiskLruCache$2
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber
com.xuexiang.xhttp2.callback.CallBackProxy
androidx.annotation.RestrictTo
org.aspectj.lang.reflect.MethodSignature
androidx.drawerlayout.widget.DrawerLayout$1
io.reactivex.internal.operators.observable.ObservableMergeWithSingle
com.xuexiang.xhttp2.logs.LogcatLogger
io.reactivex.processors.MulticastProcessor$MulticastSubscription
com.google.gson.JsonPrimitive
androidx.core.database.CursorWindowCompat
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl
okhttp3.internal.ws.RealWebSocket$Close
com.google.gson.internal.ConstructorConstructor$5
io.reactivex.FlowableEmitter
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutTask
io.reactivex.ObservableOperator
androidx.fragment.app.BackStackState
androidx.core.app.ActivityRecreator
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack
com.appspa.update.proxy.impl.DefaultUpdateChecker$3
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver
androidx.appcompat.R$layout
com.xuexiang.xhttp2.R$dimen
okhttp3.internal.platform.Android10Platform
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
io.reactivex.internal.schedulers.ExecutorScheduler
androidx.core.view.OneShotPreDrawListener
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener
com.xuexiang.xhttp2.R$color
io.reactivex.internal.functions.Functions$MaxRequestSubscription
com.appspa.update.R$layout
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1
com.appspa.update.utils.DrawableUtils
org.aspectj.internal.lang.annotation.ajcDeclareSoft
com.xuexiang.xhttp2.callback.DownloadProgressCallBack
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter
okhttp3.Headers
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver
retrofit2.Utils$ParameterizedTypeImpl
okhttp3.Address
io.reactivex.internal.operators.flowable.FlowableLastSingle
com.google.gson.DefaultDateTypeAdapter
okio.BufferedSink
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
io.reactivex.internal.operators.maybe.MaybeCount
androidx.lifecycle.ClassesInfoCache$MethodReference
io.reactivex.internal.operators.observable.ObservableReplay$UnBoundedFactory
androidx.savedstate.SavedStateRegistry$SavedStateProvider
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback
com.xuexiang.xhttp2.XHttpSDK
io.reactivex.internal.operators.flowable.FlowableGenerate
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle
androidx.appcompat.R$style
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver
io.reactivex.internal.disposables.SequentialDisposable
io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove
io.reactivex.internal.operators.parallel.ParallelMapTry$1
okhttp3.internal.connection.ConnectionSpecSelector
com.xuexiang.xhttp2.subsciber.impl.OnProgressCancelListener
androidx.appcompat.widget.SuggestionsAdapter
androidx.fragment.R$string
io.reactivex.annotations.NonNull
androidx.fragment.app.BackStackState$1
androidx.appcompat.widget.AppCompatDrawableManager$1
com.appspa.update.UpdateManager$1
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
androidx.fragment.app.ListFragment
androidx.core.widget.NestedScrollView$SavedState$1
io.reactivex.internal.fuseable.HasUpstreamMaybeSource
retrofit2.http.DELETE
org.aspectj.internal.lang.reflect.AjTypeImpl
com.xuexiang.xhttp2.cache.key.DefaultCacheKeyCreator
androidx.core.os.CancellationSignal$OnCancelListener
retrofit2.ParameterHandler$2
androidx.core.graphics.drawable.RoundedBitmapDrawable
com.zhy.http.okhttp.request.PostFileRequest
okhttp3.CipherSuite$1
androidx.appcompat.widget.SearchView$8
okhttp3.internal.http2.Http2Connection$Listener
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector
androidx.fragment.app.ListFragment$2
io.reactivex.MaybeOnSubscribe
io.reactivex.internal.operators.observable.ObservableSerialized
org.aspectj.lang.reflect.AdviceKind
io.reactivex.internal.operators.single.SingleZipIterable
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnComplete
retrofit2.http.PartMap
io.reactivex.internal.operators.observable.ObservableAutoConnect
io.reactivex.internal.operators.single.SingleAmb
io.reactivex.internal.util.HashMapSupplier
com.zhy.http.okhttp.request.OkHttpRequest
okhttp3.internal.http1.Http1Codec$AbstractSource
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver
io.reactivex.internal.operators.observable.ObservableTimeoutTimed
androidx.collection.MapCollections$ValuesCollection
androidx.appcompat.app.AppCompatDelegate$NightMode
io.reactivex.internal.operators.parallel.ParallelPeek
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl
io.reactivex.internal.operators.maybe.MaybeZipArray
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber
androidx.core.app.ShareCompat$IntentBuilder
androidx.loader.R$layout
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
io.reactivex.internal.operators.flowable.FlowableMap
io.reactivex.internal.operators.maybe.MaybeCache
okhttp3.ResponseBody$BomAwareReader
com.appspa.update.utils.PatchUtils
okio.AsyncTimeout$2
androidx.appcompat.widget.ActivityChooserView$3
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver
androidx.savedstate.Recreator$SavedStateProvider
com.zhy.http.okhttp.request.PostStringRequest
io.reactivex.internal.operators.observable.ObservableGroupBy
androidx.core.util.Supplier
androidx.appcompat.resources.R$drawable
org.reactivestreams.Subscription
androidx.appcompat.view.menu.MenuPresenter
io.reactivex.internal.observers.QueueDrainSubscriberWip
io.reactivex.internal.operators.observable.ObservableReplay$ReplayBuffer
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition
androidx.core.os.ParcelableCompat
io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask
androidx.lifecycle.GeneratedAdapter
io.reactivex.internal.operators.parallel.ParallelConcatMap
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapSingleObserver
io.reactivex.internal.operators.maybe.MaybeDefer
androidx.core.view.ViewCompat$FocusDirection
io.reactivex.internal.operators.observable.ObservableReduceMaybe
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapSingleObserver
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
androidx.customview.widget.ExploreByTouchHelper
androidx.core.content.pm.ShortcutInfoCompatSaver
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver
io.reactivex.Single
androidx.customview.R$layout
io.reactivex.internal.operators.single.SingleZipArray
com.google.gson.ExclusionStrategy
androidx.appcompat.widget.ThemeUtils
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn
androidx.viewpager.widget.PagerTabStrip
androidx.customview.R$drawable
androidx.loader.R$dimen
androidx.core.graphics.TypefaceCompatApi26Impl
io.reactivex.internal.operators.completable.CompletableDoOnEvent
io.reactivex.internal.operators.observable.ObservableAmb
okhttp3.Cache
androidx.customview.R$dimen
io.reactivex.schedulers.TestScheduler$TimedRunnable
androidx.vectordrawable.animated.R$id
com.zhy.http.okhttp.request.PostFormRequest$1
io.reactivex.internal.operators.maybe.MaybeDoOnEvent
androidx.core.app.ActivityRecreator$3
androidx.drawerlayout.widget.DrawerLayout$SavedState
io.reactivex.subjects.SerializedSubject
io.reactivex.schedulers.TestScheduler$TestWorker
androidx.core.text.util.LinkifyCompat
io.reactivex.FlowableConverter
com.xuexiang.xhttp2.cache.stategy.FirstCacheStategy
com.appspa.demo.R$layout
org.aspectj.lang.reflect.AjTypeSystem
org.aspectj.lang.reflect.InterTypeDeclaration
androidx.core.app.NotificationCompatSideChannelService
io.reactivex.internal.operators.observable.ObservableWindow
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
io.reactivex.internal.functions.Functions$ListSorter
org.aspectj.lang.reflect.SourceLocation
androidx.core.view.PointerIconCompat
com.google.gson.internal.UnsafeAllocator
com.google.gson.internal.bind.TreeTypeAdapter
androidx.core.view.ActionProvider$SubUiVisibilityListener
com.appspa.update.proxy.IUpdateDownloader
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager
okhttp3.HttpUrl$Builder
androidx.core.util.Pools
io.reactivex.internal.operators.observable.ObservableGroupJoin$JoinSupport
io.reactivex.internal.operators.flowable.FlowableCount
androidx.appcompat.widget.ListPopupWindow$3
io.reactivex.internal.operators.observable.ObservableZipIterable
androidx.viewpager.widget.ViewPager
androidx.core.graphics.drawable.IconCompat$IconType
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate
androidx.core.view.NestedScrollingParentHelper
io.reactivex.internal.functions.Functions$TruePredicate
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver
com.appspa.update.widget.BaseDialog$1
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView
okhttp3.internal.platform.AndroidPlatform$CloseGuard
androidx.loader.R$integer
okhttp3.internal.http.CallServerInterceptor$CountingSink
okhttp3.internal.cache.DiskLruCache$1
com.google.gson.internal.bind.TypeAdapters$26$1
io.reactivex.internal.operators.observable.ObservableFilter
okhttp3.internal.http2.Http2Connection$6
io.reactivex.internal.observers.InnerQueuedObserverSupport
com.zhy.http.okhttp.OkHttpUtils$1
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener
retrofit2.http.Query
androidx.activity.R$style
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker
io.reactivex.internal.disposables.DisposableHelper
androidx.core.app.NotificationCompat$Builder
com.appspa.update.R$bool
org.aspectj.lang.reflect.TypePattern
org.aspectj.lang.JoinPoint
io.reactivex.internal.operators.completable.CompletableMerge
com.google.gson.internal.bind.JsonTreeReader
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable
androidx.core.R$styleable
androidx.appcompat.view.ViewPropertyAnimatorCompatSet
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier
com.appspa.demo.R$id
io.reactivex.processors.MulticastProcessor
androidx.core.app.NotificationCompat$GroupAlertBehavior
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver
io.reactivex.internal.operators.flowable.FlowableGroupBy$State
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal
com.google.gson.internal.LazilyParsedNumber
io.reactivex.observers.DefaultObserver
io.reactivex.internal.operators.maybe.MaybePeek
androidx.core.net.ConnectivityManagerCompat
androidx.core.database.sqlite.SQLiteCursorCompat
retrofit2.OkHttpCall$NoContentResponseBody
io.reactivex.internal.subscriptions.SubscriptionHelper
io.reactivex.internal.operators.observable.ObservableMap
io.reactivex.internal.operators.observable.BlockingObservableIterable
org.reactivestreams.Publisher
androidx.fragment.R$id
androidx.appcompat.resources.R$string
io.reactivex.internal.operators.flowable.BlockingFlowableNext
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver
androidx.interpolator.view.animation.FastOutLinearInInterpolator
io.reactivex.MaybeConverter
androidx.core.app.ShareCompat
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber
com.xuexiang.xhttp2.XHttp$1
io.reactivex.internal.operators.observable.ObservableConcatMap
retrofit2.ParameterHandler$Field
androidx.core.text.util.FindAddress
io.reactivex.internal.operators.flowable.FlowableFromCallable
com.google.gson.internal.LinkedHashTreeMap$EntrySet
androidx.appcompat.app.AppCompatDelegateImpl$3
androidx.core.app.JobIntentService$JobServiceEngineImpl
androidx.core.text.BidiFormatter$DirectionalityEstimator
com.appspa.demo.R$attr
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver
io.reactivex.internal.operators.observable.ObservableSkipUntil
io.reactivex.Flowable
androidx.appcompat.widget.ActionBarBackgroundDrawable
androidx.loader.content.ModernAsyncTask$4
io.reactivex.internal.operators.observable.ObservableSkipLastTimed
org.aspectj.runtime.CFlow
io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe
androidx.viewpager.widget.ViewPager$OnPageChangeListener
androidx.annotation.CallSuper
androidx.core.view.TintableBackgroundView
androidx.core.os.BuildCompat
io.reactivex.Scheduler$Worker$PeriodicTask
androidx.appcompat.widget.Toolbar$LayoutParams
androidx.core.view.GravityCompat
io.reactivex.internal.operators.single.SingleDetach
androidx.core.graphics.TypefaceCompatBaseImpl$1
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1
okhttp3.internal.http2.Hpack$Reader
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1
io.reactivex.internal.operators.single.SingleDelay$Delay$OnError
androidx.viewpager.R$layout
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl
androidx.appcompat.widget.PopupMenu$3
androidx.fragment.app.FragmentTransitionCompat21$4
androidx.appcompat.widget.FitWindowsLinearLayout
io.reactivex.FlowableOperator
com.appspa.update.listener.IUpdateParseCallback
androidx.core.view.MenuCompat
io.reactivex.internal.operators.maybe.MaybeContains
io.reactivex.internal.operators.observable.ObservableAll
androidx.fragment.app.ListFragment$1
com.xuexiang.xhttp2.exception.ApiException$ERROR
androidx.core.app.ActivityCompat$SharedElementCallback21Impl
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber
androidx.customview.R$string
androidx.core.view.MenuItemCompat
androidx.core.view.InputDeviceCompat
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber
okhttp3.internal.connection.RouteException
retrofit2.Invocation
retrofit2.CompletableFutureCallAdapterFactory
androidx.appcompat.app.AlertController$AlertParams$3
io.reactivex.internal.subscribers.LambdaSubscriber
com.appspa.update.proxy.impl.DefaultUpdateChecker$1
retrofit2.ParameterHandler$Body
androidx.appcompat.graphics.drawable.DrawableContainer
com.xuexiang.xhttp2.cache.stategy.OnlyRemoteStrategy
okhttp3.Route
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber
io.reactivex.internal.operators.single.SingleSubscribeOn
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState
android.support.v4.os.ResultReceiver$1
io.reactivex.internal.operators.maybe.MaybeConcatIterable
io.reactivex.internal.util.NotificationLite$SubscriptionNotification
androidx.annotation.RawRes
androidx.core.widget.ListViewCompat
okhttp3.CookieJar$1
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver
io.reactivex.internal.operators.observable.ObservableWindowBoundary
androidx.core.app.ComponentActivity$ExtraData
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber
androidx.lifecycle.LifecycleRegistry$1
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong
com.google.gson.internal.LinkedTreeMap$Node
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator
com.appspa.update.widget.NumberProgressBar
okhttp3.Interceptor$Chain
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver
androidx.appcompat.widget.Toolbar$SavedState
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter
com.google.gson.internal.bind.TypeAdapters$33
com.google.gson.internal.bind.ObjectTypeAdapter
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe
com.appspa.update.proxy.IUpdatePrompter
io.reactivex.internal.operators.single.SingleToFlowable
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber
com.zhy.http.okhttp.request.PostFormRequest
com.google.gson.JsonArray
io.reactivex.subjects.ReplaySubject
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver
io.reactivex.internal.operators.observable.ObservableCollect
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate
io.reactivex.BackpressureStrategy
io.reactivex.CompletableObserver
retrofit2.adapter.rxjava2.RxJava2CallAdapter
retrofit2.adapter.rxjava2.ResultObservable
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu
io.reactivex.internal.operators.flowable.FlowableReplay$DefaultUnboundedFactory
androidx.appcompat.widget.SearchView$SearchAutoComplete
org.aspectj.lang.annotation.control.CodeGenerationHint
com.appspa.update.AppSpace
androidx.appcompat.widget.SearchView$OnCloseListener
io.reactivex.internal.operators.single.SingleDoOnError
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$2
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
org.reactivestreams.Subscriber
retrofit2.ParameterHandler$PartMap
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver
androidx.fragment.app.Fragment$InstantiationException
io.reactivex.internal.operators.observable.ObservableObserveOn
androidx.appcompat.view.menu.MenuView
androidx.appcompat.widget.SearchView$OnQueryTextListener
androidx.fragment.app.FragmentManager$BackStackEntry
okhttp3.WebSocket
androidx.core.view.NestedScrollingChild2
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody
com.appspa.update.proxy.IUpdateHttpService$DownloadCallback
com.xuexiang.xhttp2.transform.HandleErrTransformer
retrofit2.Converter$Factory
org.aspectj.runtime.internal.Conversions
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody$CountingSink
io.reactivex.android.schedulers.AndroidSchedulers$MainHolder
androidx.drawerlayout.R$color
com.google.gson.FieldAttributes
com.google.gson.stream.JsonReader
io.reactivex.observables.GroupedObservable
androidx.annotation.IntegerRes
io.reactivex.internal.operators.observable.ObservablePublish$PublishSource
io.reactivex.internal.operators.flowable.FlowableAutoConnect
androidx.appcompat.R$interpolator
io.reactivex.exceptions.CompositeException$PrintStreamOrWriter
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinatorHelper
io.reactivex.SingleOperator
com.xuexiang.xhttp2.transform.func.HttpResultFuc
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySubscriber
androidx.customview.R$styleable
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe
androidx.appcompat.widget.ActivityChooserView$5
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber
androidx.core.view.inputmethod.InputConnectionCompat
com.google.gson.internal.bind.TypeAdapters$13
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter
androidx.customview.widget.ExploreByTouchHelper$2
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable
io.reactivex.internal.functions.Functions$Identity
io.reactivex.internal.operators.observable.ObservableToList
androidx.core.net.DatagramSocketWrapper
androidx.viewpager.widget.PagerTabStrip$1
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber
com.xuexiang.xhttp2.cache.RxCache$4
androidx.annotation.StringDef
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber
okhttp3.internal.platform.ConscryptPlatform
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber
androidx.savedstate.SavedStateRegistryOwner
io.reactivex.internal.operators.flowable.FlowableTimeInterval
io.reactivex.internal.operators.observable.ObservableCache$Node
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber
io.reactivex.subjects.CompletableSubject$CompletableDisposable
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection
androidx.core.os.OperationCanceledException
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
io.reactivex.internal.functions.Functions$ToMapKeyValueSelector
androidx.customview.widget.FocusStrategy$SequentialComparator
androidx.core.view.ActionProvider$VisibilityListener
com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility
okhttp3.internal.http2.Http2Connection
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable
okhttp3.internal.http2.PushObserver
org.aspectj.internal.lang.reflect.PointcutBasedPerClauseImpl
io.reactivex.CompletableConverter
com.google.gson.internal.bind.TypeAdapters$20
org.aspectj.lang.annotation.DeclareError
retrofit2.Platform$Android
androidx.core.os.ParcelableCompatCreatorCallbacks
io.reactivex.internal.operators.observable.BlockingObservableMostRecent
com.xuexiang.xhttp2.logs.HttpLog
com.zhy.http.okhttp.utils.Exceptions
com.zhy.http.okhttp.callback.Callback
io.reactivex.internal.operators.flowable.FlowableSkipUntil
org.aspectj.lang.reflect.PointcutExpression
io.reactivex.internal.operators.maybe.MaybeZipIterable
com.google.gson.annotations.SerializedName
androidx.core.view.ViewCompat$UnhandledKeyEventManager
io.reactivex.schedulers.Schedulers$IoHolder
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber
io.reactivex.internal.subscribers.BlockingBaseSubscriber
io.reactivex.internal.operators.flowable.FlowableInterval
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber
okhttp3.internal.tls.OkHostnameVerifier
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
androidx.core.view.ViewCompat$3
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider
okhttp3.internal.ws.RealWebSocket$PingRunnable
androidx.core.R$integer
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver
androidx.lifecycle.ViewModelProvider$KeyedFactory
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
androidx.core.graphics.drawable.TintAwareDrawable
androidx.core.internal.package-info
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer
io.reactivex.internal.operators.completable.CompletableDelay
okio.Pipe$PipeSource
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver
io.reactivex.internal.observers.FutureSingleObserver
com.google.gson.JsonStreamParser
io.reactivex.processors.FlowableProcessor
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder
okhttp3.internal.connection.ConnectInterceptor
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl
io.reactivex.internal.subscribers.QueueDrainSubscriber
com.zhy.http.okhttp.builder.OtherRequestBuilder
androidx.core.app.NotificationCompat$Action$SemanticAction
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle
io.reactivex.internal.operators.observable.ObservableTakeLast
androidx.annotation.ColorLong
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver
io.reactivex.internal.operators.maybe.MaybeDetach
androidx.versionedparcelable.VersionedParcelable
androidx.appcompat.widget.TintInfo
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer
io.reactivex.internal.fuseable.HasUpstreamSingleSource
androidx.core.internal.view.SupportSubMenu
io.reactivex.internal.schedulers.SchedulerPoolFactory$ScheduledTask
com.appspa.update._AppSpace
io.reactivex.internal.operators.maybe.MaybeCallbackObserver
okhttp3.internal.http2.Http2Connection$PingRunnable
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
io.reactivex.internal.util.MergerBiFunction
okhttp3.internal.http2.Http2Connection$4
androidx.annotation.NavigationRes
com.xuexiang.xhttp2.R$id
io.reactivex.internal.operators.maybe.MaybeConcatArray
androidx.core.location.LocationManagerCompat
io.reactivex.internal.operators.maybe.MaybeMap
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
androidx.core.os.HandlerCompat
io.reactivex.internal.subscribers.BlockingSubscriber
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver
androidx.core.widget.ContentLoadingProgressBar
io.reactivex.internal.operators.single.SingleDoOnEvent
androidx.core.database.DatabaseUtilsCompat
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback
androidx.appcompat.resources.R$id
androidx.appcompat.widget.ActivityChooserView
io.reactivex.internal.observers.BlockingLastObserver
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry
com.appspa.demo.R$mipmap
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer
com.appspa.update.utils.ColorUtils
io.reactivex.subjects.AsyncSubject
io.reactivex.internal.operators.flowable.FlowableRefCount
okhttp3.internal.cache.CacheStrategy
androidx.annotation.LongDef
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver
io.reactivex.internal.functions.Functions$ErrorConsumer
com.jakewharton.disklrucache.StrictLineReader$1
io.reactivex.internal.operators.observable.ObservableSingleSingle
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe
io.reactivex.internal.operators.single.SingleZipIterable$SingletonArrayFunc
okhttp3.Handshake
okhttp3.Connection
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
androidx.appcompat.widget.ActivityChooserView$1
androidx.core.app.NotificationCompatExtras
okio.GzipSource
io.reactivex.exceptions.MissingBackpressureException
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
com.google.gson.FieldNamingPolicy$5
androidx.arch.core.executor.TaskExecutor
org.aspectj.internal.lang.reflect.PointcutImpl
com.xuexiang.xhttp2.utils.RequestBodyUtils
androidx.core.view.DragAndDropPermissionsCompat
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver
org.aspectj.lang.reflect.DeclareErrorOrWarning
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver
com.zhy.http.okhttp.cookie.store.MemoryCookieStore
io.reactivex.internal.operators.observable.ObservableInternalHelper$ItemDelayFunction
androidx.customview.view.AbsSavedState$1
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
okhttp3.MediaType
androidx.core.content.ContextCompat$LegacyServiceMapHolder
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$1
io.reactivex.internal.operators.maybe.MaybeNever
androidx.appcompat.widget.Toolbar$SavedState$1
okhttp3.internal.http.HttpHeaders
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleGenerator
androidx.annotation.VisibleForTesting
com.google.gson.internal.Excluder
io.reactivex.internal.operators.observable.ObservableScanSeed
io.reactivex.exceptions.UndeliverableException
androidx.arch.core.internal.SafeIterableMap
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver
com.xuexiang.xhttp2.cache.RxCache$3
io.reactivex.internal.operators.completable.CompletableCreate
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ZipIterableFunction
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
io.reactivex.internal.operators.observable.ObservableWindowTimed
androidx.core.text.PrecomputedTextCompat$Params
io.reactivex.internal.operators.flowable.FlowableFromPublisher
com.appspa.update.utils.ColorUtils$RandomColor
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$4
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver
io.reactivex.internal.operators.flowable.FlowableScalarXMap
androidx.appcompat.app.ActionBar$Tab
androidx.core.content.pm.PackageInfoCompat
androidx.core.app.ServiceCompat
androidx.core.os.LocaleListCompat
androidx.core.widget.EdgeEffectCompat
androidx.appcompat.widget.ThemedSpinnerAdapter
com.xuexiang.xhttp2.model.ApiResult
androidx.annotation.RequiresPermission$Read
com.xuexiang.xhttp2.https.DefaultHostnameVerifier
org.aspectj.runtime.reflect.SignatureImpl
androidx.viewpager.widget.ViewPager$4
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$2
androidx.appcompat.resources.R$style
retrofit2.http.FormUrlEncoded
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex
androidx.arch.core.executor.ArchTaskExecutor$2
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry
retrofit2.converter.gson.GsonConverterFactory
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
io.reactivex.internal.operators.observable.ObservableReplay$Node
androidx.core.os.TraceCompat
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver
io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport
com.jakewharton.disklrucache.DiskLruCache$Entry
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver
com.xuexiang.xhttp2.annotation.NetMethod
org.aspectj.lang.Aspects
okhttp3.internal.http2.Http2Stream$FramingSink
androidx.appcompat.widget.AppCompatButton
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber
io.reactivex.internal.fuseable.QueueSubscription
androidx.core.util.AtomicFile
androidx.appcompat.widget.AppCompatCheckBox
org.aspectj.runtime.reflect.SignatureImpl$CacheImpl
com.xuexiang.xhttp2.request.BaseRequest
com.appspa.update.service.DownloadService$FileDownloadCallBack$1
com.google.gson.LongSerializationPolicy$2
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer
io.reactivex.schedulers.SchedulerRunnableIntrospection
org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor
com.appspa.update.entity.UpdateEntity
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscription
io.reactivex.internal.operators.single.SingleEquals
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber
io.reactivex.internal.observers.ResumeSingleObserver
androidx.appcompat.view.CollapsibleActionView
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver
com.zhy.http.okhttp.builder.HasParamsable
androidx.loader.R
io.reactivex.internal.operators.flowable.FlowableMapPublisher
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterSubscriber
io.reactivex.internal.observers.BlockingMultiObserver
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher
io.reactivex.internal.util.NotificationLite$DisposableNotification
io.reactivex.internal.operators.parallel.ParallelSortedJoin
androidx.vectordrawable.animated.R$attr
okhttp3.internal.http2.Http2Reader$Handler
androidx.core.view.LayoutInflaterCompat
androidx.customview.R
io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription
androidx.appcompat.R$dimen
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$4
com.xuexiang.xhttp2.cache.model.CacheMode
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1
io.reactivex.internal.functions.Functions$ToMapKeySelector
androidx.appcompat.app.ToolbarActionBar$2
androidx.fragment.app.Fragment$AnimationInfo
androidx.core.widget.TintableCompoundDrawablesView
androidx.appcompat.widget.RtlSpacingHelper
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter
androidx.annotation.HalfFloat
io.reactivex.Scheduler$DisposeTask
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate
com.zhy.http.okhttp.OkHttpUtils$3
androidx.appcompat.app.AppCompatDelegateImpl
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver
okhttp3.internal.connection.StreamAllocation
androidx.core.text.TextDirectionHeuristicsCompat
io.reactivex.internal.operators.observable.ObservableReplay$MulticastReplay
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer
retrofit2.ParameterHandler$Part
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver
com.appspa.update.UpdateManager$Builder
androidx.core.provider.FontsContractCompat$4$2
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1
io.reactivex.internal.operators.flowable.FlowableWindowTimed
androidx.viewpager.R$integer
androidx.annotation.MenuRes
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
android.support.v4.os.IResultReceiver$Stub
com.xuexiang.xhttp2.XHttp$2
retrofit2.Platform
okhttp3.internal.cache.DiskLruCache$Editor$1
androidx.core.view.NestedScrollingParent2
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: io.reactivex.Scheduler scheduler
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.Configuration configuration
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mPreviousUpEvent
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.xuexiang.xhttp2.R$color: int background_material_light
com.appspa.update.R$style: int Widget_AppCompat_Button_Small
com.xuexiang.xhttp2.R$attr: int voiceIcon
androidx.appcompat.R$styleable: int MenuView_android_headerBackground
com.appspa.demo.R$dimen: int compat_button_padding_horizontal_material
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: io.reactivex.internal.util.AtomicThrowable errors
okhttp3.Cookie$Builder: boolean persistent
com.zhy.http.okhttp.request.RequestCall: okhttp3.Call call
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: java.util.concurrent.atomic.AtomicInteger wip
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_22
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
retrofit2.Invocation: java.lang.reflect.Method method
com.appspa.update.R$id: int accessibility_custom_action_0
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
com.google.gson.internal.LinkedTreeMap: java.util.Comparator comparator
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$layout: int notification_template_part_time
io.reactivex.internal.operators.observable.ObservableReplay$ReplaySource: java.util.concurrent.atomic.AtomicReference curr
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber this$0
androidx.appcompat.view.menu.ActionMenuItemView: int MAX_ICON_SIZE
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: boolean cancelled
com.xuexiang.xhttp2.R$styleable: int AlertDialog_android_layout
androidx.appcompat.widget.AppCompatTextHelper: int MONOSPACE
androidx.appcompat.R$attr: int actionBarTabTextStyle
io.reactivex.internal.operators.single.SingleDoAfterTerminate: io.reactivex.functions.Action onAfterTerminate
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: java.lang.Object value
androidx.appcompat.R$styleable: int SearchView_android_imeOptions
androidx.core.widget.ListViewAutoScrollHelper: android.widget.ListView mTarget
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Rect mChildHitRect
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: io.reactivex.functions.Function mapper
com.appspa.update.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
androidx.appcompat.widget.ActivityChooserModel: int mHistoryMaxSize
androidx.appcompat.widget.SwitchCompat: int mTouchMode
com.appspa.demo.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mSplitBackground
com.xuexiang.xhttp2.R$attr: int actionModePopupWindowStyle
androidx.appcompat.R$dimen: int highlight_alpha_material_light
androidx.activity.R$styleable: int[] FontFamily
com.xuexiang.xhttp2.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.appspa.update.R$attr: int windowFixedWidthMinor
com.xuexiang.xhttp2.R$attr: int listPreferredItemPaddingRight
androidx.customview.widget.ViewDragHelper: int INVALID_POINTER
com.appspa.demo.R$attr: int title
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActivityChooserView
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_LOW
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.graphics.RectF TEMP_RECTF
androidx.core.app.NotificationCompat$WearableExtender: int mContentIconGravity
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BOOLEAN_AS_STRING
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicBoolean stopWindows
androidx.core.R$styleable: int GradientColor_android_type
com.xuexiang.xhttp2.model.HttpParams$FileWrapper: okhttp3.MediaType contentType
com.appspa.update.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.appspa.update.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.R$styleable: int ActivityChooserView_initialActivityCount
androidx.fragment.app.FragmentManagerImpl$FragmentTag: int Fragment_id
com.appspa.update.R$styleable: int View_android_theme
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable: long serialVersionUID
com.appspa.update.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
okhttp3.internal.Util: okio.ByteString UTF_32_LE_BOM
com.xuexiang.xhttp2.R$drawable: int notification_icon_background
io.reactivex.internal.operators.completable.CompletableFromSingle$CompletableFromSingleObserver: io.reactivex.CompletableObserver co
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: long count
androidx.core.text.util.FindAddress: java.util.regex.Pattern sWordRe
androidx.appcompat.R$integer: int status_bar_notification_info_maxnum
androidx.core.provider.FontsContractCompat$4$9: androidx.core.provider.FontsContractCompat$4 this$0
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber[] EMPTY
androidx.appcompat.R$attr: int imageButtonStyle
com.xuexiang.xhttp2.R$attr: int actionModeShareDrawable
com.xuexiang.xhttp2.R$id: int action_mode_bar
androidx.appcompat.resources.R$attr: int alpha
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_checkable
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_GROUP
com.appspa.demo.R$color: int error_color_material_light
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: java.util.concurrent.atomic.AtomicReference value
com.appspa.demo.R$styleable: int AppCompatTheme_spinnerStyle
androidx.vectordrawable.R$color: int notification_icon_bg_color
com.appspa.update.R$attr: int closeItemLayout
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: io.reactivex.functions.Function keySelector
androidx.core.app.ActivityRecreator: java.lang.reflect.Field tokenField
androidx.viewpager.widget.PagerTabStrip: boolean mDrawFullUnderlineSet
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback
com.appspa.update.R$styleable: int SearchView_defaultQueryHint
androidx.appcompat.R$style: int Base_Animation_AppCompat_Dialog
com.xuexiang.xhttp2.model.HttpHeaders: java.util.TimeZone GMT_TIME_ZONE
com.appspa.demo.R$style: int TextAppearance_AppCompat_Tooltip
androidx.vectordrawable.animated.R$attr: int fontProviderFetchTimeout
androidx.lifecycle.LiveData: java.lang.Object mPendingData
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags
io.reactivex.internal.subscribers.InnerQueuedSubscriber: long produced
com.appspa.update.R$layout: int abc_activity_chooser_view_list_item
androidx.core.R$styleable: int FontFamily_fontProviderPackage
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar_TabView
androidx.vectordrawable.animated.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier[] $VALUES
androidx.core.app.FrameMetricsAggregator: int LAST_INDEX
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: long produced
com.appspa.demo.R$style: int Base_Widget_AppCompat_TextView
com.xuexiang.xhttp2.R$color: int material_grey_850
com.xuexiang.xhttp2.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: long serialVersionUID
com.appspa.demo.R$drawable: int abc_list_focused_holo
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CLASS
androidx.appcompat.widget.SearchView: int mSuggestionRowLayout
androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId
com.appspa.update.R$dimen: int abc_action_bar_default_height_material
io.reactivex.internal.operators.flowable.FlowableIntervalRange: io.reactivex.Scheduler scheduler
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer REQUEST_MAX
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: long remaining
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.viewpager.R$styleable: int FontFamilyFont_font
com.appspa.update.R$styleable: int StateListDrawable_android_exitFadeDuration
com.appspa.update.R$drawable: int abc_btn_radio_material
com.appspa.update.R$attr: int displayOptions
androidx.appcompat.resources.R$dimen: int notification_subtext_size
com.xuexiang.xhttp2.R$styleable: int ViewStubCompat_android_layout
com.appspa.demo.R$dimen: int notification_action_icon_size
androidx.core.content.ContextCompat: android.util.TypedValue sTempValue
androidx.appcompat.widget.SuggestionsAdapter: android.app.SearchableInfo mSearchable
androidx.customview.R$drawable: int notification_bg_low_pressed
com.appspa.demo.R$styleable: int MenuItem_iconTint
androidx.vectordrawable.animated.R$styleable: int GradientColorItem_android_offset
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
com.appspa.update.UpdateManager: java.lang.ref.WeakReference mContext
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mAllowCaching
com.appspa.update.R$attr: int titleMarginTop
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.appcompat.R$styleable: int MenuItem_tooltipText
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.ActionProvider mInner
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed: java.util.concurrent.TimeUnit unit
com.appspa.demo.R$styleable: int AppCompatTheme_windowMinWidthMinor
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_font
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.appcompat.widget.ActivityChooserModel: java.lang.String LOG_TAG
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: io.reactivex.ObservableSource source
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: long serialVersionUID
androidx.core.app.FrameMetricsAggregator: int DELAY_INDEX
androidx.appcompat.R$color: int material_grey_300
androidx.appcompat.R$attr: int subtitle
com.appspa.demo.R$dimen: int abc_disabled_alpha_material_light
okhttp3.internal.cache.DiskLruCache$2: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.http2.Http2Connection$5: boolean val$inFinished
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_PAGES
io.reactivex.internal.operators.parallel.ParallelFlatMap: int maxConcurrency
com.appspa.demo.R$attr: int textAppearanceSearchResultTitle
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: java.util.concurrent.atomic.AtomicBoolean cancelled
com.xuexiang.xhttp2.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures
androidx.appcompat.R$id: int accessibility_custom_action_13
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionViewClassName
okhttp3.Cookie$Builder: java.lang.String domain
androidx.appcompat.app.AlertController$5: android.view.View val$top
com.xuexiang.xhttp2.R$dimen: int abc_action_button_min_height_material
androidx.fragment.R$layout: int notification_template_custom_big
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: io.reactivex.functions.Function mapper
androidx.fragment.R$id: int accessibility_custom_action_15
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
com.appspa.demo.R$attr: int commitIcon
androidx.viewpager.R$styleable: int GradientColor_android_endX
com.appspa.update.R$styleable: int MenuView_android_itemBackground
org.aspectj.runtime.reflect.CodeSignatureImpl: java.lang.Class[] parameterTypes
com.appspa.update.R$attr: int theme
androidx.core.view.accessibility.AccessibilityRecordCompat: android.view.accessibility.AccessibilityRecord mRecord
com.xuexiang.xhttp2.R$id: int tag_accessibility_clickable_spans
androidx.activity.R$attr: int fontVariationSettings
androidx.appcompat.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTrackTintList
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: long count
androidx.loader.R$styleable: int GradientColor_android_endX
com.xuexiang.xhttp2.subsciber.CallBackSubscriber: com.xuexiang.xhttp2.callback.CallBack mCallBack
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: long serialVersionUID
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.widget.ActionBarContextView mContextView
okio.HashingSource: java.security.MessageDigest messageDigest
androidx.appcompat.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.appspa.demo.R$color: int abc_primary_text_disable_only_material_dark
com.xuexiang.xhttp2.R$string: int abc_toolbar_collapse_description
androidx.core.app.NotificationCompat: int DEFAULT_LIGHTS
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mAnimating
androidx.appcompat.R$styleable: int ActionBar_contentInsetStart
io.reactivex.internal.operators.flowable.FlowableAmb: java.lang.Iterable sourcesIterable
io.reactivex.internal.util.OpenHashSet: int mask
com.appspa.demo.R$style: int Theme_AppCompat_DayNight
com.appspa.demo.R$style: int Widget_AppCompat_ListView
org.aspectj.internal.lang.reflect.StringToType$1: java.lang.reflect.Type[] val$typeParams
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments
com.appspa.update.R$styleable: int Toolbar_contentInsetLeft
com.appspa.update._AppSpace: java.util.Map sPrompterMap
com.appspa.update.R$dimen: int abc_dialog_fixed_height_minor
io.reactivex.internal.operators.observable.ObservableReplay$ReplayBufferSupplier: int bufferSize
okio.RealBufferedSink$1: okio.RealBufferedSink this$0
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: io.reactivex.Observer observer
io.reactivex.internal.operators.single.SingleDelay$Delay$OnSuccess: io.reactivex.internal.operators.single.SingleDelay$Delay this$1
androidx.appcompat.R$color: int accent_material_light
com.appspa.update.R$drawable: int btn_checkbox_unchecked_mtrl
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnComplete: org.reactivestreams.Subscriber subscriber
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.view.LayoutInflater mInflater
com.zhy.http.okhttp.request.PostFileRequest$1: com.zhy.http.okhttp.callback.Callback val$callback
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: io.reactivex.Observer downstream
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.appspa.update.R$attr: int customNavigationLayout
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon
androidx.appcompat.resources.R$layout: int notification_action_tombstone
com.appspa.demo.R$dimen: int abc_text_size_medium_material
androidx.activity.R$styleable: int GradientColor_android_startY
androidx.appcompat.R$styleable: int AlertDialog_listLayout
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: org.reactivestreams.Subscriber downstream
androidx.core.R$drawable: int notification_bg_low_pressed
com.appspa.demo.R$id: int ll_close
androidx.customview.widget.ExploreByTouchHelper: int mKeyboardFocusedVirtualViewId
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.util.concurrent.atomic.AtomicInteger active
retrofit2.RequestBuilder: java.util.regex.Pattern PATH_TRAVERSAL
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: io.reactivex.MaybeObserver downstream
com.xuexiang.xhttp2.R$drawable: int abc_cab_background_top_material
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: long maxSize
com.appspa.update.R$attr: int buttonTint
com.xuexiang.xhttp2.R$drawable: int abc_text_select_handle_right_mtrl_dark
com.appspa.update.R$id: int action_bar_activity_content
com.appspa.demo.R$attr: int subtitleTextColor
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuAdapter mAdapter
androidx.core.provider.SelfDestructiveThread$2$1: androidx.core.provider.SelfDestructiveThread$2 this$1
com.appspa.update.R$styleable: int AppCompatSeekBar_tickMarkTint
com.appspa.demo.R$id: int always
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: io.reactivex.Observer downstream
androidx.fragment.R$integer: int status_bar_notification_info_maxnum
androidx.viewpager.R$attr: int fontProviderQuery
androidx.fragment.app.DialogFragment: java.lang.String SAVED_CANCELABLE
androidx.appcompat.R$attr: int title
io.reactivex.internal.operators.flowable.FlowableSamplePublisher: org.reactivestreams.Publisher other
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: long serialVersionUID
com.appspa.demo.R$string: int service_api_key
com.zhy.http.okhttp.callback.FileCallBack$1: long val$finalSum
com.appspa.demo.R$style: int Base_Theme_AppCompat
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_MIDDLE
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: io.reactivex.functions.Function keySelector
com.appspa.demo.R$attr: int suggestionRowLayout
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: io.reactivex.functions.Function mapper
com.xuexiang.xhttp2.R$styleable: int MenuItem_showAsAction
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray
androidx.fragment.app.Fragment: int mContainerId
androidx.appcompat.R$attr: int background
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: boolean done
androidx.core.widget.TextViewCompat: java.lang.String LOG_TAG
com.xuexiang.xhttp2.request.BaseRequest: java.lang.String mBaseUrl
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable: io.reactivex.functions.Function mapper
com.xuexiang.xhttp2.request.BaseBodyRequest: byte[] mBytes
androidx.viewpager.R$dimen: int compat_button_padding_horizontal_material
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: io.reactivex.functions.Function zipper
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_panelMenuListTheme
okhttp3.FormBody$Builder: java.util.List names
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: org.reactivestreams.Subscription upstream
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA
com.xuexiang.xhttp2.cache.RxCache: android.content.Context context
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowStart
androidx.appcompat.R$styleable: int SearchView_queryBackground
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: io.reactivex.Scheduler scheduler
androidx.appcompat.R$attr: int windowFixedWidthMinor
io.reactivex.internal.operators.flowable.FlowableObserveOn: io.reactivex.Scheduler scheduler
androidx.appcompat.resources.R$styleable: int GradientColorItem_android_offset
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicInteger windows
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: java.lang.Throwable error
com.appspa.update.R$attr: int actionBarPopupTheme
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: io.reactivex.internal.util.AtomicThrowable error
androidx.appcompat.widget.ActivityChooserView: android.database.DataSetObserver mModelDataSetObserver
androidx.viewpager.R$dimen: int notification_content_margin_start
io.reactivex.internal.operators.completable.CompletableConcatArray: io.reactivex.CompletableSource[] sources
androidx.fragment.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.versionedparcelable.VersionedParcelStream: int TYPE_SUB_BUNDLE
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: org.reactivestreams.Subscriber downstream
androidx.customview.widget.ViewDragHelper: float[] mLastMotionY
androidx.loader.content.AsyncTaskLoader: boolean DEBUG
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: org.reactivestreams.Publisher boundary
androidx.appcompat.widget.DropDownListView: java.lang.reflect.Field mIsChildViewEnabled
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_CAR_EXTENDER
com.appspa.demo.R$styleable: int Toolbar_buttonGravity
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: io.reactivex.functions.Function selector
io.reactivex.internal.operators.maybe.MaybeFromFuture: java.util.concurrent.Future future
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: io.reactivex.functions.Function valueSelector
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.view.menu.MenuBuilder menu
com.appspa.demo.R$attr: int arrowShaftLength
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: io.reactivex.functions.BiConsumer collector
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_EXIT
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
io.reactivex.subjects.UnicastSubject: java.util.concurrent.atomic.AtomicReference downstream
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: io.reactivex.SingleObserver downstream
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: java.util.WeakHashMap mPanesToVisible
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: long id
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: long emitted
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter elementTypeAdapter
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_2
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable: long time
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.appspa.demo.R$style: int Base_Widget_AppCompat_ProgressBar
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: java.util.concurrent.BlockingQueue buf
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: boolean delayErrors
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView
com.appspa.update.R$style: int Base_V26_Theme_AppCompat
androidx.appcompat.widget.SearchView: android.view.View mDropDownAnchor
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions
androidx.core.view.OneShotPreDrawListener: android.view.View mView
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: long serialVersionUID
org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: java.lang.reflect.Method baseMethod
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_RatingBar
com.appspa.update.R$attr: int lineHeight
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.appcompat.widget.ActionMenuView: int mGeneratedItemPadding
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: androidx.cursoradapter.widget.CursorAdapter this$0
androidx.appcompat.view.SupportMenuInflater$MenuState: android.content.res.ColorStateList itemIconTintList
okhttp3.internal.ws.WebSocketWriter: okio.Buffer buffer
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: java.util.concurrent.atomic.AtomicInteger active
com.appspa.demo.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.appspa.update.R$drawable: int abc_ic_go_search_api_material
com.appspa.update.R$id: int action_divider
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: long serialVersionUID
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter LOCALE
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: java.util.concurrent.Callable bufferSupplier
com.appspa.demo.R$id: int custom
com.appspa.demo.R$attr: int tooltipForegroundColor
io.reactivex.internal.operators.completable.CompletableDelay$Delay: java.util.concurrent.TimeUnit unit
androidx.appcompat.view.menu.MenuItemImpl: boolean mIsActionViewExpanded
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_popupWindowStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CURRENCY
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.ListAdapter mListAdapter
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError: java.lang.Throwable throwable
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: io.reactivex.Observer downstream
androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition
androidx.core.R$style: int TextAppearance_Compat_Notification_Title
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: io.reactivex.functions.Predicate predicate
com.xuexiang.xhttp2.R$attr: int gapBetweenBars
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: io.reactivex.SingleObserver downstream
okhttp3.Dispatcher: java.util.Deque readyAsyncCalls
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_HIGH
okhttp3.internal.http.RealResponseBody: long contentLength
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: int index
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_28
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: float[] mTempPts
com.appspa.demo.R$styleable: int StateListDrawable_android_variablePadding
androidx.appcompat.widget.PopupMenu$1: androidx.appcompat.widget.PopupMenu this$0
io.reactivex.internal.observers.BasicFuseableObserver: int sourceMode
com.zhy.http.okhttp.callback.FileCallBack$1: int val$id
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: java.util.concurrent.atomic.AtomicInteger done
androidx.core.R$attr: int fontStyle
com.xuexiang.xhttp2.R$attr: int actionBarSplitStyle
androidx.appcompat.R$styleable: int GradientColorItem_android_color
com.appspa.update.R$drawable: int abc_seekbar_tick_mark_material
androidx.core.R$dimen: int compat_button_inset_horizontal_material
com.appspa.update.R$dimen: int abc_text_size_menu_material
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: boolean val$clearPrevious
io.reactivex.internal.operators.flowable.FlowableTake: long limit
com.appspa.demo.R$layout: int abc_alert_dialog_title_material
com.appspa.update.R$styleable: int AppCompatTheme_actionBarWidgetTheme
androidx.fragment.app.FragmentManagerImpl$4: android.view.View val$viewToAnimate
androidx.appcompat.widget.AppCompatTextHelper: android.widget.TextView mView
io.reactivex.internal.schedulers.ScheduledRunnable: int THREAD_INDEX
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor
androidx.appcompat.view.SupportMenuInflater$MenuState: int defaultItemCheckable
com.appspa.demo.R$id: int notification_main_column_container
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTheme
com.appspa.demo.R$styleable: int GradientColorItem_android_color
androidx.activity.R$layout: int notification_template_custom_big
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: long serialVersionUID
androidx.appcompat.widget.SearchView: java.lang.CharSequence mDefaultQueryHint
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
io.reactivex.internal.operators.flowable.FlowableElementAtSingle: java.lang.Object defaultValue
com.appspa.update.R$layout: int select_dialog_multichoice_material
retrofit2.DefaultCallAdapterFactory$1: java.lang.reflect.Type val$responseType
com.xuexiang.xhttp2.R$color: int abc_tint_seek_thumb
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter JSON_ELEMENT
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: io.reactivex.Observer downstream
io.reactivex.internal.subscribers.StrictSubscriber: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: java.lang.reflect.Method ensureImeVisible
androidx.fragment.R$id: int accessibility_custom_action_5
androidx.viewpager.widget.ViewPager: float mLastMotionX
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMinor
okhttp3.internal.cache2.Relay: long upstreamPos
okio.AsyncTimeout$2: okio.AsyncTimeout this$0
okio.Timeout: boolean hasDeadline
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_buttonBarButtonStyle
io.reactivex.internal.util.NotificationLite$SubscriptionNotification: long serialVersionUID
androidx.appcompat.R$dimen: int hint_alpha_material_dark
com.appspa.demo.R$styleable: int ActionMenuItemView_android_minWidth
com.xuexiang.xhttp2.R$styleable: int ActionBar_background
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: org.reactivestreams.Subscription upstream
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$attr: int titleMarginStart
androidx.appcompat.widget.AppCompatSpinner: int MODE_THEME
androidx.appcompat.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters
io.reactivex.processors.AsyncProcessor$AsyncSubscription: long serialVersionUID
androidx.appcompat.R$styleable: int MenuItem_android_titleCondensed
androidx.core.graphics.TypefaceCompatUtil: java.lang.String TAG
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_editTextStyle
androidx.core.app.NotificationCompat: java.lang.String EXTRA_INFO_TEXT
androidx.savedstate.SavedStateRegistry: android.os.Bundle mRestoredState
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: java.util.concurrent.TimeUnit unit
androidx.appcompat.view.menu.MenuItemImpl: int NO_ICON
com.appspa.update.R$layout: int abc_screen_content_include
androidx.core.view.inputmethod.EditorInfoCompat: int IME_FLAG_FORCE_ASCII
io.reactivex.processors.MulticastProcessor: java.util.concurrent.atomic.AtomicReference upstream
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealConnection connection
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION
androidx.core.view.ViewCompat: int LAYER_TYPE_NONE
com.appspa.demo.R$styleable: int Toolbar_titleMarginStart
com.appspa.update.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax INSTANCE
androidx.loader.R$styleable: int[] FontFamilyFont
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray mCapturedKeys
androidx.vectordrawable.animated.R$id: int dialog_button
io.reactivex.internal.schedulers.InstantPeriodicTask: java.util.concurrent.FutureTask CANCELLED
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: long index
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: io.reactivex.functions.Function mapper
com.appspa.update.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: int index
androidx.core.R$dimen: int notification_large_icon_width
com.appspa.demo.R$dimen: int abc_action_bar_subtitle_top_margin_material
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: io.reactivex.processors.UnicastProcessor window
io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber: io.reactivex.functions.Predicate predicate
androidx.appcompat.widget.ShareActionProvider: android.content.Context mContext
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator: java.util.concurrent.atomic.AtomicInteger winner
io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription: long serialVersionUID
androidx.drawerlayout.R$drawable: int notification_bg_low
org.aspectj.internal.lang.reflect.DeclareSoftImpl: org.aspectj.lang.reflect.PointcutExpression pointcut
com.xuexiang.xhttp2.R$id: int src_atop
io.reactivex.exceptions.CompositeException: long serialVersionUID
androidx.core.app.JobIntentService$JobWorkEnqueuer: android.app.job.JobScheduler mJobScheduler
androidx.viewpager.widget.ViewPager: int MIN_FLING_VELOCITY
androidx.customview.widget.ExploreByTouchHelper: android.view.View mHost
androidx.lifecycle.LiveData: int mVersion
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate
com.appspa.demo.R$drawable: int notification_bg_low_pressed
com.xuexiang.xhttp2.R$layout: int abc_popup_menu_header_item_layout
com.appspa.demo.entity.CustomResult$VersionInfo: com.appspa.demo.entity.CustomResult$PatchInfo patchInfo
io.reactivex.internal.operators.single.SingleFromUnsafeSource: io.reactivex.SingleSource source
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: int fusionMode
com.appspa.update.R$styleable: int MenuGroup_android_id
com.appspa.demo.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl this$0
io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable: io.reactivex.Scheduler scheduler
androidx.core.view.ViewConfigurationCompat: java.lang.String TAG
io.reactivex.subjects.ReplaySubject$ReplayDisposable: io.reactivex.Observer downstream
com.appspa.demo.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.appspa.demo.R$styleable: int AppCompatSeekBar_android_thumb
androidx.appcompat.view.menu.ListMenuItemView: int mTextAppearance
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicReference error
androidx.core.view.MotionEventCompat: int AXIS_RELATIVE_Y
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets
com.appspa.update._AppSpace: java.util.Map sWaitRunnableMap
androidx.versionedparcelable.VersionedParcelStream: int TYPE_STRING
androidx.core.widget.AutoScrollHelper: float DEFAULT_RELATIVE_EDGE
com.appspa.demo.R$id: int title_template
com.xuexiang.xhttp2.R$dimen: int abc_text_size_body_2_material
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.String FONT_FAMILY_CLASS
androidx.fragment.app.FragmentPagerAdapter: int mBehavior
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton
io.reactivex.subjects.AsyncSubject: java.lang.Throwable error
androidx.appcompat.R$id: int home
androidx.core.app.NotificationCompat$Action$WearableExtender: int DEFAULT_FLAGS
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.Advice[] advice
com.appspa.update.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.zhy.http.okhttp.request.OkHttpRequest: java.util.Map params
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
io.reactivex.internal.operators.flowable.FlowableReplay$ConnectableFlowableReplay: io.reactivex.Flowable flowable
com.xuexiang.xhttp2.R$attr: int switchPadding
com.appspa.demo.R$drawable: int spa_bg_app_info
com.appspa.demo.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.drawerlayout.R$drawable: int notification_bg_normal
androidx.core.app.NotificationCompat: int FLAG_LOCAL_ONLY
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber second
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
androidx.viewpager.widget.PagerTabStrip: int mTabPadding
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat_Light
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.activity.R$styleable: int GradientColor_android_type
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: boolean done
androidx.core.app.JobIntentService: java.util.ArrayList mCompatQueue
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsLongLived
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: int bufferSize
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.xuexiang.xhttp2.annotation.ThreadType: java.lang.String TO_IO
com.appspa.update.R$style: int Widget_AppCompat_Light_ActivityChooserView
androidx.core.widget.NestedScrollView: int mLastScrollerY
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: int prefetch
com.appspa.update.R$dimen: int notification_right_icon_size
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_tileMode
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
com.appspa.demo.R$styleable: int GradientColor_android_endY
com.appspa.update.R$styleable: int AppCompatTextView_textAllCaps
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaX
com.xuexiang.xhttp2.R$dimen: int disabled_alpha_material_dark
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_BACKWARD
com.appspa.update.R$style: int Widget_AppCompat_Light_SearchView
com.appspa.demo.R$attr: int searchIcon
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_android_orientation
com.appspa.demo.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlHighlight
okhttp3.internal.Util: okio.ByteString UTF_16_LE_BOM
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
okhttp3.internal.http2.Http2Connection: long degradedPingsSent
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$attr: int panelBackground
androidx.core.provider.FontsContractCompat: int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: int produced
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNeutralButtonText
androidx.appcompat.R$color: int switch_thumb_material_dark
androidx.appcompat.R$attr: int spinnerStyle
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: java.lang.Object key
androidx.appcompat.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
com.xuexiang.xhttp2.R$styleable: int SearchView_queryHint
io.reactivex.internal.subscriptions.SubscriptionArbiter: boolean cancelOnReplace
com.google.gson.internal.bind.TypeAdapters$31: com.google.gson.TypeAdapter val$typeAdapter
com.appspa.update.R$string: int space_error_check_updating
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver: java.lang.Object value
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: boolean active
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
androidx.appcompat.R$dimen: int abc_control_inset_material
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: long emitted
com.xuexiang.xhttp2.R$attr: int actionModePasteDrawable
com.appspa.update.R$attr: int ratingBarStyleSmall
io.reactivex.internal.subscriptions.DeferredScalarSubscription: java.lang.Object value
retrofit2.HttpException: retrofit2.Response response
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: java.util.concurrent.atomic.AtomicLong requested
com.xuexiang.xhttp2.R$id: int split_action_bar
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector: io.reactivex.ObservableSource open
io.reactivex.internal.operators.flowable.FlowableRetryPredicate: io.reactivex.functions.Predicate predicate
com.appspa.update.R$id: int tag_transition_group
com.appspa.update.R$dimen: int tooltip_precise_anchor_extra_offset
androidx.appcompat.R$string: int search_menu_title
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_fontVariationSettings
com.appspa.demo.R$styleable: int RecycleListView_paddingBottomNoButtons
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: boolean disposed
androidx.appcompat.app.ActionBar$Tab: int INVALID_POSITION
io.reactivex.internal.operators.flowable.FlowableSampleTimed: io.reactivex.Scheduler scheduler
androidx.fragment.app.FragmentTransaction: boolean mAddToBackStack
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: boolean done
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle: io.reactivex.SingleSource other
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.core.view.ActionProvider$VisibilityListener mListener
androidx.appcompat.widget.AppCompatSpinner: int MODE_DIALOG
com.appspa.demo.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.xuexiang.xhttp2.request.BaseRequest: boolean mKeepJson
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary: java.util.concurrent.Callable bufferSupplier
io.reactivex.internal.functions.Functions$ArrayListCapacityCallable: int capacity
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: io.reactivex.processors.ReplayProcessor$TimedNode tail
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME
com.appspa.demo.R$styleable: int ActionBar_indeterminateProgressStyle
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemShowAsAction
com.xuexiang.xhttp2.R$dimen: int abc_button_inset_vertical_material
com.appspa.update.R$styleable: int MenuGroup_android_menuCategory
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
androidx.appcompat.widget.ActionMenuPresenter: int mWidthLimit
androidx.appcompat.app.ResourcesFlusher: boolean sResourcesImplFieldFetched
androidx.appcompat.R$dimen: int abc_control_corner_material
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: io.reactivex.functions.Function itemTimeoutIndicator
androidx.appcompat.R$attr: int contentInsetRight
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: java.util.concurrent.Callable bufferSupplier
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: long serialVersionUID
com.xuexiang.xhttp2.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
androidx.vectordrawable.R$id: int line3
com.appspa.update.R$styleable: int StateListDrawable_android_enterFadeDuration
okio.ByteString: long serialVersionUID
com.appspa.update.R$attr: int editTextBackground
androidx.fragment.app.FragmentTransitionCompat21$2: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.vectordrawable.R$id: int accessibility_custom_action_5
androidx.fragment.app.DialogFragment: java.lang.String SAVED_SHOWS_DIALOG
androidx.core.app.NotificationCompat$Action$WearableExtender: int mFlags
androidx.appcompat.R$styleable: int AppCompatTheme_radioButtonStyle
androidx.core.text.BidiFormatter: java.lang.String RLM_STRING
com.xuexiang.xhttp2.R$style: int Base_ThemeOverlay_AppCompat_Dialog
io.reactivex.internal.subscribers.BoundedSubscriber: int consumed
com.xuexiang.xhttp2.R$id: int search_button
io.reactivex.observers.ResourceCompletableObserver: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.demo.R$attr: int thumbTextPadding
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: boolean isNextConsumed
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
com.appspa.demo.R$styleable: int DrawerArrowToggle_arrowShaftLength
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$styleable: int[] AppCompatTheme
com.google.gson.internal.bind.TypeAdapters$35: com.google.gson.TypeAdapter val$typeAdapter
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver
androidx.loader.R$id: int right_side
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: org.reactivestreams.Subscriber downstream
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int LINEJOIN_MITER
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy[] $VALUES
com.appspa.update.R$drawable: int abc_ic_clear_material
androidx.appcompat.R$styleable: int SearchView_queryHint
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
com.appspa.demo.R$style: int Base_V7_Widget_AppCompat_EditText
androidx.appcompat.app.ActionBarDrawerToggle: boolean mHasCustomUpIndicator
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.single.SingleDoAfterSuccess: io.reactivex.SingleSource source
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_text_color
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_UNMUTE
com.xuexiang.xhttp2.R$attr: int colorControlNormal
androidx.fragment.R$dimen: int compat_button_padding_vertical_material
com.appspa.update.R$dimen: int tooltip_precise_anchor_threshold
com.appspa.demo.R$drawable: int abc_list_selector_background_transition_holo_dark
androidx.appcompat.widget.ThemeUtils: int[] FOCUSED_STATE_SET
com.appspa.demo.R$dimen: int compat_button_inset_vertical_material
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: io.reactivex.SingleObserver downstream
com.xuexiang.xhttp2.R$id: int submit_area
com.appspa.update.R$attr: int popupWindowStyle
com.appspa.demo.R$attr: int activityChooserViewStyle
com.appspa.update.R$id: int accessibility_custom_action_6
androidx.appcompat.R$dimen: int abc_switch_padding
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCachedAutoMirrored
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: io.reactivex.ObservableSource sampler
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingRight
androidx.loader.R$drawable: int notification_tile_bg
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE_INTEROP
androidx.appcompat.R$attr: int switchStyle
androidx.appcompat.widget.SuggestionsAdapter: int mCommitIconResId
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mGroupDivider
com.appspa.demo.R$attr: int initialActivityCount
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory LOCALE_FACTORY
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: boolean done
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int paddingTopNoTitle
com.appspa.demo.R$styleable: int AppCompatTextHelper_android_textAppearance
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: io.reactivex.disposables.Disposable upstream
androidx.lifecycle.LiveData: java.lang.Object mDataLock
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: boolean empty
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: boolean outputFused
androidx.core.app.Person: java.lang.String URI_KEY
androidx.core.widget.NestedScrollView: int ANIMATED_SCROLL_GAP
androidx.appcompat.R$attr: int colorAccent
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe: boolean delayErrors
io.reactivex.internal.operators.flowable.FlowableJoin: org.reactivestreams.Publisher other
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_BIG_PICTURE_AMBIENT
com.xuexiang.xhttp2.R$drawable: int abc_ic_star_half_black_16dp
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: boolean done
androidx.core.app.JobIntentService$CompatWorkEnqueuer: boolean mServiceProcessing
androidx.appcompat.R$attr: int navigationContentDescription
androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: long remaining
com.appspa.demo.R$dimen: int abc_action_bar_default_padding_start_material
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$1: com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3 this$1
com.appspa.update.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.appspa.update.R$style: int Base_AlertDialog_AppCompat_Light
androidx.activity.R$id: int tag_accessibility_clickable_spans
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: retrofit2.BuiltInConverters$BufferingResponseBodyConverter INSTANCE
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_RatingBar_Small
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_checkboxStyle
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: boolean val$jsonAdapterPresent
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL
androidx.core.app.NavUtils: java.lang.String PARENT_ACTIVITY
androidx.core.view.InputDeviceCompat: int SOURCE_DPAD
com.appspa.demo.utils.SettingSPUtils: com.appspa.demo.utils.SettingSPUtils sInstance
com.appspa.update.R$style: int Widget_AppCompat_ListView_DropDown
com.appspa.demo.R$color: int abc_tint_edittext
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$InnerObserver: io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver this$0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
androidx.drawerlayout.R$attr: int ttcIndex
io.reactivex.subscribers.SerializedSubscriber: boolean emitting
androidx.appcompat.content.res.AppCompatResources: java.lang.String LOG_TAG
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$1: com.xuexiang.xhttp2.subsciber.DownloadSubscriber this$0
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
io.reactivex.internal.operators.single.SingleCache: io.reactivex.internal.operators.single.SingleCache$CacheDisposable[] TERMINATED
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: long serialVersionUID
androidx.appcompat.R$style: int TextAppearance_AppCompat_Small
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: long time
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_homeAsUpIndicator
okhttp3.internal.Util: java.lang.reflect.Method addSuppressedExceptionMethod
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$CompatJobEngine mJobImpl
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.versionedparcelable.VersionedParcel: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: java.util.concurrent.TimeUnit unit
androidx.appcompat.app.AlertController: android.os.Message mButtonPositiveMessage
okhttp3.Cache$2: java.util.Iterator delegate
okhttp3.Cache$2: boolean canRemove
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast: long serialVersionUID
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorCompat this$0
com.xuexiang.xhttp2.R$dimen: int abc_text_size_menu_material
com.xuexiang.xhttp2.R$drawable: int abc_ic_ab_back_material
com.appspa.demo.R$attr: int subtitle
io.reactivex.internal.operators.single.SingleContains$ContainsSingleObserver: io.reactivex.SingleObserver downstream
androidx.customview.R$dimen: int notification_large_icon_width
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
androidx.vectordrawable.R$id: int accessibility_custom_action_29
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: io.reactivex.Observer downstream
androidx.vectordrawable.R$drawable: int notification_bg_normal_pressed
com.appspa.update.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionBar_TabText
com.google.gson.stream.JsonReader: int NUMBER_CHAR_FRACTION_DIGIT
com.appspa.update.R$style: int Base_ThemeOverlay_AppCompat
androidx.core.provider.FontRequest: java.lang.String mIdentifier
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask: io.reactivex.disposables.CompositeDisposable set
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: io.reactivex.functions.Predicate predicate
androidx.core.provider.FontRequest: java.util.List mCertificates
io.reactivex.internal.operators.observable.ObservableLift: io.reactivex.ObservableOperator operator
io.reactivex.internal.operators.parallel.ParallelFlatMap: int prefetch
com.zhy.http.okhttp.request.OkHttpRequest: java.lang.Object tag
androidx.core.app.Person: java.lang.String NAME_KEY
com.appspa.update.R$attr: int windowFixedHeightMinor
androidx.appcompat.widget.ListPopupWindow: int EXPAND_LIST_TIMEOUT
androidx.loader.R$styleable: int GradientColorItem_android_offset
io.reactivex.internal.subscribers.BasicFuseableSubscriber: io.reactivex.internal.fuseable.QueueSubscription qs
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: boolean isLeft
androidx.core.text.util.FindAddress: java.lang.String NL
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: java.lang.String LOGTAG
androidx.core.content.FileProvider: java.lang.String META_DATA_FILE_PROVIDER_PATHS
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int FUSED_READY
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: long produced
androidx.viewpager.R$style: int TextAppearance_Compat_Notification
com.appspa.demo.R$styleable: int StateListDrawableItem_android_drawable
com.appspa.update.R$styleable: int ActionBar_backgroundSplit
com.zhy.http.okhttp.OkHttpUtils$3: java.lang.Object val$object
androidx.appcompat.widget.ActionBarBackgroundDrawable: androidx.appcompat.widget.ActionBarContainer mContainer
com.appspa.update.R$color: int material_grey_800
com.appspa.demo.R$styleable: int AppCompatTextHelper_android_drawableStart
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: io.reactivex.functions.Function nextFunction
androidx.appcompat.R$attr: int controlBackground
com.xuexiang.xhttp2.R$dimen: int abc_text_size_display_4_material
com.xuexiang.xhttp2.R$id: int group_divider
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: android.content.ComponentName activity
androidx.appcompat.view.menu.ListMenuItemView: android.widget.RadioButton mRadioButton
com.xuexiang.xhttp2.XHttpRequestPool: java.util.concurrent.ConcurrentHashMap maps
androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs
androidx.customview.R$dimen: int compat_notification_large_icon_max_height
androidx.appcompat.R$style: int Theme_AppCompat
androidx.appcompat.resources.R$drawable: int notification_action_background
com.appspa.update.R$style: int Base_Widget_AppCompat_PopupMenu
com.xuexiang.xhttp2.R$attr: int hideOnContentScroll
androidx.viewpager.R$id: int icon
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
androidx.vectordrawable.animated.R$dimen: int notification_top_pad_large_text
androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_WEB_URL
androidx.appcompat.R$attr: int actionMenuTextAppearance
io.reactivex.internal.operators.observable.ObservableTimeoutTimed: io.reactivex.ObservableSource other
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: boolean cancelled
com.google.gson.internal.ConstructorConstructor$12: com.google.gson.internal.ConstructorConstructor this$0
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: boolean emitting
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber first
androidx.appcompat.view.menu.BaseMenuPresenter: int mItemLayoutRes
com.appspa.update.R$color: int material_blue_grey_900
okhttp3.RealCall: okhttp3.internal.http.RetryAndFollowUpInterceptor retryAndFollowUpInterceptor
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription: org.reactivestreams.Subscriber downstream
androidx.activity.R$id: int notification_background
com.appspa.demo.R$drawable: int abc_scrubber_control_off_mtrl_alpha
com.appspa.demo.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
com.appspa.demo.R$attr: int lastBaselineToBottomHeight
com.appspa.demo.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: int STATE_ACTIVE
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTintMode
com.appspa.demo.R$styleable: int AppCompatTheme_seekBarStyle
com.xuexiang.xhttp2.R$string: int abc_action_mode_done
com.appspa.update.R$attr: int gapBetweenBars
com.appspa.update.R$styleable: int AppCompatTheme_imageButtonStyle
com.appspa.update.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: int limit
androidx.core.app.NotificationCompat$Builder: java.lang.String mCategory
androidx.core.R$attr: int fontProviderCerts
com.appspa.demo.R$layout: int select_dialog_item_material
com.appspa.update.R$color: int accent_material_dark
com.jakewharton.disklrucache.DiskLruCache$Snapshot: long sequenceNumber
com.appspa.demo.R$style: int Platform_Widget_AppCompat_Spinner
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope SUBCLASSES
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_SIGN
androidx.appcompat.R$drawable: int abc_list_selector_disabled_holo_light
com.xuexiang.xhttp2.R$layout: int abc_action_mode_close_item_material
androidx.appcompat.R$dimen: int compat_button_padding_horizontal_material
androidx.core.util.PatternsCompat: java.lang.String IRI_LABEL
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: long serialVersionUID
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService listenerExecutor
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: long serialVersionUID
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: io.reactivex.Observer downstream
io.reactivex.schedulers.TestScheduler$TimedRunnable: io.reactivex.schedulers.TestScheduler$TestWorker scheduler
androidx.vectordrawable.animated.R$id: int action_container
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: io.reactivex.internal.util.AtomicThrowable errors
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_Toolbar
io.reactivex.internal.observers.ConsumerSingleObserver: io.reactivex.functions.Consumer onSuccess
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: long count
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: long serialVersionUID
okhttp3.Cache: int requestCount
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mInvisibleActions
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.update.R$anim: int abc_tooltip_exit
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.app.ActivityOptions mActivityOptions
androidx.drawerlayout.widget.DrawerLayout: int STATE_IDLE
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.functions.Functions$NaturalComparator: io.reactivex.internal.functions.Functions$NaturalComparator INSTANCE
com.appspa.update.widget.BaseDialog$1: com.appspa.update.widget.BaseDialog this$0
com.appspa.demo.R$style: int Widget_AppCompat_ActionButton
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.InternalCache cache
androidx.fragment.app.Fragment: java.lang.String mTargetWho
com.appspa.demo.R$styleable: int GradientColorItem_android_offset
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Stream val$newStream
retrofit2.OkHttpCall: okhttp3.Call$Factory callFactory
io.reactivex.internal.operators.observable.ObservableInterval: long period
com.xuexiang.xhttp2.R$attr: int commitIcon
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$styleable: int MenuGroup_android_orderInCategory
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$drawable: int tooltip_frame_light
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: io.reactivex.internal.util.AtomicThrowable errors
androidx.core.util.Pools$SimplePool: java.lang.Object[] mPool
androidx.fragment.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.R$styleable: int[] MenuView
okhttp3.internal.Util: java.nio.charset.Charset UTF_16_LE
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
androidx.appcompat.R$style: int Theme_AppCompat_Light_DialogWhenLarge
androidx.fragment.R$dimen: int notification_action_icon_size
okio.Pipe: long maxBufferSize
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable: io.reactivex.functions.Function mapper
androidx.fragment.app.FragmentActivity: java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: org.reactivestreams.Subscriber downstream
io.reactivex.internal.subscriptions.AsyncSubscription: java.util.concurrent.atomic.AtomicReference resource
io.reactivex.internal.operators.parallel.ParallelRunOn$MultiWorkerCallback: io.reactivex.internal.operators.parallel.ParallelRunOn this$0
androidx.fragment.R$id: int accessibility_custom_action_29
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle
com.appspa.demo.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_text_visibility
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence mInProgressLabel
com.appspa.demo.R$color: int abc_primary_text_material_light
androidx.core.app.JobIntentService$CompatWorkEnqueuer: android.os.PowerManager$WakeLock mLaunchWakeLock
com.appspa.update.R$styleable: int AppCompatTheme_textAppearanceListItem
androidx.fragment.R$drawable: int notification_action_background
io.reactivex.internal.operators.maybe.MaybeDelay: io.reactivex.Scheduler scheduler
androidx.appcompat.R$drawable: int abc_list_pressed_holo_light
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT
io.reactivex.internal.operators.observable.ObservableRefCount: io.reactivex.observables.ConnectableObservable source
com.google.gson.internal.LinkedTreeMap: int modCount
com.xuexiang.xhttp2.R$dimen: int abc_panel_menu_list_width
com.xuexiang.xhttp2.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.appspa.update.R$styleable: int MenuItem_actionProviderClass
com.appspa.update.R$style: int TextAppearance_Compat_Notification
com.appspa.update.R$styleable: int AppCompatTextView_autoSizePresetSizes
androidx.fragment.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AlertController$AlertParams: android.view.LayoutInflater mInflater
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: androidx.appcompat.widget.ListPopupWindow this$0
io.reactivex.internal.operators.flowable.FlowableNever: io.reactivex.Flowable INSTANCE
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: boolean async
com.appspa.demo.R$styleable: int Toolbar_contentInsetStartWithNavigation
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: java.util.concurrent.atomic.AtomicReference inner
com.appspa.update.R$styleable: int AppCompatTheme_checkboxStyle
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: io.reactivex.SingleObserver downstream
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_CONTENT_LENGTH
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.activity.R$drawable: int notification_action_background
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: long serialVersionUID
androidx.core.provider.SelfDestructiveThread$2: android.os.Handler val$callingHandler
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: io.reactivex.Scheduler$Worker worker
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarPopupTheme
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState
androidx.collection.MapCollections$ArrayIterator: int mSize
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.xuexiang.xhttp2.R$drawable: int abc_dialog_material_background
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnCancelListener mOnCancelListener
androidx.appcompat.R$drawable: int abc_ic_star_black_36dp
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: java.lang.Throwable error
io.reactivex.internal.operators.completable.CompletableDelay: io.reactivex.Scheduler scheduler
com.appspa.demo.R$style: int Base_Widget_AppCompat_ListPopupWindow
okhttp3.internal.http.StatusLine: java.lang.String message
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Small
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String HINT_TEXT_KEY
androidx.cursoradapter.widget.CursorAdapter: android.widget.FilterQueryProvider mFilterQueryProvider
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.appspa.update.R$attr: int switchPadding
com.zhy.http.okhttp.OkHttpUtils: com.zhy.http.okhttp.OkHttpUtils mInstance
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_notify
com.xuexiang.xhttp2.R$color: int abc_secondary_text_material_light
androidx.appcompat.resources.R$attr: int fontStyle
androidx.vectordrawable.animated.R$dimen: int notification_action_text_size
com.appspa.demo.R$string: int abc_menu_enter_shortcut_label
com.xuexiang.xhttp2.R$drawable: int abc_list_divider_material
com.xuexiang.xhttp2.logs.HttpLog: java.lang.String sTag
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOWS_CHANGED
org.aspectj.runtime.reflect.CatchClauseSignatureImpl: java.lang.Class parameterType
okhttp3.ConnectionSpec$Builder: boolean tls
com.appspa.update.R$style: int Widget_AppCompat_Spinner
com.appspa.demo.R$dimen: int tooltip_precise_anchor_threshold
okhttp3.internal.http2.Http2Codec: okhttp3.internal.connection.StreamAllocation streamAllocation
com.appspa.demo.R$styleable: int[] FontFamily
androidx.appcompat.widget.Toolbar$LayoutParams: int EXPANDED
androidx.appcompat.view.menu.ExpandedMenuView: int[] TINT_ATTRS
androidx.appcompat.R$styleable: int AppCompatTheme_actionMenuTextAppearance
org.aspectj.lang.reflect.NoSuchAdviceException: long serialVersionUID
androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_Z
com.xuexiang.xhttp2.R$attr: int height
com.appspa.update.R$layout: int notification_template_icon_group
com.xuexiang.xhttp2.R$styleable: int ActionBar_contentInsetStartWithNavigation
androidx.appcompat.R$styleable: int[] ActivityChooserView
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon1
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.appcompat.app.AppCompatDelegateImpl this$0
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: java.util.concurrent.atomic.AtomicReference current
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNegativeButtonText
androidx.appcompat.resources.R$id: int accessibility_custom_action_30
androidx.core.R$style: int TextAppearance_Compat_Notification_Info
com.appspa.demo.R$dimen: int tooltip_corner_radius
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.collection.ArraySet: int CACHE_SIZE
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.xuexiang.xhttp2.R$attr: int navigationMode
com.appspa.update.R$drawable: int abc_ic_star_black_48dp
io.reactivex.internal.operators.flowable.FlowableReplay$Node: long serialVersionUID
com.xuexiang.xhttp2.R$id: int tag_accessibility_heading
com.appspa.demo.R$attr: int actionBarItemBackground
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_ACCESSIBILITY
io.reactivex.internal.operators.completable.CompletableDoOnEvent$DoOnEvent: io.reactivex.CompletableObserver observer
com.appspa.demo.R$style: int Theme_AppCompat_DialogWhenLarge
com.xuexiang.xhttp2.R$attr: int colorButtonNormal
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.widget.SearchView$6: androidx.appcompat.widget.SearchView this$0
com.appspa.update.R$dimen: int compat_control_corner_material
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$CompletionTask: io.reactivex.subjects.UnicastSubject w
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: androidx.appcompat.widget.ListPopupWindow this$0
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_CONTENT_ENCODING
com.appspa.demo.R$dimen: int abc_text_size_menu_header_material
androidx.appcompat.widget.AppCompatSpinner: int mDropDownWidth
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
io.reactivex.processors.ReplayProcessor$ReplaySubscription: io.reactivex.processors.ReplayProcessor state
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind PERCFLOW
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Class mViewCommandArgumentClass
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: boolean outputFused
androidx.fragment.R$id: int accessibility_custom_action_13
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$dimen: int notification_subtext_size
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ELEMENT_ITEM
androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle
com.appspa.update.R$styleable: int AlertDialog_android_layout
com.appspa.demo.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: int gravity
com.appspa.demo.R$styleable: int MenuGroup_android_visible
com.appspa.demo.R$styleable: int SwitchCompat_thumbTintMode
okio.Base64: byte[] URL_MAP
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_TITLE
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: boolean delayError
okhttp3.internal.http2.Http2Connection$1: okhttp3.internal.http2.ErrorCode val$errorCode
androidx.lifecycle.ViewModel: boolean mCleared
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop
io.reactivex.internal.schedulers.IoScheduler: java.util.concurrent.atomic.AtomicReference pool
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked
io.reactivex.internal.operators.flowable.FlowableTakeLast: int count
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: java.util.ArrayList mAnimators
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: org.reactivestreams.Subscription upstream
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_WITH_TEXT
com.xuexiang.xhttp2.R$attr: int textAppearanceSmallPopupMenu
com.appspa.update.R$styleable: int AppCompatTheme_actionBarPopupTheme
androidx.viewpager.R$styleable: int GradientColor_android_startY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.lifecycle.LiveData$AlwaysActiveObserver: androidx.lifecycle.LiveData this$0
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.graphics.drawable.IconCompat mIcon
io.reactivex.internal.operators.maybe.MaybeContains: java.lang.Object value
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SUMMARY_TEXT
androidx.appcompat.resources.R$attr: int fontProviderCerts
androidx.appcompat.graphics.drawable.DrawableContainer: boolean DEBUG
androidx.drawerlayout.R$id: int text
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitle
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader
com.appspa.demo.R$id: int group_divider
io.reactivex.internal.operators.flowable.FlowableDelay: java.util.concurrent.TimeUnit unit
com.appspa.update.R$attr: int listItemLayout
io.reactivex.internal.operators.observable.ObservableFlatMapSingle: boolean delayErrors
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: io.reactivex.disposables.Disposable disposable
com.xuexiang.xhttp2.R$styleable: int MenuItem_contentDescription
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: androidx.drawerlayout.widget.DrawerLayout this$0
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: androidx.appcompat.widget.ScrollingTabContainerView this$0
io.reactivex.internal.operators.flowable.FlowableAnySingle: io.reactivex.Flowable source
com.appspa.demo.R$styleable: int MenuItem_android_orderInCategory
androidx.core.view.MotionEventCompat: int AXIS_TOOL_MAJOR
com.appspa.update.R$style: int Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.widget.ActivityChooserView$3: androidx.appcompat.widget.ActivityChooserView this$0
com.appspa.update.R$color: int abc_secondary_text_material_dark
com.jakewharton.disklrucache.DiskLruCache$Editor: com.jakewharton.disklrucache.DiskLruCache this$0
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: long uniqueId
io.reactivex.internal.subscriptions.SubscriptionArbiter: java.util.concurrent.atomic.AtomicLong missedProduced
androidx.fragment.app.FragmentTransitionImpl$1: androidx.fragment.app.FragmentTransitionImpl this$0
com.appspa.demo.entity.CustomResult$PatchInfo: java.lang.String downloadUrl
androidx.appcompat.R$attr: int subtitleTextStyle
androidx.core.util.PatternsCompat: java.lang.String PORT_NUMBER
androidx.appcompat.R$attr: int drawableRightCompat
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: long serialVersionUID
androidx.appcompat.R$styleable: int SwitchCompat_android_thumb
com.appspa.update.R$string: int space_lab_ignore
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: java.util.concurrent.atomic.AtomicLong index
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
com.appspa.update.UpdateManager$Builder: boolean isAutoMode
com.appspa.update.R$styleable: int FontFamilyFont_android_fontStyle
com.appspa.update.R$id: int icon
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_POINTER
androidx.appcompat.widget.ScrollingTabContainerView: java.lang.Runnable mTabSelector
androidx.appcompat.R$attr: int actionModeCopyDrawable
androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved
com.xuexiang.xhttp2.R$styleable: int CompoundButton_buttonTintMode
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: androidx.appcompat.widget.ActivityChooserModel mDataModel
androidx.appcompat.view.SupportMenuInflater: java.lang.String XML_GROUP
androidx.appcompat.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
androidx.viewpager.R$dimen: int notification_small_icon_background_padding
com.appspa.update.R$styleable: int[] SearchView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: int prefetch
com.xuexiang.xhttp2.R$string: int abc_capital_on
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_endColor
androidx.vectordrawable.R$layout: int notification_template_part_time
io.reactivex.internal.operators.flowable.FlowableConcatMapEager: int maxConcurrency
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_LIST
com.appspa.demo.R$drawable: int ic_launcher_foreground
androidx.loader.R$id: int notification_background
com.xuexiang.xhttp2.R$dimen: int abc_disabled_alpha_material_light
okhttp3.Address: java.util.List connectionSpecs
com.xuexiang.xhttp2.cache.RxCache$2: long val$time
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: io.reactivex.functions.Predicate predicate
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_android_textOff
androidx.core.view.MotionEventCompat: int AXIS_TILT
com.xuexiang.xhttp2.R$attr: int imageButtonStyle
com.appspa.demo.R$styleable: int SwitchCompat_switchTextAppearance
com.appspa.update.R$styleable: int AppCompatImageView_android_src
okio.Segment: int limit
com.xuexiang.xhttp2.R$styleable: int[] DrawerArrowToggle
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.appspa.update.R$attr: int menu
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_APPEARED
androidx.viewpager.R$styleable: int GradientColorItem_android_offset
com.appspa.update.R$style: int Platform_V25_AppCompat_Light
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: boolean allowFatal
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription parent
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
io.reactivex.internal.operators.flowable.FlowableJust: java.lang.Object value
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater
androidx.appcompat.app.TwilightManager: java.lang.String TAG
com.appspa.update.R$drawable: int tooltip_frame_dark
androidx.appcompat.R$styleable: int SearchView_commitIcon
com.xuexiang.xhttp2.R$color: int abc_search_url_text_normal
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: java.util.Map rights
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
androidx.collection.MapCollections$MapIterator: int mIndex
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: io.reactivex.subscribers.TestSubscriber$EmptySubscriber INSTANCE
androidx.fragment.R$id: int line3
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable: io.reactivex.Flowable source
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
com.appspa.demo.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.appspa.update.R$dimen: int abc_edit_text_inset_bottom_material
org.aspectj.lang.reflect.DeclareAnnotation$Kind: org.aspectj.lang.reflect.DeclareAnnotation$Kind Field
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mLabelColumn
com.appspa.update.R$styleable: int AppCompatTheme_editTextBackground
androidx.appcompat.R$styleable: int[] RecycleListView
com.appspa.update.R$dimen: int abc_button_padding_horizontal_material
com.xuexiang.xhttp2.R$dimen: int abc_seekbar_track_background_height_material
retrofit2.adapter.rxjava2.RxJava2CallAdapter: io.reactivex.Scheduler scheduler
androidx.vectordrawable.R$dimen: int notification_top_pad_large_text
androidx.customview.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.appspa.demo.R$styleable: int ActionBar_progressBarPadding
com.xuexiang.xhttp2.R$dimen: int notification_main_column_padding_top
androidx.fragment.R$dimen: int compat_button_padding_horizontal_material
androidx.appcompat.R$drawable: int notification_tile_bg
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
com.xuexiang.xhttp2.R$string: int abc_searchview_description_search
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
androidx.appcompat.app.AlertController$AlertParams: androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_15
retrofit2.RequestFactory$Builder: java.util.Set relativeUrlParamNames
androidx.appcompat.R$style: int Widget_AppCompat_SeekBar_Discrete
androidx.appcompat.R$layout: int abc_search_view
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_6
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: okhttp3.HttpUrl mHttpUrl
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeCloseDrawable
androidx.appcompat.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: long idx
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_RatingBar_Indicator
com.google.gson.Gson: boolean DEFAULT_JSON_NON_EXECUTABLE
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: boolean timerFired
com.google.gson.stream.JsonReader: java.lang.String peekedString
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_1
androidx.appcompat.R$id: int info
io.reactivex.internal.operators.flowable.BlockingFlowableLatest: org.reactivestreams.Publisher source
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: long count
retrofit2.OkHttpCall$1: retrofit2.Callback val$callback
com.appspa.demo.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
androidx.vectordrawable.animated.R$dimen: int notification_subtext_size
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_HEIGHT
androidx.appcompat.R$style: int Widget_AppCompat_ListView_DropDown
androidx.appcompat.R$styleable: int AppCompatTheme_seekBarStyle
com.zhy.http.okhttp.OkHttpUtils$1: int val$id
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle: org.reactivestreams.Publisher source
androidx.core.R$id: int accessibility_custom_action_27
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.xuexiang.xhttp2.R$styleable: int MenuItem_iconTintMode
androidx.appcompat.R$style: int Theme_AppCompat_Dialog_MinWidth
com.appspa.demo.R$styleable: int AnimatedStateListDrawableItem_android_id
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: long end
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: long serialVersionUID
androidx.appcompat.resources.R$id: int info
io.reactivex.internal.operators.single.SingleMap$MapSingleObserver: io.reactivex.SingleObserver t
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: long serialVersionUID
com.appspa.update.R$styleable: int MenuGroup_android_visible
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarSize
okio.Pipe: boolean sinkClosed
com.google.gson.internal.ConstructorConstructor$1: com.google.gson.internal.ConstructorConstructor this$0
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: int otherState
io.reactivex.observers.BaseTestConsumer: int establishedFusionMode
androidx.appcompat.R$attr: int windowFixedHeightMinor
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: long timespan
com.xuexiang.xhttp2.R$styleable: int TextAppearance_fontVariationSettings
androidx.appcompat.widget.ActivityChooserModel: boolean mReloadActivities
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog_Alert
androidx.customview.R$drawable: int notification_icon_background
com.appspa.update.R$styleable: int AppCompatTextView_fontFamily
androidx.core.provider.FontsContractCompat$4$7: int val$resultCode
okhttp3.internal.ws.RealWebSocket: int sentPingCount
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonDeserializer deserializer
retrofit2.OptionalConverterFactory$OptionalConverter: retrofit2.Converter delegate
com.xuexiang.xhttp2.R$style: int Animation_AppCompat_Tooltip
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: io.reactivex.CompletableSource source
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionMenuTextColor
com.appspa.demo.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
com.appspa.update.R$dimen: int abc_list_item_height_large_material
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int VALUE_TYPE_UNDEFINED
com.appspa.demo.R$styleable: int AlertDialog_showTitle
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_14
androidx.appcompat.view.menu.ListMenuPresenter: android.view.LayoutInflater mInflater
com.appspa.update.entity.UpdateError$ERROR: int PROMPT_ACTIVITY_DESTROY
androidx.core.app.RemoteInput: android.os.Bundle mExtras
com.appspa.update.R$color: int foreground_material_dark
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver inner
io.reactivex.internal.operators.observable.ObservableSkipLastTimed: java.util.concurrent.TimeUnit unit
com.appspa.update.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
io.reactivex.internal.operators.parallel.ParallelFlatMap: boolean delayError
androidx.appcompat.R$attr: int backgroundStacked
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
io.reactivex.internal.operators.maybe.MaybeDelay: long delay
io.reactivex.processors.MulticastProcessor: int consumed
com.xuexiang.xhttp2.R$dimen: int hint_alpha_material_light
androidx.fragment.app.FragmentTransitionImpl$3: java.util.Map val$nameOverrides
androidx.drawerlayout.R$styleable: int[] GradientColorItem
androidx.appcompat.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.appspa.demo.R$color: int ripple_material_dark
okhttp3.internal.http2.Http2Connection: boolean client
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: long emitted
com.appspa.demo.R$drawable: int abc_spinner_textfield_background_material
com.appspa.update.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.xuexiang.xhttp2.R$drawable: int abc_tab_indicator_material
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: boolean done
androidx.appcompat.R$id: int tabMode
androidx.appcompat.R$styleable: int Toolbar_contentInsetRight
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: java.lang.Object[] values
androidx.core.view.ViewPropertyAnimatorCompat: int LISTENER_TAG_ID
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.ActionMode$Callback mCallback
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
com.xuexiang.xhttp2.R$attr: int colorPrimaryDark
androidx.appcompat.resources.R$id: int accessibility_custom_action_20
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_SHOWING_HINT
okhttp3.internal.platform.Jdk9Platform: java.lang.reflect.Method getProtocolMethod
com.appspa.update.R$id: int accessibility_custom_action_15
com.appspa.update.R$styleable: int TextAppearance_android_shadowDy
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mTitleView
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: java.lang.Throwable error
com.appspa.update.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.loader.R$color: int notification_icon_bg_color
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.String DEFAULT_FAMILY
androidx.core.R$drawable: int notification_bg_normal
com.xuexiang.xhttp2.R$styleable: int MenuItem_actionViewClass
androidx.appcompat.app.AlertController$AlertParams: int mCheckedItem
androidx.core.provider.FontsContractCompat$4: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
androidx.appcompat.widget.SearchView: boolean mQueryRefinement
androidx.savedstate.SavedStateRegistry: boolean mAllowingSavingState
androidx.appcompat.widget.SearchView: boolean mClearingFocus
androidx.appcompat.R$layout: int abc_alert_dialog_title_material
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl: java.lang.Class[] upper
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: io.reactivex.disposables.Disposable upstream
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState
androidx.appcompat.R$attr: int colorControlHighlight
com.appspa.demo.R$string: int abc_activity_chooser_view_see_all
androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: long time
androidx.activity.R$attr: int fontStyle
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
com.appspa.demo.R$dimen: int notification_large_icon_height
com.google.gson.internal.bind.TimeTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
androidx.appcompat.R$attr: int toolbarStyle
com.google.gson.internal.bind.JsonTreeReader: int[] pathIndices
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: boolean cancelled
androidx.fragment.R$dimen: int compat_notification_large_icon_max_height
androidx.appcompat.view.menu.StandardMenuPopup: boolean mOverflowOnly
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_fontStyle
com.google.gson.internal.ConstructorConstructor$13: com.google.gson.internal.ConstructorConstructor this$0
com.appspa.demo.R$attr: int hideOnContentScroll
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Button
io.reactivex.subjects.SingleSubject: io.reactivex.subjects.SingleSubject$SingleDisposable[] EMPTY
io.reactivex.subscribers.TestSubscriber: java.util.concurrent.atomic.AtomicLong missedRequested
com.appspa.demo.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
io.reactivex.internal.operators.observable.ObservableGenerate: io.reactivex.functions.Consumer disposeState
androidx.drawerlayout.R$drawable: int notification_icon_background
com.xuexiang.xhttp2.request.BaseRequest$6: com.xuexiang.xhttp2.request.BaseRequest this$0
androidx.appcompat.R$drawable: int notification_bg
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: io.reactivex.SingleObserver downstream
androidx.loader.content.CursorLoader: java.lang.String mSortOrder
io.reactivex.internal.operators.observable.ObservableWithLatestFrom: io.reactivex.functions.BiFunction combiner
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_ACCESSIBILITY_FOCUS
androidx.fragment.R$dimen: int notification_large_icon_height
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe: io.reactivex.MaybeSource other
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_dialogPreferredPadding
androidx.core.widget.TextViewCompat: boolean sMinimumFieldFetched
androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled
com.appspa.update.R$style: int Base_Widget_AppCompat_ListPopupWindow
com.xuexiang.xhttp2.R$id: int search_plate
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: io.reactivex.internal.disposables.ArrayCompositeDisposable frc
io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object DONE
okio.ByteString: java.lang.String utf8
com.appspa.update.R$color: int abc_input_method_navigation_guard
io.reactivex.internal.operators.flowable.FlowableSequenceEqual: int prefetch
androidx.appcompat.app.ToolbarActionBar: android.view.Window$Callback mWindowCallback
com.appspa.demo.R$attr: int switchMinWidth
androidx.fragment.app.Fragment: int INITIALIZING
io.reactivex.internal.operators.completable.CompletablePeek: io.reactivex.CompletableSource source
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: io.reactivex.internal.operators.observable.ObservableSkipUntil this$0
com.xuexiang.xhttp2.cookie.SerializableOkHttpCookies: okhttp3.Cookie clientCookies
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.vectordrawable.R$id: int async
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_Solid
androidx.viewpager.R$color: int secondary_text_default_material_light
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.loader.R$styleable: int[] GradientColorItem
androidx.appcompat.view.menu.MenuItemImpl: int EXCLUSIVE
androidx.appcompat.R$id: int accessibility_custom_action_7
com.appspa.demo.http.OKHttpUpdateHttpService: boolean mIsPostJson
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: java.lang.Throwable error
com.appspa.demo.R$id: int accessibility_custom_action_31
io.reactivex.internal.operators.flowable.FlowableConcatMap: io.reactivex.internal.util.ErrorMode errorMode
androidx.core.graphics.drawable.IconCompat: float BLUR_FACTOR
androidx.appcompat.R$id: int multiply
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: boolean delayErrors
androidx.appcompat.R$style: int Base_V23_Theme_AppCompat_Light
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
androidx.appcompat.R$dimen: int abc_action_bar_content_inset_material
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: io.reactivex.disposables.Disposable ds
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver
com.appspa.demo.R$styleable: int AppCompatTheme_colorButtonNormal
com.appspa.demo.R$xml: int update_file_paths
io.reactivex.internal.operators.flowable.FlowableElementAt: java.lang.Object defaultValue
com.zhy.http.okhttp.request.PostFileRequest$1: com.zhy.http.okhttp.request.PostFileRequest this$0
org.aspectj.runtime.reflect.StringMaker: int cacheOffset
com.appspa.demo.R$drawable: int abc_action_bar_item_background_material
androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha
androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList
androidx.core.R$styleable: int GradientColor_android_endY
com.xuexiang.xhttp2.R$anim: int abc_slide_out_bottom
androidx.vectordrawable.animated.R$id: int tag_unhandled_key_listeners
androidx.customview.R$dimen: int notification_top_pad
com.appspa.update.R$style: int Base_Widget_AppCompat_TextView
androidx.core.widget.AutoScrollHelper: int DEFAULT_RAMP_DOWN_DURATION
com.appspa.demo.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.appcompat.R$id: int src_atop
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNeutralText
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBuffer buffer
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: java.util.concurrent.atomic.AtomicReferenceArray values
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_SUBTREE
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ELEMENT_TRANSITION
com.google.gson.Gson: com.google.gson.internal.ConstructorConstructor constructorConstructor
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: int bufferSize
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String KEY_IN_PROGRESS_LABEL
com.appspa.demo.R$layout: int notification_template_custom_big
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button
androidx.core.app.FrameMetricsAggregator: androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl mInstance
com.appspa.demo.R$layout: int notification_template_part_chronometer
androidx.appcompat.app.AppCompatDelegateImpl: java.util.Map sLocalNightModes
com.appspa.update.R$layout: int support_simple_spinner_dropdown_item
com.appspa.update.R$string: int space_error_check_no_wifi
androidx.appcompat.text.AllCapsTransformationMethod: java.util.Locale mLocale
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderPackage
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
io.reactivex.observers.BaseTestConsumer: boolean checkSubscriptionOnce
androidx.appcompat.resources.R$dimen: int notification_small_icon_background_padding
io.reactivex.internal.operators.flowable.FlowableRefCount: io.reactivex.Scheduler scheduler
com.appspa.update.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInBiggerTapRegion
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$styleable: int MenuGroup_android_enabled
com.xuexiang.xhttp2.R$styleable: int ColorStateListItem_android_color
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$attr: int color
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode
androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_QUEUE_TASK
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: long unique
com.xuexiang.xhttp2.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.xuexiang.xhttp2.R$attr: int drawableSize
com.appspa.update.UpdateManager: com.appspa.update.entity.UpdateEntity mUpdateEntity
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
androidx.viewpager.widget.PagerTitleStrip: float SIDE_ALPHA
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: io.reactivex.processors.ReplayProcessor$Node tail
androidx.appcompat.R$styleable: int SearchView_searchIcon
io.reactivex.internal.operators.completable.CompletableConcat: org.reactivestreams.Publisher sources
com.appspa.update.R$styleable: int ActionMode_height
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_cancelAll
androidx.activity.R$dimen: int notification_right_icon_size
io.reactivex.internal.functions.Functions: java.util.Comparator NATURAL_COMPARATOR
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO
com.appspa.update.R$styleable: int FontFamilyFont_android_font
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRightResolved
com.xuexiang.xhttp2.R$attr: int windowNoTitle
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: java.lang.String TARGET
okhttp3.OkHttpClient: java.net.Proxy proxy
androidx.activity.R$styleable: int FontFamily_fontProviderAuthority
com.appspa.demo.R$drawable: int abc_list_pressed_holo_dark
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_DayNight
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: java.util.concurrent.atomic.AtomicReference observers
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: boolean outputFused
com.xuexiang.xhttp2.R$attr: int listPreferredItemPaddingLeft
io.reactivex.internal.operators.observable.ObservableDebounceTimed: java.util.concurrent.TimeUnit unit
com.xuexiang.xhttp2.R$attr: int fontProviderFetchTimeout
androidx.core.R$dimen: int notification_content_margin_start
androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.appspa.demo.R$anim: int abc_tooltip_exit
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
androidx.drawerlayout.R$id: int time
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle: io.reactivex.internal.util.ErrorMode errorMode
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: boolean won
androidx.appcompat.R$dimen: int abc_text_size_menu_header_material
com.appspa.demo.R$styleable: int Spinner_android_dropDownWidth
io.reactivex.internal.schedulers.NewThreadWorker: java.util.concurrent.ScheduledExecutorService executor
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: io.reactivex.functions.BiFunction resultSelector
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: io.reactivex.internal.util.AtomicThrowable errors
androidx.customview.R$styleable: int[] GradientColor
retrofit2.ParameterHandler$HeaderMap: retrofit2.Converter valueConverter
com.appspa.demo.R$string: int status_bar_notification_info_overflow
androidx.core.graphics.drawable.IconCompat: java.lang.String TAG
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CALENDAR
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: java.util.concurrent.TimeUnit unit
com.appspa.update.R$color: int abc_tint_edittext
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
com.appspa.demo.R$attr: int dropdownListPreferredItemHeight
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: java.lang.String mParticipant
retrofit2.ParameterHandler$2: retrofit2.ParameterHandler this$0
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.widget.AppCompatBackgroundHelper: int mBackgroundResId
com.google.gson.stream.JsonReader: boolean lenient
androidx.core.view.PointerIconCompat: int TYPE_HELP
retrofit2.BuiltInConverters$VoidResponseBodyConverter: retrofit2.BuiltInConverters$VoidResponseBodyConverter INSTANCE
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: io.reactivex.internal.util.AtomicThrowable errors
com.appspa.update.R$attr: int homeAsUpIndicator
androidx.customview.R$style: int TextAppearance_Compat_Notification
androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaxModeField
io.reactivex.internal.operators.flowable.FlowableSingle: boolean failOnEmpty
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeShareDrawable
androidx.viewpager.R$drawable: int notification_template_icon_bg
com.appspa.update.UpdateManager$Builder: com.appspa.update.service.OnFileDownloadListener onFileDownloadListener
io.reactivex.internal.observers.DeferredScalarDisposable: io.reactivex.Observer downstream
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mEnded
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: io.reactivex.internal.queue.MpscLinkedQueue queue
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.ByteArrayOutputStream mOutput
com.xuexiang.xhttp2.R$attr: int alertDialogTheme
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.internal.util.AtomicThrowable errors
com.xuexiang.xhttp2.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.appcompat.widget.SearchView$3: androidx.appcompat.widget.SearchView this$0
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer: io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber this$0
okhttp3.internal.http2.Hpack$Writer: int headerCount
com.appspa.demo.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
okio.Pipe$PipeSink: okio.Pipe this$0
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: io.reactivex.Scheduler scheduler
androidx.appcompat.R$attr: int subtitleTextColor
androidx.fragment.R$styleable: int FontFamilyFont_android_font
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.core.text.BidiFormatter$Builder: int mFlags
com.appspa.demo.R$string: int space_lab_background_update
com.appspa.update.R$styleable: int[] ListPopupWindow
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
okhttp3.internal.ws.RealWebSocket: java.util.concurrent.ScheduledExecutorService executor
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: int index
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.single.SingleDoOnError$DoOnError: io.reactivex.internal.operators.single.SingleDoOnError this$0
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: io.reactivex.SingleObserver downstream
androidx.core.R$attr: int fontProviderPackage
okhttp3.internal.connection.RealConnection: int allocationLimit
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: boolean outputFused
retrofit2.RequestFactory: java.lang.String relativeUrl
io.reactivex.internal.operators.single.SingleMap: io.reactivex.SingleSource source
com.appspa.update.R$styleable: int AppCompatTheme_buttonBarStyle
com.google.gson.internal.bind.TypeAdapters$36: int[] $SwitchMap$com$google$gson$stream$JsonToken
androidx.appcompat.R$styleable: int MenuGroup_android_checkableBehavior
androidx.appcompat.view.menu.MenuBuilder: int[] sCategoryToOrder
okio.AsyncTimeout$2: okio.Source val$source
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: org.reactivestreams.Subscription upstream
androidx.core.graphics.PaintCompat: java.lang.String EM_STRING
androidx.appcompat.R$id: int action_menu_presenter
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: int mTrackingFlags
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar_TabView
androidx.fragment.R$id: int forever
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: long serialVersionUID
com.appspa.update.R$style: int TextAppearance_AppCompat_SearchResult_Title
androidx.appcompat.R$attr: int actionModeCloseButtonStyle
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$id: int checked
io.reactivex.internal.disposables.ListCompositeDisposable: boolean disposed
okhttp3.HttpUrl$Builder: java.lang.String scheme
androidx.viewpager.R$dimen: int notification_subtext_size
com.appspa.update.R$anim: int abc_slide_out_bottom
com.appspa.demo.R$style: int TextAppearance_Compat_Notification_Title
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String BOOLEAN_PROPERTY_KEY
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.animation.AnimatorSet mAnimatorSet
androidx.appcompat.R$id: int action_bar_container
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: long emitted
io.reactivex.subjects.SingleSubject: java.util.concurrent.atomic.AtomicBoolean once
io.reactivex.internal.operators.observable.ObservableJust: java.lang.Object value
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: io.reactivex.MaybeObserver downstream
com.appspa.demo.R$attr: int contentDescription
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.observable.ObservableSingleMaybe: io.reactivex.ObservableSource source
com.appspa.update.R$string: int abc_searchview_description_clear
com.xuexiang.xhttp2.R$dimen: int hint_pressed_alpha_material_light
org.aspectj.runtime.internal.cflowstack.ThreadStackImpl11: java.util.Hashtable stacks
androidx.appcompat.R$id: int custom
retrofit2.ParameterHandler$Part: retrofit2.Converter converter
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
androidx.appcompat.R$id: int search_mag_icon
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: int prefetch
com.appspa.update.R$styleable: int TextAppearance_android_textSize
androidx.appcompat.widget.RtlSpacingHelper: int UNDEFINED
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: boolean isNextConsumed
com.appspa.demo.R$attr: int backgroundSplit
com.xuexiang.xhttp2.R$attr: int actionLayout
com.appspa.demo.R$color: int material_blue_grey_800
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber first
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: java.lang.Throwable error
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: boolean cancelled
androidx.appcompat.R$styleable: int MenuView_android_horizontalDivider
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mMaxCutForBarSize
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: java.util.Queue sources
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: boolean cancelled
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_reached_color
androidx.core.widget.ContentLoadingProgressBar$1: androidx.core.widget.ContentLoadingProgressBar this$0
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: androidx.appcompat.widget.ActionMenuPresenter this$0
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.update.R$style: int XUpdate_ProgressBar_Red
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.appspa.demo.R$style: int Theme_AppCompat_Light_Dialog
com.appspa.update.R$styleable: int ActionBar_navigationMode
com.appspa.update.R$styleable: int CompoundButton_buttonCompat
com.appspa.update.R$styleable: int AppCompatTheme_editTextStyle
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_MESSAGES
com.appspa.update.R$styleable: int TextAppearance_android_textColorHint
androidx.core.R$styleable: int ColorStateListItem_android_color
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_SORT_KEY
io.reactivex.internal.subscribers.FutureSubscriber: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryOpenSubscriber: io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber parent
com.appspa.update.utils.FileUtils: java.lang.String EXT_DOWNLOADS_PATH
com.xuexiang.xhttp2.R$attr: int actionModeCloseButtonStyle
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber boundarySubscriber
androidx.core.app.RemoteInput$Builder: java.util.Set mAllowedDataTypes
io.reactivex.internal.operators.observable.ObservableGroupBy$State: boolean delayError
androidx.customview.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.internal.operators.observable.ObservableCache$Node: java.lang.Object[] values
androidx.fragment.R$id: int text2
androidx.appcompat.R$drawable: int abc_ratingbar_material
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: int OTHER_STATE_CONSUMED_OR_EMPTY
io.reactivex.internal.operators.flowable.FlowableGroupBy: boolean delayError
androidx.appcompat.widget.SearchView: int[] mTemp
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier: int capacityHint
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type rawType
io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object PARENT_DISPOSED
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: long serialVersionUID
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: java.util.ArrayList mActionModes
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1
com.appspa.update.R$attr: int alertDialogButtonGroupStyle
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: io.reactivex.functions.Consumer onNext
okhttp3.internal.Util$2: java.lang.String val$name
io.reactivex.internal.operators.completable.CompletableDoFinally: io.reactivex.functions.Action onFinally
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.InterTypeConstructorDeclaration[] itdCons
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.drawerlayout.R$styleable: int FontFamilyFont_ttcIndex
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_fontStyle
androidx.activity.R$attr: int fontProviderFetchStrategy
androidx.core.provider.FontsContractCompat$FontInfo: int mWeight
androidx.appcompat.R$styleable: int AppCompatTextView_android_textAppearance
com.xuexiang.xhttp2.R$attr: int listLayout
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: long timespan
androidx.core.content.res.ComplexColorCompat: int mColor
androidx.core.view.ViewPropertyAnimatorCompat$2: android.view.View val$view
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources mResources
androidx.appcompat.R$attr: int actionBarSize
androidx.appcompat.R$style: int Widget_AppCompat_Button_Borderless_Colored
okhttp3.HttpUrl: java.lang.String url
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat
com.appspa.update.R$style: int Theme_AppCompat_DayNight_Dialog
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_30
androidx.cursoradapter.widget.CursorAdapter: int FLAG_REGISTER_CONTENT_OBSERVER
androidx.drawerlayout.R$id: int action_divider
androidx.drawerlayout.R$string: int status_bar_notification_info_overflow
androidx.loader.R$attr: int fontStyle
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: boolean cancelled
androidx.core.view.MotionEventCompat: int ACTION_SCROLL
androidx.fragment.R$color: int notification_action_color_filter
androidx.appcompat.widget.PopupMenu: android.view.View$OnTouchListener mDragListener
androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.LiveData mLiveData
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActivityChooserView
androidx.activity.R$id: int accessibility_custom_action_23
androidx.appcompat.R$styleable: int ViewBackgroundHelper_android_background
com.xuexiang.xhttp2.R$id: int async
androidx.drawerlayout.widget.DrawerLayout: int[] THEME_ATTRS
io.reactivex.internal.operators.observable.ObservableSkipLastTimed: long time
com.appspa.update.R$color: int space_content_text_color
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: com.google.gson.JsonSerializer serializer
com.appspa.update.R$styleable: int CompoundButton_buttonTintMode
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy LATEST
io.reactivex.internal.operators.single.SingleHide: io.reactivex.SingleSource source
com.appspa.update.R$color: int notification_action_color_filter
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.appspa.demo.R$styleable: int[] SearchView
com.xuexiang.xhttp2.R$styleable: int StateListDrawable_android_visible
com.appspa.update.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.vectordrawable.R$dimen: int notification_right_side_padding_top
com.xuexiang.xhttp2.R$bool: int abc_allow_stacked_button_bar
com.appspa.demo.R$color: int accent_material_light
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Style mStyle
io.reactivex.internal.operators.observable.ObservableWindow: long skip
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: boolean cancelled
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable: io.reactivex.MaybeSource source
com.xuexiang.xhttp2.R$id: int submenuarrow
androidx.appcompat.view.menu.ActionMenuItem: int mOrdering
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.util.Map rights
androidx.appcompat.R$drawable: int abc_list_longpressed_holo
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$drawable: int tooltip_frame_dark
androidx.viewpager.R$attr: int fontProviderCerts
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
androidx.customview.widget.ViewDragHelper: int mPointersDown
androidx.appcompat.widget.ActionBarContainer: boolean mIsTransitioning
io.reactivex.internal.operators.flowable.FlowableTimer: io.reactivex.Scheduler scheduler
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Class unsafeClass
com.xuexiang.xhttp2.request.BaseBodyRequest: com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType mUploadType
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: java.util.Map buffers
io.reactivex.internal.operators.completable.CompletableDisposeOn: io.reactivex.CompletableSource source
com.appspa.demo.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextDirectionHeuristic mTextDir
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.appspa.update.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
androidx.loader.content.CursorLoader: java.lang.String[] mProjection
com.appspa.demo.R$attr: int srcCompat
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: long serialVersionUID
com.appspa.demo.R$styleable: int SearchView_commitIcon
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: long serialVersionUID
com.appspa.demo.R$attr: int font
com.appspa.demo.R$attr: int contentInsetStartWithNavigation
com.appspa.demo.R$attr: int paddingBottomNoButtons
androidx.appcompat.resources.R$id: int accessibility_custom_action_5
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: java.lang.Object currentlyRecreatingToken
com.appspa.update.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.fragment.R$layout: int notification_template_icon_group
androidx.appcompat.R$color: int material_deep_teal_500
com.appspa.update.R$attr: int color
androidx.core.view.GravityCompat: int END
androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat_DayNight
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableSkipLastTimed: int bufferSize
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: boolean emitLast
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitLeft
io.reactivex.internal.operators.flowable.FlowablePublishMulticast: io.reactivex.functions.Function selector
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices
com.appspa.update.R$style: int ThemeOverlay_AppCompat
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: io.reactivex.functions.Function mapper
com.xuexiang.xhttp2.R$styleable: int SearchView_android_focusable
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView
org.aspectj.internal.lang.reflect.DeclareSoftImpl: java.lang.String missingTypeName
io.reactivex.processors.UnicastProcessor: java.util.concurrent.atomic.AtomicReference downstream
com.appspa.demo.R$attr: int state_above_anchor
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher: int bufferSize
androidx.appcompat.R$drawable: int tooltip_frame_dark
io.reactivex.internal.functions.Functions$ToMapKeyValueSelector: io.reactivex.functions.Function valueSelector
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mImageTint
androidx.fragment.R$dimen: int notification_top_pad_large_text
io.reactivex.internal.operators.observable.ObservableDoFinally: io.reactivex.functions.Action onFinally
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.appspa.update.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver: long serialVersionUID
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: io.reactivex.internal.util.AtomicThrowable error
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged: io.reactivex.functions.BiPredicate comparer
io.reactivex.internal.functions.Functions$NotificationOnError: io.reactivex.functions.Consumer onNotification
androidx.drawerlayout.R$dimen: int notification_right_side_padding_top
androidx.appcompat.R$attr: int radioButtonStyle
com.xuexiang.xhttp2.R$styleable: int Toolbar_collapseIcon
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.view.View mHostView
androidx.fragment.app.ListFragment: android.widget.AdapterView$OnItemClickListener mOnClickListener
androidx.core.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Button
com.appspa.update.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
androidx.appcompat.widget.ActionBarContainer: boolean mIsStacked
androidx.appcompat.R$attr: int alertDialogTheme
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: long delay
io.reactivex.subscribers.SerializedSubscriber: boolean done
com.appspa.demo.R$style: int Base_Widget_AppCompat_ListView_Menu
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStartTime
com.xuexiang.xhttp2.https.HttpsUtils$MyTrustManager: javax.net.ssl.X509TrustManager defaultTrustManager
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver this$0
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: io.reactivex.MaybeSource fallback
androidx.drawerlayout.R$id: int action_container
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
io.reactivex.internal.operators.maybe.MaybeEqualSingle: io.reactivex.MaybeSource source2
com.xuexiang.xhttp2.R$color: int button_material_dark
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.flowable.FlowableAutoConnect: io.reactivex.functions.Consumer connection
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling[] $VALUES
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: long serialVersionUID
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation
androidx.appcompat.R$layout: int abc_list_menu_item_checkbox
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean DBG_VECTOR_DRAWABLE
com.xuexiang.xhttp2.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
androidx.viewpager.R$styleable: int FontFamily_fontProviderAuthority
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] mAutoSizeTextSizesInPx
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: java.lang.Object value
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver parent
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind PERTYPEWITHIN
com.appspa.update.R$dimen: int abc_dialog_fixed_height_major
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList mIconTintList
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: org.reactivestreams.Subscription upstream
androidx.core.app.NotificationCompat$Action: boolean mAllowGeneratedReplies
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
com.appspa.update.R$styleable: int SearchView_layout
org.aspectj.lang.reflect.DeclareAnnotation$Kind: org.aspectj.lang.reflect.DeclareAnnotation$Kind Type
com.appspa.update.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
androidx.core.R$styleable: int FontFamily_fontProviderFetchStrategy
com.xuexiang.xhttp2.R$style: int Base_V7_Widget_AppCompat_Toolbar
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: boolean mainDone
com.appspa.update.R$string: int space_tip_permissions_reject
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: java.lang.Integer RIGHT_CLOSE
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar
androidx.appcompat.R$attr: int closeItemLayout
com.appspa.demo.R$attr: int ttcIndex
androidx.appcompat.app.WindowDecorActionBar: java.lang.String TAG
com.xuexiang.xhttp2.R$styleable: int StateListDrawableItem_android_drawable
androidx.core.app.RemoteInput: java.lang.String EXTRA_RESULTS_DATA
io.reactivex.internal.operators.flowable.FlowableRefCount: int n
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: long lastTime
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_WIDTH
io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent: io.reactivex.internal.operators.single.SingleDoOnEvent this$0
com.appspa.update.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.appspa.update.R$attr: int drawableTint
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.fragment.app.Fragment: int mFragmentId
com.xuexiang.xhttp2.R$string: int abc_menu_shift_shortcut_label
androidx.lifecycle.Transformations$2: androidx.lifecycle.MediatorLiveData val$result
androidx.core.text.util.FindAddress: java.util.regex.Pattern sHouseNumberRe
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.util.List protocols
androidx.loader.R$id: int forever
com.appspa.demo.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: boolean done
com.appspa.demo.R$style: int Theme_AppCompat_Light
com.appspa.demo.R$id: int edit_query
androidx.core.app.NotificationCompat$WearableExtender: int mContentActionIndex
androidx.vectordrawable.R$attr: int fontStyle
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: long serialVersionUID
com.appspa.update.R$id: int right_icon
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: long produced
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_panelMenuListWidth
com.xuexiang.xhttp2.R$anim: int abc_tooltip_exit
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean DBG_ANIMATOR_INFLATER
com.appspa.update.entity.UpdateEntity: boolean mIsSilent
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_LINE
androidx.appcompat.app.AlertController$AlertParams: int mIconId
io.reactivex.internal.disposables.SequentialDisposable: long serialVersionUID
androidx.vectordrawable.R$id: int action_container
androidx.loader.R$attr: int fontVariationSettings
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempParentRect
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition
com.appspa.demo.R$dimen: int abc_dropdownitem_icon_width
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityViewCommand mCommand
androidx.appcompat.R$color: int background_floating_material_light
androidx.fragment.app.Fragment: java.lang.String mTag
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsets
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarItemBackground
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String packageName
com.xuexiang.xhttp2.XHttpProxy: java.lang.String mThreadType
androidx.appcompat.widget.DrawableUtils: java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME
androidx.appcompat.resources.R$drawable: int notification_bg
androidx.appcompat.R$layout: int abc_action_menu_item_layout
androidx.vectordrawable.R$drawable: int notification_template_icon_low_bg
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: io.reactivex.internal.operators.completable.CompletablePeek this$0
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int backgroundSplit
com.appspa.demo.R$styleable: int[] Toolbar
io.reactivex.internal.functions.Functions$NaturalComparator: io.reactivex.internal.functions.Functions$NaturalComparator[] $VALUES
com.appspa.update.R$attr: int xnpb_reached_bar_height
androidx.appcompat.R$attr: int preserveIconSpacing
com.appspa.update.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
androidx.appcompat.R$attr: int alpha
androidx.appcompat.R$string: int abc_action_bar_home_description
com.appspa.update.R$id: int tag_accessibility_pane_title
com.appspa.demo.R$color: int primary_dark_material_dark
okhttp3.internal.http2.Http2Stream$FramingSink: boolean $assertionsDisabled
com.appspa.demo.R$drawable: int abc_edit_text_material
androidx.appcompat.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
androidx.appcompat.widget.DropDownListView: androidx.core.widget.ListViewAutoScrollHelper mScrollHelper
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: io.reactivex.functions.Function mapper
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_TEXT
androidx.appcompat.R$styleable: int SearchView_android_focusable
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_REMOTE_INPUTS
com.appspa.demo.R$drawable: int abc_ic_search_api_material
com.appspa.update.R$color: int switch_thumb_normal_material_dark
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: io.reactivex.functions.Function mapper
com.xuexiang.xhttp2.R$styleable: int View_paddingStart
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode$Callback mWrappedCallback
io.reactivex.internal.operators.observable.ObservableJoin: io.reactivex.ObservableSource other
com.appspa.demo.R$attr: int drawableTopCompat
androidx.fragment.app.FragmentStatePagerAdapter: java.lang.String TAG
com.xuexiang.xhttp2.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha
androidx.appcompat.R$color: int material_grey_900
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
okhttp3.OkHttpClient: java.util.List networkInterceptors
com.appspa.demo.R$style: int Base_Animation_AppCompat_DropDownUp
com.appspa.demo.R$styleable: int AppCompatTheme_colorBackgroundFloating
androidx.activity.R$id: int icon_group
androidx.vectordrawable.animated.R$styleable: int[] FontFamily
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver parent
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: io.reactivex.disposables.CompositeDisposable resources
com.appspa.demo.R$attr: int buttonBarButtonStyle
com.xuexiang.xhttp2.R$attr: int measureWithLargestChild
com.appspa.update.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: boolean done
com.appspa.update.R$string: int abc_toolbar_collapse_description
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActivityChooserView
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.lang.Throwable error
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler
androidx.appcompat.resources.R$dimen: int notification_action_icon_size
com.xuexiang.xhttp2.model.HttpParams$FileWrapper: long fileSize
androidx.appcompat.R$anim: int abc_popup_exit
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: org.reactivestreams.Publisher otherSource
com.appspa.update.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.core.app.Person: java.lang.String KEY_KEY
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver: io.reactivex.functions.Function keySelector
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: long emitted
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: org.reactivestreams.Subscription upstream
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean mIsCircular
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: boolean isPeeking
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe: io.reactivex.internal.util.ErrorMode errorMode
androidx.appcompat.R$dimen: int abc_action_bar_default_padding_start_material
com.xuexiang.xhttp2.R$drawable: int abc_ic_menu_cut_mtrl_alpha
androidx.lifecycle.ComputableLiveData$3: androidx.lifecycle.ComputableLiveData this$0
com.xuexiang.xhttp2.R$layout: int notification_template_custom_big
androidx.core.app.JobIntentService$CompatWorkItem: int mStartId
com.appspa.demo.R$styleable: int ActionBar_backgroundStacked
com.appspa.update.R$dimen: int abc_text_size_display_4_material
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_PARTICIPANTS
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: io.reactivex.disposables.Disposable timer
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: int RUNNING
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber parent
retrofit2.Retrofit$1: java.lang.Class val$service
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: java.util.concurrent.atomic.AtomicBoolean firstRequest
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: androidx.appcompat.graphics.drawable.DrawableContainer mOwner
io.reactivex.internal.operators.single.SingleFlatMapMaybe: io.reactivex.functions.Function mapper
com.appspa.demo.entity.CustomResult$PatchInfo: java.lang.String tMd5
androidx.appcompat.R$styleable: int GradientColor_android_gradientRadius
com.appspa.update.R$attr: int buttonBarButtonStyle
androidx.core.widget.NestedScrollView: int mTouchSlop
io.reactivex.internal.subscribers.QueueDrainSubscriber: java.lang.Throwable error
androidx.core.R$id: int notification_main_column_container
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.appspa.demo.R$drawable: int abc_cab_background_internal_bg
okhttp3.ResponseBody$1: long val$contentLength
io.reactivex.internal.observers.ForEachWhileObserver: long serialVersionUID
com.appspa.demo.R$id: int textSpacerNoTitle
androidx.core.app.NotificationCompat: int DEFAULT_VIBRATE
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: long serialVersionUID
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: android.os.Handler handler
androidx.customview.R$styleable: int GradientColor_android_centerX
com.appspa.demo.R$color: int material_grey_300
com.appspa.demo.R$styleable: int Toolbar_titleMarginBottom
androidx.core.text.util.FindAddress$ZipRange: int mException1
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_LEFT
okhttp3.internal.http1.Http1Codec: okhttp3.internal.connection.StreamAllocation streamAllocation
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_DarkActionBar
io.reactivex.internal.operators.single.SingleDelay$Delay$OnSuccess: java.lang.Object value
okhttp3.Response: okhttp3.ResponseBody body
com.xuexiang.xhttp2.R$color: int primary_text_disabled_material_light
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$style: int Widget_AppCompat_ButtonBar
androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: long serialVersionUID
androidx.appcompat.R$attr: int fontVariationSettings
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView mDropDownList
com.appspa.update.R$styleable: int SearchView_voiceIcon
com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache$Editor currentEditor
com.xuexiang.xhttp2.R$attr: int windowMinWidthMajor
com.xuexiang.xhttp2.R$id: int forever
androidx.appcompat.R$id: int tag_accessibility_actions
com.appspa.demo.R$style: int Theme_AppCompat_Light_DarkActionBar
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.vectordrawable.animated.R$drawable: int notification_bg_normal
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: java.util.concurrent.atomic.AtomicReference resource
androidx.core.R$id: int accessibility_custom_action_22
androidx.appcompat.widget.SuggestionsAdapter: int REFINE_BY_ENTRY
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: boolean cancelled
okhttp3.OkHttpClient$Builder: int writeTimeout
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: long delay
androidx.fragment.app.DialogFragment: int STYLE_NORMAL
com.appspa.update.R$styleable: int FontFamilyFont_font
com.xuexiang.xhttp2.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY
com.xuexiang.xhttp2.R$styleable: int[] AppCompatTextView
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
androidx.core.R$id: int tag_unhandled_key_event_manager
com.appspa.update.R$dimen: int space_button_text_size
androidx.appcompat.R$color: int switch_thumb_material_light
androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerIndicatorEnabled
com.appspa.update.R$drawable: int abc_tab_indicator_mtrl_alpha
io.reactivex.internal.operators.flowable.FlowableFromFuture: long timeout
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: java.util.Iterator it
com.xuexiang.xhttp2.R$attr: int windowFixedHeightMajor
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mShownAnchorView
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: androidx.appcompat.app.AppCompatDelegateImpl this$0
okhttp3.OkHttpClient$Builder: okhttp3.internal.cache.InternalCache internalCache
com.appspa.demo.R$attr: int autoSizePresetSizes
com.appspa.demo.R$dimen: int abc_config_prefDialogWidth
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.DownloadEntity mPatchDownloadEntity
org.aspectj.lang.Aspects: java.lang.Object[] EMPTY_OBJECT_ARRAY
androidx.appcompat.R$id: int contentPanel
com.appspa.update.R$style: int Widget_AppCompat_Spinner_DropDown
androidx.activity.R$id: int accessibility_custom_action_11
androidx.customview.R$id: int title
com.appspa.update.R$styleable: int ViewStubCompat_android_id
com.xuexiang.xhttp2.R$color: int notification_icon_bg_color
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence title
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint mPaint
androidx.appcompat.app.AlertController: int mIconId
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_tooltipForegroundColor
androidx.viewpager.widget.ViewPager: boolean mInLayout
com.appspa.demo.R$id: int accessibility_custom_action_3
androidx.drawerlayout.widget.DrawerLayout: boolean SET_DRAWER_SHADOW_FROM_ELEVATION
io.reactivex.internal.operators.observable.BlockingObservableMostRecent: io.reactivex.ObservableSource source
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedTreeMap this$0
io.reactivex.subjects.SingleSubject: java.lang.Object value
com.xuexiang.xhttp2.model.ApiResult: java.lang.String DATA
androidx.appcompat.app.AlertController$4: android.view.View val$top
androidx.appcompat.app.AlertController: android.widget.ListView mListView
androidx.appcompat.widget.Toolbar$3: androidx.appcompat.widget.Toolbar this$0
okhttp3.internal.http1.Http1Codec: int state
androidx.core.graphics.drawable.IconCompat: int AMBIENT_SHADOW_ALPHA
com.appspa.update.R$style: int Base_V22_Theme_AppCompat_Light
com.appspa.demo.R$id: int tag_unhandled_key_event_manager
com.appspa.update.R$drawable: int abc_switch_thumb_material
androidx.appcompat.R$attr: int dividerVertical
io.reactivex.internal.operators.observable.ObservableZip: io.reactivex.ObservableSource[] sources
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.appspa.update.widget.NumberProgressBar: int mTextColor
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence mText
androidx.collection.ArraySet: int mSize
com.appspa.update.R$string: int search_menu_title
okhttp3.internal.cache.DiskLruCache: java.io.File directory
com.zhy.http.okhttp.cookie.CookieJarImpl: com.zhy.http.okhttp.cookie.store.CookieStore cookieStore
androidx.viewpager.R$styleable: int GradientColorItem_android_color
androidx.appcompat.R$color: int bright_foreground_inverse_material_dark
com.appspa.demo.R$styleable: int AppCompatTheme_viewInflaterClass
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicReference upstream
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedTreeMap$Node lastReturned
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_buttonStyleSmall
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO_BATTERY
com.xuexiang.xhttp2.R$attr: int logoDescription
com.google.gson.stream.JsonScope: int NONEMPTY_ARRAY
com.appspa.demo.R$style: int Base_V21_Theme_AppCompat_Light
com.appspa.update.R$drawable: int notification_tile_bg
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver sus
com.xuexiang.xhttp2.R$attr: int alpha
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME
com.appspa.update.R$attr: int actionDropDownStyle
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: io.reactivex.internal.operators.observable.ObservableGroupJoin$JoinSupport parent
org.aspectj.runtime.reflect.StringMaker: org.aspectj.runtime.reflect.StringMaker middleStringMaker
com.appspa.demo.R$attr: int indeterminateProgressStyle
com.appspa.update.R$id: int content
androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight
com.appspa.update.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarTabTextStyle
androidx.appcompat.R$dimen: int notification_big_circle_margin
com.appspa.update.R$styleable: int MenuItem_android_icon
androidx.appcompat.R$styleable: int AppCompatTextView_drawableRightCompat
androidx.vectordrawable.animated.R$styleable: int[] ColorStateListItem
androidx.appcompat.R$dimen: int abc_text_size_subtitle_material_toolbar
androidx.appcompat.R$styleable: int DrawerArrowToggle_drawableSize
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: java.util.concurrent.atomic.AtomicBoolean winner
androidx.appcompat.resources.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: boolean done
com.google.gson.Gson: boolean lenient
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: int prefetch
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: int OTHER_STATE_HAS_VALUE
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence mContentDesc
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: java.util.concurrent.atomic.AtomicInteger counter
io.reactivex.subscribers.TestSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$styleable: int FontFamily_fontProviderFetchTimeout
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
com.zhy.http.okhttp.builder.OkHttpRequestBuilder: java.lang.Object tag
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Large_Inverse
io.reactivex.internal.observers.BlockingObserver: java.util.Queue queue
com.appspa.demo.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeStyle
com.appspa.update.R$dimen: int abc_button_padding_vertical_material
com.appspa.update.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: io.reactivex.functions.Consumer onError
androidx.appcompat.resources.R$attr: int fontProviderFetchTimeout
com.appspa.demo.R$styleable: int ActivityChooserView_initialActivityCount
com.appspa.demo.R$styleable: int AppCompatTextHelper_android_drawableTop
com.appspa.demo.R$styleable: int SwitchCompat_splitTrack
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: org.reactivestreams.Subscription upstream
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_switchTextAppearance
androidx.drawerlayout.widget.DrawerLayout: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable: io.reactivex.Observable parent
androidx.appcompat.R$styleable: int AppCompatTextView_lineHeight
com.google.gson.internal.LinkedHashTreeMap$Node: int height
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Title
androidx.core.view.ViewCompat: int TYPE_NON_TOUCH
androidx.appcompat.R$styleable: int MenuItem_android_visible
com.appspa.update.R$style: int Animation_AppCompat_Dialog
androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor
androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.appcompat.R$styleable: int Toolbar_titleTextColor
com.appspa.update.R$styleable: int AppCompatTheme_windowMinWidthMinor
androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_CLAMP
com.appspa.update.R$styleable: int Spinner_android_popupBackground
androidx.core.view.DragStartHelper: int mLastTouchX
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
androidx.appcompat.R$attr: int buttonGravity
androidx.appcompat.R$styleable: int Spinner_android_prompt
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: io.reactivex.disposables.Disposable upstream
androidx.core.view.DragStartHelper: android.view.View$OnTouchListener mTouchListener
com.appspa.update.utils.ShellUtils$CommandResult: java.lang.String errorMsg
io.reactivex.internal.operators.completable.CompletableMerge: boolean delayErrors
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher: org.reactivestreams.Publisher other
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM
com.appspa.demo.R$style: int Theme_AppCompat
androidx.appcompat.R$styleable: int CompoundButton_buttonCompat
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView
androidx.core.R$dimen: int compat_button_padding_horizontal_material
com.appspa.demo.R$attr: int subMenuArrow
com.appspa.update.R$styleable: int ActionBar_subtitleTextStyle
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mContentView
androidx.appcompat.R$color: int material_deep_teal_200
retrofit2.Retrofit$Builder: java.util.List callAdapterFactories
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: io.reactivex.Observer downstream
androidx.core.R$styleable: int GradientColor_android_startColor
com.appspa.update.R$attr: int multiChoiceItemLayout
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Small
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNDEFINED
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: boolean done
com.appspa.demo.R$color: int background_floating_material_light
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.Callable val$callable
androidx.core.app.ShareCompat$IntentBuilder: java.util.ArrayList mCcAddresses
com.appspa.update.R$drawable: int abc_control_background_material
androidx.loader.content.Loader: boolean mAbandoned
androidx.drawerlayout.R$dimen: int notification_large_icon_width
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: io.reactivex.subjects.ReplaySubject$Node tail
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.core.app.ActivityCompat$1: int val$requestCode
androidx.drawerlayout.R$id: int text2
com.xuexiang.xhttp2.R$styleable: int MenuView_android_itemBackground
com.appspa.update.entity.UpdateError$ERROR: int FAIL_OLD_MD5
androidx.appcompat.R$id: int action_mode_bar
io.reactivex.internal.operators.observable.ObservableDelay: java.util.concurrent.TimeUnit unit
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorAccent
androidx.appcompat.widget.RtlSpacingHelper: int mEnd
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener mCallback
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges
com.google.gson.stream.JsonWriter: java.io.Writer out
com.appspa.demo.R$attr: int tickMarkTintMode
androidx.appcompat.R$styleable: int GradientColor_android_startY
androidx.appcompat.R$id: int action_bar_title
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$style: int Platform_V21_AppCompat_Light
com.xuexiang.xhttp2.R$color: int bright_foreground_inverse_material_light
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent: io.reactivex.Flowable source
com.appspa.demo.R$styleable: int SearchView_android_maxWidth
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutNumericChar
okhttp3.Request: java.util.Map tags
androidx.lifecycle.ReportFragment: java.lang.String REPORT_FRAGMENT_TAG
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: long producerIndex
io.reactivex.internal.operators.maybe.MaybeTimer: io.reactivex.Scheduler scheduler
androidx.appcompat.R$styleable: int TextAppearance_android_textColor
androidx.fragment.app.BackStackState: java.lang.String mName
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: boolean done
androidx.core.app.ActivityCompat$1: java.lang.String[] val$permissions
androidx.appcompat.widget.AppCompatTextHelper: int TEXT_FONT_WEIGHT_UNSPECIFIED
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
com.appspa.update.R$string: int space_error_check_json_empty
androidx.fragment.app.Fragment: boolean mInLayout
androidx.viewpager.R$id: int action_container
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_WITH_TEXT
com.xuexiang.xhttp2.cache.core.BaseDiskCache: java.util.concurrent.locks.ReadWriteLock mLock
com.xuexiang.xhttp2.R$dimen: int notification_small_icon_size_as_large
androidx.appcompat.R$id: int edit_query
com.appspa.demo.R$id: int never
com.appspa.demo.R$attr: int colorError
androidx.core.R$styleable: int[] GradientColor
com.appspa.demo.R$string: int space_download_complete
androidx.appcompat.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged
retrofit2.adapter.rxjava2.CallExecuteObservable: retrofit2.Call originalCall
androidx.drawerlayout.widget.DrawerLayout: int MIN_DRAWER_MARGIN
androidx.appcompat.view.menu.ListMenuPresenter: int mThemeRes
com.xuexiang.xhttp2.R$styleable: int ActionBar_divider
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.appcompat.widget.TintInfo: boolean mHasTintMode
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider mActionProvider
androidx.appcompat.R$dimen: int abc_text_size_medium_material
androidx.appcompat.R$dimen: int notification_large_icon_width
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: io.reactivex.internal.util.AtomicThrowable errors
com.xuexiang.xhttp2.R$attr: int listDividerAlertDialog
com.appspa.update.R$dimen: int compat_button_padding_horizontal_material
com.appspa.demo.R$attr: int textAppearanceListItemSmall
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat
androidx.appcompat.widget.ActionMenuView: boolean mReserveOverflow
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node left
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.core.app.NotificationCompat$Action$Builder: int mSemanticAction
androidx.core.hardware.display.DisplayManagerCompat: java.util.WeakHashMap sInstances
com.xuexiang.xhttp2.R$color: int abc_input_method_navigation_guard
io.reactivex.disposables.FutureDisposable: long serialVersionUID
androidx.collection.ArraySet: androidx.collection.MapCollections mCollections
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA
com.xuexiang.xhttp2.cache.RxCache: long cacheTime
com.appspa.update.service.DownloadService$FileDownloadCallBack: com.appspa.update.service.DownloadService this$0
androidx.collection.ArraySet: int[] mHashes
io.reactivex.internal.operators.observable.ObservableReplay$ScheduledReplaySupplier: java.util.concurrent.TimeUnit unit
com.zhy.http.okhttp.log.LoggerInterceptor: boolean showResponse
androidx.customview.R$attr: int fontProviderFetchTimeout
com.appspa.demo.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: io.reactivex.internal.disposables.SequentialDisposable disposables
com.appspa.demo.R$id: int accessibility_custom_action_13
com.appspa.update.R$id: int list_item
androidx.loader.R$color: int secondary_text_default_material_light
com.appspa.update.R$styleable: int AppCompatTheme_actionBarStyle
com.appspa.demo.R$attr: int listPreferredItemPaddingRight
com.xuexiang.xhttp2.R$attr: int actionModeWebSearchDrawable
com.appspa.update.R$styleable: int AppCompatTheme_alertDialogTheme
com.xuexiang.xhttp2.R$color: int error_color_material_light
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
androidx.appcompat.R$anim: int abc_tooltip_exit
androidx.appcompat.R$layout: int abc_action_menu_layout
io.reactivex.internal.operators.maybe.MaybePeek: io.reactivex.functions.Consumer onSubscribeCall
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySubscriber: io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber parent
okhttp3.HttpUrl: java.lang.String scheme
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_14
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver: java.util.concurrent.atomic.AtomicReference parent
androidx.appcompat.widget.LinearLayoutCompat: boolean mUseLargestChild
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: long serialVersionUID
com.appspa.update.R$styleable: int StateListDrawable_android_visible
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: android.app.SharedElementCallback$OnSharedElementsReadyListener val$listener
com.xuexiang.xhttp2.R$layout: int abc_list_menu_item_radio
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
com.xuexiang.xhttp2.R$id: int checkbox
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: io.reactivex.disposables.Disposable upstream
androidx.fragment.R$id: int dialog_button
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: int index
io.reactivex.internal.operators.single.SingleDoOnTerminate: io.reactivex.functions.Action onTerminate
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator parent
com.appspa.demo.R$style: int TextAppearance_AppCompat_Body2
io.reactivex.internal.operators.maybe.MaybeUsing: java.util.concurrent.Callable resourceSupplier
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_GRAVITY
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitRight
com.xuexiang.xhttp2.R$styleable: int SearchView_searchIcon
com.appspa.update.R$string: int abc_search_hint
androidx.core.view.MotionEventCompat: int AXIS_SIZE
com.appspa.demo.R$id: int contentPanel
io.reactivex.internal.operators.observable.ObservableWithLatestFrom: io.reactivex.ObservableSource other
androidx.appcompat.app.AlertController$AlertParams: boolean mRecycleOnMeasure
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: boolean done
com.appspa.demo.R$drawable: int notification_bg_normal_pressed
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: io.reactivex.CompletableObserver downstream
androidx.appcompat.widget.DropDownListView: boolean mDrawsInPressedState
com.xuexiang.xhttp2.cache.RxCache: java.lang.String cacheKey
com.appspa.update.R$dimen: int notification_top_pad_large_text
io.reactivex.internal.operators.single.SingleMap: io.reactivex.functions.Function mapper
com.google.gson.stream.JsonReader: int PEEKED_NUMBER
com.appspa.demo.R$attr: int firstBaselineToTopHeight
com.xuexiang.xhttp2.R$id: int actions
com.appspa.update.R$styleable: int FontFamilyFont_fontWeight
androidx.activity.R$id: int accessibility_custom_action_0
io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription: long serialVersionUID
com.appspa.demo.R$dimen: int hint_pressed_alpha_material_light
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind NONE
okhttp3.internal.Util: java.nio.charset.Charset ISO_8859_1
org.aspectj.internal.lang.reflect.TypePatternImpl: java.lang.String typePattern
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean done
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: long limit
com.appspa.demo.R$dimen: int abc_action_bar_stacked_tab_max_width
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: long serialVersionUID
androidx.appcompat.R$drawable: int abc_ic_arrow_drop_right_black_24dp
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunrise
androidx.drawerlayout.R$id: int right_icon
androidx.appcompat.app.AlertController: int mButtonPanelLayoutHint
androidx.customview.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.R$color: int dim_foreground_disabled_material_dark
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle: io.reactivex.functions.Function mapper
androidx.appcompat.view.menu.ListMenuItemView: boolean mForceShowIcon
com.appspa.demo.R$id: int accessibility_custom_action_8
com.appspa.update.R$styleable: int SearchView_android_maxWidth
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
com.appspa.update.R$styleable: int SwitchCompat_thumbTintMode
androidx.appcompat.R$attr: int displayOptions
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CONTENT_ICON
com.jakewharton.disklrucache.StrictLineReader$1: com.jakewharton.disklrucache.StrictLineReader this$0
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.app.ToolbarActionBar: boolean mLastMenuVisibility
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListInterface mImpl
androidx.appcompat.R$attr: int actionBarStyle
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.internal.operators.maybe.MaybeToPublisher INSTANCE
androidx.appcompat.view.menu.MenuItemImpl: int CHECKED
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: int size
com.xuexiang.xhttp2.request.BaseRequest: int mRetryDelay
androidx.core.app.BundleCompat$BundleCompatBaseImpl: boolean sPutIBinderMethodFetched
com.appspa.demo.R$id: int action_mode_bar
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: boolean cancelled
androidx.core.R$id: int action_container
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: boolean cancelled
com.appspa.update.R$styleable: int AppCompatTheme_actionModeShareDrawable
androidx.core.provider.SelfDestructiveThread$2: java.util.concurrent.Callable val$callable
io.reactivex.internal.operators.observable.ObservableConcatMap: io.reactivex.internal.util.ErrorMode delayErrors
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance
io.reactivex.internal.operators.observable.ObservableTakeLast: int count
androidx.viewpager.widget.PagerTitleStrip: float mLastKnownPositionOffset
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_MEDIUM
com.appspa.update.R$drawable: int abc_ratingbar_indicator_material
androidx.appcompat.R$color: int abc_hint_foreground_material_light
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source[] sources
androidx.appcompat.R$attr: int textColorSearchUrl
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence mCancelLabel
io.reactivex.internal.operators.completable.CompletableDelay: boolean delayError
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Method sSetWindowLayoutTypeMethod
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BIT_SET_FACTORY
androidx.vectordrawable.animated.R$id: int line3
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: java.util.concurrent.ThreadFactory threadFactory
com.google.gson.Gson: int dateStyle
com.appspa.update.R$styleable: int AppCompatTheme_dialogPreferredPadding
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: io.reactivex.internal.operators.flowable.FlowableCache parent
com.appspa.update.R$layout: int select_dialog_singlechoice_material
androidx.loader.R$id: int action_container
com.xuexiang.xhttp2.R$styleable: int MenuView_android_windowAnimationStyle
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: io.reactivex.SingleObserver downstream
androidx.viewpager.R$id: int tag_unhandled_key_listeners
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY_INTEROP
com.xuexiang.xhttp2.R$id: int add
com.xuexiang.xhttp2.utils.Utils: java.lang.String EXT_DCIM_PATH
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: int maxSize
com.appspa.demo.R$attr: int searchHintIcon
com.appspa.update.R$id: int action_container
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME
androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask
okhttp3.RealCall: boolean forWebSocket
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.util.concurrent.atomic.AtomicLong requested
androidx.core.text.BidiFormatter$DirectionalityEstimator: boolean isHtml
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_ON_REPLY
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mChangingConfigurations
com.appspa.update.R$id: int wrap_content
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listDividerAlertDialog
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: android.app.Application mApplication
com.zhy.http.okhttp.request.PostFormRequest$1$1: long val$contentLength
com.appspa.update.R$styleable: int AppCompatTheme_actionDropDownStyle
androidx.appcompat.app.AlertController$AlertParams: boolean mIsMultiChoice
androidx.appcompat.R$attr: int dropDownListViewStyle
com.google.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS
androidx.appcompat.R$color: int ripple_material_light
io.reactivex.exceptions.CompositeException$WrappedPrintWriter: java.io.PrintWriter printWriter
okhttp3.OkHttpClient: int connectTimeout
okhttp3.internal.http2.Http2Connection$4: java.util.List val$requestHeaders
androidx.appcompat.R$styleable: int AppCompatTextView_textLocale
com.xuexiang.xhttp2.R$attr: int titleMarginTop
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeStepGranularity
okio.RealBufferedSource: okio.Buffer buffer
com.appspa.demo.R$styleable: int StateListDrawable_android_dither
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: long serialVersionUID
com.appspa.demo.R$style: int TextAppearance_Compat_Notification
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS_MAX
androidx.core.app.NotificationCompatJellybean: java.lang.String EXTRA_ALLOW_GENERATED_REPLIES
androidx.appcompat.widget.ActionMenuView: int MIN_CELL_SIZE
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews
androidx.drawerlayout.R$id: int line3
androidx.fragment.app.FragmentTransaction: int mBreadCrumbTitleRes
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_WRONG_CERTIFICATES
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: long serialVersionUID
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.locks.Condition val$cond
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.view.Window$OnFrameMetricsAvailableListener mListener
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: boolean disposed
androidx.appcompat.widget.ListPopupWindow$2: androidx.appcompat.widget.ListPopupWindow this$0
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: io.reactivex.internal.operators.observable.ObservableCache$Node node
androidx.appcompat.resources.R$drawable: int notification_tile_bg
com.appspa.demo.R$attr: int alertDialogStyle
okhttp3.Cache$CacheRequestImpl$1: okhttp3.internal.cache.DiskLruCache$Editor val$editor
androidx.appcompat.widget.DropDownListView: boolean mListSelectionHidden
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: java.util.concurrent.locks.Condition condition
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker SHUTDOWN_WORKER
com.xuexiang.xhttp2.R$dimen: int abc_disabled_alpha_material_dark
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: io.reactivex.functions.Function onErrorMapper
androidx.appcompat.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
okio.Segment: int pos
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$KeySet keySet
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize
okio.Timeout: long timeoutNanos
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.fragment.R$id: int accessibility_custom_action_31
io.reactivex.internal.operators.maybe.MaybeEqualSingle: io.reactivex.functions.BiPredicate isEqual
com.appspa.update.R$drawable: int btn_radio_off_mtrl
com.appspa.demo.R$styleable: int LinearLayoutCompat_android_gravity
com.google.gson.stream.JsonReader: int PEEKED_UNQUOTED_NAME
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: io.reactivex.MaybeSource other
androidx.appcompat.widget.TooltipCompatHandler: long LONG_CLICK_HIDE_TIMEOUT_MS
androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot
androidx.appcompat.R$style: int Base_V28_Theme_AppCompat_Light
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.reflect.Type responseType
com.appspa.update.R$dimen: int abc_select_dialog_padding_start_material
okhttp3.internal.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT
com.appspa.demo.R$styleable: int ActionBar_logo
androidx.cursoradapter.widget.CursorAdapter: android.content.Context mContext
androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int CANCELLED
com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node prev
androidx.appcompat.R$styleable: int AlertDialog_singleChoiceItemLayout
io.reactivex.internal.subscribers.DeferredScalarSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.resources.R$id: int dialog_button
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_WORD
com.appspa.update.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$NextObserver: java.util.concurrent.atomic.AtomicReference parent
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver inner
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: io.reactivex.CompletableSource[] sources
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter LONG
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: java.lang.String ANIMATED_VECTOR
androidx.versionedparcelable.VersionedParcelStream: int TYPE_DOUBLE_ARRAY
io.reactivex.internal.subscribers.BoundedSubscriber: io.reactivex.functions.Action onComplete
androidx.viewpager.R$styleable: int GradientColor_android_startX
com.appspa.update.R$string: int space_error_check_net_request
androidx.core.R$id: int accessibility_custom_action_29
io.reactivex.internal.operators.observable.BlockingObservableIterable: int bufferSize
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: io.reactivex.ObservableSource boundary
io.reactivex.internal.operators.single.SingleUsing: java.util.concurrent.Callable resourceSupplier
io.reactivex.observers.DisposableSingleObserver: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.update.R$styleable: int MenuView_android_horizontalDivider
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler TRAMPOLINE
io.reactivex.internal.observers.ConsumerSingleObserver: io.reactivex.functions.Consumer onError
com.appspa.update.proxy.impl.DefaultUpdateChecker$1: com.appspa.update.proxy.impl.DefaultUpdateChecker this$0
androidx.vectordrawable.animated.R$dimen: int notification_big_circle_margin
io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription: org.reactivestreams.Subscriber downstream
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Matrix mShaderMatrix
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorButtonNormal
androidx.vectordrawable.animated.R$attr: int ttcIndex
com.xuexiang.xhttp2.R$styleable: int ActionMode_subtitleTextStyle
androidx.vectordrawable.R$id: int accessibility_custom_action_1
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: com.google.gson.JsonDeserializer deserializer
com.xuexiang.xhttp2.R$attr: int actionModeCutDrawable
androidx.appcompat.widget.ActivityChooserModel: java.util.List mHistoricalRecords
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.R$attr: int titleTextStyle
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_4
androidx.fragment.app.Fragment$AnimationInfo: int mStateAfterAnimating
com.appspa.update.R$layout: int notification_template_custom_big
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_MASK
okhttp3.internal.http.RetryAndFollowUpInterceptor: java.lang.Object callStackTrace
androidx.appcompat.R$style: int Base_Animation_AppCompat_DropDownUp
com.appspa.update.R$styleable: int Toolbar_logo
com.xuexiang.xhttp2.XHttp: okhttp3.Cache mCache
androidx.appcompat.app.AlertController: boolean mShowTitle
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: boolean done
androidx.core.provider.FontsContractCompat$4$8: androidx.core.provider.FontsContractCompat$4 this$0
com.appspa.update.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: org.reactivestreams.Subscription upstream
com.zhy.http.okhttp.request.PostStringRequest: okhttp3.MediaType MEDIA_TYPE_PLAIN
com.appspa.demo.R$id: int right_side
androidx.core.app.FrameMetricsAggregator: int ANIMATION_DURATION
androidx.activity.R$id: int tag_accessibility_actions
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mInflater
androidx.core.app.NotificationCompat$WearableExtender: int mCustomSizePreset
androidx.core.text.util.LinkifyCompat: java.util.Comparator COMPARATOR
androidx.vectordrawable.R$attr: int fontProviderPackage
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded
com.appspa.update.R$attr: int alertDialogStyle
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCategory
com.appspa.demo.R$id: int textSpacerNoButtons
com.appspa.demo.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.appspa.update.R$dimen: int space_close_icon_size
io.reactivex.internal.operators.observable.ObservableTake: long limit
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.String SHAPE_PATH
com.appspa.demo.R$id: int accessibility_custom_action_18
com.google.gson.internal.bind.TypeAdapters$27: java.lang.String DAY_OF_MONTH
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo mTempItem
androidx.activity.R$dimen: int notification_top_pad
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask: io.reactivex.internal.operators.observable.ObservableSubscribeOn this$0
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMark
io.reactivex.internal.operators.observable.ObservableGroupBy: io.reactivex.functions.Function valueSelector
androidx.viewpager.widget.ViewPager: int mDefaultGutterSize
com.appspa.demo.R$styleable: int CompoundButton_android_button
com.xuexiang.xhttp2.R$layout: int abc_search_dropdown_item_icons_2line
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_COOKIE
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: io.reactivex.disposables.CompositeDisposable set
com.xuexiang.xhttp2.R$color: int material_grey_800
androidx.appcompat.R$attr: int paddingEnd
com.appspa.update.R$id: int textSpacerNoButtons
com.google.gson.stream.JsonScope: int NONEMPTY_OBJECT
androidx.core.view.ViewCompat: int SCROLL_AXIS_NONE
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMinor
androidx.vectordrawable.R$id: int tag_screen_reader_focusable
com.google.gson.internal.UnsafeAllocator$1: java.lang.reflect.Method val$allocateInstance
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_INT1
androidx.core.app.ShareCompat$IntentReader: java.lang.String TAG
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$layout: int spa_layout_update_prompter
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: io.reactivex.processors.UnicastProcessor window
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: boolean done
androidx.vectordrawable.R$id: int accessibility_custom_action_25
com.appspa.update.R$styleable: int ActionBar_indeterminateProgressStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView
com.xuexiang.xhttp2.R$drawable: int abc_cab_background_internal_bg
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
okhttp3.Route: okhttp3.Address address
androidx.fragment.R$styleable: int GradientColor_android_startY
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_editTextColor
com.appspa.demo.R$styleable: int SwitchCompat_android_textOn
androidx.core.provider.FontsContractCompat$3: java.lang.String val$id
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: int prefetch
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TITLE_BIG
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Info
okio.DeflaterSink: java.util.zip.Deflater deflater
com.xuexiang.xhttp2.R$drawable: int abc_btn_check_to_on_mtrl_000
com.appspa.update.proxy.impl.DefaultUpdateDownloader: com.appspa.update.service.DownloadService$DownloadBinder mDownloadBinder
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: io.reactivex.disposables.CompositeDisposable set
com.appspa.update.R$style: int Base_V28_Theme_AppCompat
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MARK_AS_READ
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.core.text.BidiFormatter$Builder: boolean mIsRtlContext
com.appspa.demo.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Toolbar
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored
androidx.loader.R$attr: int fontProviderCerts
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat
com.appspa.update.R$dimen: int abc_action_bar_content_inset_material
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar_Indicator
com.appspa.demo.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
androidx.appcompat.R$attr: int editTextStyle
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mOps
com.appspa.demo.R$attr: int expandActivityOverflowButtonDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.collection.ArrayMap mTargetNameMap
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mTempShortcutItemList
androidx.vectordrawable.animated.R$id: int tag_accessibility_actions
androidx.customview.R$id: int notification_main_column
com.appspa.update.R$string: int space_error_check_parse
com.appspa.update.R$attr: int drawerArrowStyle
androidx.fragment.R$dimen: int compat_button_inset_vertical_material
io.reactivex.observers.SerializedObserver: boolean delayError
androidx.appcompat.R$style: int TextAppearance_AppCompat
androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_15
com.xuexiang.xhttp2.R$styleable: int ActionBar_logo
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: com.xuexiang.xhttp2.callback.CallBack mCallBack
androidx.appcompat.R$styleable: int FontFamily_fontProviderFetchTimeout
okhttp3.internal.ws.RealWebSocket: long queueSize
io.reactivex.internal.operators.observable.ObservableGroupBy: io.reactivex.functions.Function keySelector
com.appspa.demo.R$attr: int spinnerDropDownItemStyle
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: io.reactivex.functions.Consumer onNext
io.reactivex.internal.operators.maybe.MaybeTimer: long delay
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mMutated
com.xuexiang.xhttp2.R$color: int abc_background_cache_hint_selector_material_light
androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnKeyListener mOnKeyListener
androidx.appcompat.widget.ResourceManagerInternal: boolean DEBUG
androidx.core.graphics.TypefaceCompatBaseImpl$1: androidx.core.graphics.TypefaceCompatBaseImpl this$0
com.appspa.demo.R$styleable: int AppCompatTheme_editTextColor
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.appspa.update.R$attr: int buttonCompat
androidx.customview.widget.FocusStrategy$SequentialComparator: boolean mIsLayoutRtl
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: java.util.concurrent.atomic.AtomicReference other
io.reactivex.internal.operators.flowable.FlowableCombineLatest: java.lang.Iterable iterable
io.reactivex.internal.operators.maybe.MaybePeek: io.reactivex.functions.Action onAfterTerminate
androidx.loader.content.CursorLoader: java.lang.String[] mSelectionArgs
com.appspa.demo.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.appspa.update.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.xuexiang.xhttp2.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
androidx.core.text.PrecomputedTextCompat: int[] mParagraphEnds
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransitionStyle
com.xuexiang.xhttp2.R$attr: int thumbTextPadding
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: boolean delayErrors
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: int state
com.appspa.demo.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.appcompat.R$dimen: int abc_action_bar_stacked_max_height
androidx.appcompat.resources.R$id: int accessibility_custom_action_25
androidx.vectordrawable.R$styleable: int GradientColor_android_endY
androidx.vectordrawable.R$id: int tag_unhandled_key_event_manager
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: long serialVersionUID
androidx.collection.CircularArray: java.lang.Object[] mElements
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float ARROW_HEAD_ANGLE
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex
com.appspa.update.R$attr: int windowMinWidthMajor
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: long serialVersionUID
com.appspa.demo.R$dimen: int hint_pressed_alpha_material_dark
com.xuexiang.xhttp2.R$style: int Platform_V21_AppCompat_Light
com.appspa.update.R$drawable: int abc_ic_star_half_black_16dp
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_INTERACTION_START
androidx.appcompat.widget.ListPopupWindow$1: androidx.appcompat.widget.ListPopupWindow this$0
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: boolean timerRunning
androidx.vectordrawable.R$id: int chronometer
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_DOWN
com.appspa.demo.R$style: int Base_V21_Theme_AppCompat
androidx.appcompat.R$string: int abc_menu_space_shortcut_label
androidx.customview.R$id: int icon_group
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: java.util.concurrent.atomic.AtomicReference otherDisposable
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.Fragment mCurrentPrimaryItem
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: kotlin.coroutines.Continuation $continuation
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher: org.reactivestreams.Publisher other
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: retrofit2.Call $this_awaitResponse$inlined
retrofit2.Response: okhttp3.ResponseBody errorBody
com.appspa.update.R$styleable: int MenuView_android_windowAnimationStyle
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: boolean done
com.appspa.update.R$attr: int selectableItemBackground
io.reactivex.subscribers.SerializedSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.processors.PublishProcessor$PublishSubscription: io.reactivex.processors.PublishProcessor parent
com.appspa.demo.R$dimen: int abc_text_size_body_1_material
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_textAllCaps
com.appspa.demo.R$attr: int contentInsetEnd
com.appspa.update.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.appspa.demo.R$id: int default_activity_button
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: long serialVersionUID
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemContentDescription
androidx.appcompat.widget.SwitchCompat: int mTouchSlop
androidx.vectordrawable.R$drawable: int notification_template_icon_bg
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mInternalImageTint
androidx.appcompat.R$styleable: int[] GradientColor
androidx.appcompat.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.appspa.demo.R$style: int Base_Widget_AppCompat_Button_Small
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
io.reactivex.internal.operators.parallel.ParallelRunOn$MultiWorkerCallback: org.reactivestreams.Subscriber[] subscribers
androidx.appcompat.R$style: int Base_Widget_AppCompat_ImageButton
androidx.activity.R$styleable: int FontFamilyFont_android_font
androidx.core.view.MotionEventCompat: int AXIS_HAT_Y
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.appspa.update.R$id: int action_bar_container
com.appspa.update.R$dimen: int abc_dropdownitem_icon_width
androidx.appcompat.R$dimen: int notification_large_icon_height
retrofit2.RequestBuilder: java.lang.String method
io.reactivex.internal.operators.completable.CompletableDelay$Delay: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int SearchView_android_maxWidth
androidx.core.R$dimen: int notification_top_pad_large_text
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver parent
androidx.appcompat.R$drawable: int abc_list_pressed_holo_dark
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: io.reactivex.SingleObserver downstream
com.xuexiang.xhttp2.R$drawable: int abc_btn_radio_to_on_mtrl_015
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: okhttp3.internal.http1.Http1Codec this$0
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$dimen: int abc_list_item_height_small_material
com.xuexiang.xhttp2.R$attr: int progressBarStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber: io.reactivex.functions.BiFunction errorHandler
androidx.core.app.JobIntentService: boolean DEBUG
com.appspa.update.service.DownloadService$FileDownloadCallBack: boolean mIsAutoInstall
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mContentChangeType
io.reactivex.internal.operators.parallel.ParallelMapTry: io.reactivex.functions.BiFunction errorHandler
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable: io.reactivex.Completable source
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: long count
com.xuexiang.xhttp2.R$dimen: int abc_search_view_preferred_width
io.reactivex.processors.AsyncProcessor: java.util.concurrent.atomic.AtomicReference subscribers
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: long index
androidx.appcompat.resources.R$styleable: int GradientColor_android_startX
io.reactivex.internal.observers.BlockingObserver: long serialVersionUID
androidx.loader.R$dimen: int compat_button_padding_vertical_material
com.appspa.demo.R$id: int action_text
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_ACCEPT_LANGUAGE
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
com.appspa.demo.R$color: int material_deep_teal_200
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: java.util.concurrent.atomic.AtomicLong requested
okhttp3.internal.http2.Http2Connection: long unacknowledgedBytesRead
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable: io.reactivex.SingleSource source
androidx.appcompat.view.menu.MenuItemImpl: int mGroup
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
com.appspa.demo.R$styleable: int AppCompatTheme_dividerVertical
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs
com.appspa.update.R$id: int tag_screen_reader_focusable
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: int FUSED
androidx.vectordrawable.animated.R$id: int tag_screen_reader_focusable
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapSingleObserver: java.util.concurrent.atomic.AtomicReference parent
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: java.util.Iterator sources
androidx.savedstate.SavedStateRegistry: boolean mRestored
androidx.appcompat.resources.R$dimen: int notification_right_side_padding_top
com.xuexiang.xhttp2.R$attr: int actionModeFindDrawable
io.reactivex.internal.operators.completable.CompletableConcat: int prefetch
androidx.appcompat.widget.SwitchCompat: int mSwitchHeight
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
com.appspa.demo.R$color: int space_title_text_color
androidx.activity.R$dimen: int notification_media_narrow_margin
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontStyle
com.appspa.update.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.xuexiang.xhttp2.R$styleable: int ActionBar_contentInsetStart
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: org.reactivestreams.Publisher other
androidx.core.R$styleable: int[] GradientColorItem
com.xuexiang.xhttp2.R$style: int Base_V23_Theme_AppCompat_Light
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber other
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_TIMESTAMP
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.appspa.demo.R$styleable: int ColorStateListItem_android_color
androidx.appcompat.R$styleable: int FontFamilyFont_fontVariationSettings
com.appspa.demo.R$attr: int dialogPreferredPadding
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
io.reactivex.internal.operators.maybe.MaybePeek: io.reactivex.functions.Consumer onSuccessCall
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Dialog
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onCompletableAssembly
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableCache: io.reactivex.internal.operators.observable.ObservableCache$Node tail
androidx.appcompat.widget.ActivityChooserModel: boolean DEBUG
com.xuexiang.xhttp2.R$attr: int preserveIconSpacing
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_DATE
com.appspa.update.R$drawable: int abc_list_pressed_holo_dark
com.appspa.update.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnActionExpandListener mOnActionExpandListener
com.appspa.update.R$drawable: int abc_text_select_handle_left_mtrl_light
androidx.appcompat.R$attr: int autoSizeMinTextSize
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_BOTTOM
androidx.appcompat.R$drawable: int abc_textfield_search_material
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: java.util.concurrent.atomic.AtomicLong requested
androidx.vectordrawable.animated.R$dimen: int notification_content_margin_start
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mContext
androidx.core.app.JobIntentService$WorkEnqueuer: boolean mHasJobId
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: io.reactivex.disposables.CompositeDisposable resources
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber parent
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_centerY
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: int prefetch
io.reactivex.internal.subscribers.StrictSubscriber: long serialVersionUID
androidx.fragment.app.FragmentTransition$2: android.view.View val$nonExistentView
io.reactivex.observers.SerializedObserver: boolean emitting
io.reactivex.internal.operators.observable.ObservableBufferBoundary: io.reactivex.ObservableSource bufferOpen
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: java.util.concurrent.atomic.AtomicBoolean once
androidx.fragment.R$styleable: int GradientColor_android_tileMode
com.appspa.demo.R$dimen: int tooltip_precise_anchor_extra_offset
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$styleable: int ActivityChooserView_initialActivityCount
androidx.appcompat.view.menu.ListMenuItemView: android.content.Context mTextAppearanceContext
com.xuexiang.xhttp2.R$id: int tag_accessibility_actions
com.appspa.update.R$style: int Base_Widget_AppCompat_EditText
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments
androidx.core.R$styleable: int GradientColor_android_endColor
androidx.viewpager.R$integer: int status_bar_notification_info_maxnum
androidx.customview.R$layout: int notification_template_part_chronometer
com.xuexiang.xhttp2.R$attr: int actionBarTabStyle
io.reactivex.internal.operators.single.SingleTimer: java.util.concurrent.TimeUnit unit
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater mInflater
io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor$ReplayBuffer buffer
androidx.appcompat.app.ActionBar$LayoutParams: int gravity
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
com.appspa.update.R$attr: int title
androidx.core.text.util.FindAddress: int MAX_LOCATION_NAME_DISTANCE
androidx.appcompat.app.AppCompatDialog$1: androidx.appcompat.app.AppCompatDialog this$0
com.xuexiang.xhttp2.annotation.NetMethod: int ALL_PARAMS_INDEX
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView
androidx.core.graphics.drawable.RoundedBitmapDrawable: int mGravity
io.reactivex.internal.schedulers.InstantPeriodicTask: java.util.concurrent.ExecutorService executor
com.appspa.update.R$styleable: int[] ActionMenuView
okhttp3.internal.ws.RealWebSocket: java.util.concurrent.ScheduledFuture cancelFuture
org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String[] parameterNames
androidx.core.view.ViewCompat: int MEASURED_SIZE_MASK
com.xuexiang.xhttp2.R$styleable: int TextAppearance_textLocale
androidx.appcompat.app.AppCompatDialog: androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher
com.appspa.update.R$attr: int alpha
androidx.core.app.RemoteInput$Builder: java.lang.String mResultKey
androidx.appcompat.R$styleable: int ActionBar_contentInsetEndWithActions
com.appspa.demo.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.vectordrawable.R$styleable: int FontFamilyFont_ttcIndex
androidx.loader.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.observers.QueueDrainSubscriberWip: java.util.concurrent.atomic.AtomicInteger wip
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTintMode
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$4: com.xuexiang.xhttp2.cache.stategy.BaseStrategy this$0
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver this$0
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: io.reactivex.processors.UnicastProcessor this$0
com.appspa.update.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom: org.reactivestreams.Publisher other
androidx.lifecycle.ComputableLiveData$1: androidx.lifecycle.ComputableLiveData this$0
androidx.core.graphics.PathParser$ExtractFloatResult: int mEndPosition
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.single.SingleSubscribeOn: io.reactivex.Scheduler scheduler
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryOwner mOwner
com.appspa.demo.R$attr: int colorPrimaryDark
com.appspa.update.R$drawable: int notification_icon_background
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.functions.Function mapper
com.xuexiang.xhttp2.R$drawable: int notification_template_icon_low_bg
io.reactivex.observers.BaseTestConsumer: long completions
androidx.appcompat.R$dimen: int abc_text_size_caption_material
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean done
io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask: int bufferSize
com.appspa.update.R$attr: int popupMenuStyle
com.appspa.update.R$layout: int abc_action_menu_layout
okhttp3.internal.http2.Http2Writer: boolean client
androidx.core.app.NotificationCompatBuilder: int mGroupAlertBehavior
com.appspa.update.R$drawable: int notification_bg_low_normal
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: java.lang.reflect.Type owner
androidx.appcompat.view.SupportMenuInflater: java.lang.String LOG_TAG
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: int limit
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$AlertParams this$0
androidx.customview.R$id: int line1
androidx.appcompat.app.ToolbarActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar
okhttp3.internal.ws.RealWebSocket: boolean $assertionsDisabled
androidx.core.os.CancellationSignal: boolean mCancelInProgress
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText
com.appspa.demo.R$styleable: int SearchView_goIcon
androidx.fragment.R$id: int async
com.xuexiang.xhttp2.R$id: int home
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: org.reactivestreams.Publisher main
androidx.versionedparcelable.VersionedParcel: int EX_SECURITY
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.observers.TestObserver$EmptyObserver: io.reactivex.observers.TestObserver$EmptyObserver INSTANCE
androidx.appcompat.R$attr: int colorSwitchThumbNormal
io.reactivex.internal.operators.maybe.MaybeEmpty: io.reactivex.internal.operators.maybe.MaybeEmpty INSTANCE
com.appspa.update.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
io.reactivex.internal.operators.flowable.FlowableCombineLatest$SingletonArrayFunc: io.reactivex.internal.operators.flowable.FlowableCombineLatest this$0
io.reactivex.internal.operators.observable.ObservableGroupJoin: io.reactivex.functions.BiFunction resultSelector
androidx.appcompat.R$attr: int tickMarkTintMode
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.appspa.demo.entity.CustomResult$PatchInfo: long size
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$RepeatWhenSubscriber: long serialVersionUID
okhttp3.internal.http2.Http2Connection: long awaitPingsSent
io.reactivex.internal.operators.completable.CompletableTimeout: io.reactivex.CompletableSource other
androidx.drawerlayout.R$attr: int fontProviderFetchStrategy
okhttp3.internal.ws.RealWebSocket: boolean failed
io.reactivex.internal.subscribers.BlockingSubscriber: java.lang.Object TERMINATED
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.Pointcut[] pointcuts
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.update.R$attr: int tooltipText
androidx.vectordrawable.R$styleable: int GradientColorItem_android_color
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: java.lang.Throwable error
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: java.lang.Throwable error
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textAppearanceListItem
androidx.appcompat.widget.SearchView: android.widget.TextView$OnEditorActionListener mOnEditorActionListener
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber CANCELLED
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$color: int dim_foreground_material_light
com.appspa.demo.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Spinner
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
retrofit2.HttpServiceMethod$SuspendForBody: retrofit2.CallAdapter callAdapter
retrofit2.RequestBuilder: okhttp3.HttpUrl baseUrl
io.reactivex.subscribers.SerializedSubscriber: io.reactivex.internal.util.AppendOnlyLinkedArrayList queue
androidx.customview.R$layout: int notification_template_part_time
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_fontWeight
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable[] $VALUES
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.appspa.demo.R$dimen: int abc_dialog_padding_top_material
io.reactivex.internal.operators.flowable.FlowableFlattenIterable: io.reactivex.functions.Function mapper
androidx.core.app.TaskStackBuilder: java.lang.String TAG
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Light_Dialog
io.reactivex.subjects.AsyncSubject: io.reactivex.subjects.AsyncSubject$AsyncDisposable[] TERMINATED
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mTouchSlopSquare
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyle
com.appspa.update.R$attr: int actionBarStyle
com.xuexiang.xhttp2.R$styleable: int StateListDrawable_android_constantSize
com.appspa.demo.R$drawable: int ic_launcher_background
androidx.viewpager.R$drawable: int notification_icon_background
com.appspa.update.R$styleable: int[] StateListDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId
com.xuexiang.xhttp2.R$attr: int subtitle
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.functions.Function onMainThreadHandler
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_Button
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Object mRealOwner
io.reactivex.internal.schedulers.SchedulerPoolFactory: int PURGE_PERIOD_SECONDS
okhttp3.ConnectionPool: java.util.concurrent.Executor executor
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: long serialVersionUID
com.appspa.demo.R$attr: int drawableRightCompat
com.appspa.update.R$styleable: int GradientColor_android_endY
com.appspa.update.R$attr: int showText
androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mBackground
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther: org.reactivestreams.Publisher other
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIconRefine
com.appspa.update.R$layout: int abc_list_menu_item_checkbox
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: io.reactivex.ObservableSource source
androidx.loader.R$styleable: int FontFamilyFont_android_fontWeight
com.appspa.update.R$layout: int abc_cascading_menu_item_layout
com.appspa.demo.R$attr: int backgroundTintMode
com.appspa.demo.R$styleable: int Toolbar_navigationIcon
com.appspa.update.R$styleable: int AppCompatTextView_drawableBottomCompat
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: java.util.concurrent.atomic.AtomicInteger wip
androidx.appcompat.R$id: int accessibility_custom_action_16
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: java.lang.Object value
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: long consumed
com.jakewharton.disklrucache.DiskLruCache: long size
io.reactivex.internal.operators.flowable.FlowableSwitchMap: boolean delayErrors
com.appspa.demo.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.google.gson.stream.JsonWriter: int stackSize
com.xuexiang.xhttp2.R$id: int screen
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.observable.ObservableDoOnEach: io.reactivex.functions.Action onAfterTerminate
io.reactivex.internal.operators.single.SingleFlatMapCompletable: io.reactivex.SingleSource source
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: java.util.ArrayList mAnimators
com.appspa.update.R$color: int abc_primary_text_disable_only_material_dark
io.reactivex.internal.operators.observable.ObservableTimeInterval: io.reactivex.Scheduler scheduler
androidx.viewpager.R$layout: int notification_template_icon_group
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.SubMenuBuilder mSubMenu
androidx.loader.content.Loader: boolean mStarted
io.reactivex.internal.operators.completable.CompletableFromRunnable: java.lang.Runnable runnable
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Small_Inverse
androidx.appcompat.R$styleable: int MenuItem_iconTintMode
com.appspa.update.R$attr: int autoCompleteTextViewStyle
com.appspa.update.R$id: int accessibility_custom_action_23
com.appspa.update.R$styleable: int SwitchCompat_thumbTint
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$sharedElementsIn
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: long serialVersionUID
androidx.core.app.NotificationCompat$Builder: int mBadgeIcon
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: io.reactivex.Scheduler$Worker w
com.appspa.update.R$drawable: int btn_radio_on_mtrl
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: boolean hasNext
okhttp3.internal.http2.Http2Connection$2: okhttp3.internal.http2.Http2Connection this$0
com.appspa.update.R$style: int Base_V7_Theme_AppCompat
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: boolean done
io.reactivex.internal.operators.observable.ObservableRepeatUntil: io.reactivex.functions.BooleanSupplier until
androidx.appcompat.R$attr: int textAppearanceListItem
io.reactivex.internal.operators.flowable.FlowableThrottleLatest: io.reactivex.Scheduler scheduler
androidx.appcompat.view.menu.BaseMenuWrapper: java.util.Map mMenuItems
io.reactivex.internal.subscriptions.BasicQueueSubscription: long serialVersionUID
androidx.core.R$layout: int notification_template_part_chronometer
com.appspa.update.R$styleable: int AppCompatTheme_windowFixedWidthMinor
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence mHeaderTitle
io.reactivex.internal.operators.observable.ObservableElementAt: boolean errorOnFewer
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate: io.reactivex.functions.BiPredicate predicate
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor
androidx.viewpager.R$styleable: int GradientColor_android_tileMode
com.xuexiang.xhttp2.R$drawable: int abc_list_pressed_holo_dark
androidx.customview.R$id: int italic
androidx.appcompat.app.WindowDecorActionBar: long FADE_IN_DURATION_MS
com.appspa.demo.R$attr: int autoSizeTextType
androidx.appcompat.resources.R$id: int accessibility_custom_action_17
com.xuexiang.xhttp2.R$dimen: int abc_alert_dialog_button_bar_height
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory mFactory
androidx.loader.R$styleable: int ColorStateListItem_alpha
com.appspa.update.R$layout: int abc_screen_toolbar
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupId
org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: org.aspectj.lang.reflect.PointcutExpression pc
androidx.appcompat.widget.ActivityChooserModel: int DEFAULT_ACTIVITY_INFLATION
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_imageButtonStyle
com.appspa.demo.R$styleable: int ActionMode_titleTextStyle
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: boolean done
androidx.appcompat.R$styleable: int AlertDialog_showTitle
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_EVENT
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.TextPaint mTempTextPaint
androidx.appcompat.R$styleable: int AlertDialog_android_layout
androidx.appcompat.widget.ShareActionProvider: androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener
com.appspa.update.R$style: int Widget_AppCompat_ActionBar_TabText
com.appspa.update.R$attr: int windowActionModeOverlay
com.appspa.update.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: io.reactivex.functions.BiFunction accumulator
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: io.reactivex.functions.Function mapper
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsets
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable: io.reactivex.functions.Function mapper
androidx.appcompat.app.ToolbarActionBar$1: androidx.appcompat.app.ToolbarActionBar this$0
com.appspa.demo.R$id: int customPanel
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: long serialVersionUID
com.xuexiang.xhttp2.R$color: int material_grey_100
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int MAX_CACHED_BITMAP_SIZE
androidx.appcompat.R$attr: int autoCompleteTextViewStyle
androidx.viewpager.widget.ViewPager: int mGutterSize
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView
androidx.loader.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.widget.SwitchCompat: int MONOSPACE
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification
com.xuexiang.xhttp2.R$styleable: int Toolbar_subtitleTextAppearance
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: boolean disposed
androidx.activity.R$attr: int alpha
com.appspa.update.service.DownloadService$FileDownloadCallBack$3: com.appspa.update.service.DownloadService$FileDownloadCallBack this$1
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$6: com.xuexiang.xhttp2.subsciber.DownloadSubscriber this$0
androidx.loader.R$styleable: int GradientColor_android_startColor
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: boolean inMaybe
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_OPEN
com.xuexiang.xhttp2.R$attr: int iconTint
com.xuexiang.xhttp2.R$styleable: int[] ButtonBarLayout
io.reactivex.observers.TestObserver: java.util.concurrent.atomic.AtomicReference upstream
androidx.fragment.R$id: int tag_screen_reader_focusable
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrtTextViewBoundsExpanded
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: io.reactivex.functions.Function itemTimeoutIndicator
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity
androidx.core.view.PointerIconCompat: int TYPE_NO_DROP
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: io.reactivex.Scheduler$Worker worker
com.appspa.update.R$bool: int abc_action_bar_embed_tabs
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode mIconTintMode
org.reactivestreams.FlowAdapters$FlowPublisherFromReactive: org.reactivestreams.Publisher reactiveStreams
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$styleable: int Toolbar_titleMargin
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorPrimary
androidx.loader.R$styleable: int FontFamilyFont_fontWeight
com.appspa.demo.R$string: int space_lab_ignore
com.appspa.update.entity.UpdateError$ERROR: int CHECK_NO_WIFI
io.reactivex.Scheduler$Worker$PeriodicTask: long lastNowNanoseconds
com.appspa.demo.R$attr: int titleMarginBottom
androidx.appcompat.R$style: int Widget_AppCompat_ProgressBar
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView mMenuView
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: io.reactivex.functions.Function onErrorMapper
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext
androidx.appcompat.resources.R$id: int right_icon
org.aspectj.runtime.reflect.CodeSignatureImpl: java.lang.Class[] exceptionTypes
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.Class clientProviderClass
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.ListMenuPresenter mPresenter
io.reactivex.internal.operators.flowable.FlowableCountSingle: io.reactivex.Flowable source
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments
com.xuexiang.xhttp2.R$id: int time
com.appspa.demo.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.core.view.KeyEventDispatcher: boolean sDialogFieldsFetched
com.appspa.demo.R$attr: int drawableTint
androidx.viewpager.R$id: int notification_main_column
com.appspa.demo.R$style: int Widget_AppCompat_ListView_Menu
androidx.appcompat.app.WindowDecorActionBar$TabImpl: int mPosition
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.appspa.demo.R$id: int action_bar_title
androidx.appcompat.R$styleable: int[] LinearLayoutCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int LINEJOIN_BEVEL
com.appspa.demo.R$id: int action_container
androidx.appcompat.R$attr: int listPreferredItemPaddingEnd
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: io.reactivex.internal.operators.observable.ObservableGroupJoin$JoinSupport parent
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.core.view.ActionProvider itemActionProvider
androidx.loader.R$layout: int notification_action
com.appspa.update.R$styleable: int AppCompatTheme_actionButtonStyle
io.reactivex.internal.observers.BasicFuseableObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: int bufferSize
okhttp3.internal.connection.StreamAllocation: okhttp3.Call call
androidx.appcompat.R$styleable: int GradientColor_android_endX
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_DISMISS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.Pointcut[] declaredPointcuts
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: long maxChildRequested
retrofit2.Retrofit$Builder: boolean validateEagerly
okhttp3.internal.cache2.Relay: int sourceCount
androidx.core.app.RemoteInput$Builder: java.lang.CharSequence[] mChoices
androidx.core.app.NotificationManagerCompat$NotifyTask: android.app.Notification notif
com.appspa.demo.R$style: int Platform_V21_AppCompat
com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node left
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_OBJ
com.appspa.demo.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.appspa.demo.entity.CustomResult: boolean success
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: io.reactivex.CompletableSource other
androidx.appcompat.R$id: int off
androidx.versionedparcelable.VersionedParcelStream: int TYPE_BOOLEAN
org.reactivestreams.FlowAdapters$ReactivePublisherFromFlow: java.util.concurrent.Flow$Publisher flow
io.reactivex.internal.operators.observable.ObservableZip: boolean delayError
com.appspa.demo.R$id: int accessibility_custom_action_14
androidx.vectordrawable.animated.R$drawable: int notification_template_icon_bg
androidx.arch.core.executor.DefaultTaskExecutor: java.lang.Object mLock
com.appspa.demo.R$drawable: int abc_list_selector_background_transition_holo_light
androidx.fragment.R$attr: int font
androidx.appcompat.R$color: int accent_material_dark
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mHyphenationFrequency
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.model.HttpParams mParams
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: io.reactivex.Observer downstream
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_TOUCH_EXPLORATION_MODE
okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean isFirstFrame
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat
com.xuexiang.xhttp2.R$anim: int abc_popup_exit
androidx.core.content.FileProvider: java.lang.String TAG_CACHE_PATH
io.reactivex.internal.operators.observable.ObservableCountSingle: io.reactivex.ObservableSource source
androidx.fragment.R$attr: int fontProviderFetchStrategy
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Inverse
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: int index
com.appspa.demo.R$style: int TextAppearance_AppCompat_Subhead
com.appspa.update.R$color: int abc_primary_text_disable_only_material_light
okio.SegmentPool: okio.Segment next
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver mTreeObserver
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle: io.reactivex.SingleSource other
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicReference boundarySubscriber
androidx.drawerlayout.widget.DrawerLayout: boolean mFirstLayout
androidx.appcompat.widget.TooltipPopup: android.view.WindowManager$LayoutParams mLayoutParams
com.google.gson.internal.LinkedHashTreeMap: int threshold
androidx.appcompat.R$styleable: int[] FontFamilyFont
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes
androidx.versionedparcelable.VersionedParcelParcel: boolean DEBUG
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent actionIntent
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
io.reactivex.internal.operators.observable.ObservableElementAtMaybe: long index
io.reactivex.internal.subscribers.BoundedSubscriber: io.reactivex.functions.Consumer onSubscribe
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SLEEP_10MS
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$style: int Base_Animation_AppCompat_DropDownUp
com.google.gson.stream.JsonWriter: boolean htmlSafe
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
androidx.appcompat.R$attr: int buttonBarButtonStyle
com.appspa.demo.R$styleable: int GradientColor_android_endX
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: int bufferSize
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.appspa.demo.R$id: int chronometer
androidx.core.widget.AutoScrollHelper: int DEFAULT_ACTIVATION_DELAY
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: io.reactivex.disposables.Disposable timer
io.reactivex.internal.operators.observable.ObservableSwitchMap: int bufferSize
io.reactivex.processors.UnicastProcessor: boolean delayError
androidx.appcompat.R$id: int accessibility_custom_action_1
com.appspa.demo.R$styleable: int AppCompatTheme_dividerHorizontal
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: io.reactivex.ObservableSource other
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: int prefetch
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mFrames
androidx.appcompat.widget.ActionMenuPresenter: int mMaxItems
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarTabStyle
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: int size
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_SeekBar_Discrete
androidx.customview.widget.ViewDragHelper: int mTrackingEdges
com.xuexiang.xhttp2.R$attr: int checkboxStyle
androidx.core.app.ActivityOptionsCompat: java.lang.String EXTRA_USAGE_TIME_REPORT
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: int maxConcurrency
io.reactivex.internal.operators.observable.ObservableSkipLastTimed: boolean delayError
io.reactivex.internal.operators.flowable.FlowableIntervalRange: long period
androidx.appcompat.R$id: int action_menu_divider
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground
io.reactivex.internal.operators.observable.ObserverResourceWrapper: io.reactivex.Observer downstream
androidx.appcompat.R$style: int TextAppearance_AppCompat_Tooltip
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable: io.reactivex.MaybeSource source
androidx.customview.R$drawable: int notification_template_icon_bg
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START
androidx.appcompat.R$attr: int contentInsetStartWithNavigation
com.xuexiang.xhttp2.exception.ServerException: int errCode
com.appspa.update.R$styleable: int GradientColorItem_android_color
com.xuexiang.xhttp2.R$dimen: int notification_action_text_size
retrofit2.RequestFactory: retrofit2.ParameterHandler[] parameterHandlers
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.xuexiang.xhttp2.R$dimen: int hint_pressed_alpha_material_dark
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay
androidx.appcompat.R$drawable: int abc_scrubber_primary_mtrl_alpha
androidx.activity.R$dimen: int notification_small_icon_size_as_large
com.appspa.update.R$color: int bright_foreground_material_light
com.xuexiang.xhttp2.R$style: int Platform_Widget_AppCompat_Spinner
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: java.util.concurrent.atomic.AtomicReference subscribers
androidx.appcompat.app.AlertController: java.lang.CharSequence mTitle
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$3: com.xuexiang.xhttp2.subsciber.DownloadSubscriber this$0
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: int mFieldId
org.aspectj.internal.lang.reflect.AjTypeImpl: java.lang.Class clazz
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$drawable: int notification_bg_normal
androidx.core.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: io.reactivex.internal.util.AtomicThrowable errors
com.appspa.update.R$attr: int barLength
com.appspa.update.utils.FileUtils: java.lang.String EXT_PICTURES_PATH
com.xuexiang.xhttp2.R$styleable: int ActionBar_navigationMode
io.reactivex.internal.util.NotificationLite$ErrorNotification: long serialVersionUID
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mBreakStrategy
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.AppSpace: boolean mIsAutoMode
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: io.reactivex.functions.BooleanSupplier stop
io.reactivex.internal.functions.Functions$Array8Func: io.reactivex.functions.Function8 f
com.xuexiang.xhttp2.R$styleable: int FontFamily_fontProviderAuthority
com.appspa.demo.R$id: int collapseActionView
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: long serialVersionUID
com.appspa.demo.R$styleable: int FontFamily_fontProviderQuery
com.appspa.demo.R$attr: int searchViewStyle
androidx.activity.R$dimen: int compat_control_corner_material
androidx.fragment.app.FragmentState: java.lang.String mTag
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: long serialVersionUID
io.reactivex.subscribers.TestSubscriber: boolean cancelled
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: java.util.concurrent.Callable onCompleteSupplier
androidx.appcompat.resources.R$id: int accessibility_custom_action_16
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Tooltip
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.core.app.NotificationManagerCompat: int MAX_SIDE_CHANNEL_SDK_VERSION
com.appspa.update.UpdateManager$Builder: com.appspa.update.proxy.IUpdatePrompter updatePrompter
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.xuexiang.xhttp2.R$styleable: int MenuItem_iconTint
com.appspa.update.R$drawable: int spa_bg_app_info
androidx.customview.widget.ViewDragHelper: int DIRECTION_HORIZONTAL
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: boolean delayError
retrofit2.RequestFactory$Builder: java.lang.String relativeUrl
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: io.reactivex.disposables.Disposable upstream
androidx.loader.R$dimen: int compat_button_inset_horizontal_material
androidx.core.app.NotificationCompat: java.lang.String EXTRA_LARGE_ICON_BIG
okhttp3.OkHttpClient$Builder: int readTimeout
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$SubjectWork: io.reactivex.processors.UnicastProcessor w
androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor
androidx.core.R$id: int icon_group
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTint
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean mIsBack
androidx.loader.R$layout: int notification_template_custom_big
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.appspa.update.R$dimen: int abc_button_inset_horizontal_material
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Title
androidx.core.util.Pools$SynchronizedPool: java.lang.Object mLock
androidx.appcompat.R$styleable: int AppCompatTheme_imageButtonStyle
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_5
com.appspa.update.R$styleable: int Toolbar_subtitleTextColor
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: long serialVersionUID
com.appspa.update.R$styleable: int AppCompatSeekBar_tickMark
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.Scheduler$Worker WORKER
com.appspa.demo.R$id: int checked
io.reactivex.internal.operators.completable.CompletableSubscribeOn: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber: boolean done
retrofit2.adapter.rxjava2.RxJava2CallAdapter: boolean isFlowable
androidx.core.R$styleable: int GradientColorItem_android_offset
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.appspa.demo.R$attr: int fontProviderFetchStrategy
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_visible
okio.Buffer$UnsafeCursor: byte[] data
androidx.core.text.util.FindAddress: java.util.regex.Pattern sZipCodeRe
com.appspa.demo.R$color: int switch_thumb_normal_material_light
com.xuexiang.xhttp2.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_reached_bar_height
com.appspa.update.R$string: int space_error_download_failed
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat mInfo
androidx.loader.content.Loader: boolean mProcessingChange
com.appspa.demo.R$id: int action_bar
com.appspa.update.R$id: int accessibility_custom_action_26
androidx.appcompat.R$id: int action_image
androidx.appcompat.widget.SearchView: int mMaxWidth
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
androidx.appcompat.R$styleable: int AppCompatTextView_drawableBottomCompat
androidx.fragment.app.FragmentTabHost: java.util.ArrayList mTabs
androidx.appcompat.R$styleable: int MenuView_android_windowAnimationStyle
com.appspa.update.R$attr: int editTextColor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
androidx.appcompat.R$attr: int indeterminateProgressStyle
androidx.versionedparcelable.VersionedParcelStream: int TYPE_FLOAT
com.appspa.update.R$styleable: int AppCompatTheme_ratingBarStyleSmall
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReturnTransition
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: org.reactivestreams.Subscription upstream
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
androidx.core.text.util.LinkifyCompat$LinkSpec: int end
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnDismissListener mOnDismissListener
com.xuexiang.xhttp2.R$id: int notification_main_column
androidx.core.R$id: int action_image
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
com.appspa.update.R$string: int abc_menu_alt_shortcut_label
com.xuexiang.xhttp2.R$id: int scrollIndicatorUp
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: int active
io.reactivex.internal.operators.flowable.FlowableCombineLatest: int bufferSize
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: long remaining
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object SENTINEL_CLOSED
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.ArrayList sViewsWithListeners
androidx.core.app.NotificationManagerCompat: android.content.Context mContext
com.xuexiang.xhttp2.R$attr: int alertDialogStyle
io.reactivex.internal.observers.QueueDrainObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$drawable: int abc_text_select_handle_left_mtrl_dark
com.appspa.demo.R$styleable: int LinearLayoutCompat_android_orientation
io.reactivex.subjects.UnicastSubject: java.lang.Throwable error
androidx.activity.R$styleable: int GradientColor_android_endColor
com.appspa.demo.R$attr: int tooltipText
org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl: java.lang.reflect.Method baseMethod
retrofit2.RequestFactory$Builder: boolean gotPath
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: long limit
androidx.viewpager.R$styleable: int GradientColor_android_endColor
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CURRENCY_FACTORY
com.appspa.demo.R$id: int tv_update_info
com.xuexiang.xhttp2.R$dimen: int abc_dialog_corner_radius_material
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources mResources
androidx.appcompat.widget.Toolbar: int mMaxButtonHeight
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText2
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: io.reactivex.internal.util.ErrorMode errorMode
androidx.core.app.RemoteInput: java.lang.CharSequence mLabel
com.appspa.update.R$id: int italic
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.customview.R$dimen: int notification_top_pad_large_text
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: long serialVersionUID
androidx.core.app.FrameMetricsAggregator: int INPUT_DURATION
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarTheme
androidx.appcompat.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_PopupMenu
okio.AsyncTimeout: boolean inQueue
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
com.appspa.update.R$anim: int btn_checkbox_to_checked_icon_null_animation
androidx.appcompat.resources.R$id: int action_container
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: io.reactivex.disposables.Disposable timer
com.jakewharton.disklrucache.DiskLruCache$Entry: boolean readable
com.xuexiang.xhttp2.R$attr: int textAppearanceSearchResultTitle
com.xuexiang.xhttp2.R$id: int action_bar_subtitle
com.appspa.update.R$attr: int actionLayout
com.xuexiang.xhttp2.R$layout: int abc_list_menu_item_checkbox
com.xuexiang.xhttp2.R$attr: int splitTrack
androidx.appcompat.app.AlertController: android.widget.TextView mTitleView
androidx.core.app.NotificationCompat$Builder: int mProgressMax
io.reactivex.internal.operators.single.SingleDoOnSuccess: io.reactivex.SingleSource source
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_FLAGS_KEY
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mStillDown
com.google.gson.internal.Excluder: double IGNORE_VERSIONS
com.appspa.demo.R$id: int split_action_bar
androidx.appcompat.R$style: int TextAppearance_AppCompat_Title_Inverse
com.xuexiang.xhttp2.R$color: int background_floating_material_dark
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: int index
com.xuexiang.xhttp2.R$attr: int backgroundTintMode
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLICK
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: io.reactivex.internal.disposables.SequentialDisposable task
androidx.appcompat.R$attr: int fontProviderFetchStrategy
androidx.drawerlayout.R$id: int normal
com.appspa.update.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.fragment.R$drawable: int notification_bg_low
com.appspa.update.R$styleable: int[] AppCompatSeekBar
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mEnterTransition
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: java.lang.String annText
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon
androidx.core.app.BundleCompat$BundleCompatBaseImpl: java.lang.String TAG
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: io.reactivex.functions.Function mapper
com.appspa.update.R$styleable: int MenuView_preserveIconSpacing
com.appspa.demo.R$attr: int switchPadding
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Menu
androidx.core.util.PatternsCompat: java.lang.String WORD_BOUNDARY
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: boolean disposed
io.reactivex.internal.operators.parallel.ParallelFromPublisher: org.reactivestreams.Publisher source
com.google.gson.stream.JsonReader: java.io.Reader in
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type upperBound
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$style: int XUpdate_Fragment_Dialog
androidx.appcompat.R$attr: int listChoiceBackgroundIndicator
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.LongSparseArray mTransitions
com.appspa.demo.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textColorSearchUrl
com.xuexiang.xhttp2.R$layout: int notification_template_icon_group
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_12
com.appspa.update.R$dimen: int abc_dialog_fixed_width_major
com.appspa.demo.R$color: int space_button_text_color
androidx.appcompat.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeCutDrawable
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCloseDrawable
com.appspa.update.R$styleable: int AppCompatTextView_drawableEndCompat
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_IF_ROOM
androidx.core.app.NotificationCompat: int FLAG_HIGH_PRIORITY
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$id: int ALT
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar
com.appspa.update.R$dimen: int notification_right_side_padding_top
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_7
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_19
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: org.reactivestreams.Subscription upstream
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: retrofit2.Call $this_await$inlined
com.xuexiang.xhttp2.R$styleable: int Toolbar_menu
androidx.appcompat.widget.ActionMenuView: int GENERATED_ITEM_PADDING
androidx.appcompat.widget.ForwardingListener: float mScaledTouchSlop
androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
io.reactivex.internal.queue.SpscArrayQueue: int lookAheadStep
io.reactivex.internal.operators.single.SingleError: java.util.concurrent.Callable errorSupplier
com.zhy.http.okhttp.request.OkHttpRequest: java.lang.String url
androidx.appcompat.R$id: int accessibility_custom_action_26
io.reactivex.internal.operators.observable.ObservableJoin: io.reactivex.functions.Function leftEnd
androidx.core.widget.ContentLoadingProgressBar: int MIN_DELAY
com.xuexiang.xhttp2.utils.Utils: java.lang.String EXT_DOWNLOADS_PATH
com.appspa.update.R$string: int abc_menu_enter_shortcut_label
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_END
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: int maxConcurrency
androidx.appcompat.R$attr: int borderlessButtonStyle
io.reactivex.internal.operators.parallel.ParallelSortedJoin: java.util.Comparator comparator
com.appspa.demo.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: long produced
com.appspa.update.R$style: int Base_Widget_AppCompat_Spinner
com.xuexiang.xhttp2.R$styleable: int MenuGroup_android_menuCategory
androidx.appcompat.R$dimen: int abc_action_bar_subtitle_top_margin_material
androidx.versionedparcelable.VersionedParcelStream: int TYPE_DOUBLE
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: long serialVersionUID
androidx.drawerlayout.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: io.reactivex.Observer downstream
androidx.activity.R$id: int action_text
androidx.viewpager.widget.ViewPager: int mTouchSlop
androidx.appcompat.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: long serialVersionUID
androidx.core.view.PointerIconCompat: int TYPE_CONTEXT_MENU
okhttp3.HttpUrl: char[] HEX_DIGITS
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: java.util.concurrent.Executor callbackExecutor
androidx.appcompat.view.menu.MenuPopupHelper: android.view.View mAnchorView
com.google.gson.DefaultDateTypeAdapter: java.lang.String SIMPLE_NAME
com.google.gson.internal.Excluder$1: com.google.gson.Gson val$gson
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: int prefetch
androidx.fragment.R$styleable: int FontFamilyFont_android_fontStyle
com.xuexiang.xhttp2.R$layout: int abc_action_bar_title_item
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.internal.schedulers.RxThreadFactory THREAD_FACTORY
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnComplete: io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver this$0
androidx.appcompat.resources.R$dimen: int notification_content_margin_start
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listMenuViewStyle
com.appspa.demo.R$drawable: int abc_btn_colored_material
androidx.vectordrawable.animated.R$layout: int notification_template_icon_group
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor$MulticastSubscription[] TERMINATED
androidx.appcompat.R$style: int Widget_AppCompat_Button_Small
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: boolean errorOnFewer
androidx.core.app.NotificationCompat$Builder: java.lang.String mGroupKey
androidx.vectordrawable.animated.R$dimen: int notification_top_pad
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop
androidx.appcompat.R$color: int error_color_material_dark
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: int sourceMode
androidx.appcompat.app.AlertController$2: android.view.View val$top
androidx.fragment.R$id: int accessibility_custom_action_25
androidx.core.view.PointerIconCompat: int TYPE_GRABBING
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.Toolbar mToolbar
com.appspa.demo.R$id: int title
com.appspa.demo.R$style: int ThemeOverlay_AppCompat
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Button_Borderless
com.appspa.demo.R$styleable: int AppCompatTheme_windowFixedHeightMajor
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.CompletableObserver downstream
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Medium
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.FragmentTransaction mCurTransaction
androidx.appcompat.view.menu.MenuBuilder: android.view.View mHeaderView
androidx.appcompat.R$style: int Widget_AppCompat_Light_PopupMenu
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize
com.appspa.demo.R$styleable: int SearchView_defaultQueryHint
com.appspa.demo.R$attr: int xnpb_reached_bar_height
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.appcompat.app.AlertController$AlertParams: android.widget.ListAdapter mAdapter
com.appspa.demo.R$style: int Theme_AppCompat_Dialog_MinWidth
com.zhy.http.okhttp.builder.PostFormBuilder$FileInput: java.lang.String key
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
com.appspa.update.R$layout: int abc_action_mode_bar
com.appspa.update.R$attr: int searchIcon
io.reactivex.internal.operators.observable.ObservableTimeoutTimed: java.util.concurrent.TimeUnit unit
com.appspa.demo.R$id: int useLogo
io.reactivex.processors.MulticastProcessor: java.util.concurrent.atomic.AtomicInteger wip
androidx.core.app.Person: java.lang.String mKey
androidx.vectordrawable.animated.R$color: int secondary_text_default_material_light
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: io.reactivex.disposables.Disposable upstream
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: int MAX_NUM_POINTS
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$SingletonArrayFunc: io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany this$0
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$2: com.xuexiang.xhttp2.subsciber.DownloadSubscriber this$0
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback
com.xuexiang.xhttp2.R$attr: int actionMenuTextColor
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.appcompat.widget.ActionMenuPresenter: int mActionItemWidthLimit
androidx.appcompat.R$dimen: int abc_dialog_padding_material
androidx.customview.widget.ViewDragHelper: float[] mInitialMotionX
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: long timespan
androidx.core.app.ActivityRecreator$1: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
androidx.appcompat.R$drawable: int abc_list_selector_background_transition_holo_dark
com.appspa.update.R$attr: int colorButtonNormal
androidx.activity.R$styleable: int GradientColorItem_android_color
com.appspa.demo.R$styleable: int[] LinearLayoutCompat_Layout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: int capacityHint
com.appspa.demo.R$color: int space_default_bg_color
com.appspa.update.R$anim: int abc_fade_out
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
androidx.core.R$drawable: int notification_icon_background
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth
okhttp3.internal.cache.DiskLruCache: boolean $assertionsDisabled
androidx.core.R$id: int accessibility_custom_action_20
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
androidx.appcompat.widget.LinearLayoutCompat: float mWeightSum
com.appspa.update.R$styleable: int MenuItem_android_checkable
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
io.reactivex.internal.operators.observable.ObservableSkip: long n
androidx.core.provider.SelfDestructiveThread: int MSG_DESTRUCTION
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: io.reactivex.disposables.CompositeDisposable allWorkers
androidx.customview.R$id: int icon
androidx.fragment.app.Fragment: boolean mIsCreated
io.reactivex.disposables.SerialDisposable: java.util.concurrent.atomic.AtomicReference resource
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
androidx.viewpager.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mTtcIndex
io.reactivex.processors.MulticastProcessor: boolean done
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: int index
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.single.SingleNever: io.reactivex.Single INSTANCE
androidx.drawerlayout.widget.DrawerLayout: int mLockModeEnd
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: io.reactivex.ObservableSource source
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_overflow_padding_start_material
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String EXTRA_WEARABLE_EXTENSIONS
androidx.customview.R$attr: int fontProviderAuthority
androidx.customview.widget.ExploreByTouchHelper: int[] mTempGlobalRect
com.appspa.update.R$styleable: int AppCompatSeekBar_android_thumb
io.reactivex.internal.operators.observable.ObservableEmpty: io.reactivex.Observable INSTANCE
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: io.reactivex.Observer downstream
okhttp3.Protocol: okhttp3.Protocol SPDY_3
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize
com.appspa.update.R$drawable: int abc_text_select_handle_right_mtrl_light
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_FOLLOW_SYSTEM
com.xuexiang.xhttp2.R$styleable: int[] AppCompatSeekBar
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: io.reactivex.Observer downstream
androidx.core.view.PointerIconCompat: int TYPE_HAND
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.observable.ObservableBuffer: java.util.concurrent.Callable bufferSupplier
io.reactivex.internal.operators.observable.ObservablePublishAlt: io.reactivex.ObservableSource source
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: io.reactivex.Observer downstream
com.appspa.demo.R$id: int et_service_url
com.appspa.update.R$dimen: int space_content_padding
androidx.appcompat.widget.AppCompatProgressBarHelper: int[] TINT_ATTRS
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber this$0
com.appspa.demo.R$styleable: int ActionBar_progressBarStyle
androidx.loader.R$drawable: int notification_template_icon_bg
androidx.versionedparcelable.VersionedParcel: int TYPE_SERIALIZABLE
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ListPopupWindow
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: boolean done
com.appspa.demo.R$drawable: int abc_btn_borderless_material
com.appspa.update.R$dimen: int notification_small_icon_background_padding
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: int ON_NEXT
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter emitter
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.appspa.demo.R$attr: int listLayout
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.schedulers.RxThreadFactory: boolean nonBlocking
org.aspectj.internal.lang.reflect.PerClauseImpl: org.aspectj.lang.reflect.PerClauseKind kind
com.appspa.update.R$layout: int select_dialog_item_material
org.aspectj.lang.Aspects: java.lang.Class[] PEROBJECT_CLASS_ARRAY
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.customview.widget.ExploreByTouchHelper this$0
okhttp3.internal.http1.Http1Codec$AbstractSource: okhttp3.internal.http1.Http1Codec this$0
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
com.appspa.demo.R$attr: int colorButtonNormal
io.reactivex.internal.operators.completable.CompletableToObservable: io.reactivex.CompletableSource source
com.appspa.update.R$style: int Widget_AppCompat_ActionBar_TabView
com.appspa.demo.R$styleable: int View_paddingEnd
androidx.appcompat.R$id: int blocking
androidx.drawerlayout.R$layout: int notification_action
androidx.appcompat.R$dimen: int disabled_alpha_material_light
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: boolean cancelled
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRelative
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: io.reactivex.functions.Predicate predicate
com.appspa.update.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.appspa.demo.R$id: int middle
androidx.appcompat.R$style: int Widget_AppCompat_AutoCompleteTextView
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: io.reactivex.Observer downstream
androidx.viewpager.R$styleable: int GradientColor_android_endY
androidx.core.app.ServiceCompat: int STOP_FOREGROUND_DETACH
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: boolean hasValue
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
com.xuexiang.xhttp2.R$drawable: int abc_text_select_handle_middle_mtrl_dark
com.xuexiang.xhttp2.R$attr: int showAsAction
com.appspa.demo.R$attr: int homeLayout
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite COMPLETE
com.appspa.update.R$styleable: int ActionBar_contentInsetStart
io.reactivex.internal.operators.completable.CompletableFromAction: io.reactivex.functions.Action run
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME
androidx.appcompat.R$styleable: int ActionBar_itemPadding
okhttp3.RequestBody$2: int val$byteCount
com.appspa.update.R$styleable: int SwitchCompat_android_textOff
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$attr: int autoSizeMinTextSize
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Light_NoActionBar
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher: io.reactivex.MaybeSource fallback
androidx.appcompat.R$attr: int font
com.appspa.demo.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.core.content.res.ResourcesCompat$FontCallback$1: androidx.core.content.res.ResourcesCompat$FontCallback this$0
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast: java.util.concurrent.atomic.AtomicInteger wip
androidx.fragment.app.FragmentManagerImpl$3: android.view.ViewGroup val$container
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: boolean done
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: java.util.concurrent.atomic.AtomicLongArray requests
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
io.reactivex.internal.queue.SpscArrayQueue: java.util.concurrent.atomic.AtomicLong consumerIndex
androidx.loader.content.Loader: androidx.loader.content.Loader$OnLoadCompleteListener mListener
androidx.appcompat.widget.SwitchCompat: android.animation.ObjectAnimator mPositionAnimator
androidx.fragment.app.BackStackState: int mIndex
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.lang.Object HAS_NEXT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
io.reactivex.processors.UnicastProcessor: boolean done
io.reactivex.processors.MulticastProcessor: int bufferSize
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.appspa.demo.R$layout: int abc_action_mode_close_item_material
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.appcompat.R$color: int secondary_text_default_material_dark
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest
android.support.v4.os.ResultReceiver$MyRunnable: int mResultCode
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_text_size
androidx.appcompat.R$id: int search_bar
androidx.core.R$layout: int notification_template_part_time
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask: io.reactivex.CompletableObserver downstream
com.xuexiang.xhttp2.request.BaseRequest: java.util.List mCookies
com.appspa.update.R$style: int Animation_AppCompat_Tooltip
androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean DEBUG
androidx.appcompat.widget.AppCompatTextView: java.util.concurrent.Future mPrecomputedTextFuture
com.appspa.update.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.appcompat.R$attr: int actionMenuTextColor
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ImageButton
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mForceShowIcon
androidx.appcompat.widget.SwitchCompat: int[] CHECKED_STATE_SET
androidx.vectordrawable.R$attr: int fontProviderCerts
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0
okhttp3.internal.http1.Http1Codec: long headerLimit
com.xuexiang.xhttp2.R$drawable: int abc_list_pressed_holo_light
com.xuexiang.xhttp2.R$attr: int buttonStyle
androidx.appcompat.app.AppCompatDelegate: java.lang.String TAG
androidx.appcompat.resources.R$color: int ripple_material_light
com.appspa.update.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.appspa.demo.R$layout: int abc_screen_toolbar
com.appspa.update.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.appspa.update.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.appspa.update.R$attr: int toolbarNavigationButtonStyle
com.xuexiang.xhttp2.R$drawable: int abc_btn_borderless_material
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: io.reactivex.Observer downstream
io.reactivex.subjects.AsyncSubject: java.util.concurrent.atomic.AtomicReference subscribers
com.xuexiang.xhttp2.R$id: int action_bar_spinner
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_ACTION_EXTRAS
com.appspa.demo.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.resources.R$styleable: int[] StateListDrawable
androidx.core.graphics.TypefaceCompatBaseImpl$2: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.lifecycle.ClassesInfoCache: int CALL_TYPE_PROVIDER
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
com.google.gson.stream.JsonReader: int stackSize
io.reactivex.internal.operators.observable.ObservableIntervalRange: long initialDelay
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: long serialVersionUID
com.appspa.demo.R$style: int Platform_AppCompat_Light
androidx.loader.R$styleable: int FontFamily_fontProviderQuery
androidx.lifecycle.ViewModel: java.util.Map mBagOfTags
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mRotate
com.xuexiang.xhttp2.R$styleable: int Toolbar_contentInsetEndWithActions
io.reactivex.internal.schedulers.IoScheduler$ThreadWorker: long expirationTime
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
androidx.appcompat.resources.R$id: int blocking
androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory skipPast
com.appspa.update.R$drawable: int notification_template_icon_bg
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor
androidx.appcompat.widget.ActionMenuPresenter$SavedState: int openSubMenuId
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_ALWAYS
androidx.fragment.app.FragmentActivity: boolean mStartedActivityFromFragment
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mSubMenuArrow
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: java.util.concurrent.atomic.AtomicReference error
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: boolean notSkipping
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: io.reactivex.MaybeObserver downstream
com.appspa.demo.R$styleable: int View_paddingStart
okio.RealBufferedSink: okio.Buffer buffer
io.reactivex.processors.SerializedProcessor: io.reactivex.internal.util.AppendOnlyLinkedArrayList queue
io.reactivex.internal.operators.parallel.ParallelConcatMap: int prefetch
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: boolean cancelled
androidx.core.app.ShareCompat$IntentBuilder: android.app.Activity mActivity
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: boolean done
io.reactivex.internal.operators.single.SingleZipArray: io.reactivex.functions.Function zipper
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: io.reactivex.functions.Action onOverflow
androidx.vectordrawable.animated.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription[] TERMINATED
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableSequenceEqual: io.reactivex.ObservableSource first
com.xuexiang.xhttp2.R$color: int material_deep_teal_500
com.appspa.update.R$styleable: int[] ViewBackgroundHelper
okhttp3.Request: okhttp3.RequestBody body
androidx.fragment.R$attr: int fontProviderQuery
com.appspa.update.R$style: int Base_Theme_AppCompat_Dialog
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.appspa.demo.R$styleable: int AppCompatImageView_tintMode
com.appspa.update.R$string: int space_lab_background_update
io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle: io.reactivex.internal.operators.completable.CompletableToSingle this$0
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_ratingBarStyleSmall
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_TOP
com.appspa.demo.R$styleable: int[] ActionBar
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.customview.widget.ViewDragHelper: java.lang.String TAG
androidx.fragment.app.FragmentState: int mFragmentId
com.appspa.update.R$styleable: int GradientColor_android_tileMode
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: boolean cancelled
com.appspa.demo.R$dimen: int space_button_text_size
com.appspa.demo.R$string: int space_lab_update
com.xuexiang.xhttp2.R$id: int action_mode_close_button
com.appspa.demo.R$dimen: int abc_text_size_display_1_material
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver: long serialVersionUID
androidx.vectordrawable.R$style: int Widget_Compat_NotificationActionContainer
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: boolean isLeft
retrofit2.ParameterHandler$Tag: java.lang.Class cls
androidx.appcompat.R$dimen: int abc_alert_dialog_button_bar_height
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren
com.xuexiang.xhttp2.R$styleable: int PopupWindow_android_popupBackground
okhttp3.internal.cache.DiskLruCache$1: okhttp3.internal.cache.DiskLruCache this$0
androidx.appcompat.R$styleable: int AlertDialog_buttonPanelSideLayout
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: boolean cancelled
androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP
androidx.viewpager.R$styleable: int FontFamily_fontProviderFetchTimeout
com.appspa.update.logs.UpdateLog: int sLogPriority
androidx.viewpager.widget.ViewPager: int MIN_DISTANCE_FOR_FLING
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect val$epicenter
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: androidx.appcompat.widget.ShareActionProvider this$0
com.appspa.demo.R$style: int Widget_AppCompat_ActionBar
com.appspa.demo.R$string: int abc_search_hint
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
io.reactivex.subjects.MaybeSubject: io.reactivex.subjects.MaybeSubject$MaybeDisposable[] EMPTY
com.appspa.demo.R$dimen: int notification_action_text_size
androidx.viewpager.widget.ViewPager$PagerObserver: androidx.viewpager.widget.ViewPager this$0
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$CompletionTask: io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver this$0
com.appspa.demo.R$drawable: int abc_ic_clear_material
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
io.reactivex.internal.schedulers.NewThreadWorker: boolean disposed
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_ACTIONS
io.reactivex.internal.operators.observable.ObservableGroupJoin: io.reactivex.ObservableSource other
androidx.appcompat.resources.R$id: int accessibility_action_clickable_span
com.appspa.demo.R$attr: int panelBackground
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.appspa.update.R$anim: int abc_slide_out_top
com.xuexiang.xhttp2.R$styleable: int MenuView_preserveIconSpacing
com.appspa.demo.R$style: int Widget_AppCompat_ListMenuView
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.appspa.demo.R$layout: int abc_dialog_title_material
com.appspa.update.R$layout: int abc_action_menu_item_layout
okio.GzipSink: okio.BufferedSink sink
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: java.lang.Object last
com.appspa.update.R$style: int TextAppearance_AppCompat_Small
com.xuexiang.xhttp2.R$drawable: int abc_seekbar_tick_mark_material
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast: long serialVersionUID
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionMode
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: long serialVersionUID
com.appspa.demo.R$styleable: int AppCompatTheme_selectableItemBackground
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver inner
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP
com.appspa.demo.R$styleable: int FontFamilyFont_fontVariationSettings
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler COMPUTATION
androidx.appcompat.R$dimen: int notification_content_margin_start
io.reactivex.internal.operators.observable.ObservableMap$MapObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit: java.util.Collection buffer
androidx.core.text.util.FindAddress: java.lang.String HOUSE_PRE_DELIM
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: org.aspectj.lang.reflect.SignaturePattern signaturePattern
okhttp3.internal.http2.Header: okio.ByteString value
com.appspa.update.R$color: int primary_dark_material_light
androidx.appcompat.R$attr: int autoSizeStepGranularity
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_alertDialogTheme
androidx.fragment.R$attr: int fontProviderPackage
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_autoSizeTextType
com.xuexiang.xhttp2.R$layout: int notification_action_tombstone
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: int bufferSize
io.reactivex.internal.subscriptions.ScalarSubscription: int NO_REQUEST
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: long uniqueId
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_20
androidx.vectordrawable.R$drawable: int notification_bg_low_pressed
androidx.appcompat.R$styleable: int GradientColor_android_type
org.aspectj.internal.lang.reflect.AdviceImpl: org.aspectj.lang.reflect.AjType[] exceptionTypes
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.appspa.demo.R$styleable: int[] LinearLayoutCompat
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: boolean done
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: java.util.concurrent.atomic.AtomicReference error
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
io.reactivex.internal.schedulers.SchedulerWhen: io.reactivex.Scheduler actualScheduler
com.appspa.demo.R$style: int Widget_AppCompat_Button
androidx.core.widget.TextViewCompat: int LINES
androidx.appcompat.resources.R$layout: int notification_template_icon_group
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$KeySet keySet
androidx.appcompat.R$style: int Base_DialogWindowTitleBackground_AppCompat
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: boolean done
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.functions.LongConsumer onRequest
io.reactivex.internal.operators.flowable.FlowableLastMaybe: org.reactivestreams.Publisher source
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: io.reactivex.disposables.Disposable upstream
androidx.appcompat.resources.R$dimen: int compat_button_padding_horizontal_material
com.xuexiang.xhttp2.R$dimen: int abc_list_item_height_material
com.appspa.update.R$attr: int font
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesNonTouch
androidx.appcompat.widget.ActionMenuView: int mPopupTheme
androidx.fragment.app.FragmentTransaction: int mTransition
com.appspa.update.R$attr: int paddingEnd
androidx.appcompat.R$id: int search_plate
com.xuexiang.xhttp2.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.appspa.demo.R$attr: int showText
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorCompat this$0
com.appspa.demo.R$attr: int tint
androidx.appcompat.R$dimen: int abc_dialog_min_width_major
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener mListener
androidx.appcompat.R$styleable: int ActionBar_customNavigationLayout
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: int count
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: java.lang.Throwable error
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth
androidx.appcompat.R$style: int TextAppearance_AppCompat_Medium_Inverse
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: io.reactivex.internal.queue.MpscLinkedQueue queue
androidx.customview.R$dimen: int notification_right_icon_size
io.reactivex.internal.operators.flowable.FlowablePublish$FlowablePublisher: int bufferSize
com.appspa.update.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: java.lang.Object item
androidx.activity.R$id: int accessibility_custom_action_7
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: int FINISHED
androidx.appcompat.R$layout: int abc_popup_menu_item_layout
com.xuexiang.xhttp2.R$styleable: int MenuItem_numericModifiers
com.appspa.update.R$styleable: int SearchView_searchIcon
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: java.util.concurrent.atomic.AtomicReference upstream
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader$1: com.xuexiang.xhttp2.subsciber.ProgressDialogLoader this$0
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
io.reactivex.subjects.AsyncSubject$AsyncDisposable: io.reactivex.subjects.AsyncSubject parent
com.appspa.demo.R$styleable: int AppCompatTheme_textColorSearchUrl
com.xuexiang.xhttp2.R$styleable: int[] StateListDrawableItem
androidx.appcompat.widget.ActivityChooserView: boolean mIsAttachedToWindow
com.xuexiang.xhttp2.model.ExpiredInfo: int mCode
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int mChangingConfigurations
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_INHERIT
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: io.reactivex.MaybeObserver downstream
com.xuexiang.xhttp2.R$styleable: int ActionBar_progressBarStyle
androidx.appcompat.R$string: int abc_searchview_description_clear
io.reactivex.internal.operators.single.SingleZipIterable$SingletonArrayFunc: io.reactivex.internal.operators.single.SingleZipIterable this$0
androidx.appcompat.R$dimen: int notification_action_text_size
io.reactivex.internal.operators.completable.CompletablePeek: io.reactivex.functions.Action onComplete
com.appspa.update.R$anim: int abc_grow_fade_in_from_bottom
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_android_thumb
io.reactivex.internal.util.LinkedArrayList: java.lang.Object[] head
okhttp3.internal.http2.Header: int hpackSize
okhttp3.CacheControl: boolean noStore
androidx.appcompat.resources.R$id: int icon_group
androidx.customview.R$dimen: int notification_main_column_padding_top
androidx.core.graphics.TypefaceCompat: androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyleSmall
com.appspa.demo.R$attr: int actionOverflowMenuStyle
com.appspa.update.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mTitleSet
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError: io.reactivex.Observer observer
androidx.vectordrawable.R$drawable: int notification_bg
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: boolean delayError
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: boolean hasNext
com.appspa.update.R$color: int button_material_light
androidx.fragment.app.FragmentTransaction: int TRANSIT_UNSET
com.xuexiang.xhttp2.cache.stategy.NoStrategy$1: com.xuexiang.xhttp2.cache.stategy.NoStrategy this$0
androidx.appcompat.widget.SwitchCompat: boolean mHasThumbTintMode
androidx.core.app.NotificationCompat$BigPictureStyle: android.graphics.Bitmap mPicture
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: long serialVersionUID
com.appspa.demo.R$attr: int xnpb_text_offset
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mTabView
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable mPendingOverflowIcon
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: io.reactivex.SingleSource other
androidx.vectordrawable.animated.R$styleable: int GradientColorItem_android_color
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorFilter mCursorFilter
androidx.core.view.InputDeviceCompat: int SOURCE_MOUSE
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int HAS_REQUEST_NO_VALUE
io.reactivex.internal.observers.ForEachWhileObserver: io.reactivex.functions.Predicate onNext
androidx.fragment.app.FragmentPagerAdapter: java.lang.String TAG
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_3
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: long serialVersionUID
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$styleable: int ViewStubCompat_android_layout
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener
com.appspa.demo.R$styleable: int MenuItem_actionLayout
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$SingletonArrayFunc: io.reactivex.internal.operators.observable.ObservableWithLatestFromMany this$0
androidx.appcompat.R$attr: int queryBackground
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: boolean done
com.appspa.demo.R$layout: int abc_alert_dialog_material
okhttp3.Dispatcher: java.util.Deque runningAsyncCalls
retrofit2.HttpServiceMethod$SuspendForBody: boolean isNullable
androidx.appcompat.R$styleable: int ActionBar_titleTextStyle
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter INTEGER
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_3
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: boolean hasNext
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: io.reactivex.functions.BiFunction resultSelector
com.appspa.demo.R$drawable: int abc_ic_menu_overflow_material
com.appspa.demo.R$attr: int lineHeight
androidx.versionedparcelable.VersionedParcelStream: int TYPE_LONG_ARRAY
androidx.core.text.TextDirectionHeuristicsCompat: int STATE_UNKNOWN
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed: java.util.concurrent.TimeUnit unit
com.xuexiang.xhttp2.R$style: int Base_V7_Theme_AppCompat
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_startColor
androidx.appcompat.R$id: int notification_main_column_container
io.reactivex.internal.operators.flowable.FlowablePublish: java.util.concurrent.atomic.AtomicReference current
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.appspa.update.R$id: int submit_area
com.appspa.update.R$dimen: int space_close_line_height
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification_Title
com.xuexiang.xhttp2.R$dimen: int abc_dialog_fixed_width_major
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: io.reactivex.Observer downstream
com.appspa.update.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver this$0
com.appspa.demo.R$attr: int listPreferredItemHeightSmall
com.appspa.demo.R$styleable: int ViewBackgroundHelper_backgroundTintMode
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
androidx.fragment.app.FragmentTabHost$TabInfo: android.os.Bundle args
androidx.core.text.util.FindAddress: int MAX_ADDRESS_WORDS
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String name
androidx.appcompat.R$style: int Base_Widget_AppCompat_Spinner
androidx.appcompat.R$styleable: int ActionBar_icon
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay: java.util.concurrent.TimeUnit unit
com.appspa.demo.R$styleable: int[] MenuItem
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac mMac
com.appspa.update.R$dimen: int abc_dialog_corner_radius_material
androidx.vectordrawable.R$styleable: int[] ColorStateListItem
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: java.util.concurrent.TimeUnit unit
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file
com.xuexiang.xhttp2.R$attr: int submitBackground
io.reactivex.internal.operators.observable.ObservableDelay: io.reactivex.Scheduler scheduler
com.appspa.update.R$id: int invisible
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleLeft
androidx.core.R$styleable: int GradientColorItem_android_color
androidx.fragment.app.Fragment: android.view.View mInnerView
okio.AsyncTimeout: okio.AsyncTimeout head
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast: java.util.concurrent.atomic.AtomicInteger wip
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: boolean done
io.reactivex.internal.operators.single.SingleOnErrorReturn: io.reactivex.SingleSource source
androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription
com.xuexiang.xhttp2.R$color: int button_material_light
androidx.customview.R$styleable: int FontFamily_fontProviderQuery
androidx.activity.R$attr: int fontProviderPackage
com.appspa.update.R$styleable: int[] GradientColor
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
okhttp3.Cookie: java.lang.String domain
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: long maxAge
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: boolean done
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: io.reactivex.disposables.Disposable upstream
androidx.core.provider.FontRequest: java.lang.String mProviderAuthority
com.appspa.demo.R$style: int Widget_AppCompat_Light_ListPopupWindow
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.reflect.Method mSetExclusiveCheckableMethod
com.appspa.demo.R$dimen: int tooltip_vertical_padding
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController val$dialog
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.logs.HttpLog: com.xuexiang.xhttp2.logs.ILogger sILogger
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy ERROR
androidx.appcompat.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDelegate
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$id: int icon_group
com.appspa.demo.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.xuexiang.xhttp2.R$style: int Base_AlertDialog_AppCompat_Light
com.appspa.demo.R$styleable: int MenuItem_android_title
androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET
com.jakewharton.disklrucache.DiskLruCache$Snapshot: com.jakewharton.disklrucache.DiskLruCache this$0
com.appspa.demo.R$styleable: int AlertDialog_multiChoiceItemLayout
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: long serialVersionUID
androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: org.reactivestreams.Subscriber downstream
okhttp3.internal.http2.Http2Connection$6: boolean val$inFinished
io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleGenerator: io.reactivex.functions.Consumer consumer
androidx.core.app.NotificationCompat$WearableExtender: int DEFAULT_GRAVITY
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: boolean isLeft
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: long REQUEST_MASK
io.reactivex.processors.UnicastProcessor: boolean enableOperatorFusion
okhttp3.internal.http2.Http2Codec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription: long serialVersionUID
com.appspa.demo.R$styleable: int AppCompatTheme_windowFixedWidthMajor
io.reactivex.internal.operators.observable.ObservableDebounceTimed: long timeout
retrofit2.RequestBuilder: okhttp3.HttpUrl$Builder urlBuilder
com.appspa.update.R$drawable: int abc_text_select_handle_left_mtrl_dark
androidx.fragment.app.Fragment: boolean mHasMenu
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type ownerType
androidx.appcompat.R$drawable: int abc_btn_switch_to_on_mtrl_00012
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: io.reactivex.Scheduler$Worker worker
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification
okio.Segment: boolean shared
com.appspa.demo.R$drawable: int abc_ic_star_half_black_48dp
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: boolean done
androidx.customview.widget.ViewDragHelper: int mActivePointerId
androidx.core.widget.NestedScrollView: boolean mIsBeingDragged
com.appspa.update.R$style: int ThemeOverlay_AppCompat_DayNight
androidx.core.app.NotificationCompat: java.lang.String EXTRA_AUDIO_CONTENTS_URI
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: long serialVersionUID
androidx.appcompat.R$attr: int showAsAction
com.google.gson.internal.Excluder$1: com.google.gson.internal.Excluder this$0
com.xuexiang.xhttp2.R$attr: int autoSizeStepGranularity
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SLEEP_100MS
androidx.core.app.ActivityCompat$1: android.app.Activity val$activity
androidx.core.text.BidiFormatter: int DEFAULT_FLAGS
com.appspa.update.R$style: int Base_Animation_AppCompat_DropDownUp
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: long serialVersionUID
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText
com.xuexiang.xhttp2.model.ExpiredInfo: boolean mIsExpired
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe: io.reactivex.MaybeSource other
com.google.gson.stream.JsonReader: int PEEKED_END_OBJECT
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_FONT_NOT_FOUND
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_toolbarStyle
com.appspa.update.R$drawable: int abc_ic_voice_search_api_material
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$attr: int menu
androidx.drawerlayout.R$style: int Widget_Compat_NotificationActionText
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: io.reactivex.functions.Function valueSelector
androidx.customview.R$styleable: int[] ColorStateListItem
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
com.xuexiang.xhttp2.R$styleable: int[] AppCompatTextHelper
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY
androidx.appcompat.R$attr: int toolbarNavigationButtonStyle
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.functions.Action onComplete
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: java.lang.Object value
com.appspa.demo.R$style: int Base_Widget_AppCompat_Spinner
androidx.appcompat.R$id: int textSpacerNoButtons
com.appspa.update.R$styleable: int AppCompatTheme_buttonBarButtonStyle
androidx.drawerlayout.R$id: int actions
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.appcompat.R$attr: int titleMarginTop
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate: io.reactivex.MaybeSource source
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mRemoteInputs
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: boolean matchRawType
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: boolean done
com.xuexiang.xhttp2.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
androidx.appcompat.R$dimen: int tooltip_precise_anchor_extra_offset
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CUSTOM_CONTENT_HEIGHT
androidx.drawerlayout.widget.DrawerLayout$SavedState: int openDrawerGravity
com.appspa.update.R$integer: int config_tooltipAnimTime
io.reactivex.internal.operators.observable.ObservableFromFuture: long timeout
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.util.concurrent.atomic.AtomicReferenceArray producerBuffer
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_COOKIE2
com.appspa.demo.R$string: int space_error_check_apk_cache_dir_empty
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.Menu menu
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: int consumed
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_orderInCategory
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.observable.ObservableReduceWithSingle: io.reactivex.ObservableSource source
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutAlphabeticChar
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: io.reactivex.CompletableObserver downstream
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor
androidx.core.widget.AutoScrollHelper: int mEdgeType
com.appspa.demo.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
androidx.appcompat.R$color: int material_grey_850
com.appspa.demo.R$color: int abc_background_cache_hint_selector_material_light
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: io.reactivex.SingleObserver downstream
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_6
okio.Base64: byte[] MAP
androidx.appcompat.R$styleable: int AppCompatTheme_toolbarStyle
com.appspa.demo.R$styleable: int MenuView_android_itemBackground
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.XHttp sInstance
com.appspa.demo.R$styleable: int AppCompatTheme_ratingBarStyleSmall
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String CONTENT_MIME_TYPES_INTEROP_KEY
androidx.appcompat.R$color: int background_material_dark
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy[] $VALUES
com.appspa.update.R$color: int switch_thumb_normal_material_light
okio.Buffer$1: okio.Buffer this$0
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody: com.xuexiang.xhttp2.request.body.UploadProgressRequestBody$CountingSink countingSink
androidx.activity.R$attr: int font
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1: androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback this$0
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: io.reactivex.functions.Function close
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onIoHandler
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: boolean mShowFooterView
androidx.appcompat.view.menu.ListMenuPresenter: java.lang.String TAG
retrofit2.ParameterHandler$Path: java.lang.reflect.Method method
androidx.core.R$layout: int notification_action_tombstone
org.aspectj.runtime.reflect.StringMaker: boolean shortKindName
androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp1
com.appspa.update.R$id: int action_bar
androidx.appcompat.view.menu.MenuPopupHelper: int TOUCH_EPICENTER_SIZE_DP
com.xuexiang.xhttp2.R$drawable: int notification_action_background
com.appspa.update.R$dimen: int notification_small_icon_size_as_large
com.xuexiang.xhttp2.annotation.ThreadType: java.lang.String IN_THREAD
androidx.appcompat.R$anim: int abc_shrink_fade_out_from_bottom
io.reactivex.internal.subscribers.InnerQueuedSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: java.lang.Exception $this_suspendAndThrow$inlined
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_font
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: long serialVersionUID
okhttp3.internal.Util: java.nio.charset.Charset UTF_16_BE
com.google.gson.reflect.TypeToken: java.lang.Class rawType
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean wasLastOpen
androidx.appcompat.R$attr: int iconTint
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object theUnsafe
io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: boolean done
androidx.core.app.JobIntentService$CompatWorkEnqueuer: android.os.PowerManager$WakeLock mRunWakeLock
io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber: io.reactivex.functions.Predicate filter
androidx.fragment.app.ListFragment: android.view.View mProgressContainer
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: int[] TINT_ATTRS
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onInitComputationHandler
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher: io.reactivex.internal.util.ErrorMode errorMode
com.appspa.update.R$id: int tv_ignore
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.widget.SwitchCompat: android.text.Layout mOffLayout
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: android.view.MenuItem mHoveredMenuItem
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
com.xuexiang.xhttp2.R$styleable: int Spinner_android_entries
com.xuexiang.xhttp2.R$attr: int titleMarginStart
retrofit2.OkHttpCall$NoContentResponseBody: long contentLength
androidx.core.app.NotificationCompat$Builder: boolean mColorizedSet
androidx.collection.CircularIntArray: int[] mElements
com.xuexiang.xhttp2.R$drawable: int abc_action_bar_item_background_material
androidx.customview.widget.ViewDragHelper: int STATE_IDLE
okhttp3.Headers: java.lang.String[] namesAndValues
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: int limit
com.appspa.update.R$styleable: int AppCompatTheme_listDividerAlertDialog
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY
com.google.gson.stream.JsonWriter: boolean serializeNulls
androidx.core.widget.NestedScrollView: int INVALID_POINTER
okhttp3.internal.Util$2: boolean val$daemon
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: java.util.concurrent.atomic.AtomicReference debouncer
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle: int prefetch
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_LARGE_ICON
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: io.reactivex.internal.fuseable.SimpleQueue queue
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: int sourceMode
androidx.appcompat.R$attr: int windowMinWidthMajor
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: java.lang.Object value
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
androidx.viewpager.R$attr: int fontProviderAuthority
com.xuexiang.xhttp2.R$attr: int toolbarStyle
androidx.appcompat.R$drawable: int abc_list_selector_disabled_holo_dark
com.appspa.demo.R$styleable: int TextAppearance_android_fontFamily
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy: io.reactivex.BackpressureOverflowStrategy strategy
androidx.appcompat.R$attr: int textLocale
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempVisibleRect
androidx.appcompat.app.AlertController: int mButtonPanelSideLayout
androidx.appcompat.view.menu.MenuBuilder: boolean mOverrideVisibleItems
io.reactivex.internal.queue.SpscLinkedArrayQueue: int producerMask
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: long serialVersionUID
androidx.appcompat.widget.ActivityChooserView$1: androidx.appcompat.widget.ActivityChooserView this$0
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast: java.util.concurrent.atomic.AtomicInteger wip
androidx.fragment.app.FragmentTransaction: boolean mReorderingAllowed
androidx.core.view.ViewCompat: int LAYER_TYPE_SOFTWARE
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: io.reactivex.functions.Function zipper
io.reactivex.internal.operators.completable.CompletableDelay$Delay: io.reactivex.CompletableObserver downstream
com.xuexiang.xhttp2.R$string: int abc_menu_function_shortcut_label
com.appspa.update.R$attr: int actionModeStyle
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCheckable
androidx.lifecycle.LiveData: boolean mDispatchingValue
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.appcompat.R$attr: int actionLayout
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: int skip
androidx.appcompat.widget.ListPopupWindow: int POSITION_PROMPT_BELOW
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: long idx
com.appspa.demo.R$style: int Base_Widget_AppCompat_Toolbar
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: boolean disposed
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
com.xuexiang.xhttp2.R$styleable: int ActionBar_indeterminateProgressStyle
com.appspa.demo.R$dimen: int abc_disabled_alpha_material_dark
okhttp3.internal.platform.AndroidPlatform: java.lang.Class sslParametersClass
androidx.vectordrawable.R$id: int accessibility_custom_action_15
com.appspa.demo.R$attr: int thumbTint
com.appspa.update.R$color: int material_deep_teal_200
androidx.viewpager.widget.ViewPager: float mInitialMotionX
com.xuexiang.xhttp2.request.BaseRequest: java.util.List mConverterFactories
com.appspa.demo.R$attr: int actionModeStyle
com.appspa.demo.R$style: int Base_ThemeOverlay_AppCompat_Dark
io.reactivex.internal.operators.flowable.FlowableReduceMaybe: io.reactivex.Flowable source
com.appspa.demo.R$style: int TextAppearance_AppCompat_Display3
com.appspa.update.R$integer: int cancel_button_image_alpha
androidx.customview.R$styleable: int[] GradientColorItem
com.appspa.demo.R$dimen: int abc_floating_window_z
androidx.core.widget.TextViewCompat$OreoCallback: android.widget.TextView mTextView
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
com.appspa.update.R$attr: int fontFamily
androidx.fragment.app.FragmentTabHost: boolean mAttached
androidx.drawerlayout.R$id: int tag_transition_group
androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.appspa.update.R$drawable: int abc_textfield_activated_mtrl_alpha
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: boolean notSkipping
com.appspa.demo.R$styleable: int AppCompatTheme_radioButtonStyle
io.reactivex.processors.AsyncProcessor$AsyncSubscription: io.reactivex.processors.AsyncProcessor parent
com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object key
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: java.lang.Object value
androidx.core.app.JobIntentService$CompatWorkItem: androidx.core.app.JobIntentService this$0
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
io.reactivex.internal.subscribers.StrictSubscriber: boolean done
com.appspa.demo.R$color: int dim_foreground_disabled_material_dark
io.reactivex.internal.operators.flowable.FlowableBufferTimed: long timeskip
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Menu
com.appspa.update.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.appcompat.R$dimen: int abc_dialog_fixed_width_major
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: boolean cancelled
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: io.reactivex.Observer downstream
com.appspa.demo.R$styleable: int AppCompatTheme_android_windowAnimationStyle
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver parent
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.appspa.demo.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: int limit
com.appspa.demo.R$styleable: int ActionBar_titleTextStyle
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: boolean cancelled
com.appspa.demo.R$attr: int actionBarStyle
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: boolean mIsSign
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: io.reactivex.disposables.Disposable other
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: long serialVersionUID
io.reactivex.internal.queue.SpscArrayQueue: long producerLookAhead
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark
androidx.core.R$attr: int fontProviderFetchStrategy
io.reactivex.internal.observers.SubscriberCompletableObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableSingle: java.lang.Object defaultValue
androidx.vectordrawable.R$id: int accessibility_custom_action_0
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence mLabel
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: org.reactivestreams.Subscription receiver
androidx.core.app.ShareCompat$IntentReader: java.util.ArrayList mStreams
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionButtonStyle
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: boolean done
androidx.appcompat.R$styleable: int[] DrawerArrowToggle
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver this$0
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect INVALID_PARENT_BOUNDS
com.appspa.demo.R$id: int scrollIndicatorDown
androidx.appcompat.app.AlertController: int mViewSpacingRight
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver other
com.appspa.update.R$drawable: int spa_bg_app_top
com.appspa.update.R$attr: int dividerVertical
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: long serialVersionUID
com.appspa.update.R$styleable: int AppCompatTextHelper_android_drawableStart
com.appspa.update.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.xuexiang.xhttp2.R$color: int abc_background_cache_hint_selector_material_dark
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
androidx.fragment.R$layout: int notification_action
androidx.appcompat.resources.R$styleable: int[] FontFamily
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent mReadPendingIntent
androidx.cursoradapter.widget.CursorAdapter: int mRowIDColumn
com.google.gson.internal.Excluder$1: boolean val$skipSerialize
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mTempRect
com.xuexiang.xhttp2.R$string: int abc_prepend_shortcut_label
com.appspa.demo.R$style: int Base_Animation_AppCompat_Dialog
io.reactivex.internal.operators.observable.ObservableGroupJoin: io.reactivex.functions.Function rightEnd
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: io.reactivex.Observer downstream
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
androidx.appcompat.R$drawable: int notification_bg_low_pressed
com.appspa.update.R$id: int tag_unhandled_key_listeners
androidx.appcompat.widget.ForwardingListener: android.view.View mSrc
com.appspa.demo.R$styleable: int MenuItem_android_menuCategory
androidx.drawerlayout.R$styleable: int GradientColor_android_centerColor
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_INT2
androidx.appcompat.resources.R$id: int line3
androidx.versionedparcelable.VersionedParcel: int TYPE_BINDER
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: io.reactivex.disposables.CompositeDisposable set
com.xuexiang.xhttp2.R$styleable: int ActionBar_subtitleTextStyle
com.appspa.demo.R$style: int Base_Widget_AppCompat_SeekBar
com.appspa.update.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: boolean interruptibleWorker
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mExitTransition
androidx.fragment.R$color: int secondary_text_default_material_light
com.xuexiang.xhttp2.R$attr: int panelBackground
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: long produced
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: long serialVersionUID
androidx.appcompat.R$attr: int windowFixedHeightMajor
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_startColor
androidx.appcompat.widget.PopupMenu$2: androidx.appcompat.widget.PopupMenu this$0
com.appspa.demo.entity.CustomResult$VersionInfo: java.lang.String changeLog
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.xuexiang.xhttp2.R$attr: int buttonPanelSideLayout
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator: java.util.concurrent.atomic.AtomicInteger winner
androidx.core.provider.FontsContractCompat$4$5: androidx.core.provider.FontsContractCompat$4 this$0
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: io.reactivex.disposables.CompositeDisposable subscribers
androidx.appcompat.R$string: int abc_menu_function_shortcut_label
retrofit2.adapter.rxjava2.Result: retrofit2.Response response
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Headline
androidx.fragment.R$dimen: int notification_subtext_size
com.appspa.update.R$attr: int contentInsetLeft
com.appspa.update.widget.NumberProgressBar: float mOffset
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver: io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber parent
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport parent
androidx.core.app.NotificationManagerCompat: java.lang.String CHECK_OP_NO_THROW
okhttp3.Request: java.lang.String method
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: long timespan
com.appspa.demo.R$attr: int selectableItemBackground
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: com.google.gson.internal.bind.TreeTypeAdapter this$0
com.appspa.demo.R$styleable: int[] RecycleListView
androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_END
androidx.customview.R$styleable: int FontFamily_fontProviderCerts
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: java.util.concurrent.atomic.AtomicBoolean shouldConnect
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.core.view.ViewCompat: int MEASURED_HEIGHT_STATE_SHIFT
com.appspa.update.R$styleable: int[] ActionBar
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.appspa.demo.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.appspa.demo.R$styleable: int MenuItem_contentDescription
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: long producerIndex
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_OUTSIDE
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: long serialVersionUID
com.appspa.demo.R$attr: int popupMenuStyle
androidx.drawerlayout.R$color: int notification_action_color_filter
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Button_Small
com.xuexiang.xhttp2.R$attr: int thumbTintMode
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: long serialVersionUID
com.appspa.update.R$attr: int allowStacking
com.xuexiang.xhttp2.R$id: int action_context_bar
androidx.appcompat.R$styleable: int SearchView_layout
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: io.reactivex.CompletableObserver downstream
com.appspa.demo.R$attr: int showTitle
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Inverse
androidx.core.R$id: int tag_accessibility_clickable_spans
io.reactivex.internal.observers.QueueDrainObserver: java.lang.Throwable error
com.xuexiang.xhttp2.R$attr: int collapseIcon
androidx.core.text.util.LinkifyCompat: java.lang.String[] EMPTY_STRING
com.appspa.demo.R$styleable: int TextAppearance_android_textFontWeight
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: io.reactivex.disposables.CompositeDisposable set
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_autoSizePresetSizes
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: io.reactivex.functions.Function combiner
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod getAlpnSelectedProtocol
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: io.reactivex.internal.util.AtomicThrowable error
com.appspa.update.R$style: int ThemeOverlay_AppCompat_Dark
androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.appspa.update.R$styleable: int MenuItem_android_menuCategory
com.appspa.demo.R$attr: int listPreferredItemPaddingLeft
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: java.util.concurrent.Callable bufferSupplier
com.appspa.demo.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: int capacityHint
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: boolean cancelled
com.appspa.update.R$styleable: int ActionBar_titleTextStyle
com.appspa.demo.R$styleable: int AnimatedStateListDrawableCompat_android_visible
androidx.viewpager.widget.ViewPager: int DEFAULT_OFFSCREEN_PAGES
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
androidx.fragment.app.FragmentManagerImpl: java.lang.String USER_VISIBLE_HINT_TAG
org.aspectj.runtime.reflect.StringMaker: boolean includeArgs
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: long emitted
com.appspa.update.widget.NumberProgressBar: java.lang.String mCurrentDrawText
androidx.fragment.app.DialogFragment: int mBackStackId
androidx.viewpager.widget.ViewPager: int mPageTransformerLayerType
com.xuexiang.xhttp2.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.appcompat.R$styleable: int ColorStateListItem_alpha
com.appspa.demo.R$id: int normal
com.xuexiang.xhttp2.R$dimen: int tooltip_y_offset_non_touch
androidx.viewpager.R$layout: int notification_template_part_chronometer
com.xuexiang.xhttp2.R$drawable: int notify_panel_notification_icon_bg
com.appspa.demo.R$styleable: int MenuItem_android_numericShortcut
androidx.core.app.NotificationCompat: int PRIORITY_MAX
androidx.appcompat.R$dimen: int abc_text_size_display_3_material
com.appspa.update.service.DownloadService$FileDownloadCallBack$2: long val$total
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: io.reactivex.Scheduler$Worker worker
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_SMALL
androidx.activity.R$styleable: int FontFamilyFont_ttcIndex
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_26
io.reactivex.internal.operators.observable.ObservableInterval: java.util.concurrent.TimeUnit unit
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
androidx.lifecycle.MediatorLiveData$Source: int mVersion
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: int READY
androidx.appcompat.widget.ForwardingListener: int mLongPressTimeout
androidx.viewpager.widget.ViewPager: boolean USE_CACHE
androidx.appcompat.resources.R$styleable: int GradientColor_android_endX
androidx.fragment.app.Fragment$4: androidx.fragment.app.Fragment this$0
com.appspa.update.R$attr: int homeLayout
androidx.appcompat.R$string: int abc_menu_meta_shortcut_label
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$dimen: int abc_dialog_min_width_minor
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_TITLE
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: java.lang.Object item
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.core.text.BidiFormatter$DirectionalityEstimator: int DIR_TYPE_CACHE_SIZE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter mTintFilter
androidx.savedstate.SavedStateRegistry: androidx.arch.core.internal.SafeIterableMap mComponents
com.appspa.demo.R$color: int abc_search_url_text_normal
androidx.appcompat.widget.AppCompatTextHelper: boolean mAsyncFontPending
com.appspa.demo.R$dimen: int notification_small_icon_background_padding
io.reactivex.Scheduler$PeriodicDirectTask: java.lang.Runnable run
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: io.reactivex.functions.Function selector
com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.io.InputStream[] ins
okhttp3.Cache$CacheRequestImpl: okio.Sink cacheOut
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
com.appspa.update.service.DownloadService: boolean sIsRunning
com.appspa.demo.R$styleable: int SwitchCompat_switchPadding
com.appspa.update.R$attr: int textColorSearchUrl
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: io.reactivex.functions.Function mapper
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: androidx.customview.widget.ViewDragHelper mDragger
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$id: int async
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean mEnabled
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
io.reactivex.internal.functions.Functions: io.reactivex.functions.Predicate ALWAYS_FALSE
com.appspa.update.service.DownloadService$FileDownloadCallBack: boolean mIsCancel
androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMaximumField
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ButtonBar
io.reactivex.internal.operators.flowable.FlowableReduceWithSingle: io.reactivex.functions.BiFunction reducer
com.google.gson.internal.ConstructorConstructor$8: com.google.gson.internal.ConstructorConstructor this$0
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: int prefetch
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sActionIntentField
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: boolean emitting
androidx.appcompat.R$attr: int buttonBarNegativeButtonStyle
androidx.appcompat.R$styleable: int MenuItem_android_orderInCategory
androidx.activity.R$id: int accessibility_custom_action_8
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$CommandProcessor mCurProcessor
androidx.versionedparcelable.VersionedParcel: int EX_ILLEGAL_STATE
androidx.appcompat.R$styleable: int ActionBar_title
com.appspa.demo.R$string: int space_error_check_parse
io.reactivex.observers.ResourceCompletableObserver: io.reactivex.internal.disposables.ListCompositeDisposable resources
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: java.util.concurrent.atomic.AtomicLong requested
androidx.fragment.app.Fragment$3: androidx.fragment.app.Fragment this$0
com.appspa.update.UpdateManager$Builder: com.appspa.update.proxy.IUpdateParser updateParser
com.appspa.demo.R$styleable: int SearchView_android_focusable
io.reactivex.internal.operators.flowable.FlowableRetryWhen: io.reactivex.functions.Function handler
retrofit2.RequestFactory$Builder: boolean isMultipart
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: io.reactivex.disposables.CompositeDisposable disposables
com.appspa.update.R$dimen: int tooltip_margin
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: java.util.concurrent.atomic.AtomicReference current
io.reactivex.processors.BehaviorProcessor: java.lang.Object[] EMPTY_ARRAY
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed: long timeout
com.jakewharton.disklrucache.DiskLruCache: java.util.concurrent.ThreadPoolExecutor executorService
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: long maxUpstreamRequested
com.xuexiang.xhttp2.request.BaseRequest: okhttp3.HttpUrl mHttpUrl
retrofit2.ParameterHandler$QueryName: boolean encoded
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.appspa.demo.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached
com.appspa.update.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode
androidx.appcompat.resources.R$id: int accessibility_custom_action_27
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: java.util.concurrent.atomic.AtomicInteger producerIndex
com.appspa.update.R$id: int tag_accessibility_actions
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: long serialVersionUID
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: java.lang.ref.WeakReference mParent
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: long mLatestTimestamp
androidx.appcompat.view.menu.MenuItemImpl: int CHECKABLE
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: android.graphics.drawable.Drawable mDefaultUpIndicator
androidx.collection.ArraySet: java.lang.Object[] sBaseCache
androidx.appcompat.app.AlertController: int mListItemLayout
okhttp3.internal.cache.DiskLruCache: boolean closed
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.observable.ObservableConcatMapEager: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.single.SingleDematerialize: io.reactivex.functions.Function selector
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
androidx.fragment.app.FragmentStatePagerAdapter: boolean DEBUG
androidx.versionedparcelable.ParcelUtils: java.lang.String INNER_BUNDLE_KEY
com.xuexiang.xhttp2.R$string: int abc_searchview_description_query
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: java.util.concurrent.Callable bufferSupplier
androidx.fragment.app.BackStackRecord: int mIndex
androidx.customview.R$styleable: int[] FontFamilyFont
com.appspa.demo.R$attr: int backgroundStacked
com.appspa.update.entity.UpdateEntity: boolean mHasUpdate
com.xuexiang.xhttp2.R$styleable: int ViewBackgroundHelper_backgroundTint
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: java.lang.Object singleItem
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_max
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_Underlined
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.os.Handler mHandler
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: boolean cancelled
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: boolean deserialized
com.appspa.demo.R$styleable: int AppCompatTheme_windowActionBar
com.xuexiang.xhttp2.R$attr: int thickness
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableFlatMapSingle: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.single.SingleUsing: io.reactivex.functions.Function singleFunction
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable INSTANCE
com.appspa.update.R$string: int space_start_download
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: java.lang.Object item
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: io.reactivex.Observer downstream
com.appspa.demo.R$styleable: int TextAppearance_android_shadowRadius
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: int bufferSize
com.xuexiang.xhttp2.R$drawable: int notification_bg
androidx.appcompat.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: long serialVersionUID
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_ALLOW_FREE_FORM_INPUT
com.appspa.update.R$styleable: int Toolbar_contentInsetEndWithActions
okio.AsyncTimeout: long timeoutAt
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: long serialVersionUID
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY
androidx.appcompat.R$style: int Platform_AppCompat_Light
androidx.drawerlayout.R$styleable: int GradientColor_android_tileMode
com.appspa.demo.R$dimen: int abc_seekbar_track_background_height_material
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
androidx.appcompat.R$attr: int suggestionRowLayout
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: io.reactivex.functions.Function combiner
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint
com.xuexiang.xhttp2.R$layout: int abc_expanded_menu_layout
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners
io.reactivex.internal.functions.Functions: java.lang.Runnable EMPTY_RUNNABLE
androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_KEYFRAME_FRACTION
androidx.appcompat.widget.ActionBarContainer: android.view.View mTabContainer
androidx.appcompat.widget.ActivityChooserModel: java.util.List mActivities
androidx.customview.R$styleable: int FontFamilyFont_fontVariationSettings
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier: int capacityHint
androidx.viewpager.widget.PagerTabStrip: int TAB_SPACING
com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver other
io.reactivex.internal.util.NotificationLite$ErrorNotification: java.lang.Throwable e
io.reactivex.internal.operators.maybe.MaybeFromFuture: java.util.concurrent.TimeUnit unit
androidx.customview.R$attr: int fontWeight
androidx.appcompat.R$integer: int cancel_button_image_alpha
com.appspa.demo.R$style: int XUpdate_DialogTheme
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle: io.reactivex.ObservableSource second
androidx.vectordrawable.animated.R$dimen: int compat_button_padding_horizontal_material
com.xuexiang.xhttp2.annotation.NetMethod: int FORM_BODY
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: androidx.appcompat.widget.ActionMenuPresenter this$0
com.appspa.update.R$attr: int buttonBarPositiveButtonStyle
io.reactivex.internal.operators.observable.ObservableSkipWhile: io.reactivex.functions.Predicate predicate
com.xuexiang.xhttp2.R$drawable: int abc_list_selector_holo_light
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.lifecycle.ComputableLiveData: java.lang.Runnable mInvalidationRunnable
okio.ForwardingTimeout: okio.Timeout delegate
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
com.appspa.demo.R$dimen: int space_bg_app_info_radius
com.xuexiang.xhttp2.R$color: int primary_text_default_material_dark
io.reactivex.schedulers.TestScheduler$TimedRunnable: java.lang.Runnable run
androidx.core.R$id: int accessibility_custom_action_30
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_HOME
com.appspa.demo.R$dimen: int highlight_alpha_material_colored
com.xuexiang.xhttp2.R$drawable: int abc_ic_go_search_api_material
com.appspa.update.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn: io.reactivex.Scheduler scheduler
androidx.core.graphics.drawable.RoundedBitmapDrawable: float mCornerRadius
androidx.appcompat.widget.SearchView: android.view.View mSearchPlate
androidx.fragment.R$attr: int fontVariationSettings
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_10
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker: io.reactivex.processors.FlowableProcessor actionProcessor
io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn: io.reactivex.internal.operators.single.SingleOnErrorReturn this$0
com.appspa.demo.R$style: int Widget_AppCompat_ListView_DropDown
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: java.util.concurrent.atomic.AtomicReference parent
androidx.appcompat.widget.ToolbarWidgetWrapper: int AFFECTS_LOGO_MASK
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: io.reactivex.disposables.Disposable mDisposable
com.appspa.update.R$dimen: int abc_disabled_alpha_material_light
androidx.appcompat.view.SupportMenuInflater: java.lang.String XML_MENU
io.reactivex.internal.operators.completable.CompletableTimer: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: java.util.concurrent.TimeUnit unit
androidx.loader.R$id: int title
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String hostname
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int FLAG_IS_OPENED
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE
androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.app.LoaderManager$LoaderCallbacks mCallback
com.xuexiang.xhttp2.R$color: int primary_text_default_material_light
com.appspa.update.R$styleable: int AppCompatTheme_windowActionBar
androidx.annotation.VisibleForTesting: int NONE
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver: io.reactivex.SingleObserver downstream
com.appspa.demo.R$drawable: int abc_spinner_mtrl_am_alpha
okhttp3.internal.http1.Http1Codec$FixedLengthSink: boolean closed
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: java.lang.Object next
okhttp3.internal.http2.Http2Stream: int id
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$UIHandler: java.lang.ref.WeakReference mUIProgressResponseListenerWeakReference
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: int fusionMode
com.google.gson.internal.bind.JsonTreeReader: java.io.Reader UNREADABLE_READER
com.appspa.update.R$drawable: int abc_list_selector_disabled_holo_dark
com.appspa.update.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
okhttp3.Cookie: boolean hostOnly
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_panelBackground
com.appspa.update.R$dimen: int abc_action_bar_content_inset_with_nav
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: long serialVersionUID
androidx.activity.R$id: int tag_accessibility_heading
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
androidx.appcompat.R$color: int bright_foreground_disabled_material_light
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: androidx.core.view.LayoutInflaterFactory mDelegateFactory
androidx.appcompat.R$color: int button_material_dark
retrofit2.KotlinExtensions$suspendAndThrow$1: java.lang.Object result
com.appspa.demo.R$styleable: int MenuItem_android_alphabeticShortcut
androidx.drawerlayout.widget.DrawerLayout: float mScrimOpacity
androidx.appcompat.R$styleable: int TextAppearance_textLocale
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay: long time
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.lang.Integer LEFT_CLOSE
androidx.appcompat.resources.R$drawable: int notify_panel_notification_icon_bg
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_LEFT
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: io.reactivex.functions.Function valueSupplier
com.appspa.demo.R$dimen: int abc_action_bar_default_height_material
com.appspa.demo.R$attr: int titleMargins
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: org.reactivestreams.Subscription upstream
androidx.core.app.NotificationCompat$Builder: android.os.Bundle mExtras
com.appspa.demo.R$drawable: int abc_list_selector_holo_dark
com.appspa.demo.R$id: int none
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light
androidx.loader.content.ModernAsyncTask$AsyncTaskResult: androidx.loader.content.ModernAsyncTask mTask
com.xuexiang.xhttp2.R$attr: int panelMenuListTheme
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: boolean done
com.appspa.update.R$styleable: int AlertDialog_buttonPanelSideLayout
com.appspa.update.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_ANIMATOR
retrofit2.ParameterHandler$PartMap: retrofit2.Converter valueConverter
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Borderless
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: io.reactivex.disposables.CompositeDisposable set
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver$ConsumerIndexHolder: long index
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsDoubleTapping
com.xuexiang.xhttp2.cache.RxCache: int memoryMaxSize
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: long serialVersionUID
com.appspa.demo.R$style: int Widget_AppCompat_RatingBar_Indicator
com.xuexiang.xhttp2.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
androidx.appcompat.R$color: int abc_primary_text_disable_only_material_light
org.aspectj.internal.lang.reflect.AdviceImpl: java.lang.reflect.Method adviceMethod
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy: androidx.appcompat.widget.ShareActionProvider this$0
com.appspa.update.R$attr: int paddingBottomNoButtons
com.appspa.demo.R$styleable: int TextAppearance_android_textSize
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_CompactMenu
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.appspa.update.R$attr: int xnpb_text_offset
com.xuexiang.xhttp2.R$styleable: int ActionMode_backgroundSplit
com.appspa.update.R$attr: int textAllCaps
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.appspa.demo.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.google.gson.stream.JsonReader: long peekedLong
androidx.core.app.Person$Builder: java.lang.String mUri
androidx.versionedparcelable.VersionedParcelStream: int TYPE_FLOAT_ARRAY
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri mLinkUri
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_shadowDx
androidx.annotation.Dimension: int DP
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: boolean disposed
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: io.reactivex.Observer downstream
io.reactivex.internal.operators.observable.ObservableCache: java.util.concurrent.atomic.AtomicBoolean once
com.xuexiang.xhttp2.R$dimen: int abc_dialog_min_width_major
androidx.fragment.R$styleable: int GradientColor_android_type
io.reactivex.schedulers.TestScheduler: java.util.Queue queue
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: io.reactivex.disposables.Disposable upstream
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_DATA_URI
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: io.reactivex.Scheduler$Worker worker
retrofit2.adapter.rxjava2.RxJava2CallAdapter: boolean isResult
androidx.appcompat.resources.R$id: int action_divider
io.reactivex.processors.UnicastProcessor: java.lang.Throwable error
io.reactivex.internal.operators.flowable.FlowableBuffer: int skip
io.reactivex.internal.operators.single.SingleFlatMapCompletable: io.reactivex.functions.Function mapper
androidx.drawerlayout.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.widget.SearchView: android.widget.ImageView mSearchButton
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_shadowDy
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: java.util.Map lefts
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_endY
androidx.core.app.NotificationCompat$Builder: boolean mColorized
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: boolean done
com.xuexiang.xhttp2.R$attr: int colorControlHighlight
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: org.reactivestreams.Subscriber downstream
io.reactivex.internal.schedulers.InstantPeriodicTask: java.lang.Runnable task
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: boolean cancelled
androidx.appcompat.widget.AppCompatSpinner: int MODE_DROPDOWN
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.appspa.update.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
io.reactivex.internal.operators.flowable.FlowableSkipWhile: io.reactivex.functions.Predicate predicate
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_MIRROR
io.reactivex.internal.operators.completable.CompletableMerge: org.reactivestreams.Publisher source
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_1
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
androidx.appcompat.R$id: int accessibility_custom_action_8
androidx.core.R$styleable: int FontFamilyFont_fontStyle
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_20
com.xuexiang.xhttp2.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
okhttp3.MediaType: java.lang.String charset
com.appspa.update.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.appspa.update.R$style: int Theme_AppCompat_DayNight
com.appspa.update.R$attr: int actionModeCopyDrawable
androidx.vectordrawable.animated.R$id: int italic
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$style: int TextAppearance_AppCompat_Body1
com.appspa.demo.R$id: int accessibility_custom_action_20
com.appspa.update.R$id: int checked
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: io.reactivex.functions.Function nextSupplier
io.reactivex.internal.operators.parallel.ParallelFilterTry: io.reactivex.functions.Predicate predicate
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: java.util.concurrent.Callable bufferSupplier
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: io.reactivex.SingleObserver downstream
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_SearchView
com.appspa.demo.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
io.reactivex.internal.operators.completable.CompletableDetach: io.reactivex.CompletableSource source
io.reactivex.internal.operators.observable.ObservableScanSeed: io.reactivex.functions.BiFunction accumulator
com.xuexiang.xhttp2.utils.Utils: java.lang.String EXT_STORAGE_PATH
androidx.drawerlayout.R$styleable: int GradientColor_android_startX
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.widget.ActivityChooserView: android.widget.ImageView mDefaultActivityButtonImage
com.appspa.demo.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
androidx.appcompat.view.menu.ActionMenuItem: int CHECKED
androidx.appcompat.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: boolean delayError
com.xuexiang.xhttp2.R$color: int abc_search_url_text_pressed
org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: boolean isError
androidx.appcompat.R$attr: int logo
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEMPLATE
androidx.loader.content.ModernAsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR
androidx.activity.R$id: int accessibility_custom_action_27
okhttp3.Response: long sentRequestAtMillis
com.appspa.update.R$styleable: int[] ActivityChooserView
com.appspa.update.R$styleable: int AppCompatTheme_actionModeStyle
androidx.appcompat.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
retrofit2.ParameterHandler$Body: java.lang.reflect.Method method
androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_EMAIL_ADDRESS
androidx.appcompat.R$drawable: int abc_btn_borderless_material
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: java.lang.Throwable error
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: long serialVersionUID
androidx.appcompat.resources.R$id: int accessibility_custom_action_11
com.xuexiang.xhttp2.R$id: int notification_background
io.reactivex.internal.operators.single.SingleToFlowable: io.reactivex.SingleSource source
androidx.drawerlayout.R$styleable: int ColorStateListItem_alpha
com.appspa.update.R$drawable: int abc_btn_check_to_on_mtrl_000
io.reactivex.internal.util.NotificationLite$DisposableNotification: long serialVersionUID
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
com.appspa.demo.R$string: int abc_menu_alt_shortcut_label
com.xuexiang.xhttp2.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
io.reactivex.internal.operators.maybe.MaybeOnErrorNext: boolean allowFatal
androidx.appcompat.widget.AppCompatSeekBarHelper: android.widget.SeekBar mView
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: io.reactivex.functions.Function mapper
com.appspa.update.entity.DownloadEntity: java.lang.String mDownloadUrl
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.appcompat.R$attr: int windowFixedWidthMajor
androidx.core.view.MotionEventCompat: int ACTION_POINTER_UP
com.appspa.demo.R$styleable: int ActionBar_itemPadding
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.loader.R$id: int action_text
androidx.appcompat.R$attr: int actionBarTabBarStyle
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.model.HttpHeaders: java.util.LinkedHashMap headersMap
androidx.viewpager.R$drawable: int notification_bg_low_normal
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: java.lang.Throwable error
io.reactivex.internal.operators.observable.ObservableCache: java.util.concurrent.atomic.AtomicReference observers
io.reactivex.subjects.UnicastSubject: boolean done
io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable: io.reactivex.functions.Function mapper
com.appspa.update.R$string: int abc_action_bar_up_description
com.appspa.demo.R$style: int Widget_AppCompat_EditText
androidx.collection.SimpleArrayMap: int[] mHashes
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: int index
androidx.appcompat.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
com.appspa.update.widget.UpdateDialogActivity: android.widget.ImageView mIvClose
com.appspa.update.entity.UpdateEntity: boolean mIsAutoInstall
com.xuexiang.xhttp2.R$layout: int support_simple_spinner_dropdown_item
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.AppSpace: com.appspa.update.listener.OnInstallListener mOnInstallListener
com.xuexiang.xhttp2.cache.RxCache$2: java.lang.reflect.Type val$type
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE
com.appspa.update.entity.DownloadEntity: boolean isPatch
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.appspa.update.R$attr: int indeterminateProgressStyle
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: int consumed
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitle
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.fragment.app.FragmentManagerImpl$5: androidx.fragment.app.Fragment val$fragment
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: boolean done
okhttp3.CipherSuite: java.util.Map INSTANCES
androidx.appcompat.resources.R$attr: int fontProviderQuery
io.reactivex.internal.observers.FutureSingleObserver: java.lang.Throwable error
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: boolean next
com.xuexiang.xhttp2.R$drawable: int abc_scrubber_track_mtrl_alpha
com.appspa.demo.R$dimen: int abc_list_item_height_material
com.appspa.update.R$style: int TextAppearance_AppCompat_Inverse
com.appspa.demo.R$style: int TextAppearance_Compat_Notification_Line2
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Body1
io.reactivex.internal.operators.observable.ObservableConcatMap: io.reactivex.functions.Function mapper
androidx.loader.R$dimen: int compat_notification_large_icon_max_width
androidx.drawerlayout.R$layout: int notification_template_icon_group
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mStopValue
com.appspa.update.R$id: int accessibility_custom_action_18
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
androidx.vectordrawable.R$dimen: int notification_subtext_size
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY
androidx.appcompat.view.menu.MenuItemImpl: java.lang.Runnable mItemCallback
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.activity.R$color: int notification_action_color_filter
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
androidx.customview.widget.ViewDragHelper: int DIRECTION_VERTICAL
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampUpDuration
com.appspa.update.R$attr: int dropdownListPreferredItemHeight
okhttp3.Response: okhttp3.Handshake handshake
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: boolean outputFused
com.google.gson.internal.Primitives: java.util.Map PRIMITIVE_TO_WRAPPER_TYPE
okhttp3.Response: okhttp3.Response networkResponse
com.appspa.demo.R$id: int btn_update
com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object value
io.reactivex.observers.TestObserver: io.reactivex.Observer downstream
com.appspa.update.entity.UpdateError: android.util.SparseArray sMessages
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: java.lang.Object item
androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET
com.appspa.update.R$styleable: int AppCompatTheme_dividerVertical
com.xuexiang.xhttp2.R$styleable: int AlertDialog_listItemLayout
androidx.appcompat.R$id: int accessibility_custom_action_23
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING
androidx.core.util.PatternsCompat: java.util.regex.Pattern DOMAIN_NAME
androidx.appcompat.resources.R$color: int notification_action_color_filter
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.appspa.demo.R$styleable: int MenuItem_android_visible
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory SHORT_FACTORY
androidx.core.widget.NestedScrollView: boolean mIsLaidOut
com.xuexiang.xhttp2.R$styleable: int AppCompatTextHelper_android_textAppearance
com.appspa.update.R$dimen: int abc_edit_text_inset_horizontal_material
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator parent
io.reactivex.observers.DefaultObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableTakeWhile: io.reactivex.functions.Predicate predicate
androidx.core.R$id: int accessibility_custom_action_21
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: java.lang.Object mInfo
com.appspa.demo.R$bool: int abc_action_bar_embed_tabs
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent
io.reactivex.internal.operators.flowable.FlowableConcatArray: org.reactivestreams.Publisher[] sources
com.xuexiang.xhttp2.R$styleable: int AppCompatTextHelper_android_drawableLeft
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float[] VALUES
androidx.appcompat.R$styleable: int AnimatedStateListDrawableItem_android_id
androidx.appcompat.R$styleable: int StateListDrawable_android_visible
androidx.appcompat.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORD
androidx.appcompat.R$dimen: int abc_dialog_title_divider_material
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.fragment.app.FragmentTransitionImpl$2: java.util.ArrayList val$sharedElementsIn
com.xuexiang.xhttp2.R$attr: int queryBackground
com.appspa.demo.R$drawable: int btn_checkbox_checked_mtrl
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.xuexiang.xhttp2.R$attr: int actionBarTabTextStyle
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: java.util.concurrent.TimeUnit unit
androidx.customview.R$string: int status_bar_notification_info_overflow
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker poolWorker
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: io.reactivex.internal.disposables.SequentialDisposable timer
com.appspa.update.widget.UpdateDialogFragment: android.widget.TextView mTvIgnore
androidx.appcompat.R$id: int activity_chooser_view_content
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle: int bufferSize
com.appspa.demo.R$attr: int arrowHeadLength
okhttp3.internal.http2.Http2Connection$PingRunnable: boolean reply
androidx.appcompat.resources.R$id: int tag_unhandled_key_event_manager
androidx.collection.LongSparseArray: boolean mGarbage
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String tag
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableTransition
com.xuexiang.xhttp2.R$attr: int tickMarkTintMode
com.xuexiang.xhttp2.R$attr: int itemPadding
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$dimen: int tooltip_horizontal_padding
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.JsonSerializer serializer
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_16
com.appspa.demo.R$dimen: int abc_switch_padding
io.reactivex.internal.subscribers.QueueDrainSubscriberWip: java.util.concurrent.atomic.AtomicInteger wip
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionButton
com.appspa.update.R$style: int TextAppearance_AppCompat_Subhead_Inverse
io.reactivex.internal.operators.flowable.FlowablePublishAlt: org.reactivestreams.Publisher source
com.jakewharton.disklrucache.DiskLruCache$Entry: long sequenceNumber
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: io.reactivex.ObservableSource first
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_14
androidx.activity.R$drawable: int notification_bg_normal_pressed
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_ON_READ
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.xuexiang.xhttp2.R$style: int TextAppearance_Compat_Notification_Line2
androidx.appcompat.R$string: int status_bar_notification_info_overflow
com.xuexiang.xhttp2.R$styleable: int AlertDialog_showTitle
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: io.reactivex.internal.disposables.SequentialDisposable task
io.reactivex.subjects.UnicastSubject: java.util.concurrent.atomic.AtomicReference onTerminate
com.appspa.update.R$string: int abc_searchview_description_submit
com.appspa.demo.R$id: int activity_chooser_view_content
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: androidx.appcompat.widget.ListPopupWindow this$0
com.appspa.update.R$styleable: int AppCompatTheme_spinnerStyle
com.xuexiang.xhttp2.R$attr: int actionModeBackground
io.reactivex.internal.operators.observable.ObservableSequenceEqual: int bufferSize
io.reactivex.internal.operators.observable.ObservableReplay$DisposeConsumer: io.reactivex.internal.operators.observable.ObserverResourceWrapper srw
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: long serialVersionUID
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: int limit
okhttp3.internal.ws.WebSocketReader: int opcode
com.appspa.update.R$color: int button_material_dark
com.appspa.demo.R$id: int home
androidx.appcompat.R$attr: int isLightTheme
androidx.vectordrawable.R$dimen: int notification_media_narrow_margin
androidx.viewpager.R$dimen: int notification_right_icon_size
com.xuexiang.xhttp2.request.BaseRequest: java.lang.String mSubUrl
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable: int prefetch
io.reactivex.internal.operators.maybe.MaybeError: java.lang.Throwable error
com.xuexiang.xhttp2.R$styleable: int Toolbar_titleTextAppearance
com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor
io.reactivex.android.schedulers.HandlerScheduler: boolean async
androidx.appcompat.R$attr: int dropdownListPreferredItemHeight
androidx.fragment.app.FragmentTransaction: int OP_NULL
androidx.customview.widget.ViewDragHelper: int EDGE_RIGHT
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Headline
com.appspa.update.widget.UpdateDialogFragment: com.appspa.update.widget.NumberProgressBar mNumberProgressBar
io.reactivex.internal.operators.flowable.FlowableConcatMap$SimpleScalarSubscription: org.reactivestreams.Subscriber downstream
io.reactivex.internal.observers.InnerQueuedObserver: long serialVersionUID
com.appspa.update.entity.UpdateEntity: boolean mIsForce
io.reactivex.internal.operators.observable.ObservableZip: int bufferSize
androidx.viewpager.R$styleable: int FontFamily_fontProviderFetchStrategy
com.appspa.update.R$id: int time
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableRightTint
com.appspa.update.UpdateManager$Builder: java.util.Map params
androidx.viewpager.R$drawable: int notification_bg_low
com.appspa.demo.R$dimen: int abc_dialog_fixed_height_minor
retrofit2.RequestFactory$Builder: java.lang.reflect.Method method
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: boolean delayErrors
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: io.reactivex.subjects.ReplaySubject$Node head
androidx.appcompat.R$dimen: int abc_dialog_min_width_minor
com.zhy.http.okhttp.cookie.store.SerializableHttpCookie: long serialVersionUID
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: boolean cancelled
com.appspa.demo.R$dimen: int notification_big_circle_margin
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.appspa.demo.R$color: int background_material_light
io.reactivex.internal.operators.completable.CompletableFromPublisher: org.reactivestreams.Publisher flowable
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription[] TERMINATED
androidx.customview.R$dimen: int compat_button_inset_vertical_material
io.reactivex.internal.functions.Functions: java.util.concurrent.Callable NULL_SUPPLIER
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: io.reactivex.Notification iteratorNotification
com.appspa.update.R$attr: int listChoiceIndicatorMultipleAnimated
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TYPE
com.appspa.update.R$style: int TextAppearance_AppCompat_Subhead
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX
com.appspa.update.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
okhttp3.CacheControl: int minFreshSeconds
retrofit2.KotlinExtensions$await$2$2: kotlinx.coroutines.CancellableContinuation $continuation
com.appspa.demo.R$attr: int icon
androidx.viewpager.widget.PagerTabStrip: int mIndicatorColor
com.appspa.demo.R$dimen: int abc_action_bar_content_inset_with_nav
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: io.reactivex.SingleSource other
com.appspa.update.UpdateManager$Builder: com.appspa.update.entity.PromptEntity promptEntity
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: boolean done
com.appspa.demo.R$attr: int xnpb_text_visibility
androidx.appcompat.R$id: int titleDividerNoCustom
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask: io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable timedRunnable
androidx.lifecycle.Transformations$1: androidx.arch.core.util.Function val$mapFunction
androidx.core.util.PatternsCompat: java.lang.String UCS_CHAR
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: io.reactivex.Scheduler$Worker worker
androidx.vectordrawable.R$id: int title
com.google.gson.stream.JsonReader: int NUMBER_CHAR_DECIMAL
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: java.util.List buffers
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: java.util.concurrent.atomic.AtomicReferenceArray values
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: long serialVersionUID
androidx.vectordrawable.animated.R$id: int icon_group
androidx.loader.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Light
androidx.appcompat.widget.ForwardingListener: boolean mForwarding
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver parent
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: java.lang.Object defaultValue
com.jakewharton.disklrucache.StrictLineReader: java.nio.charset.Charset charset
androidx.versionedparcelable.VersionedParcelStream: int mFieldId
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
androidx.appcompat.widget.ActionMenuView: int mFormatItemsWidth
androidx.vectordrawable.R$attr: int alpha
io.reactivex.schedulers.Schedulers$IoHolder: io.reactivex.Scheduler DEFAULT
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_PopupMenu
androidx.appcompat.widget.SearchView: java.lang.String LOG_TAG
io.reactivex.processors.ReplayProcessor$TimedNode: java.lang.Object value
com.appspa.update.R$id: int src_in
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver inner
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: io.reactivex.Observer observer
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.Excluder excluder
androidx.cursoradapter.widget.CursorAdapter: boolean mDataValid
androidx.viewpager.widget.ViewPager: long mFakeDragBeginTime
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: android.app.Activity mActivity
androidx.core.content.res.ComplexColorCompat: java.lang.String LOG_TAG
androidx.core.app.NotificationManagerCompat: java.util.Set sEnabledNotificationListenerPackages
androidx.appcompat.widget.SwitchCompat: float mTouchY
androidx.core.app.FrameMetricsAggregator: int EVERY_DURATION
com.appspa.demo.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
com.appspa.demo.R$id: int btn_background_update
com.appspa.update.R$attr: int actionButtonStyle
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: io.reactivex.internal.operators.flowable.FlowableRefCount parent
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: io.reactivex.internal.util.AtomicThrowable error
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionButton
com.appspa.demo.R$layout: int abc_popup_menu_item_layout
androidx.appcompat.R$id: int scrollIndicatorDown
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: io.reactivex.internal.subscriptions.SubscriptionArbiter sa
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: java.util.concurrent.atomic.AtomicLong index
androidx.appcompat.view.menu.CascadingMenuPopup: int mMenuMaxWidth
com.appspa.demo.R$drawable: int abc_textfield_search_default_mtrl_alpha
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: io.reactivex.disposables.Disposable upstream
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask$InternalHandler sHandler
androidx.appcompat.graphics.drawable.DrawableContainer$1: androidx.appcompat.graphics.drawable.DrawableContainer this$0
androidx.fragment.app.FragmentTransaction: int mEnterAnim
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: long increaseDelay
io.reactivex.internal.operators.observable.ObservableGenerate: java.util.concurrent.Callable stateSupplier
io.reactivex.internal.operators.single.SingleZipArray: io.reactivex.SingleSource[] sources
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: int capacityHint
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_trackTint
com.zhy.http.okhttp.request.PostFileRequest$1$1: com.zhy.http.okhttp.request.PostFileRequest$1 this$1
com.appspa.update.R$attr: int xnpb_text_color
okhttp3.OkHttpClient: int writeTimeout
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: io.reactivex.internal.fuseable.SimpleQueue queue
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed: java.util.concurrent.TimeUnit unit
androidx.core.app.NotificationManagerCompat: java.lang.String TAG
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.appspa.demo.R$drawable: int abc_list_longpressed_holo
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: io.reactivex.functions.Function onNextMapper
com.appspa.update.widget.NumberProgressBar: float mTextSize
io.reactivex.internal.operators.completable.CompletableDoOnEvent$DoOnEvent: io.reactivex.internal.operators.completable.CompletableDoOnEvent this$0
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_android_fontStyle
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter
androidx.customview.R$id: int forever
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: com.google.gson.reflect.TypeToken exactType
com.xuexiang.xhttp2.R$styleable: int Toolbar_titleMarginEnd
androidx.viewpager.widget.PagerTabStrip: int TAB_PADDING
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription
com.xuexiang.xhttp2.R$id: int action_bar_activity_content
com.appspa.update.R$style: int Platform_V21_AppCompat
androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance
com.xuexiang.xhttp2.R$styleable: int AlertDialog_singleChoiceItemLayout
androidx.activity.R$layout: int notification_action_tombstone
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionBar
okhttp3.internal.http1.Http1Codec$ChunkedSink: boolean closed
androidx.core.provider.FontsContractCompat$1: int val$style
io.reactivex.internal.functions.Functions$ToMapKeySelector: io.reactivex.functions.Function keySelector
androidx.appcompat.R$attr: int buttonTintMode
io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter: long serialVersionUID
com.appspa.update.R$id: int edit_query
com.appspa.update.R$attr: int textAppearanceSmallPopupMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
io.reactivex.internal.schedulers.SingleScheduler: java.util.concurrent.ThreadFactory threadFactory
androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat_Dark
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.Class mMenuBuilderClass
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: boolean mHighlightDefaultActivity
androidx.appcompat.widget.SuggestionsAdapter: android.app.SearchManager mSearchManager
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification_Info
androidx.appcompat.R$styleable: int TextAppearance_android_textStyle
com.zhy.http.okhttp.request.RequestCall: long readTimeOut
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.appspa.demo.R$layout: int select_dialog_multichoice_material
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber second
io.reactivex.internal.operators.observable.ObservableGroupBy$State: java.util.concurrent.atomic.AtomicReference actual
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] EMPTY_RULE
androidx.appcompat.R$styleable: int GradientColor_android_startX
io.reactivex.processors.ReplayProcessor$ReplaySubscription: org.reactivestreams.Subscriber downstream
androidx.core.widget.ContentLoadingProgressBar: long mStartTime
com.xuexiang.xhttp2.request.BaseRequest$7: int[] $SwitchMap$com$xuexiang$xhttp2$cache$model$CacheMode
androidx.appcompat.view.menu.StandardMenuPopup: boolean mWasDismissed
com.appspa.update.R$styleable: int SearchView_android_imeOptions
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl$1: int[] $SwitchMap$org$aspectj$lang$reflect$DeclareAnnotation$Kind
com.xuexiang.xhttp2.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
androidx.drawerlayout.R$drawable: int notification_template_icon_low_bg
androidx.appcompat.widget.LinearLayoutCompat: int mShowDividers
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: long timespan
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionViewConstructorArguments
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: int STATE_RESULT_VALUE
com.appspa.update.R$id: int tag_unhandled_key_event_manager
com.xuexiang.xhttp2.R$style: int Base_V7_Theme_AppCompat_Dialog
com.xuexiang.xhttp2.R$attr: int contentInsetRight
com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility: com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility[] $VALUES
com.appspa.update.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionButton
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE
io.reactivex.internal.operators.single.SingleDefer: java.util.concurrent.Callable singleSupplier
androidx.activity.R$id: int accessibility_custom_action_3
com.appspa.update.R$dimen: int notification_action_text_size
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: long produced
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme
androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels
com.xuexiang.xhttp2.R$styleable: int ActionBar_contentInsetEndWithActions
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver: io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver parent
androidx.appcompat.R$attr: int listPreferredItemHeightSmall
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: int consumed
androidx.fragment.app.FragmentPagerAdapter: int BEHAVIOR_SET_USER_VISIBLE_HINT
androidx.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
io.reactivex.internal.operators.observable.ObservableSwitchMap: boolean delayErrors
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_TRANSPORT
androidx.drawerlayout.R$dimen: int notification_small_icon_size_as_large
com.appspa.update.R$drawable: int abc_list_selector_disabled_holo_light
com.appspa.demo.R$layout: int abc_screen_content_include
com.appspa.update.R$layout: int abc_alert_dialog_button_bar_material
androidx.core.R$drawable: int notification_tile_bg
com.appspa.update.R$styleable: int ActionBar_customNavigationLayout
okhttp3.Cookie: boolean secure
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: java.util.concurrent.atomic.AtomicReference other
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity
com.appspa.demo.R$attr: int listChoiceBackgroundIndicator
androidx.appcompat.R$id: int expand_activities_button
androidx.customview.R$styleable: int FontFamilyFont_fontWeight
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver: long serialVersionUID
com.appspa.update.R$styleable: int MenuItem_android_enabled
com.appspa.update.R$attr: int thumbTintMode
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.fragment.app.FragmentState: boolean mDetached
androidx.appcompat.widget.TooltipPopup: android.content.Context mContext
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: java.util.concurrent.Callable bufferSupplier
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: io.reactivex.Observer downstream
androidx.core.provider.FontsContractCompat: java.util.Comparator sByteArrayComparator
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Large
io.reactivex.internal.operators.parallel.ParallelMap: io.reactivex.functions.Function mapper
com.appspa.demo.R$attr: int fontProviderQuery
androidx.appcompat.R$color: int abc_search_url_text_normal
com.appspa.demo.R$color: int switch_thumb_disabled_material_dark
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
io.reactivex.internal.operators.flowable.FlowableCache: io.reactivex.internal.operators.flowable.FlowableCache$Node tail
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: long index
androidx.appcompat.R$id: int accessibility_custom_action_30
androidx.appcompat.R$color: int tooltip_background_light
androidx.activity.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.widget.ActionMenuPresenter: boolean mWidthLimitSet
androidx.core.R$attr: int fontProviderQuery
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarStyle
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: boolean done
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: io.reactivex.CompletableObserver downstream
com.appspa.demo.R$anim: int abc_grow_fade_in_from_bottom
com.appspa.demo.R$styleable: int AppCompatTheme_actionMenuTextColor
com.xuexiang.xhttp2.R$dimen: int abc_button_inset_horizontal_material
androidx.appcompat.R$styleable: int MenuItem_android_id
androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_CLOSE_EXIT
com.xuexiang.xhttp2.R$id: int contentPanel
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrcTextViewBounds
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMaxTextSizeInPx
androidx.appcompat.R$styleable: int GradientColor_android_centerX
androidx.loader.R$styleable: int GradientColor_android_centerColor
com.xuexiang.xhttp2.R$styleable: int DrawerArrowToggle_thickness
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: java.util.Collection buffer
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Builder mBuilder
com.appspa.demo.App$1: com.appspa.demo.App this$0
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: java.util.concurrent.atomic.AtomicReference current
com.appspa.demo.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.activity.R$id: int accessibility_custom_action_28
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: long idx
androidx.appcompat.R$dimen: int abc_dialog_corner_radius_material
com.appspa.update.R$styleable: int TextAppearance_android_fontFamily
androidx.vectordrawable.R$layout: int notification_action_tombstone
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: boolean done
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.content.ComponentName componentName
androidx.appcompat.widget.ListPopupWindow$3: androidx.appcompat.widget.ListPopupWindow this$0
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: int bufferSize
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver$DisposeTask: io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver this$0
androidx.appcompat.resources.R$drawable: int notification_icon_background
androidx.fragment.app.FragmentTransitionImpl$2: java.util.Map val$nameOverrides
androidx.collection.LruCache: int putCount
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: int sourceMode
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_THUMBS_DOWN
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.RectF mDstRectF
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe: io.reactivex.functions.Function mapper
androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer: io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver this$0
com.appspa.update.R$style: int Theme_AppCompat_DayNight_NoActionBar
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator parent
com.appspa.demo.R$color: int update_theme_color
com.google.gson.stream.JsonReader: int NUMBER_CHAR_NONE
androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mCurrentOutput
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: java.lang.Object item
io.reactivex.internal.operators.flowable.FlowableMap: io.reactivex.functions.Function mapper
com.appspa.demo.R$styleable: int[] GradientColorItem
androidx.appcompat.R$attr: int colorControlNormal
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: int OTHER_STATE_HAS_VALUE
com.appspa.update.widget.WeakFileDownloadListener: java.lang.ref.WeakReference mDownloadHandlerRef
okhttp3.Cookie$Builder: boolean httpOnly
androidx.appcompat.widget.SuggestionsAdapter: int mText2Col
androidx.appcompat.R$drawable: int btn_radio_off_mtrl
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderFetchTimeout
okio.Buffer: okio.Segment head
com.appspa.demo.R$attr: int actionBarTabBarStyle
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: boolean fastPath
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_8
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingBottom
com.appspa.demo.R$styleable: int Toolbar_android_gravity
androidx.vectordrawable.R$attr: int fontProviderFetchTimeout
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: boolean cancelled
com.zhy.http.okhttp.request.PostFormRequest$1$1: long val$bytesWritten
com.xuexiang.xhttp2.R$dimen: int notification_action_icon_size
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: boolean done
androidx.appcompat.app.AppCompatDelegate: int FEATURE_SUPPORT_ACTION_BAR
androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTint
androidx.core.content.ContextCompat$MainHandlerExecutor: android.os.Handler mHandler
com.appspa.update.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.appspa.update.R$id: int expand_activities_button
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: io.reactivex.internal.util.AtomicThrowable error
com.xuexiang.xhttp2.R$style: int TextAppearance_Compat_Notification
com.appspa.demo.R$id: int tv_ignore
com.appspa.demo.R$attr: int background
androidx.viewpager.widget.ViewPager: boolean mNeedCalculatePageOffsets
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowHeadLength
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: io.reactivex.functions.BiConsumer collector
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_LOCAL_ONLY
io.reactivex.internal.operators.flowable.FlowableIntervalRange: long start
okhttp3.internal.http.RealInterceptorChain: int readTimeout
okhttp3.Cache$Entry: int code
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.core.app.NotificationCompat$WearableExtender: int mHintScreenTimeout
androidx.appcompat.R$styleable: int StateListDrawable_android_exitFadeDuration
retrofit2.Retrofit$Builder: java.util.List converterFactories
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$1: int[] $SwitchMap$io$reactivex$parallel$ParallelFailureHandling
androidx.core.provider.FontsContractCompat$4: android.os.Handler val$callerThreadHandler
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: boolean empty
com.appspa.demo.R$styleable: int AppCompatTheme_popupMenuStyle
com.xuexiang.xhttp2.R$id: int src_in
androidx.fragment.app.Fragment: boolean mUserVisibleHint
androidx.fragment.app.FragmentManagerImpl$FragmentTag: int Fragment_name
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
okhttp3.Cache: int writeSuccessCount
androidx.fragment.R$style: int Widget_Compat_NotificationActionText
androidx.core.R$id: int right_side
com.appspa.demo.R$id: int accessibility_custom_action_26
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
com.jakewharton.disklrucache.Util: java.nio.charset.Charset US_ASCII
com.appspa.update.R$id: int btn_update
androidx.appcompat.widget.SearchView: java.lang.CharSequence mOldQueryText
androidx.fragment.app.FragmentManagerImpl$5: androidx.fragment.app.FragmentManagerImpl this$0
io.reactivex.subjects.BehaviorSubject: java.util.concurrent.locks.Lock readLock
androidx.appcompat.view.menu.StandardMenuPopup: int ITEM_LAYOUT
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerInner: java.lang.Object t
androidx.core.app.JobIntentService$JobServiceEngineImpl: java.lang.Object mLock
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Executor sExecutor
com.appspa.update.R$style: int Widget_AppCompat_ActionButton_Overflow
io.reactivex.internal.operators.flowable.FlowableBufferTimed: boolean restartTimerOnMaxSize
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
com.xuexiang.xhttp2.R$anim: int abc_fade_in
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: io.reactivex.functions.Action onComplete
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: java.util.concurrent.atomic.AtomicInteger wip
com.xuexiang.xhttp2.R$attr: int windowFixedWidthMajor
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
com.appspa.demo.R$styleable: int TextAppearance_android_textColorLink
androidx.core.app.NotificationCompat$Action: boolean mShowsUserInterface
com.xuexiang.xhttp2.transform.HttpSchedulersTransformer$1: int[] $SwitchMap$com$xuexiang$xhttp2$model$SchedulerType
com.appspa.demo.R$attr: int editTextStyle
com.xuexiang.xhttp2.R$attr: int trackTintMode
androidx.fragment.app.FragmentHostCallback: android.os.Handler mHandler
io.reactivex.internal.operators.flowable.FlowableUsing: java.util.concurrent.Callable resourceSupplier
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_2
androidx.appcompat.R$dimen: int abc_disabled_alpha_material_dark
com.xuexiang.xhttp2.R$styleable: int Toolbar_buttonGravity
androidx.core.graphics.drawable.IconCompat: int mInt1
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
androidx.lifecycle.LiveData: int START_VERSION
androidx.appcompat.widget.Toolbar: int mButtonGravity
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: int bufferSize
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: io.reactivex.disposables.Disposable upstream
okhttp3.internal.connection.RealConnection$1: okhttp3.internal.connection.StreamAllocation val$streamAllocation
com.appspa.update.R$id: int text2
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance
io.reactivex.internal.operators.single.SingleCreate: io.reactivex.SingleOnSubscribe source
io.reactivex.internal.schedulers.SchedulerPoolFactory: boolean PURGE_ENABLED
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: java.lang.Object collection
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: long serialVersionUID
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
androidx.core.util.PatternsCompat: java.lang.String TLD
com.appspa.update.R$style: int Base_Widget_AppCompat_Button
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mEffectiveRampDown
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: java.lang.Integer RIGHT_CLOSE
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: long serialVersionUID
com.appspa.update.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
io.reactivex.internal.operators.observable.ObservableGroupBy$State: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
io.reactivex.internal.operators.flowable.FlowableDebounce: io.reactivex.functions.Function debounceSelector
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String name
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.xuexiang.xhttp2.R$drawable: int abc_control_background_material
com.xuexiang.xhttp2.R$color: int bright_foreground_material_light
androidx.core.content.res.GrowingArrayUtils: boolean $assertionsDisabled
com.appspa.update.R$id: int accessibility_custom_action_27
com.appspa.demo.R$attr: int fontWeight
androidx.appcompat.widget.FitWindowsFrameLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int FILL_TYPE_WINDING
io.reactivex.internal.operators.flowable.FlowableCache: java.util.concurrent.atomic.AtomicReference subscribers
androidx.core.R$id: int accessibility_custom_action_8
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.R$color: int abc_input_method_navigation_guard
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: int bufferSize
io.reactivex.internal.operators.flowable.FlowableFlatMap: int bufferSize
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable[] $VALUES
com.xuexiang.xhttp2.R$attr: int allowStacking
io.reactivex.internal.operators.parallel.ParallelReduceFull: io.reactivex.parallel.ParallelFlowable source
io.reactivex.internal.operators.completable.CompletableDoFinally: io.reactivex.CompletableSource source
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator
com.appspa.demo.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.core.widget.CompoundButtonCompat: java.lang.String TAG
com.xuexiang.xhttp2.R$attr: int navigationContentDescription
com.appspa.demo.R$drawable: int abc_btn_check_to_on_mtrl_015
com.xuexiang.xhttp2.R$styleable: int DrawerArrowToggle_barLength
io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber: boolean done
androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat
androidx.appcompat.R$style: int Base_Widget_AppCompat_Toolbar
retrofit2.Retrofit: java.util.concurrent.Executor callbackExecutor
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.appcompat.view.menu.MenuItemImpl: int IS_ACTION
com.appspa.update.R$styleable: int DrawerArrowToggle_color
androidx.vectordrawable.R$layout: int notification_template_part_chronometer
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: long serialVersionUID
com.google.gson.internal.bind.MapTypeAdapterFactory: boolean complexMapKeySerialization
androidx.appcompat.app.ResourcesFlusher: java.lang.Class sThemedResourceCacheClazz
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: java.util.concurrent.atomic.AtomicBoolean once
com.appspa.update.R$style: int Base_V21_Theme_AppCompat
androidx.appcompat.R$layout: int abc_screen_toolbar
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mMenuPrepared
com.xuexiang.xhttp2.R$id: int expand_activities_button
com.appspa.update.R$attr: int paddingStart
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.xuexiang.xhttp2.R$styleable: int Toolbar_titleMargins
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: org.reactivestreams.Subscriber downstream
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
androidx.vectordrawable.R$id: int accessibility_custom_action_4
androidx.core.util.PatternsCompat: java.lang.String EMAIL_ADDRESS_LOCAL_PART
okhttp3.CacheControl$Builder: int minFreshSeconds
com.appspa.update.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: long maxSize
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenMenuState
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy DEFAULT
com.appspa.demo.R$attr: int actionModePopupWindowStyle
androidx.fragment.R$styleable: int[] ColorStateListItem
io.reactivex.processors.ReplayProcessor: java.lang.Object[] EMPTY_ARRAY
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: int skip
androidx.appcompat.R$attr: int actionModeCutDrawable
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: java.util.concurrent.CompletableFuture future
com.appspa.demo.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mContentDescription
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: boolean delayErrors
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: okhttp3.internal.http2.Http2Codec this$0
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: retrofit2.Call call
io.reactivex.internal.subscriptions.AsyncSubscription: java.util.concurrent.atomic.AtomicReference actual
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Tooltip
androidx.appcompat.R$id: int right_icon
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_EXTRAS_BUNDLE
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
androidx.viewpager.widget.PagerTabStrip: int MIN_PADDING_BOTTOM
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: org.reactivestreams.Subscriber downstream
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOff
io.reactivex.internal.operators.flowable.FlowableBufferBoundary: java.util.concurrent.Callable bufferSupplier
com.xuexiang.xhttp2.R$drawable: int abc_text_select_handle_right_mtrl_light
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: boolean failOnEmpty
com.appspa.demo.R$color: int button_material_light
androidx.core.R$id: int right_icon
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0
androidx.core.app.NotificationCompat: java.lang.String EXTRA_BACKGROUND_IMAGE_URI
androidx.appcompat.R$attr: int color
androidx.core.app.JobIntentService: java.lang.Object sLock
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainNoLast: long serialVersionUID
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Display2
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.viewpager.widget.PagerTabStrip: int mTouchSlop
androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider
androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate
io.reactivex.internal.operators.single.SingleTakeUntil: io.reactivex.SingleSource source
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation
okhttp3.ConnectionSpec: boolean tls
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: long serialVersionUID
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter SHORT
com.google.gson.GsonBuilder: boolean serializeNulls
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
androidx.appcompat.R$dimen: int abc_text_size_headline_material
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: long serialVersionUID
com.appspa.demo.R$styleable: int AppCompatTheme_checkboxStyle
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: long size
com.appspa.update.R$style: int Platform_ThemeOverlay_AppCompat_Dark
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.util.Map rights
androidx.core.app.NotificationCompatBuilder: java.util.List mActionExtrasList
io.reactivex.subjects.UnicastSubject: boolean enableOperatorFusion
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: long serialVersionUID
io.reactivex.subjects.CompletableSubject: java.lang.Throwable error
androidx.appcompat.R$attr: int commitIcon
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicLong windows
io.reactivex.internal.operators.completable.CompletableAmb: java.lang.Iterable sourcesIterable
io.reactivex.internal.functions.Functions$ToMapKeyValueSelector: io.reactivex.functions.Function keySelector
com.appspa.demo.entity.CustomResult$VersionInfo: boolean isSilent
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: io.reactivex.functions.BiFunction zipper
androidx.appcompat.R$attr: int contentInsetEnd
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_OPEN
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTintMode
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement: io.reactivex.MaybeSource source
com.xuexiang.xhttp2.R$attr: int titleMargin
androidx.appcompat.R$drawable: int abc_scrubber_control_off_mtrl_alpha
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SELECT
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node lastReturned
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.internal.util.AtomicThrowable errors
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec
com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeFindDrawable
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
androidx.appcompat.app.AlertController$AlertParams: boolean mForceInverseBackground
com.appspa.update.R$string: int abc_searchview_description_search
com.appspa.demo.R$attr: int backgroundTint
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: long bufferSize
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: long produced
com.google.gson.internal.ConstructorConstructor$14: com.google.gson.internal.UnsafeAllocator unsafeAllocator
androidx.appcompat.widget.ToolbarWidgetWrapper: long DEFAULT_FADE_DURATION_MS
androidx.fragment.R$id: int accessibility_custom_action_3
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: java.util.concurrent.TimeUnit unit
io.reactivex.Scheduler$PeriodicDirectTask: boolean disposed
com.appspa.update.R$styleable: int AppCompatTheme_toolbarStyle
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: io.reactivex.SingleObserver downstream
androidx.core.app.JobIntentService$JobServiceEngineImpl: java.lang.String TAG
androidx.appcompat.resources.R$id: int text
com.appspa.update.R$bool: int abc_config_actionMenuItemAllCaps
com.appspa.update.R$styleable: int Toolbar_subtitleTextAppearance
androidx.appcompat.view.menu.MenuItemImpl: android.view.View mActionView
com.xuexiang.xhttp2.cache.model.CacheResult: boolean isFromCache
androidx.loader.R$attr: int ttcIndex
com.appspa.update.R$id: int action_mode_bar
androidx.appcompat.widget.AppCompatRatingBar: androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$SubjectWork: boolean open
com.xuexiang.xhttp2.R$drawable: int abc_cab_background_top_mtrl_alpha
io.reactivex.internal.operators.single.SingleDelay: boolean delayError
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Display2
io.reactivex.internal.operators.flowable.FlowableWindowTimed: int bufferSize
com.appspa.demo.R$attr: int actionBarPopupTheme
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber other
androidx.appcompat.widget.Toolbar: int mTitleMarginBottom
io.reactivex.subjects.BehaviorSubject: long index
com.appspa.update.R$id: int default_activity_button
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: io.reactivex.Scheduler$Worker w
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: io.reactivex.functions.Function mapper
androidx.appcompat.R$styleable: int View_theme
androidx.appcompat.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: java.lang.Throwable error
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: io.reactivex.SingleObserver downstream
com.appspa.update.R$styleable: int AppCompatTextView_drawableTintMode
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int HAS_REQUEST_HAS_VALUE
androidx.appcompat.widget.AppCompatSeekBar: androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper
androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance
androidx.viewpager.widget.ViewPager$LayoutParams: int gravity
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mDataOnlyRemoteInputs
com.appspa.demo.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.core.view.ViewCompat: int TYPE_TOUCH
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
com.xuexiang.xhttp2.R$attr: int radioButtonStyle
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mIcon
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: long serialVersionUID
com.appspa.update.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.fragment.app.Fragment: int mBackStackNesting
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: java.lang.Object value
androidx.vectordrawable.R$dimen: int notification_large_icon_width
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: androidx.core.app.RemoteInput mRemoteInput
androidx.core.os.CancellationSignal: androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener
androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated
com.appspa.update.widget.UpdateDialog: com.appspa.update.entity.PromptEntity mPromptEntity
androidx.appcompat.widget.SearchView: boolean mIconified
com.appspa.update.R$styleable: int Toolbar_titleMarginEnd
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ScheduledExecutorService writerExecutor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
com.appspa.update.R$color: int background_floating_material_dark
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList mButtonTintList
androidx.appcompat.R$dimen: int abc_text_size_body_1_material
androidx.appcompat.view.menu.MenuBuilder: java.lang.String PRESENTER_KEY
androidx.appcompat.widget.SwitchCompat: int mMinFlingVelocity
okhttp3.ConnectionPool: long keepAliveDurationNs
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable: io.reactivex.internal.util.ErrorMode errorMode
retrofit2.ParameterHandler$Field: retrofit2.Converter valueConverter
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
io.reactivex.schedulers.TestScheduler: long time
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutAlphabeticChar
com.appspa.update.R$styleable: int AppCompatTheme_listPreferredItemHeight
com.appspa.update.R$style: int Platform_AppCompat
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: io.reactivex.disposables.CompositeDisposable set
com.appspa.demo.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.appcompat.R$attr: int homeAsUpIndicator
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
io.reactivex.internal.operators.single.SingleDoOnEvent: io.reactivex.functions.BiConsumer onEvent
com.appspa.demo.R$color: int bright_foreground_inverse_material_light
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: com.google.gson.Gson context
androidx.viewpager.widget.ViewPager$SavedState: java.lang.ClassLoader loader
androidx.appcompat.resources.R$id: int accessibility_custom_action_7
androidx.appcompat.R$attr: int splitTrack
com.appspa.update.R$attr: int panelMenuListWidth
com.xuexiang.xhttp2.R$drawable: int abc_list_divider_mtrl_alpha
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: boolean disposed
androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.R$dimen: int abc_search_view_preferred_height
com.xuexiang.xhttp2.R$style: int Base_ThemeOverlay_AppCompat_Light
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
androidx.appcompat.resources.R$id: int accessibility_custom_action_15
com.appspa.demo.R$id: int line1
okhttp3.internal.http1.Http1Codec: okio.BufferedSink sink
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
io.reactivex.subjects.MaybeSubject: io.reactivex.subjects.MaybeSubject$MaybeDisposable[] TERMINATED
io.reactivex.internal.util.ExceptionHelper: java.lang.Throwable TERMINATED
androidx.fragment.app.FragmentTransition$2: androidx.fragment.app.Fragment val$inFragment
io.reactivex.internal.operators.single.SingleLift: io.reactivex.SingleOperator onLift
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: long lastId
com.appspa.update.R$attr: int actionBarItemBackground
androidx.appcompat.resources.R$id: int accessibility_custom_action_9
androidx.appcompat.R$attr: int actionOverflowMenuStyle
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$styleable: int MenuView_android_itemIconDisabledAlpha
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
androidx.customview.R$styleable: int[] FontFamily
com.xuexiang.xhttp2.R$id: int message
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: io.reactivex.internal.operators.maybe.MaybeMergeArray$SimpleQueueWithConsumerIndex queue
com.xuexiang.xhttp2.R$attr: int colorBackgroundFloating
io.reactivex.internal.operators.single.SingleCache: java.util.concurrent.atomic.AtomicInteger wip
androidx.core.R$styleable: int GradientColor_android_startX
com.appspa.update.entity.UpdateError$ERROR: int UPDATE_UNKNOWN
androidx.appcompat.resources.R$attr: int fontProviderPackage
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: org.reactivestreams.Publisher source
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject mCryptoObject
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: long serialVersionUID
com.appspa.update.R$drawable: int abc_text_select_handle_middle_mtrl_light
com.appspa.update.R$color: int material_blue_grey_800
androidx.core.os.MessageCompat: boolean sTrySetAsynchronous
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
com.appspa.update.R$color: int switch_thumb_material_dark
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_RESULT_INTEROP_RECEIVER_KEY
androidx.appcompat.R$styleable: int AppCompatImageView_tint
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.appspa.update.R$styleable: int AppCompatTheme_seekBarStyle
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: io.reactivex.Observer downstream
io.reactivex.exceptions.ProtocolViolationException: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$styleable: int Spinner_android_dropDownWidth
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$attr: int drawableLeftCompat
androidx.appcompat.R$id: int action_context_bar
org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind BEFORE
com.appspa.demo.R$styleable: int TextAppearance_textLocale
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_FLOAT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
com.xuexiang.xhttp2.R$attr: int dividerHorizontal
androidx.appcompat.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.appspa.update.R$id: int accessibility_custom_action_30
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
com.appspa.demo.R$styleable: int SwitchCompat_showText
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: long skip
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.core.text.HtmlCompat: int FROM_HTML_OPTION_USE_CSS_COLORS
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber other
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabView
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: boolean done
retrofit2.ParameterHandler$Path: java.lang.String name
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableRefCount: io.reactivex.Scheduler scheduler
org.aspectj.runtime.internal.cflowstack.ThreadStackImpl11: int change_count
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: boolean done
androidx.core.widget.NestedScrollView: java.lang.String TAG
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver: io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver parent
androidx.appcompat.view.menu.MenuItemImpl: int mIconResId
retrofit2.SkipCallbackExecutorImpl: retrofit2.SkipCallbackExecutor INSTANCE
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_LARGE
com.google.gson.Gson: com.google.gson.reflect.TypeToken NULL_KEY_SURROGATE
com.appspa.demo.R$id: int wrap_content
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: org.reactivestreams.Subscriber child
com.appspa.update.R$id: int accessibility_custom_action_25
io.reactivex.internal.subscribers.ForEachWhileSubscriber: long serialVersionUID
com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache this$0
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_FILLTYPE
androidx.vectordrawable.R$id: int action_image
io.reactivex.internal.operators.flowable.FlowablePublishAlt: int bufferSize
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level level
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: long serialVersionUID
okhttp3.Cookie: boolean httpOnly
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
io.reactivex.internal.operators.flowable.FlowableAmb: org.reactivestreams.Publisher[] sources
okhttp3.CertificatePinner$Builder: java.util.List pins
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: java.util.concurrent.atomic.AtomicReference current
androidx.vectordrawable.animated.R$color: int ripple_material_light
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleAttr
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.internal.fuseable.SimpleQueue queue
com.google.gson.internal.bind.ObjectTypeAdapter$2: int[] $SwitchMap$com$google$gson$stream$JsonToken
androidx.drawerlayout.R$drawable: int notification_tile_bg
androidx.fragment.app.FragmentTransaction$Op: int mExitAnim
androidx.core.os.EnvironmentCompat: java.lang.String MEDIA_UNKNOWN
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_PATH
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: boolean done
com.appspa.demo.R$styleable: int AppCompatTheme_popupWindowStyle
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: io.reactivex.disposables.Disposable upstream
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorListener val$listener
androidx.appcompat.R$style: int ThemeOverlay_AppCompat
androidx.customview.R$id: int async
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_PopupWindow
androidx.core.app.NotificationCompat: int GROUP_ALERT_CHILDREN
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCache_mUnthemedEntriesFieldFetched
io.reactivex.internal.observers.LambdaObserver: io.reactivex.functions.Action onComplete
androidx.fragment.app.FragmentTransition: int[] INVERSE_OPS
com.xuexiang.xhttp2.R$style: int Base_V26_Theme_AppCompat_Light
com.appspa.update.R$id: int accessibility_custom_action_19
com.appspa.update.R$dimen: int notification_top_pad
androidx.appcompat.R$styleable: int AppCompatImageView_srcCompat
io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: io.reactivex.functions.Function keySelector
com.appspa.demo.R$attr: int editTextColor
okhttp3.CacheControl$Builder: int maxStaleSeconds
com.appspa.update.widget.UpdateDialogActivity: android.widget.TextView mTvUpdateInfo
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesSkipped
com.appspa.demo.R$id: int action_mode_close_button
com.xuexiang.xhttp2.R$id: int decor_content_parent
com.appspa.update.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mHasPresetAutoSizeValues
androidx.appcompat.app.AlertController: androidx.appcompat.app.AppCompatDialog mDialog
androidx.appcompat.R$dimen: int abc_action_button_min_width_material
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver: io.reactivex.functions.Predicate filter
androidx.viewpager.R$id: int line1
androidx.vectordrawable.R$styleable: int GradientColor_android_type
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String path
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
io.reactivex.internal.subscriptions.ScalarSubscription: java.lang.Object value
androidx.core.util.PatternsCompat: java.lang.String HOST_NAME
androidx.appcompat.R$drawable: int abc_ic_voice_search_api_material
io.reactivex.internal.operators.single.SingleJust: java.lang.Object value
io.reactivex.internal.operators.single.SingleContains: io.reactivex.SingleSource source
androidx.fragment.app.Fragment: android.os.Bundle mArguments
com.appspa.update.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.appspa.update.R$attr: int defaultQueryHint
androidx.fragment.R$id: int action_text
androidx.core.R$id: int forever
com.appspa.update.service.DownloadService$FileDownloadCallBack$2: com.appspa.update.service.DownloadService$FileDownloadCallBack this$1
okhttp3.CacheControl: boolean isPrivate
io.reactivex.internal.observers.FutureObserver: java.util.concurrent.atomic.AtomicReference upstream
okhttp3.Cache$Entry: long sentRequestMillis
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable: io.reactivex.CompletableSource other
io.reactivex.internal.operators.observable.ObservableThrottleLatest: java.util.concurrent.TimeUnit unit
androidx.core.app.NotificationCompat: int FLAG_FOREGROUND_SERVICE
androidx.drawerlayout.R$drawable: int notification_bg_low_normal
com.xuexiang.xhttp2.R$style: int Base_V7_Widget_AppCompat_EditText
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$styleable: int AppCompatTheme_tooltipFrameBackground
io.reactivex.internal.functions.Functions: io.reactivex.functions.Predicate ALWAYS_TRUE
com.appspa.demo.R$styleable: int ViewStubCompat_android_id
com.xuexiang.xhttp2.model.SchedulerType: com.xuexiang.xhttp2.model.SchedulerType _main
io.reactivex.observers.ResourceObserver: io.reactivex.internal.disposables.ListCompositeDisposable resources
com.appspa.demo.R$style: int TextAppearance_AppCompat_Title
com.xuexiang.xhttp2.R$dimen: int abc_text_size_body_1_material
androidx.appcompat.R$style: int Platform_V25_AppCompat_Light
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.PorterDuff$Mode mTintMode
com.xuexiang.xhttp2.R$drawable: int abc_ic_star_black_48dp
com.appspa.demo.R$drawable: int abc_switch_thumb_material
com.xuexiang.xhttp2.R$drawable: int abc_btn_radio_to_on_mtrl_000
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.R$style: int TextAppearance_AppCompat_Body1
androidx.vectordrawable.animated.R$id: int chronometer
androidx.viewpager.widget.PagerTitleStrip$PageListener: int mScrollState
io.reactivex.internal.operators.single.SingleObserveOn: io.reactivex.Scheduler scheduler
androidx.core.text.util.FindAddress: java.lang.String HOUSE_COMPONENT
androidx.appcompat.R$styleable: int SearchView_android_maxWidth
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
androidx.vectordrawable.R$id: int accessibility_custom_action_12
androidx.appcompat.R$color: int button_material_light
androidx.viewpager.widget.PagerTitleStrip: android.widget.TextView mCurrText
com.xuexiang.xhttp2.R$drawable: int abc_btn_switch_to_on_mtrl_00001
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: java.util.concurrent.atomic.AtomicReference other
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display3
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: java.lang.Throwable error
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_visible
androidx.core.content.ContextCompat$LegacyServiceMapHolder: java.util.HashMap SERVICES
io.reactivex.internal.util.OpenHashSet: int size
com.appspa.demo.R$styleable: int PopupWindow_android_popupAnimationStyle
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver inner
io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream: io.reactivex.MaybeSource source
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: androidx.core.os.ParcelableCompatCreatorCallbacks mCallbacks
androidx.viewpager.widget.ViewPager: int mCloseEnough
androidx.fragment.app.FragmentTransition$3: android.graphics.Rect val$epicenter
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: long count
androidx.appcompat.widget.ShareActionProvider: java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.appcompat.view.menu.MenuItemImpl: int ENABLED
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_stacked_max_height
com.appspa.update.R$id: int submenuarrow
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber: io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber wlf
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: long serialVersionUID
androidx.vectordrawable.R$styleable: int ColorStateListItem_android_alpha
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: int mId
okhttp3.internal.http.HttpDate: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
retrofit2.DefaultCallAdapterFactory$1: retrofit2.DefaultCallAdapterFactory this$0
com.xuexiang.xhttp2.R$styleable: int[] MenuItem
com.appspa.update.R$id: int ll_close
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber parent
androidx.core.app.NotificationCompat: int FLAG_INSISTENT
io.reactivex.subjects.AsyncSubject: io.reactivex.subjects.AsyncSubject$AsyncDisposable[] EMPTY
io.reactivex.internal.operators.flowable.FlowableWindowTimed: long timespan
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable[] TERMINATED
androidx.core.R$id: int action_text
androidx.core.app.RemoteActionCompat: boolean mEnabled
com.appspa.demo.R$styleable: int MenuItem_showAsAction
androidx.viewpager.widget.PagerTabStrip: int mTabAlpha
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
androidx.vectordrawable.animated.R$drawable: int notification_bg_low_normal
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
io.reactivex.internal.observers.InnerQueuedObserver: int fusionMode
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunset
com.appspa.update.R$style: int Widget_AppCompat_ActionMode
com.xuexiang.xhttp2.interceptor.CacheInterceptor: java.lang.String cacheControlValue_Online
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
androidx.core.provider.SelfDestructiveThread$2: androidx.core.provider.SelfDestructiveThread$ReplyCallback val$reply
com.appspa.update.R$id: int accessibility_custom_action_1
com.appspa.demo.R$color: int material_grey_900
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
androidx.appcompat.widget.AppCompatSpinner: boolean mPopupSet
io.reactivex.internal.operators.flowable.FlowableZip: java.lang.Iterable sourcesIterable
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.widget.ActionBarContextView this$0
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: java.lang.Object defaultValue
com.appspa.demo.http.OKHttpUpdateHttpService$1: com.appspa.demo.http.OKHttpUpdateHttpService this$0
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_WRONG_CERTIFICATES
androidx.viewpager.widget.ViewPager: int mBottomPageBounds
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: boolean cancelled
androidx.drawerlayout.R$color: int ripple_material_light
androidx.appcompat.R$style: int Widget_AppCompat_PopupMenu_Overflow
androidx.loader.content.AsyncTaskLoader$LoadTask: java.util.concurrent.CountDownLatch mDone
com.appspa.update.R$style: int Theme_AppCompat_Light
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: boolean done
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: io.reactivex.functions.Predicate predicate
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int LONGPRESS_TIMEOUT
androidx.core.content.pm.ShortcutManagerCompat$1: android.content.IntentSender val$callback
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.appspa.update.R$dimen: int abc_dialog_list_padding_top_no_title
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: io.reactivex.SingleObserver downstream
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound
androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS
io.reactivex.internal.operators.flowable.FlowableWindowBoundary: int capacityHint
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE
androidx.appcompat.R$styleable: int[] ActionMenuView
com.xuexiang.xhttp2.R$integer: int abc_config_activityShortDur
com.appspa.demo.R$layout: int abc_select_dialog_material
io.reactivex.subjects.ReplaySubject$Node: long serialVersionUID
androidx.appcompat.resources.R$id: int accessibility_custom_action_2
androidx.core.app.NotificationManagerCompat: java.lang.String sEnabledNotificationListeners
androidx.appcompat.widget.AppCompatSpinner: java.lang.String TAG
com.appspa.update.R$attr: int textAppearanceListItemSecondary
io.reactivex.internal.operators.maybe.MaybeToSingle: io.reactivex.MaybeSource source
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: java.util.Comparator comparator
androidx.appcompat.R$styleable: int ActionBar_contentInsetRight
com.appspa.update.R$styleable: int[] AlertDialog
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Tooltip
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
androidx.appcompat.widget.ListPopupWindow: boolean mForceIgnoreOutsideTouch
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_endY
androidx.core.provider.SelfDestructiveThread: android.os.Handler mHandler
androidx.appcompat.app.AppCompatDelegate: int FEATURE_ACTION_MODE_OVERLAY
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Small
com.google.gson.stream.JsonReader: int PEEKED_SINGLE_QUOTED
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver otherObserver
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementEnterTransition
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
io.reactivex.internal.operators.observable.ObservableTimer: java.util.concurrent.TimeUnit unit
androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing
com.google.gson.internal.bind.SqlDateTypeAdapter: java.text.DateFormat format
com.appspa.update.R$style: int TextAppearance_AppCompat_Medium
retrofit2.RequestFactory$Builder: boolean hasBody
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener
io.reactivex.subjects.PublishSubject$PublishDisposable: io.reactivex.Observer downstream
androidx.vectordrawable.R$id: int accessibility_custom_action_7
androidx.activity.R$id: int line3
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.util.Map groups
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: io.reactivex.CompletableObserver downstream
com.appspa.update.R$drawable: int abc_ratingbar_small_material
com.appspa.update.R$attr: int colorAccent
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean canceled
com.appspa.update.R$drawable: int abc_ic_ab_back_material
com.appspa.update.R$styleable: int SwitchCompat_trackTintMode
com.appspa.demo.R$drawable: int abc_ic_menu_cut_mtrl_alpha
androidx.loader.R$drawable: int notification_bg_low_normal
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$drawable: int abc_tab_indicator_mtrl_alpha
io.reactivex.subscribers.TestSubscriber: io.reactivex.internal.fuseable.QueueSubscription qs
androidx.appcompat.view.SupportMenuInflater: int NO_ID
okhttp3.Response$Builder: okhttp3.Request request
androidx.core.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.customview.R$attr: int font
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable: io.reactivex.Observable source
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.fragment.app.FragmentActivity: java.lang.String REQUEST_FRAGMENT_WHO_TAG
com.appspa.update.R$styleable: int Toolbar_popupTheme
io.reactivex.internal.operators.flowable.FlowableReduceMaybe: io.reactivex.functions.BiFunction reducer
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
androidx.appcompat.R$attr: int titleMargins
com.appspa.update.R$styleable: int MenuItem_contentDescription
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: io.reactivex.subjects.ReplaySubject$TimedNode head
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlActivated
com.appspa.update.R$attr: int listPreferredItemPaddingEnd
androidx.fragment.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.R$color: int material_grey_800
com.appspa.demo.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.appspa.demo.R$attr: int spinBars
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: androidx.appcompat.widget.SearchView$SearchAutoComplete this$0
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_RESPONSE_MESSAGE
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$outFragment
org.aspectj.lang.Aspects: java.lang.Class[] EMPTY_CLASS_ARRAY
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: io.reactivex.processors.FlowableProcessor processor
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: boolean started
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper[] $VALUES
io.reactivex.internal.operators.observable.ObservableCreate: io.reactivex.ObservableOnSubscribe source
androidx.core.content.FileProvider: java.lang.String TAG_ROOT_PATH
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: boolean done
com.appspa.demo.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.xuexiang.xhttp2.R$drawable: int abc_textfield_default_mtrl_alpha
com.xuexiang.xhttp2.R$color: int material_blue_grey_900
androidx.appcompat.R$attr: int dialogCornerRadius
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber: io.reactivex.internal.subscriptions.SubscriptionArbiter arbiter
io.reactivex.internal.observers.DeferredScalarDisposable: int TERMINATED
io.reactivex.internal.operators.parallel.ParallelCollect: io.reactivex.parallel.ParallelFlowable source
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Medium
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark
com.appspa.demo.R$dimen: int abc_text_size_subtitle_material_toolbar
androidx.fragment.app.FragmentTransition$4: androidx.collection.ArrayMap val$nameOverrides
androidx.fragment.app.FragmentTransaction: int TRANSIT_ENTER_MASK
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: io.reactivex.functions.Function mapper
com.appspa.update.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper: java.lang.Throwable throwable
androidx.appcompat.resources.R$color: int notification_icon_bg_color
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Button
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable: io.reactivex.MaybeSource source
com.appspa.update.R$layout: int abc_tooltip
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$attr: int backgroundSplit
com.appspa.update.R$attr: int switchTextAppearance
androidx.customview.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker
com.appspa.update.R$styleable: int RecycleListView_paddingBottomNoButtons
com.appspa.update.R$color: int material_grey_850
androidx.core.R$styleable: int GradientColor_android_gradientRadius
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level NONE
androidx.fragment.app.DialogFragment: boolean mShowsDialog
androidx.core.R$styleable: int GradientColor_android_endX
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.google.gson.internal.LinkedHashTreeMap$KeySet: com.google.gson.internal.LinkedHashTreeMap this$0
androidx.core.app.NotificationCompat$WearableExtender: int mFlags
androidx.core.view.ViewCompat: java.lang.reflect.Method sDispatchStartTemporaryDetach
androidx.viewpager.widget.PagerTitleStrip: androidx.viewpager.widget.PagerTitleStrip$PageListener mPageListener
io.reactivex.internal.operators.maybe.MaybeUsing: io.reactivex.functions.Consumer resourceDisposer
com.appspa.update.R$id: int tv_title
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: io.reactivex.disposables.Disposable upstream
android.support.v4.app.INotificationSideChannel$Stub: java.lang.String DESCRIPTOR
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: long serialVersionUID
com.appspa.update.R$color: int abc_color_highlight_material
androidx.appcompat.widget.ActionBarContainer: android.view.View mContextView
io.reactivex.internal.functions.Functions$FutureAction: java.util.concurrent.Future future
io.reactivex.internal.util.NotificationLite$DisposableNotification: io.reactivex.disposables.Disposable upstream
androidx.appcompat.resources.R$dimen: int compat_button_inset_vertical_material
okhttp3.Response$Builder: int code
com.appspa.demo.R$style: int Widget_AppCompat_ProgressBar_Horizontal
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: int lastIndex
androidx.viewpager.widget.PagerTabStrip: boolean mDrawFullUnderline
okhttp3.Cache$CacheRequestImpl$1: okhttp3.Cache val$this$0
androidx.appcompat.widget.ActivityChooserView: boolean mIsSelectingDefaultActivity
androidx.drawerlayout.widget.DrawerLayout: float TOUCH_SLOP_SENSITIVITY
androidx.core.app.RemoteInput$Builder: boolean mAllowFreeFormTextInput
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String EXTRA_PERSON_COUNT
com.xuexiang.xhttp2.logs.HttpLog: boolean sIsDebug
com.appspa.update.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.core.view.DragStartHelper$2: androidx.core.view.DragStartHelper this$0
io.reactivex.internal.operators.single.SingleDelayWithPublisher: org.reactivestreams.Publisher other
com.xuexiang.xhttp2.R$attr: int viewInflaterClass
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: io.reactivex.functions.LongConsumer onRequest
androidx.fragment.R$id: int accessibility_custom_action_10
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflow
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ListView_Menu
com.xuexiang.xhttp2.R$attr: int textAllCaps
io.reactivex.internal.subscriptions.DeferredScalarSubscription: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
com.appspa.update.R$styleable: int GradientColorItem_android_offset
com.appspa.demo.R$string: int space_connecting_service
org.aspectj.lang.SoftException: boolean HAVE_JAVA_14
io.reactivex.android.MainThreadDisposable: java.util.concurrent.atomic.AtomicBoolean unsubscribed
org.aspectj.runtime.reflect.SignatureImpl: java.lang.ClassLoader lookupClassLoader
androidx.appcompat.R$attr: int actionModeSplitBackground
androidx.loader.content.CursorLoader: android.database.Cursor mCursor
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: org.reactivestreams.Subscription upstream
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.RequestBody delegate
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light
io.reactivex.internal.functions.Functions: io.reactivex.functions.Action EMPTY_ACTION
com.appspa.update.R$id: int search_bar
io.reactivex.internal.operators.flowable.FlowableRepeatWhen: io.reactivex.functions.Function handler
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle: io.reactivex.functions.Action onCancel
androidx.vectordrawable.R$drawable: int notification_action_background
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.util.concurrent.atomic.AtomicInteger groupCount
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int mChangingConfigurations
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: java.util.concurrent.atomic.AtomicInteger wip
com.appspa.demo.R$style: int Widget_AppCompat_ActionBar_Solid
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.ListMenuPresenter this$0
com.appspa.update.R$layout: int notification_action_tombstone
io.reactivex.subscribers.SafeSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_JOYSTICK
androidx.appcompat.widget.ScrollingTabContainerView$TabView: java.lang.String ACCESSIBILITY_CLASS_NAME
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_text_offset
androidx.core.graphics.TypefaceCompatApi26Impl: int RESOLVE_BY_FONT_TABLE
com.xuexiang.xhttp2.R$dimen: int highlight_alpha_material_colored
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_PopupMenu
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
com.google.gson.internal.ConstructorConstructor$6: com.google.gson.internal.ConstructorConstructor this$0
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: long remaining
androidx.appcompat.widget.SearchView: android.widget.ImageView mVoiceButton
io.reactivex.internal.operators.observable.ObservableZip: java.lang.Iterable sourcesIterable
androidx.core.app.Person$Builder: boolean mIsBot
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: org.reactivestreams.Subscription upstream
androidx.core.util.PatternsCompat: java.util.regex.Pattern IP_ADDRESS
androidx.drawerlayout.R$styleable: int GradientColor_android_endColor
androidx.appcompat.app.AlertController: android.widget.ListAdapter mAdapter
androidx.core.app.NotificationCompat$WearableExtender: int DEFAULT_CONTENT_ICON_GRAVITY
com.xuexiang.xhttp2.request.BaseRequest: boolean mIsOnMainThread
androidx.core.app.ServiceCompat: int START_STICKY
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver: io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver parent
androidx.appcompat.R$styleable: int[] ViewBackgroundHelper
androidx.activity.R$attr: int fontProviderFetchTimeout
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: int sourceMode
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
com.xuexiang.xhttp2.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeCopyDrawable
io.reactivex.internal.operators.flowable.FlowableIntervalRange: long end
androidx.appcompat.R$styleable: int MenuItem_showAsAction
okhttp3.ResponseBody$1: okhttp3.MediaType val$contentType
com.appspa.update.R$id: int parentPanel
androidx.vectordrawable.R$attr: int fontProviderFetchStrategy
com.appspa.demo.R$styleable: int SearchView_android_imeOptions
androidx.appcompat.R$attr: int titleMarginStart
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: java.lang.Object defaultItem
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int TAP
io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
com.appspa.update.R$styleable: int AppCompatTheme_actionBarTheme
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: java.lang.Object u
com.appspa.demo.R$drawable: int abc_list_selector_holo_light
com.appspa.demo.R$styleable: int AppCompatTheme_dialogTheme
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: java.util.Iterator current
com.appspa.update.R$styleable: int[] ActionMode
androidx.appcompat.R$color: int primary_text_default_material_light
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: io.reactivex.SingleObserver downstream
androidx.fragment.app.FragmentManagerImpl$6: androidx.fragment.app.FragmentManagerImpl this$0
androidx.core.R$id: int accessibility_custom_action_12
com.appspa.demo.R$color: int bright_foreground_disabled_material_light
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarDivider
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int[] mCachedThemeAttrs
com.xuexiang.xhttp2.cache.RxCache$4: java.lang.String val$key
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: io.reactivex.internal.util.AtomicThrowable error
androidx.fragment.app.Fragment: int STARTED
okhttp3.CacheControl: boolean noCache
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeStyle
androidx.viewpager.R$styleable: int[] FontFamilyFont
com.appspa.update.R$attr: int listLayout
com.appspa.update.R$layout: int spa_dialog_update
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: boolean delayErrors
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_LOCALE
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.google.gson.Gson$FutureTypeAdapter: com.google.gson.TypeAdapter delegate
io.reactivex.internal.operators.maybe.MaybeFromRunnable: java.lang.Runnable runnable
androidx.activity.R$layout: int notification_template_part_chronometer
androidx.appcompat.R$id: int accessibility_custom_action_21
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mTrackTintMode
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabText
androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
com.xuexiang.xhttp2.R$id: int search_close_btn
androidx.appcompat.R$attr: int thumbTextPadding
com.xuexiang.xhttp2.R$drawable: int abc_seekbar_track_material
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher: io.reactivex.functions.Function mapper
androidx.loader.R$dimen: int notification_large_icon_width
com.appspa.update.R$drawable: int abc_list_longpressed_holo
com.xuexiang.xhttp2.R$attr: int contentInsetEndWithActions
com.xuexiang.xhttp2.R$color: int primary_dark_material_dark
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarStyle
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_textSize
com.appspa.demo.R$style: int Widget_AppCompat_ActionBar_TabView
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: long serialVersionUID
org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AROUND
androidx.appcompat.widget.ScrollingTabContainerView: int mStackedTabMaxWidth
androidx.core.util.PatternsCompat: java.lang.String EMAIL_ADDRESS_DOMAIN
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.util.concurrent.atomic.AtomicLong consumerIndex
com.zhy.http.okhttp.utils.Platform$Android$MainThreadExecutor: android.os.Handler handler
com.appspa.update.widget.NumberProgressBar: float mReachedBarHeight
io.reactivex.internal.operators.completable.CompletableMaterialize: io.reactivex.Completable source
androidx.viewpager.widget.ViewPager$LayoutParams: boolean needsMeasure
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mSubtitle
androidx.appcompat.R$styleable: int ActionBar_contentInsetLeft
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MUTE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: io.reactivex.Scheduler scheduler
com.appspa.demo.R$styleable: int SwitchCompat_android_thumb
androidx.customview.R$styleable: int GradientColor_android_tileMode
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode CACHE_REMOTE_DISTINCT
androidx.appcompat.R$styleable: int LinearLayoutCompat_showDividers
androidx.collection.LruCache: int maxSize
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
androidx.vectordrawable.animated.R$attr: int fontProviderFetchStrategy
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
io.reactivex.internal.operators.observable.ObservableConcatWithSingle: io.reactivex.SingleSource other
com.appspa.update.R$styleable: int[] CompoundButton
com.appspa.update.R$styleable: int Toolbar_contentInsetRight
androidx.core.app.NotificationCompat$Action: int mSemanticAction
io.reactivex.internal.operators.flowable.FlowableTakePublisher: long limit
io.reactivex.internal.operators.completable.CompletableUsing: java.util.concurrent.Callable resourceSupplier
com.xuexiang.xhttp2.cache.core.LruDiskCache: com.xuexiang.xhttp2.cache.converter.IDiskConverter mDiskConverter
androidx.viewpager.R$styleable: int FontFamilyFont_ttcIndex
okhttp3.RealCall: okhttp3.OkHttpClient client
androidx.fragment.R$drawable: int notification_template_icon_bg
com.appspa.demo.R$attr: int closeItemLayout
com.appspa.update.R$styleable: int StateListDrawable_android_dither
com.appspa.demo.R$styleable: int TextAppearance_android_shadowColor
androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_YES
androidx.appcompat.view.menu.ActionMenuItem: int mCategoryOrder
androidx.appcompat.R$styleable: int SearchView_defaultQueryHint
com.appspa.update.R$styleable: int[] ActionBarLayout
androidx.core.view.ViewCompat$1: androidx.core.view.OnApplyWindowInsetsListener val$listener
io.reactivex.Scheduler: long CLOCK_DRIFT_TOLERANCE_NANOSECONDS
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_REMINDER
androidx.core.widget.PopupWindowCompat: boolean sOverlapAnchorFieldAttempted
io.reactivex.internal.operators.parallel.ParallelJoin: io.reactivex.parallel.ParallelFlowable source
androidx.appcompat.R$color: int material_blue_grey_800
androidx.appcompat.resources.R$drawable: int notification_template_icon_bg
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentInfo
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber parent
com.appspa.update.R$attr: int listChoiceBackgroundIndicator
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.Object mTag
com.appspa.demo.R$id: int progress_circular
androidx.appcompat.R$styleable: int AppCompatTheme_checkboxStyle
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.util.Map lefts
androidx.core.app.ShareCompat$IntentBuilder: java.util.ArrayList mStreams
com.appspa.demo.R$id: int content
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter UUID
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription INSTANCE
androidx.loader.R$dimen: int notification_right_icon_size
io.reactivex.internal.operators.flowable.FlowableEmpty: io.reactivex.Flowable INSTANCE
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.cache.model.CacheMode mCacheMode
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: long n
androidx.core.view.InputDeviceCompat: int SOURCE_JOYSTICK
com.appspa.update.UpdateManager: com.appspa.update.proxy.IUpdateChecker mIUpdateChecker
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicBoolean stopWindows
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_8
okhttp3.HttpUrl: java.lang.String fragment
io.reactivex.internal.observers.DisposableLambdaObserver: io.reactivex.functions.Action onDispose
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: java.util.concurrent.atomic.AtomicReference subscribers
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain: long serialVersionUID
com.xuexiang.xhttp2.R$id: int action_menu_presenter
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
io.reactivex.internal.operators.flowable.FlowableDoFinally: io.reactivex.functions.Action onFinally
io.reactivex.internal.operators.observable.ObservableSampleWithObservable: boolean emitLast
com.appspa.update.R$style: int TextAppearance_AppCompat_Small_Inverse
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable: io.reactivex.functions.Function mapper
com.appspa.update.R$id: int npb_progress
androidx.fragment.app.FragmentActivity: java.lang.String FRAGMENTS_TAG
com.appspa.update.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.activity.R$id: int accessibility_custom_action_26
com.appspa.demo.R$dimen: int abc_seekbar_track_progress_height_material
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: java.util.concurrent.atomic.AtomicInteger wip
io.reactivex.internal.operators.observable.ObservableFlatMap: int bufferSize
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Inverse
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: boolean active
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Button
io.reactivex.internal.operators.flowable.FlowableOnErrorNext: io.reactivex.functions.Function nextSupplier
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
androidx.viewpager.widget.PagerTabStrip: java.lang.String TAG
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$drawable: int abc_vector_test
com.appspa.update.R$drawable: int abc_btn_radio_to_on_mtrl_000
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$1: int[] $SwitchMap$io$reactivex$BackpressureOverflowStrategy
com.appspa.update.service.DownloadService$FileDownloadCallBack: com.appspa.update.entity.DownloadEntity mDownloadEntity
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$style: int AlertDialog_AppCompat
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: java.lang.Throwable error
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: long serialVersionUID
androidx.appcompat.R$styleable: int CompoundButton_buttonTintMode
androidx.core.app.NotificationCompat$Builder: int MAX_CHARSEQUENCE_LENGTH
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: io.reactivex.processors.UnicastProcessor window
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mSize
androidx.appcompat.R$style: int Animation_AppCompat_Dialog
androidx.appcompat.widget.SwitchCompat: int mSwitchLeft
androidx.appcompat.R$drawable: int notification_template_icon_bg
androidx.core.R$styleable: int[] FontFamilyFont
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_HINT_AVOID_BACKGROUND_CLIPPING
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_DayNight_Dialog
androidx.appcompat.R$attr: int tintMode
com.appspa.demo.R$dimen: int abc_progress_bar_height_material
com.xuexiang.xhttp2.R$attr: int seekBarStyle
androidx.appcompat.R$styleable: int[] ActionBarLayout
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SOCIAL
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: io.reactivex.Observer downstream
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: androidx.appcompat.widget.AppCompatSpinner this$0
okhttp3.internal.http1.Http1Codec$AbstractSource: long bytesRead
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: io.reactivex.Observer downstream
com.appspa.update.UpdateManager: com.appspa.update.entity.PromptEntity mPromptEntity
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: org.reactivestreams.Subscriber downstream
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
com.xuexiang.xhttp2.R$attr: int listMenuViewStyle
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: java.lang.Object callStackTrace
com.appspa.demo.R$id: int action_divider
androidx.viewpager.R$dimen: int notification_action_icon_size
com.appspa.demo.R$drawable: int abc_ic_star_half_black_36dp
com.appspa.demo.R$color: int colorPrimary
androidx.core.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.R$styleable: int Toolbar_collapseIcon
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarSize
com.google.gson.GsonBuilder: boolean generateNonExecutableJson
androidx.appcompat.widget.ActionBarOverlayLayout$3: androidx.appcompat.widget.ActionBarOverlayLayout this$0
androidx.drawerlayout.widget.DrawerLayout: boolean mInLayout
androidx.viewpager.widget.PagerTitleStrip: boolean mUpdatingPositions
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle: io.reactivex.functions.BiPredicate comparer
com.appspa.update.AppSpace: com.appspa.update.proxy.IUpdateChecker mUpdateChecker
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: long serialVersionUID
androidx.appcompat.R$attr: int listLayout
androidx.fragment.app.DialogFragment: boolean mDismissed
com.appspa.update.widget.BaseDialog: boolean mIsSyncSystemUiVisibility
androidx.activity.R$id: int blocking
androidx.activity.R$style: int TextAppearance_Compat_Notification_Info
com.appspa.update.R$styleable: int LinearLayoutCompat_showDividers
com.appspa.update.R$style: int Theme_AppCompat_Light_NoActionBar
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
com.xuexiang.xhttp2.R$attr: int popupWindowStyle
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method getMethod
androidx.core.content.FileProvider: java.lang.String ATTR_NAME
androidx.fragment.app.FragmentTransaction: int OP_SET_PRIMARY_NAV
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener
androidx.core.content.res.ResourcesCompat$FontCallback$2: androidx.core.content.res.ResourcesCompat$FontCallback this$0
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_CACHE_CONTROL
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.loader.R$styleable: int FontFamily_fontProviderFetchStrategy
io.reactivex.internal.operators.observable.ObservableConcatMapEager: int prefetch
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_NAVIGATION
com.appspa.update.R$drawable: int abc_seekbar_track_material
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: io.reactivex.functions.Function selector
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: long serialVersionUID
com.appspa.update.R$attr: int textColorAlertDialogListItem
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mSkipNextApply
com.xuexiang.xhttp2.R$color: int notification_action_color_filter
com.appspa.update.AppSpace: java.lang.String mApkCacheDir
androidx.viewpager.R$layout: int notification_template_part_time
com.xuexiang.xhttp2.R$styleable: int ActionBar_icon
androidx.appcompat.content.res.AppCompatResources: java.lang.ThreadLocal TL_TYPED_VALUE
androidx.appcompat.R$id: int accessibility_custom_action_15
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedDispose: io.reactivex.internal.schedulers.ExecutorScheduler this$0
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: long index
io.reactivex.processors.ReplayProcessor$ReplaySubscription: long emitted
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: long consumerIndex
androidx.appcompat.R$attr: int listDividerAlertDialog
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.appspa.demo.R$color: int dim_foreground_disabled_material_light
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_dialogCornerRadius
androidx.appcompat.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_INVISIBLE_ACTIONS
io.reactivex.subjects.SerializedSubject: io.reactivex.internal.util.AppendOnlyLinkedArrayList queue
org.aspectj.lang.reflect.DeclareAnnotation$Kind: org.aspectj.lang.reflect.DeclareAnnotation$Kind[] $VALUES
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.core.util.LogWriter: java.lang.StringBuilder mBuilder
androidx.appcompat.R$styleable: int TextAppearance_android_shadowColor
com.google.gson.Gson: com.google.gson.LongSerializationPolicy longSerializationPolicy
io.reactivex.internal.operators.completable.CompletableSubscribeOn: io.reactivex.CompletableSource source
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnSubscriber: long serialVersionUID
androidx.appcompat.widget.SuggestionsAdapter: int mQueryRefinement
com.zhy.http.okhttp.request.PostFormRequest$1$1: com.zhy.http.okhttp.request.PostFormRequest$1 this$1
androidx.collection.LongSparseArray: java.lang.Object DELETED
com.xuexiang.xhttp2.R$id: int icon
androidx.fragment.app.Fragment: boolean mDetached
androidx.core.provider.FontsContractCompat$1: androidx.core.provider.FontRequest val$request
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mExitTransitionCallback
androidx.appcompat.R$styleable: int[] ViewStubCompat
com.appspa.demo.R$styleable: int ActionBar_displayOptions
androidx.loader.R$styleable: int GradientColor_android_centerX
com.appspa.demo.R$attr: int theme
com.xuexiang.xhttp2.R$attr: int titleTextAppearance
com.appspa.update.R$color: int highlighted_text_material_light
androidx.appcompat.widget.SearchView: java.lang.Runnable mUpdateDrawableStateRunnable
com.appspa.demo.R$string: int space_start_download
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3: com.xuexiang.xhttp2.cache.stategy.BaseStrategy this$0
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription[] EMPTY
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: java.lang.Object value
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.drawerlayout.R$attr: int fontProviderPackage
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber: io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber parent
okhttp3.Cookie: java.lang.String value
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizePresetSizes
okhttp3.internal.cache.DiskLruCache: long size
com.xuexiang.xhttp2.R$id: int action_mode_bar_stub
androidx.customview.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.R$dimen: int disabled_alpha_material_dark
androidx.appcompat.widget.AppCompatSpinner: android.widget.SpinnerAdapter mTempAdapter
com.appspa.update.R$drawable: int abc_edit_text_material
androidx.appcompat.app.WindowDecorActionBar: boolean $assertionsDisabled
com.appspa.demo.R$layout: int abc_action_menu_layout
androidx.customview.R$dimen: int notification_large_icon_height
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: io.reactivex.functions.Consumer onError
androidx.appcompat.R$attr: int voiceIcon
com.appspa.demo.R$attr: int alpha
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: java.util.concurrent.TimeUnit unit
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
androidx.core.R$id: int async
androidx.appcompat.R$attr: int icon
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: int wip
com.appspa.update.R$dimen: int space_button_min_height_mini
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.appspa.update.R$dimen: int abc_action_button_min_width_material
com.appspa.update.R$styleable: int AppCompatTextView_drawableLeftCompat
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler mMainHandler
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: long serialVersionUID
androidx.viewpager.widget.ViewPager: int mChildHeightMeasureSpec
com.appspa.update.entity.PromptEntity: float mWidthRatio
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: io.reactivex.internal.subscriptions.SubscriptionArbiter arbiter
io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter: long serialVersionUID
androidx.drawerlayout.R$id: int tag_unhandled_key_listeners
com.appspa.demo.R$drawable: int notification_bg_low
androidx.appcompat.widget.ViewUtils: java.lang.String TAG
com.appspa.demo.R$drawable: int abc_list_selector_disabled_holo_light
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarWidgetTheme
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
com.xuexiang.xhttp2.R$dimen: int notification_content_margin_start
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
io.reactivex.internal.operators.flowable.FlowableSkipUntil: org.reactivestreams.Publisher other
com.appspa.update.R$attr: int srcCompat
androidx.appcompat.R$dimen: int abc_action_bar_default_padding_end_material
androidx.drawerlayout.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.R$styleable: int ActionBar_height
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: long serialVersionUID
androidx.appcompat.view.menu.MenuBuilder: boolean mIsClosing
androidx.vectordrawable.R$dimen: int notification_big_circle_margin
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: boolean done
io.reactivex.internal.schedulers.ScheduledRunnable: int FUTURE_INDEX
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
com.appspa.update.R$id: int search_button
com.appspa.demo.R$styleable: int Toolbar_collapseContentDescription
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_FLAGS_INTEROP_KEY
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST
androidx.appcompat.resources.R$style: int Widget_Compat_NotificationActionText
androidx.appcompat.R$style: int Theme_AppCompat_Light_DarkActionBar
com.appspa.demo.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: io.reactivex.CompletableObserver downstream
androidx.appcompat.view.menu.ActionMenuItem: int ENABLED
io.reactivex.internal.operators.observable.ObservableRetryPredicate: long count
com.appspa.update.R$dimen: int abc_dialog_title_divider_material
androidx.activity.R$id: int accessibility_custom_action_22
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy: long bufferSize
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: io.reactivex.disposables.Disposable timer
okhttp3.internal.connection.StreamAllocation: int refusedStreamCount
androidx.appcompat.app.AlertController: int mViewLayoutResId
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity3ParamsMethod
io.reactivex.internal.operators.single.SingleDelayWithPublisher: io.reactivex.SingleSource source
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
com.xuexiang.xhttp2.R$styleable: int Toolbar_subtitleTextColor
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter CHARACTER
androidx.appcompat.R$attr: int listPreferredItemPaddingStart
okhttp3.RequestBody$3: java.io.File val$file
retrofit2.RequestBuilder: okhttp3.MediaType contentType
androidx.fragment.app.FragmentTabHost$SavedState: java.lang.String curTab
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: long index
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_BEGINNING
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable: io.reactivex.functions.Function mapper
androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional
androidx.appcompat.R$attr: int textAppearanceSearchResultSubtitle
androidx.activity.R$id: int action_container
org.aspectj.lang.Aspects14: java.lang.Class[] EMPTY_CLASS_ARRAY
com.appspa.update.R$style: int Base_Theme_AppCompat_Light_Dialog
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.appcompat.R$styleable: int AppCompatTheme_popupMenuStyle
io.reactivex.internal.operators.observable.ObservableReplay: java.util.concurrent.atomic.AtomicReference current
androidx.customview.R$color: int ripple_material_light
androidx.loader.R$styleable: int ColorStateListItem_android_alpha
com.zhy.http.okhttp.OkHttpUtils$2: com.zhy.http.okhttp.callback.Callback val$callback
androidx.appcompat.widget.ForwardingListener: int mTapTimeout
androidx.appcompat.R$attr: int ratingBarStyle
androidx.appcompat.R$style: int Widget_AppCompat_ImageButton
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.jakewharton.disklrucache.StrictLineReader: byte[] buf
androidx.appcompat.R$attr: int dialogTheme
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.customview.R$drawable: int notification_bg_low
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: long serialVersionUID
com.appspa.demo.R$attr: int itemPadding
androidx.cursoradapter.widget.SimpleCursorAdapter: int[] mFrom
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Call delegate
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper: com.xuexiang.xhttp2.transform.func.RetryExceptionFunc this$0
androidx.core.view.MotionEventCompat: int AXIS_HSCROLL
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mBigContentTitle
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver: io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver parent
io.reactivex.observers.SerializedObserver: io.reactivex.internal.util.AppendOnlyLinkedArrayList queue
com.appspa.update.R$layout: int abc_list_menu_item_icon
com.xuexiang.xhttp2.R$attr: int collapseContentDescription
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: java.util.concurrent.atomic.AtomicReference error
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.appspa.update.proxy.impl.DefaultUpdateDownloader$1: com.appspa.update.proxy.impl.DefaultUpdateDownloader this$0
okhttp3.Request$Builder: java.lang.String method
com.appspa.update.R$attr: int contentInsetEndWithActions
androidx.loader.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: boolean mainDone
com.xuexiang.xhttp2.R$styleable: int ActionBar_titleTextStyle
androidx.core.view.MotionEventCompat: int AXIS_Z
com.xuexiang.xhttp2.R$attr: int fontVariationSettings
androidx.core.R$id: int accessibility_custom_action_2
com.xuexiang.xhttp2.R$styleable: int[] ActionMode
com.appspa.update.R$attr: int actionMenuTextAppearance
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_BLOCKQUOTE
com.appspa.demo.R$id: int accessibility_custom_action_29
com.appspa.update.R$color: int abc_hint_foreground_material_dark
com.appspa.demo.R$dimen: int abc_text_size_button_material
com.appspa.demo.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver INNER_DISPOSED
com.appspa.update.R$styleable: int[] Toolbar
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$SequentialDispose: io.reactivex.internal.disposables.SequentialDisposable mar
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: boolean disposed
com.appspa.demo.R$style: int TextAppearance_AppCompat_Small
androidx.appcompat.R$styleable: int GradientColor_android_centerY
com.google.gson.internal.LinkedTreeMap$KeySet$1: com.google.gson.internal.LinkedTreeMap$KeySet this$1
com.appspa.update.R$style: int Base_V23_Theme_AppCompat_Light
androidx.appcompat.R$style: int Animation_AppCompat_DropDownUp
androidx.activity.R$id: int accessibility_custom_action_31
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: boolean emitting
com.xuexiang.xhttp2.R$styleable: int DrawerArrowToggle_gapBetweenBars
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ListPopupWindow mListPopupWindow
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_HINT_HIDE_ICON
androidx.customview.view.AbsSavedState: android.os.Parcelable mSuperState
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.app.AlertController: int mButtonIconDimen
com.appspa.update.R$styleable: int AppCompatTheme_colorControlNormal
com.xuexiang.xhttp2.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask$WorkerRunnable mWorker
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: io.reactivex.functions.Function mapper
okhttp3.internal.http2.Http2Codec: okhttp3.Protocol protocol
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_FILTER_KEY_EVENTS
androidx.appcompat.R$styleable: int AppCompatTheme_colorButtonNormal
com.appspa.demo.R$dimen: int space_close_icon_size
okhttp3.internal.connection.StreamAllocation: java.lang.Object callStackTrace
com.appspa.demo.R$styleable: int AppCompatTextView_autoSizePresetSizes
androidx.vectordrawable.R$id: int accessibility_custom_action_19
androidx.appcompat.resources.R$id: int actions
androidx.appcompat.R$styleable: int AppCompatTheme_checkedTextViewStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COPY
androidx.drawerlayout.R$id: int forever
com.appspa.update.R$styleable: int Spinner_android_prompt
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Display4
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleAttr
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: io.reactivex.Observer child
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction onSingleSubscribe
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_MULTIPLE
androidx.fragment.R$id: int accessibility_custom_action_2
io.reactivex.observers.SerializedObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe: io.reactivex.Observable source
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_NEVER
androidx.core.app.ShareCompat$IntentBuilder: java.lang.CharSequence mChooserTitle
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: java.util.concurrent.TimeUnit unit
com.xuexiang.xhttp2.R$attr: int drawableRightCompat
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar
com.xuexiang.xhttp2.R$layout: int custom_dialog
androidx.fragment.R$id: int accessibility_custom_action_23
com.xuexiang.xhttp2.cache.core.LruDiskCache: long mDiskMaxSize
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_CONVERSATION
androidx.loader.content.ModernAsyncTask: java.util.concurrent.ThreadFactory sThreadFactory
okio.Buffer$UnsafeCursor: int start
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
androidx.appcompat.R$style: int Widget_AppCompat_SeekBar
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver: io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver parent
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
androidx.customview.widget.ViewDragHelper: int STATE_SETTLING
androidx.fragment.R$styleable: int FontFamilyFont_fontVariationSettings
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type lowerBound
okhttp3.OkHttpClient: boolean followRedirects
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mInLongPress
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
androidx.appcompat.R$styleable: int MenuItem_android_enabled
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: long serialVersionUID
androidx.appcompat.R$style: int Base_Animation_AppCompat_Tooltip
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: int leftIndex
com.appspa.update.R$attr: int actionModeCloseDrawable
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_NoActionBar
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTint
androidx.viewpager.R$style: int Widget_Compat_NotificationActionText
com.appspa.update.R$dimen: int abc_text_size_button_material
com.xuexiang.xhttp2.R$styleable: int Toolbar_titleMarginStart
androidx.core.app.RemoteInput$Builder: java.lang.CharSequence mLabel
com.appspa.update.R$dimen: int abc_action_bar_stacked_tab_max_width
com.appspa.update.R$dimen: int abc_alert_dialog_button_dimen
androidx.appcompat.R$style: int Theme_AppCompat_NoActionBar
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker: java.util.concurrent.atomic.AtomicBoolean unsubscribed
androidx.core.graphics.drawable.IconCompat: float ICON_DIAMETER_FACTOR
androidx.appcompat.R$dimen: int abc_list_item_height_material
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: long produced
com.google.gson.stream.MalformedJsonException: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableConcatMapEager: io.reactivex.functions.Function mapper
androidx.core.graphics.drawable.IconCompat: float KEY_SHADOW_OFFSET_FACTOR
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CONVERSATION_TITLE
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: io.reactivex.internal.util.ErrorMode errorMode
retrofit2.converter.gson.GsonResponseBodyConverter: com.google.gson.Gson gson
androidx.appcompat.resources.R$id: int line1
androidx.vectordrawable.animated.R$id: int action_image
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int NO_REQUEST_HAS_VALUE
com.appspa.update.R$styleable: int ViewBackgroundHelper_backgroundTint
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: boolean done
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: java.util.Iterator it
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.Typeface mFontTypeface
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.activity.ImmLeaksCleaner: int INIT_FAILED
io.reactivex.internal.operators.flowable.FlowableAutoConnect: int numberOfSubscribers
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mClickableSpanActionId
io.reactivex.internal.subscribers.SubscriberResourceWrapper: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.widget.ShareActionProvider: androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: java.lang.Object NEXT
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction: io.reactivex.Scheduler$Worker actualWorker
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
io.reactivex.Scheduler$Worker$PeriodicTask: io.reactivex.internal.disposables.SequentialDisposable sd
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: boolean done
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbTitleText
com.xuexiang.xhttp2.R$styleable: int PopupWindowBackgroundState_state_above_anchor
androidx.appcompat.view.ActionMode: java.lang.Object mTag
androidx.activity.R$id: int accessibility_custom_action_1
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection parent
com.appspa.update.R$style: int Widget_AppCompat_PopupMenu_Overflow
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: boolean timerRunning
com.appspa.update.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.appspa.update.R$styleable: int MenuItem_android_numericShortcut
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: boolean disposed
androidx.appcompat.R$id: int text
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: boolean cancelled
com.appspa.update.R$style: int Widget_AppCompat_Light_PopupMenu
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.TextView mTextView
com.xuexiang.xhttp2.R$dimen: int abc_dialog_fixed_height_minor
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mOnDismissListener
com.xuexiang.xhttp2.R$id: int titleDividerNoCustom
com.appspa.update.R$string: int status_bar_notification_info_overflow
androidx.appcompat.R$id: int tag_accessibility_pane_title
com.appspa.demo.R$style: int Base_V23_Theme_AppCompat
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence[] mRemoteInputHistory
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: long timeout
okhttp3.CacheControl: boolean noTransform
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: java.lang.CharSequence mText
androidx.lifecycle.ComputableLiveData$2: androidx.lifecycle.ComputableLiveData this$0
com.appspa.update.R$styleable: int[] FontFamily
androidx.customview.R$attr: int fontProviderPackage
io.reactivex.internal.operators.observable.ObservableReplay$Node: long serialVersionUID
io.reactivex.internal.schedulers.IoScheduler: long KEEP_ALIVE_TIME
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: java.lang.reflect.Type[] args
retrofit2.ParameterHandler$Part: int p
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: boolean done
com.appspa.update.R$drawable: int abc_btn_radio_material_anim
androidx.appcompat.R$styleable: int MenuItem_android_menuCategory
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: java.util.List errors
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
io.reactivex.internal.operators.maybe.MaybeJust: java.lang.Object value
com.xuexiang.xhttp2.cache.RxCache$1: com.xuexiang.xhttp2.cache.stategy.IStrategy val$strategy
com.appspa.demo.R$id: int src_over
androidx.appcompat.R$drawable: int abc_ic_star_half_black_16dp
androidx.core.util.PatternsCompat: java.lang.String RELAXED_DOMAIN_NAME
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility
com.google.gson.Gson: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory
io.reactivex.internal.operators.completable.CompletableCache: java.util.concurrent.atomic.AtomicReference observers
androidx.appcompat.R$styleable: int[] Toolbar
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService pushExecutor
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable: io.reactivex.Flowable source
com.xuexiang.xhttp2.R$id: int wrap_content
androidx.viewpager.R$drawable: int notification_bg_low_pressed
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: io.reactivex.disposables.CompositeDisposable set
androidx.appcompat.widget.ActionBarContextView: int mSubtitleStyleRes
io.reactivex.internal.operators.flowable.FlowableFlattenIterable: int prefetch
okhttp3.RequestBody$3: okhttp3.MediaType val$contentType
com.xuexiang.xhttp2.request.BaseRequest: java.util.List mAdapterFactories
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Large
com.appspa.demo.R$color: int ripple_material_light
okio.RealBufferedSink: boolean closed
com.appspa.demo.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
androidx.appcompat.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
okhttp3.internal.http2.ErrorCode: int httpCode
com.appspa.demo.R$style: int Base_V7_Theme_AppCompat_Light
com.appspa.demo.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: io.reactivex.functions.Consumer disposer
com.xuexiang.xhttp2.R$dimen: int abc_text_size_title_material_toolbar
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: io.reactivex.MaybeSource other
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: io.reactivex.SingleObserver downstream
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mDrawable
androidx.vectordrawable.R$styleable: int GradientColor_android_centerColor
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable: io.reactivex.functions.Function mapper
androidx.viewpager.R$id: int tag_unhandled_key_event_manager
com.xuexiang.xhttp2.cache.RxCache: java.io.File diskDir
io.reactivex.internal.operators.completable.CompletableFromSingle: io.reactivex.SingleSource single
retrofit2.ParameterHandler$Body: int p
androidx.core.R$styleable: int GradientColor_android_tileMode
com.appspa.update.R$attr: int suggestionRowLayout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: io.reactivex.functions.Function mapper
com.appspa.demo.R$styleable: int LinearLayoutCompat_divider
androidx.vectordrawable.animated.R$attr: int fontProviderAuthority
com.appspa.demo.R$style: int Theme_AppCompat_CompactMenu
androidx.drawerlayout.R$styleable: int GradientColor_android_type
androidx.core.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.operators.mixed.SingleFlatMapObservable: io.reactivex.SingleSource source
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_Alert
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
androidx.appcompat.R$attr: int drawableSize
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: int index
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_ENABLED
androidx.core.app.NotificationCompat: int PRIORITY_MIN
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mNeedsAutoSizeText
org.aspectj.runtime.reflect.SignatureImpl: org.aspectj.runtime.reflect.SignatureImpl$Cache stringCache
androidx.appcompat.R$styleable: int View_paddingStart
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast: boolean done
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.observable.ObservableReplay$MulticastReplay: java.util.concurrent.Callable connectableFactory
androidx.appcompat.R$attr: int listPreferredItemHeight
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable[] TERMINATED
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: boolean eager
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: long index
androidx.appcompat.R$id: int decor_content_parent
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: boolean inCompletable
io.reactivex.internal.operators.single.SingleResumeNext: io.reactivex.functions.Function nextFunction
com.jakewharton.disklrucache.DiskLruCache: int appVersion
androidx.fragment.app.DialogFragment: boolean mCancelable
com.appspa.update.R$id: int accessibility_custom_action_24
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: long serialVersionUID
com.appspa.update.R$styleable: int TextAppearance_android_textStyle
com.appspa.update.R$styleable: int MenuItem_android_onClick
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: boolean delayErrors
com.appspa.update.R$attr: int drawableTopCompat
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: long producerIndex
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: java.util.concurrent.atomic.AtomicInteger active
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: int sourceMode
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: java.lang.Object state
io.reactivex.internal.operators.completable.CompletableToSingle: io.reactivex.CompletableSource source
com.appspa.update.R$styleable: int Toolbar_titleMarginBottom
com.appspa.update.R$styleable: int ActionBar_hideOnContentScroll
io.reactivex.internal.operators.observable.ObservableCache: io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable[] TERMINATED
io.reactivex.internal.functions.Functions$CastToClass: java.lang.Class clazz
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle: boolean delayErrors
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: androidx.fragment.app.FragmentManagerImpl this$0
com.appspa.update.R$color: int abc_tint_spinner
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: java.util.concurrent.ScheduledExecutorService evictorService
androidx.core.text.HtmlCompat: int TO_HTML_PARAGRAPH_LINES_CONSECUTIVE
okhttp3.CacheControl: java.lang.String headerValue
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_COLUMN_INT
com.google.gson.stream.JsonWriter: int[] stack
com.appspa.update.R$styleable: int[] AnimatedStateListDrawableItem
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: java.lang.Object state
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: boolean done
androidx.appcompat.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
com.xuexiang.xhttp2.request.BaseRequest: boolean mAccessToken
com.appspa.demo.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_FLAGS_KEY
io.reactivex.processors.ReplayProcessor$ReplaySubscription: java.util.concurrent.atomic.AtomicLong requested
androidx.appcompat.R$id: int scrollIndicatorUp
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
io.reactivex.subjects.BehaviorSubject: java.util.concurrent.atomic.AtomicReference terminalEvent
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: io.reactivex.Scheduler$Worker w
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: java.util.concurrent.atomic.AtomicReference upstream
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.model.HttpParams mCommonParams
com.xuexiang.xhttp2.request.BaseRequest: javax.net.ssl.HostnameVerifier mHostnameVerifier
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: boolean done
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor parent
androidx.appcompat.R$styleable: int MenuView_preserveIconSpacing
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: io.reactivex.internal.util.AtomicThrowable error
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long REVERSED_BIT
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int actionDropDownStyle
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
androidx.customview.R$id: int action_image
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Dialog
com.xuexiang.xhttp2.R$style: int Base_V22_Theme_AppCompat
androidx.customview.R$dimen: int notification_big_circle_margin
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: long time
com.xuexiang.xhttp2.R$color: int switch_thumb_disabled_material_light
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver: long serialVersionUID
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_18
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: boolean terminated
com.google.gson.internal.bind.ArrayTypeAdapter: com.google.gson.TypeAdapter componentTypeAdapter
com.appspa.demo.R$styleable: int Toolbar_logoDescription
androidx.fragment.R$dimen: int compat_notification_large_icon_max_width
com.xuexiang.xhttp2.R$dimen: int abc_text_size_menu_header_material
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.core.app.NotificationCompat$Builder: long mTimeout
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING_BUILDER
io.reactivex.internal.operators.single.SingleDelayWithSingle: io.reactivex.SingleSource other
androidx.core.R$dimen: int notification_top_pad
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper CANCELLED
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry mRegistry
com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator comparator
io.reactivex.internal.operators.observable.ObservableTakeUntil: io.reactivex.ObservableSource other
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification_Info
androidx.appcompat.app.TwilightCalculator: float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT
androidx.appcompat.view.menu.StandardMenuPopup: int mContentWidth
io.reactivex.internal.operators.observable.ObservableTimer: long delay
androidx.appcompat.R$styleable: int DrawerArrowToggle_color
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: java.util.concurrent.atomic.AtomicReference observers
androidx.activity.R$id: int accessibility_custom_action_19
com.google.gson.Gson: java.lang.ThreadLocal calls
androidx.lifecycle.ClassesInfoCache$MethodReference: int mCallType
io.reactivex.internal.operators.completable.CompletableFromUnsafeSource: io.reactivex.CompletableSource source
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.appspa.update.R$styleable: int GradientColor_android_startY
com.appspa.demo.R$string: int abc_menu_shift_shortcut_label
com.google.gson.JsonStreamParser: java.lang.Object lock
androidx.appcompat.resources.R$id: int tag_accessibility_pane_title
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: java.lang.Object v1
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_RTL
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleY
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe: io.reactivex.MaybeSource fallback
com.appspa.demo.R$style: int Base_Theme_AppCompat_Light_Dialog
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
androidx.appcompat.app.TwilightCalculator: float C2
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher: org.reactivestreams.Publisher other
com.xuexiang.xhttp2.request.BaseRequest$2: com.xuexiang.xhttp2.request.BaseRequest this$0
androidx.appcompat.R$layout: int abc_alert_dialog_button_bar_material
org.aspectj.runtime.reflect.StringMaker: boolean includeThrows
androidx.appcompat.widget.Toolbar: int mPopupTheme
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$styleable: int Toolbar_android_minHeight
com.appspa.demo.R$id: int search_bar
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton
com.xuexiang.xhttp2.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemVisible
com.appspa.demo.R$drawable: int abc_ic_star_half_black_16dp
androidx.core.app.NotificationCompatBuilder: android.os.Bundle mExtras
io.reactivex.internal.operators.completable.CompletableDelay$Delay: java.lang.Throwable error
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL
com.appspa.demo.R$string: int space_error_check_no_network
io.reactivex.internal.operators.observable.ObservableInternalHelper$ItemDelayFunction: io.reactivex.functions.Function itemDelay
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mHeadsUpContentView
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: java.util.concurrent.locks.Lock lock
androidx.appcompat.widget.SearchView$9: androidx.appcompat.widget.SearchView this$0
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber: io.reactivex.functions.Predicate predicate
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedDispose: io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable dr
androidx.core.app.NotificationCompat$WearableExtender: int SCREEN_TIMEOUT_LONG
com.appspa.update.R$style: int Base_Widget_AppCompat_Toolbar
androidx.appcompat.view.menu.MenuBuilder: android.util.SparseArray mFrozenViewStates
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_ANNOUNCEMENT
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] $VALUES
com.xuexiang.xhttp2.R$styleable: int StateListDrawable_android_dither
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.reflect.TypeToken typeToken
com.appspa.demo.R$style: int Widget_AppCompat_ActionBar_TabText
com.xuexiang.xhttp2.XHttp: retrofit2.Retrofit$Builder mRetrofitBuilder
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: boolean done
androidx.appcompat.widget.Toolbar: boolean mEatingHover
androidx.viewpager.widget.PagerTitleStrip$PageListener: androidx.viewpager.widget.PagerTitleStrip this$0
com.appspa.demo.R$id: int accessibility_custom_action_10
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: long serialVersionUID
com.appspa.demo.R$styleable: int AppCompatImageView_tint
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver this$0
com.appspa.update.R$color: int secondary_text_default_material_light
com.appspa.update.R$styleable: int Toolbar_navigationContentDescription
androidx.appcompat.widget.SuggestionsAdapter: int REFINE_ALL
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS_INDETERMINATE
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
androidx.activity.R$id: int text
com.appspa.demo.R$styleable: int ActionBar_hideOnContentScroll
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sActionIconField
androidx.core.app.NotificationManagerCompat: java.lang.Object sEnabledNotificationListenersLock
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: org.reactivestreams.Publisher source
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair: java.lang.Object first
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.appspa.demo.R$id: int search_mag_icon
androidx.core.view.ViewCompat: java.lang.reflect.Method sChildrenDrawingOrderMethod
com.appspa.demo.R$style: int Theme_AppCompat_Light_DialogWhenLarge
androidx.appcompat.R$styleable: int DrawerArrowToggle_arrowHeadLength
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: io.reactivex.internal.util.AtomicThrowable errors
com.xuexiang.xhttp2.R$attr: int subtitleTextStyle
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: retrofit2.BuiltInConverters$StreamingResponseBodyConverter INSTANCE
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: java.util.concurrent.atomic.AtomicReference queue
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicReference boundaryObserver
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: boolean cancelled
com.appspa.update.R$styleable: int AppCompatTheme_colorPrimary
okhttp3.Cache$Entry: java.lang.String message
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
com.appspa.demo.R$attr: int actionMenuTextAppearance
com.appspa.demo.R$attr: int textColorSearchUrl
androidx.appcompat.R$attr: int gapBetweenBars
com.appspa.demo.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.appspa.update.R$color: int material_grey_50
com.xuexiang.xhttp2.cache.core.CacheCore: com.xuexiang.xhttp2.cache.core.ICache mCache
com.appspa.update.R$drawable: int abc_seekbar_thumb_material
com.appspa.update.widget.NumberProgressBar: android.graphics.Paint mUnreachedBarPaint
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.flowable.FlowableBufferTimed: java.util.concurrent.TimeUnit unit
androidx.fragment.R$styleable: int FontFamily_fontProviderFetchStrategy
com.appspa.update.R$style: int Base_Widget_AppCompat_SeekBar
com.xuexiang.xhttp2.R$style: int Platform_V25_AppCompat
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableFlatMap: boolean delayErrors
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.appspa.update.R$attr: int iconTintMode
io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer: int limit
com.appspa.demo.R$styleable: int ActionBarLayout_android_layout_gravity
com.appspa.update.R$attr: int tint
io.reactivex.internal.subscriptions.DeferredScalarSubscription: long serialVersionUID
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.ForwardingListener mForwardingListener
io.reactivex.internal.operators.observable.ObservableSingleSingle: io.reactivex.ObservableSource source
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: androidx.appcompat.widget.ScrollingTabContainerView this$0
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemNumericShortcut
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.util.concurrent.atomic.AtomicReference error
androidx.vectordrawable.R$id: int line1
com.appspa.demo.R$style: int Widget_AppCompat_Spinner_Underlined
com.appspa.update.R$string: int abc_shareactionprovider_share_with
androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle
androidx.fragment.app.FragmentTransaction: int OP_SET_MAX_LIFECYCLE
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener
androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.appspa.demo.R$style: int Widget_AppCompat_SeekBar_Discrete
com.appspa.demo.R$styleable: int GradientColor_android_centerColor
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling ERROR
androidx.appcompat.R$color: int foreground_material_light
androidx.core.R$styleable: int FontFamilyFont_ttcIndex
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: long unique
androidx.appcompat.R$styleable: int[] StateListDrawableItem
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter: float WEIGHT_DECAY_COEFFICIENT
com.xuexiang.xhttp2.request.BaseBodyRequest: okhttp3.RequestBody mRequestBody
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowReturnTransitionOverlap
okhttp3.TlsVersion: java.lang.String javaName
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: java.util.concurrent.atomic.AtomicReference resource
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: boolean done
androidx.customview.R$styleable: int FontFamilyFont_font
androidx.fragment.app.FragmentActivity: boolean mStartedIntentSenderFromFragment
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
com.jakewharton.disklrucache.DiskLruCache: java.io.File journalFile
androidx.appcompat.R$dimen: int abc_edit_text_inset_bottom_material
com.appspa.update.R$styleable: int ActionMode_titleTextStyle
okhttp3.internal.http1.Http1Codec$AbstractSource: okio.ForwardingTimeout timeout
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutTask: io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSupport parent
androidx.appcompat.app.TwilightCalculator: float C3
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle: io.reactivex.functions.Consumer onSubscribe
androidx.fragment.app.FragmentTransitionCompat21$2: android.view.View val$fragmentView
io.reactivex.internal.operators.flowable.BlockingFlowableIterable: io.reactivex.Flowable source
com.appspa.update.AppSpace: java.util.Map mParams
io.reactivex.subjects.ReplaySubject$TimedNode: long time
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.Flowable source
io.reactivex.internal.operators.flowable.FlowableThrottleLatest: long timeout
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int UNDEFINED
com.appspa.update.R$styleable: int TextAppearance_android_textFontWeight
androidx.core.R$style: int TextAppearance_Compat_Notification_Time
androidx.fragment.R$id: int accessibility_custom_action_8
com.appspa.update.R$attr: int divider
com.appspa.demo.R$color: int abc_btn_colored_text_material
androidx.appcompat.R$color: int notification_action_color_filter
androidx.core.R$id: int actions
io.reactivex.internal.operators.flowable.FlowableGenerate: io.reactivex.functions.BiFunction generator
androidx.vectordrawable.R$id: int accessibility_custom_action_13
com.appspa.demo.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.core.provider.FontsContractCompat: androidx.core.provider.SelfDestructiveThread sBackgroundThread
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: boolean cancelled
io.reactivex.schedulers.Schedulers$NewThreadHolder: io.reactivex.Scheduler DEFAULT
org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11$Counter: int value
com.appspa.update.R$drawable: int notification_bg
androidx.appcompat.widget.ListPopupWindow: android.content.Context mContext
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: java.util.concurrent.Callable bufferSupplier
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_EMAIL
androidx.core.app.FrameMetricsAggregator: int TOTAL_INDEX
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: long serialVersionUID
com.appspa.update.R$color: int abc_tint_btn_checkable
androidx.customview.R$id: int line3
com.google.gson.internal.ConstructorConstructor$14: java.lang.Class val$rawType
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Caption
com.appspa.update.R$styleable: int MenuItem_iconTint
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: java.util.List windows
io.reactivex.internal.operators.flowable.FlowableMapPublisher: io.reactivex.functions.Function mapper
com.appspa.update.R$layout: int abc_screen_simple
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
com.appspa.update.R$styleable: int AppCompatTheme_windowNoTitle
androidx.core.text.util.FindAddress: int MAX_ADDRESS_LINES
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: java.lang.Throwable error
androidx.core.provider.SelfDestructiveThread$2$1: java.lang.Object val$result
com.appspa.update.R$style: int Theme_AppCompat_Light_Dialog
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
androidx.appcompat.resources.R$dimen: int notification_big_circle_margin
androidx.appcompat.app.TwilightCalculator: int state
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.widget.ShareActionProvider: androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener
org.aspectj.lang.Aspects: java.lang.Class[] PERTYPEWITHIN_CLASS_ARRAY
retrofit2.OkHttpCall: java.lang.Throwable creationFailure
androidx.appcompat.widget.ListPopupWindow: int mDropDownHorizontalOffset
androidx.appcompat.R$styleable: int[] ColorStateListItem
com.appspa.demo.R$dimen: int space_button_min_height
com.appspa.demo.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.core.R$dimen: int notification_main_column_padding_top
com.appspa.demo.R$string: int space_lab_ready_update
androidx.activity.R$id: int accessibility_custom_action_14
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ListPopupWindow
androidx.appcompat.R$dimen: int abc_panel_menu_list_width
com.google.gson.internal.Excluder: java.util.List deserializationStrategies
retrofit2.Platform: retrofit2.Platform PLATFORM
androidx.appcompat.R$integer: int abc_config_activityDefaultDur
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete: io.reactivex.functions.Predicate predicate
io.reactivex.internal.operators.flowable.FlowableDelay: boolean delayError
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther: io.reactivex.ObservableSource main
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_CompoundButton_Switch
com.appspa.update.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.appspa.update.R$id: int notification_main_column_container
com.appspa.update.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionButton
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: boolean disconnectedEarly
androidx.loader.R$styleable: int FontFamilyFont_android_ttcIndex
com.appspa.demo.R$id: int CTRL
com.appspa.demo.R$dimen: int highlight_alpha_material_light
retrofit2.RequestBuilder: okhttp3.RequestBody body
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_popupMenuStyle
com.xuexiang.xhttp2.R$dimen: int abc_text_size_subhead_material
androidx.fragment.app.FragmentActivity: java.lang.String TAG
com.appspa.update.R$attr: int commitIcon
androidx.core.R$id: int notification_background
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: boolean done
com.appspa.demo.R$style: int Base_Widget_AppCompat_Light_ActionBar
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: long end
com.appspa.update.R$id: int title_template
com.appspa.demo.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_HTML_ELEMENT
okhttp3.Cookie: long expiresAt
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: io.reactivex.Observer downstream
androidx.appcompat.view.menu.MenuBuilder: boolean mQwertyMode
com.appspa.demo.R$color: int abc_background_cache_hint_selector_material_dark
retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable: boolean disposed
com.xuexiang.xhttp2.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.widget.ShareActionProvider: java.lang.String mShareHistoryFileName
androidx.appcompat.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.appspa.update.R$id: int textSpacerNoTitle
com.zhy.http.okhttp.builder.OkHttpRequestBuilder: java.lang.String url
com.appspa.update.R$dimen: int abc_text_size_display_1_material
androidx.versionedparcelable.VersionedParcelStream: int mFieldSize
androidx.appcompat.resources.R$id: int action_image
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: io.reactivex.functions.Function mapper
androidx.core.provider.FontsContractCompat$FontFamilyResult: int mStatusCode
com.google.gson.JsonParseException: long serialVersionUID
com.appspa.demo.R$id: int accessibility_custom_action_19
com.appspa.demo.R$styleable: int ActionBar_contentInsetEndWithActions
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$SequentialDispose: io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker this$0
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: long count
androidx.vectordrawable.animated.R$attr: int fontVariationSettings
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Display1
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxAscent
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
com.appspa.demo.R$styleable: int[] AppCompatImageView
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReenterTransition
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mCachedTintMode
com.xuexiang.xhttp2.R$attr: int arrowHeadLength
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: int limit
androidx.vectordrawable.animated.R$id: int right_icon
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher mCipher
com.xuexiang.xhttp2.R$attr: int dropDownListViewStyle
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver: io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver parent
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription: long serialVersionUID
androidx.vectordrawable.R$dimen: int notification_action_icon_size
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String MP4_CONTENT_TYPE
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Time
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer
com.appspa.update.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
androidx.core.view.ViewCompat: java.lang.reflect.Field sMinWidthField
com.xuexiang.xhttp2.R$layout: int abc_list_menu_item_layout
androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
okhttp3.Response$Builder: long receivedResponseAtMillis
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchor
com.xuexiang.xhttp2.R$id: int search_mag_icon
com.appspa.update.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
androidx.appcompat.widget.Toolbar: boolean mEatingTouch
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState
androidx.appcompat.R$id: int accessibility_custom_action_3
com.appspa.update.UpdateManager: boolean mIsGet
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: io.reactivex.processors.ReplayProcessor$Node head
com.appspa.demo.R$color: int secondary_text_default_material_dark
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX
androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho
androidx.core.graphics.PaintCompat: java.lang.ThreadLocal sRectThreadLocal
androidx.appcompat.widget.SuggestionsAdapter: java.util.WeakHashMap mOutsideDrawablesCache
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: java.lang.Class raw
com.appspa.update.R$attr: int titleMargin
com.appspa.demo.R$styleable: int AppCompatTheme_buttonStyleSmall
androidx.appcompat.view.menu.MenuBuilder: boolean mShortcutsVisible
com.xuexiang.xhttp2.R$attr: int listPreferredItemHeightSmall
androidx.drawerlayout.widget.DrawerLayout: int DEFAULT_SCRIM_COLOR
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: int maxConcurrency
androidx.viewpager.widget.ViewPager: int mChildWidthMeasureSpec
androidx.core.app.ActivityRecreator: android.os.Handler mainHandler
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ListView
androidx.appcompat.R$attr: int textAppearanceListItemSecondary
org.aspectj.runtime.CFlow: java.lang.Object _aspect
androidx.appcompat.R$color: int abc_color_highlight_material
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: int index
com.appspa.update.R$attr: int listPreferredItemHeightLarge
com.xuexiang.xhttp2.R$id: int on
com.appspa.demo.R$color: int abc_search_url_text_selected
com.xuexiang.xhttp2.R$styleable: int[] PopupWindow
io.reactivex.internal.observers.ForEachWhileObserver: io.reactivex.functions.Consumer onError
com.appspa.update.R$attr: int dividerPadding
com.appspa.update.R$color: int abc_search_url_text_selected
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory URI_FACTORY
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable[] EMPTY
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_AUTO
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.util.concurrent.atomic.AtomicLong producerIndex
io.reactivex.internal.util.AtomicThrowable: long serialVersionUID
androidx.appcompat.widget.ActionBarContextView: int mCloseItemLayout
com.xuexiang.xhttp2.R$id: int chronometer
com.appspa.demo.R$anim: int abc_fade_out
com.appspa.demo.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.widget.LinearLayoutCompat: java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint
com.xuexiang.xhttp2.R$attr: int borderlessButtonStyle
com.appspa.demo.R$styleable: int SwitchCompat_trackTintMode
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_checkedTextViewStyle
androidx.activity.R$id: int actions
androidx.fragment.R$id: int accessibility_custom_action_6
androidx.viewpager.R$styleable: int FontFamilyFont_fontVariationSettings
org.aspectj.internal.lang.reflect.TypePatternBasedPerClauseImpl: org.aspectj.lang.reflect.TypePattern typePattern
androidx.appcompat.R$style: int Theme_AppCompat_Light_NoActionBar
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
com.appspa.update.R$id: int accessibility_custom_action_10
androidx.appcompat.R$styleable: int AppCompatTextView_textAllCaps
androidx.vectordrawable.R$drawable: int notification_icon_background
okio.HashingSource: javax.crypto.Mac mac
io.reactivex.internal.operators.observable.ObservableMergeWithSingle: io.reactivex.SingleSource other
com.appspa.update.R$style: int Widget_AppCompat_ListView
androidx.appcompat.R$layout: int abc_popup_menu_header_item_layout
androidx.fragment.app.Fragment: boolean mCalled
com.xuexiang.xhttp2.model.SchedulerType: com.xuexiang.xhttp2.model.SchedulerType[] $VALUES
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: io.reactivex.Observer downstream
com.appspa.update.R$attr: int colorControlHighlight
com.xuexiang.xhttp2.request.BaseBodyRequest: java.lang.String mString
com.appspa.update.R$style: int Widget_AppCompat_PopupWindow
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED
okhttp3.internal.Util: okio.ByteString UTF_8_BOM
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_startY
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: org.reactivestreams.Subscription upstream
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
androidx.appcompat.R$dimen: int abc_button_inset_horizontal_material
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_12
com.appspa.update.entity.UpdateError$ERROR: int CHECK_JSON_EMPTY
androidx.appcompat.R$styleable: int SwitchCompat_thumbTintMode
okio.ByteString: byte[] data
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
io.reactivex.internal.operators.completable.CompletableCache: io.reactivex.CompletableSource source
com.xuexiang.xhttp2.R$styleable: int ViewBackgroundHelper_android_background
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: long serialVersionUID
okhttp3.Protocol: okhttp3.Protocol HTTP_2
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: long timeout
androidx.appcompat.R$drawable: int abc_ratingbar_small_material
io.reactivex.internal.observers.BasicFuseableObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$attr: int fontFamily
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotY
androidx.viewpager.widget.ViewPager: int MAX_SETTLE_DURATION
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: long serialVersionUID
com.appspa.demo.R$attr: int queryHint
androidx.appcompat.R$id: int none
androidx.appcompat.app.AlertController$AlertParams: int mIconAttrId
androidx.appcompat.R$layout: int notification_template_part_chronometer
com.appspa.update.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: java.util.Collection collection
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: io.reactivex.internal.util.AtomicThrowable error
androidx.appcompat.widget.SearchView: int mCollapsedImeOptions
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_ACCESSIBILITY_OVERLAY
androidx.appcompat.app.ToolbarActionBar: boolean mMenuCallbackSet
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_24
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: io.reactivex.CompletableObserver downstream
com.appspa.update.R$drawable: int abc_text_select_handle_middle_mtrl_dark
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType RESOURCE_ID
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: long produced
androidx.appcompat.widget.SearchView: java.lang.CharSequence mUserQuery
com.appspa.update.R$attr: int titleMarginEnd
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Display1
com.appspa.update.R$styleable: int Toolbar_collapseIcon
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: long serialVersionUID
androidx.core.R$dimen: int compat_button_padding_vertical_material
com.appspa.demo.R$style: int Widget_AppCompat_TextView
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: io.reactivex.MaybeObserver downstream
com.appspa.demo.R$attr: int iconTintMode
io.reactivex.internal.operators.flowable.FlowableRefCount: long timeout
androidx.appcompat.R$string: int abc_action_mode_done
androidx.viewpager.widget.PagerTitleStrip: int[] ATTRS
androidx.vectordrawable.R$id: int blocking
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: boolean cancelled
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemClickListener mItemClickListener
com.appspa.demo.R$color: int abc_search_url_text_pressed
androidx.versionedparcelable.VersionedParcel: int EX_UNSUPPORTED_OPERATION
okhttp3.OkHttpClient: java.util.List connectionSpecs
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.view.View mCustomView
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
com.appspa.update._AppSpace: android.util.LruCache sTopDrawableCache
com.appspa.demo.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonPrimitive SENTINEL_CLOSED
org.aspectj.runtime.internal.CFlowCounter: org.aspectj.runtime.internal.cflowstack.ThreadCounter flowHeightHandler
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord firstOutTransaction
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded
io.reactivex.internal.operators.completable.CompletableFromCallable: java.util.concurrent.Callable callable
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$inFragment
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: io.reactivex.internal.util.AtomicThrowable error
androidx.loader.R$styleable: int GradientColor_android_startX
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$styleable: int MenuView_android_headerBackground
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody: okhttp3.RequestBody delegate
com.xuexiang.xhttp2.R$id: int tag_screen_reader_focusable
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String APK_CONTENT_TYPE
com.appspa.demo.R$id: int dialog_button
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher: io.reactivex.CompletableSource source
com.appspa.demo.R$style: int TextAppearance_AppCompat_Small_Inverse
androidx.appcompat.R$styleable: int[] SwitchCompat
androidx.fragment.R$id: int notification_main_column_container
com.xuexiang.xhttp2.R$attr: int maxButtonHeight
androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners
com.appspa.demo.R$id: int screen
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: int OTHER_STATE_CONSUMED_OR_EMPTY
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_DATA_MIME_TYPE
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: java.lang.Object v2
androidx.vectordrawable.R$id: int italic
io.reactivex.disposables.ActionDisposable: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast: long serialVersionUID
androidx.core.app.NotificationCompat$Builder: int mProgress
com.appspa.demo.R$id: int iv_close
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
com.appspa.demo.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
io.reactivex.internal.operators.observable.ObservableAllSingle: io.reactivex.ObservableSource source
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: java.util.concurrent.atomic.AtomicReference queue
com.appspa.demo.R$styleable: int AppCompatTextView_drawableBottomCompat
com.google.gson.internal.LinkedHashTreeMap$Node: int hash
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: org.reactivestreams.Subscriber downstream
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset
androidx.core.view.inputmethod.InputConnectionCompat: int INPUT_CONTENT_GRANT_READ_URI_PERMISSION
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$styleable: int AppCompatTextView_drawableTint
androidx.appcompat.R$drawable: int abc_ic_go_search_api_material
androidx.appcompat.R$attr: int popupMenuStyle
com.appspa.update.R$styleable: int AppCompatTheme_textColorSearchUrl
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupWindow
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: io.reactivex.internal.util.AtomicThrowable errors
androidx.fragment.app.FragmentTransaction: int OP_ATTACH
androidx.appcompat.R$id: int chronometer
com.appspa.demo.R$styleable: int AppCompatTheme_listMenuViewStyle
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: java.lang.String SPAN_ID
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver BOUNDARY_DISPOSED
androidx.core.text.BidiFormatter: int DIR_LTR
androidx.drawerlayout.widget.DrawerLayout: int STATE_DRAGGING
io.reactivex.internal.operators.flowable.FlowableGroupBy$EvictionAction: java.util.Queue evictedGroups
com.appspa.update.R$attr: int tickMark
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: long mDuration
androidx.appcompat.R$dimen: int notification_main_column_padding_top
androidx.vectordrawable.animated.R$id: int info
com.appspa.update.R$styleable: int AppCompatTextHelper_android_drawableTop
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModePasteDrawable
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean mApplyGravity
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: androidx.appcompat.widget.ForwardingListener this$0
androidx.viewpager.R$id: int time
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: java.util.concurrent.atomic.AtomicReference debouncer
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: boolean done
io.reactivex.exceptions.CompositeException: java.util.List exceptions
androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: long serialVersionUID
androidx.appcompat.R$attr: int listItemLayout
com.xuexiang.xhttp2.R$style: int Platform_ThemeOverlay_AppCompat
com.xuexiang.xhttp2.R$drawable: int abc_list_selector_holo_dark
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany: java.lang.Iterable otherIterable
androidx.appcompat.R$color: int highlighted_text_material_dark
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST
com.appspa.demo.R$attr: int actionModeSelectAllDrawable
com.appspa.demo.R$attr: int autoCompleteTextViewStyle
com.appspa.demo.R$layout: int spa_dialog_update
androidx.core.widget.NestedScrollView: int[] mScrollOffset
androidx.appcompat.R$dimen: int abc_action_bar_content_inset_with_nav
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: boolean done
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha
io.reactivex.android.schedulers.AndroidSchedulers: io.reactivex.Scheduler MAIN_THREAD
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: io.reactivex.Observer downstream
androidx.appcompat.R$id: int message
androidx.appcompat.R$string: int abc_prepend_shortcut_label
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
androidx.appcompat.R$styleable: int TextAppearance_android_textSize
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: boolean done
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: int leftIndex
com.appspa.demo.R$layout: int notification_template_part_time
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$dimen: int tooltip_y_offset_touch
androidx.appcompat.widget.SearchView: boolean mIconifiedByDefault
androidx.vectordrawable.animated.R$styleable: int[] FontFamilyFont
io.reactivex.internal.operators.observable.ObservableSkipLast: int skip
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: long serialVersionUID
com.appspa.demo.R$attr: int xnpb_unreached_color
com.appspa.demo.R$dimen: int compat_control_corner_material
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
com.appspa.update.R$styleable: int AlertDialog_multiChoiceItemLayout
retrofit2.BuiltInConverters$UnitResponseBodyConverter: retrofit2.BuiltInConverters$UnitResponseBodyConverter INSTANCE
io.reactivex.internal.operators.flowable.FlowableDistinct: java.util.concurrent.Callable collectionSupplier
io.reactivex.internal.observers.DeferredScalarObserver: long serialVersionUID
com.appspa.demo.R$styleable: int AppCompatTheme_colorControlActivated
androidx.fragment.R$styleable: int FontFamilyFont_ttcIndex
com.appspa.demo.R$style: int Animation_AppCompat_DropDownUp
io.reactivex.subjects.BehaviorSubject: java.util.concurrent.locks.ReadWriteLock lock
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: io.reactivex.functions.Function mapper
androidx.appcompat.R$id: int accessibility_custom_action_19
com.appspa.demo.R$id: int showHome
com.appspa.demo.R$styleable: int View_android_theme
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: java.lang.Object last
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable: io.reactivex.CompletableSource other
androidx.appcompat.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
androidx.core.graphics.PathSegment: float mEndFraction
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: boolean cancelled
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Light
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: io.reactivex.Observer downstream
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.xuexiang.xhttp2.R$attr: int textAppearanceSearchResultSubtitle
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: boolean notSkipping
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
androidx.appcompat.R$styleable: int ActionBar_logo
io.reactivex.internal.operators.flowable.FlowableToListSingle: java.util.concurrent.Callable collectionSupplier
com.google.gson.internal.Primitives: java.util.Map WRAPPER_TO_PRIMITIVE_TYPE
androidx.activity.R$layout: int custom_dialog
com.xuexiang.xhttp2.R$attr: int iconTintMode
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: int sourceMode
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: java.util.concurrent.atomic.AtomicBoolean once
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionBar
androidx.core.app.Person: java.lang.String mUri
com.appspa.update.R$id: int action_text
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.zhy.http.okhttp.builder.PostFormBuilder$FileInput: java.lang.String filename
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: int maxConcurrency
retrofit2.OkHttpCall: retrofit2.RequestFactory requestFactory
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: java.util.ArrayDeque buffers
androidx.vectordrawable.animated.R$attr: int fontProviderPackage
androidx.core.view.ViewCompat: int OVER_SCROLL_IF_CONTENT_SCROLLS
androidx.core.widget.TextViewCompat$OreoCallback: int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START
com.appspa.demo.activity.MainActivity$1: com.appspa.demo.activity.MainActivity this$0
com.xuexiang.xhttp2.R$attr: int listPopupWindowStyle
okhttp3.ConnectionPool$1: okhttp3.ConnectionPool this$0
retrofit2.Retrofit$Builder: okhttp3.HttpUrl baseUrl
androidx.fragment.R$id: int accessibility_custom_action_16
androidx.appcompat.R$attr: int selectableItemBackgroundBorderless
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.xuexiang.xhttp2.R$style: int Platform_V21_AppCompat
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_OK
com.appspa.update.R$layout: int abc_select_dialog_material
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy ERROR
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation
com.appspa.update.R$styleable: int AppCompatTheme_dialogTheme
retrofit2.KotlinExtensions$suspendAndThrow$1: int label
androidx.appcompat.resources.R$id: int accessibility_custom_action_1
com.appspa.update.R$drawable: int abc_spinner_mtrl_am_alpha
androidx.core.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_BLOCKING
com.appspa.update.R$drawable: int abc_btn_check_material
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: long index
androidx.core.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_BITMAP
androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean mDeliveredData
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.locks.ReentrantLock val$lock
androidx.appcompat.resources.R$id: int accessibility_custom_action_10
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
androidx.appcompat.resources.R$id: int chronometer
androidx.appcompat.R$styleable: int Toolbar_android_gravity
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: long consumed
androidx.vectordrawable.R$layout: int notification_template_icon_group
io.reactivex.processors.SerializedProcessor: io.reactivex.processors.FlowableProcessor actual
androidx.appcompat.R$style: int Base_Widget_AppCompat_SeekBar
io.reactivex.internal.operators.observable.ObservableMapNotification: io.reactivex.functions.Function onErrorMapper
androidx.drawerlayout.R$attr: int fontVariationSettings
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: boolean done
io.reactivex.processors.MulticastProcessor$MulticastSubscription: long emitted
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int openState
io.reactivex.Scheduler$Worker$PeriodicTask: long count
io.reactivex.internal.operators.flowable.FlowableDefer: java.util.concurrent.Callable supplier
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.String TAG
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Light_Dialog
io.reactivex.Flowable: int BUFFER_SIZE
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable
androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable
androidx.appcompat.R$styleable: int MenuGroup_android_enabled
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicBoolean stopWindows
io.reactivex.internal.operators.observable.ObservableUsing: java.util.concurrent.Callable resourceSupplier
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REPORT_VIEW_IDS
com.appspa.update.R$style: int Base_Widget_AppCompat_ProgressBar
androidx.appcompat.app.AlertController: int mViewSpacingBottom
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: io.reactivex.Observer downstream
com.jakewharton.disklrucache.StrictLineReader: int end
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerOuter: io.reactivex.functions.BiFunction combiner
androidx.activity.R$styleable: int FontFamilyFont_fontVariationSettings
com.appspa.update.R$style: int Base_Theme_AppCompat_CompactMenu
androidx.core.view.DragStartHelper$1: androidx.core.view.DragStartHelper this$0
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: int count
androidx.core.R$dimen: int notification_small_icon_size_as_large
com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node right
com.appspa.update.R$color: int primary_material_dark
androidx.appcompat.R$color: int material_grey_50
io.reactivex.internal.operators.flowable.FlowableSequenceEqual: org.reactivestreams.Publisher second
androidx.drawerlayout.R$dimen: int compat_control_corner_material
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator: io.reactivex.Observer downstream
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
androidx.vectordrawable.graphics.drawable.AndroidResources: int FAST_OUT_LINEAR_IN
androidx.appcompat.R$styleable: int[] Spinner
com.appspa.update.R$styleable: int TextAppearance_android_textColorLink
io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver: java.util.concurrent.atomic.AtomicBoolean once
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1
com.appspa.demo.R$attr: int textAppearanceListItemSecondary
androidx.appcompat.R$styleable: int GradientColorItem_android_offset
io.reactivex.internal.operators.observable.ObservableUsing: io.reactivex.functions.Function sourceSupplier
androidx.viewpager.widget.PagerTitleStrip: int mLastKnownCurrentPage
com.appspa.update.R$styleable: int FontFamily_fontProviderQuery
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Info
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: int fusionMode
androidx.versionedparcelable.VersionedParcel: int EX_PARCELABLE
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable: boolean delayErrors
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_viewInflaterClass
okhttp3.MultipartBody: okhttp3.MediaType contentType
okhttp3.CacheControl: int maxAgeSeconds
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_FORWARD
com.appspa.demo.R$dimen: int abc_text_size_title_material_toolbar
io.reactivex.internal.operators.flowable.FlowableReplay$Node: long index
androidx.appcompat.R$style: int Widget_Compat_NotificationActionContainer
com.google.gson.internal.bind.TypeAdapters$31: com.google.gson.reflect.TypeToken val$type
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeStepGranularityInPx
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_textLocale
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: long serialVersionUID
androidx.core.util.PatternsCompat: java.util.regex.Pattern EMAIL_ADDRESS
androidx.appcompat.R$style: int Base_AlertDialog_AppCompat
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind[] $VALUES
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: java.lang.Object value
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: long producerIndex
com.appspa.update.R$styleable: int SwitchCompat_showText
androidx.appcompat.R$style: int Widget_AppCompat_ListPopupWindow
com.xuexiang.xhttp2.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
io.reactivex.internal.operators.flowable.FlowableConcatMapEager: int prefetch
com.xuexiang.xhttp2.R$styleable: int[] LinearLayoutCompat
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_KEYFRAME_INTERPOLATOR
androidx.appcompat.R$styleable: int ActionBar_progressBarStyle
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: boolean terminated
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
io.reactivex.internal.operators.flowable.FlowableRepeat: long count
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE
androidx.appcompat.R$dimen: int abc_text_size_body_2_material
com.appspa.update.R$dimen: int abc_text_size_body_1_material
androidx.activity.R$drawable: int notification_bg
com.zhy.http.okhttp.OkHttpUtils$2: java.lang.Exception val$e
com.appspa.demo.R$id: int homeAsUp
com.appspa.demo.R$styleable: int ButtonBarLayout_allowStacking
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: long serialVersionUID
androidx.appcompat.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionBar_TabView
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners
io.reactivex.internal.operators.flowable.FlowableJoin: io.reactivex.functions.Function leftEnd
com.xuexiang.xhttp2.R$id: int action_bar_container
com.appspa.demo.R$attr: int tintMode
androidx.core.app.FrameMetricsAggregator: int SYNC_DURATION
androidx.appcompat.R$attr: int collapseContentDescription
androidx.viewpager.widget.PagerTabStrip: float mInitialMotionY
androidx.appcompat.R$styleable: int AppCompatTheme_popupWindowStyle
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String mId
com.xuexiang.xhttp2.R$styleable: int GradientColorItem_android_color
androidx.customview.R$drawable: int notification_bg_normal_pressed
com.appspa.demo.R$styleable: int AppCompatTheme_switchStyle
com.xuexiang.xhttp2.R$color: int switch_thumb_material_dark
com.appspa.demo.R$style: int Widget_AppCompat_RatingBar_Small
androidx.vectordrawable.animated.R$attr: int fontProviderQuery
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: boolean done
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_CHRONOMETER
androidx.appcompat.widget.Toolbar: int[] mTempMargins
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber: boolean done
com.appspa.update.proxy.impl.DefaultUpdateChecker$2: com.appspa.update.proxy.IUpdateProxy val$updateProxy
com.appspa.update.entity.DownloadEntity: android.os.Parcelable$Creator CREATOR
com.appspa.demo.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
io.reactivex.internal.operators.completable.CompletableTimeout: io.reactivex.CompletableSource source
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: long serialVersionUID
androidx.core.view.WindowCompat: int FEATURE_ACTION_BAR_OVERLAY
com.google.gson.stream.JsonWriter: java.lang.String separator
androidx.core.view.ActionProvider: android.content.Context mContext
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction onCompletableSubscribe
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: boolean inCompletable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int mAutoSizeTextType
retrofit2.BuiltInConverters$ToStringConverter: retrofit2.BuiltInConverters$ToStringConverter INSTANCE
com.appspa.update.UpdateManager: com.appspa.update.proxy.IUpdateHttpService mIUpdateHttpService
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_Switch
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE
androidx.core.app.NotificationCompat$Action: int icon
androidx.core.text.util.FindAddress: int kMaxAddressNameWordLength
com.appspa.demo.R$dimen: int abc_alert_dialog_button_bar_height
androidx.customview.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.fragment.app.ListFragment$2: androidx.fragment.app.ListFragment this$0
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: io.reactivex.internal.disposables.SequentialDisposable task
io.reactivex.internal.operators.flowable.FlowableDoOnEach: io.reactivex.functions.Action onComplete
androidx.core.app.SharedElementCallback: java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
androidx.appcompat.R$color: int abc_secondary_text_material_light
androidx.appcompat.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
com.appspa.update.R$attr: int subMenuArrow
androidx.loader.R$dimen: int notification_subtext_size
com.xuexiang.xhttp2.R$color: int accent_material_light
androidx.appcompat.resources.R$attr: int ttcIndex
androidx.fragment.R$styleable: int FontFamily_fontProviderFetchTimeout
com.xuexiang.xhttp2.R$drawable: int abc_ic_arrow_drop_right_black_24dp
androidx.activity.R$styleable: int GradientColor_android_endY
androidx.appcompat.R$dimen: int notification_media_narrow_margin
androidx.appcompat.widget.ActivityChooserModel: int INVALID_INDEX
okhttp3.ConnectionPool: int maxIdleConnections
com.appspa.update.R$id: int accessibility_custom_action_7
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: boolean disposed
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Spinner_DropDown
com.appspa.update.R$drawable: int abc_list_pressed_holo_light
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: java.lang.Object[] values
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence[] mItems
com.appspa.demo.R$styleable: int CompoundButton_buttonCompat
com.xuexiang.xhttp2.R$drawable: int abc_btn_radio_material
com.xuexiang.xhttp2.R$bool: int abc_config_actionMenuItemAllCaps
com.appspa.demo.R$attr: int listItemLayout
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: io.reactivex.SingleSource source
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: java.lang.Object accumulator
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor
androidx.appcompat.R$style: int TextAppearance_AppCompat_Caption
com.xuexiang.xhttp2.XHttp: int mRetryIncreaseDelay
com.appspa.demo.R$styleable: int ActionMode_closeItemLayout
com.appspa.demo.R$anim: int abc_slide_out_bottom
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
com.xuexiang.xhttp2.annotation.NetMethod: java.lang.String GET
io.reactivex.internal.operators.observable.ObservableReplay$ScheduledReplaySupplier: int bufferSize
io.reactivex.internal.operators.flowable.FlowableRetryPredicate: long count
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle: io.reactivex.functions.BiFunction reducer
okhttp3.MultipartBody$Part: okhttp3.Headers headers
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath
okhttp3.HttpUrl: java.lang.String password
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CHARACTER_FACTORY
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: io.reactivex.disposables.CompositeDisposable disposables
androidx.appcompat.R$drawable: int abc_ic_star_black_16dp
com.appspa.demo.R$styleable: int Toolbar_subtitleTextAppearance
com.appspa.demo.R$drawable: int notification_bg_low_normal
androidx.core.app.Person$Builder: java.lang.CharSequence mName
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: java.util.concurrent.TimeUnit unit
com.appspa.demo.http.OKHttpUpdateHttpService$2: com.appspa.update.proxy.IUpdateHttpService$DownloadCallback val$callback
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: long serialVersionUID
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_stacked_tab_max_width
androidx.appcompat.R$id: int accessibility_custom_action_28
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: boolean disposed
com.appspa.update.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.customview.R$dimen: int notification_action_text_size
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair: java.util.concurrent.atomic.AtomicInteger releaseIndex
com.appspa.demo.R$attr: int buttonTint
io.reactivex.internal.operators.observable.ObservableIntervalRange: long start
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: long produced
androidx.viewpager.R$styleable: int FontFamily_fontProviderCerts
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber[] subscribers
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableAllSingle: io.reactivex.functions.Predicate predicate
androidx.core.provider.FontRequest: java.lang.String mProviderPackage
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: boolean done
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: long serialVersionUID
androidx.activity.R$dimen: int notification_big_circle_margin
androidx.activity.R$id: int normal
okhttp3.internal.http1.Http1Codec$ChunkedSource: boolean hasMoreChunks
androidx.appcompat.widget.DrawableUtils: java.lang.Class sInsetsClazz
io.reactivex.internal.operators.maybe.MaybeCache: java.lang.Throwable error
com.appspa.demo.R$attr: int contentInsetLeft
androidx.core.graphics.drawable.RoundedBitmapDrawable: int DEFAULT_PAINT_FLAGS
com.appspa.update.R$drawable: int tooltip_frame_light
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: int STATE_ACTIVE
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton_CloseMode
androidx.cursoradapter.widget.CursorAdapter: android.database.DataSetObserver mDataSetObserver
com.appspa.update.R$attr: int actionModeBackground
com.appspa.update.R$styleable: int AppCompatTextHelper_android_drawableLeft
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: io.reactivex.Observer downstream
androidx.customview.R$styleable: int GradientColor_android_startY
com.appspa.update.R$id: int action_menu_presenter
com.appspa.update.R$style: int TextAppearance_AppCompat_Body1
com.appspa.update.R$string: int space_error_install_failed
androidx.core.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority
com.appspa.demo.R$styleable: int AppCompatTheme_alertDialogTheme
androidx.appcompat.R$styleable: int TextAppearance_android_shadowDy
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$enterTransition
com.appspa.update.R$color: int space_default_bg_color
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_RESPONSE_CODE
org.aspectj.internal.lang.reflect.DeclareSoftImpl: org.aspectj.lang.reflect.AjType exceptionType
io.reactivex.internal.observers.SubscriberCompletableObserver: org.reactivestreams.Subscriber subscriber
androidx.appcompat.R$layout: int abc_action_mode_bar
androidx.vectordrawable.animated.R$id: int line1
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: io.reactivex.internal.disposables.SequentialDisposable timer
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
com.appspa.demo.R$styleable: int AppCompatTheme_panelMenuListTheme
io.reactivex.schedulers.Schedulers$SingleHolder: io.reactivex.Scheduler DEFAULT
com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType: com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType PART
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: java.util.concurrent.atomic.AtomicReference latest
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: boolean cancelled
io.reactivex.flowables.GroupedFlowable: java.lang.Object key
com.appspa.update.R$attr: int overlapAnchor
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: io.reactivex.internal.disposables.SequentialDisposable upstream
io.reactivex.internal.operators.flowable.FlowableSampleTimed: boolean emitLast
androidx.customview.R$id: int text
com.appspa.demo.R$styleable: int AlertDialog_android_layout
com.appspa.update.R$styleable: int Toolbar_logoDescription
androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: java.util.concurrent.atomic.AtomicBoolean once
androidx.fragment.app.FragmentManagerImpl: java.lang.String TAG
com.appspa.demo.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
androidx.appcompat.resources.R$styleable: int[] FontFamilyFont
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicInteger windows
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations
androidx.core.text.BidiFormatter: char RLM
com.xuexiang.xhttp2.R$color: int background_floating_material_light
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter NUMBER
com.appspa.update.AppSpace: android.app.Application mContext
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SLEEP_1MS
androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection mFragments
androidx.core.content.res.GradientColorInflaterCompat: int TILE_MODE_REPEAT
androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_Y
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: java.util.Collection collection
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.appcompat.R$integer: int config_tooltipAnimTime
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: long serialVersionUID
androidx.fragment.app.FragmentTransaction: java.lang.String mName
androidx.drawerlayout.R$dimen: int notification_action_text_size
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_typeface
io.reactivex.internal.operators.flowable.FlowableReplay: java.util.concurrent.Callable DEFAULT_UNBOUNDED_FACTORY
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] table
io.reactivex.internal.operators.observable.ObservableThrottleLatest: boolean emitLast
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: io.reactivex.ObservableSource bufferOpen
com.appspa.demo.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.appspa.update.R$styleable: int GradientColor_android_endX
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$styleable: int AppCompatTheme_radioButtonStyle
com.jakewharton.disklrucache.DiskLruCache: java.io.File journalFileBackup
okhttp3.internal.http2.Http2Connection$3: okhttp3.internal.http2.Http2Connection this$0
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: io.reactivex.functions.Function mapper
androidx.activity.R$styleable: int GradientColor_android_endX
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: io.reactivex.disposables.CompositeDisposable set
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: java.util.concurrent.atomic.AtomicReference mainSubscription
com.xuexiang.xhttp2.R$styleable: int[] ActivityChooserView
androidx.fragment.R$id: int action_container
androidx.appcompat.widget.ListPopupWindow: int mDropDownWindowLayoutType
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: androidx.appcompat.widget.ActivityChooserView this$0
com.appspa.update.R$styleable: int MenuItem_actionLayout
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.appspa.update.utils.ApkUtils: boolean sSupportSilentInstall
androidx.core.app.NotificationCompat$WearableExtender: int DEFAULT_FLAGS
androidx.drawerlayout.widget.DrawerLayout: int mLockModeRight
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: long serialVersionUID
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS
com.appspa.update.R$attr: int actionModeFindDrawable
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: long skip
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontWeight
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver: boolean terminated
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setHostname
okhttp3.Cache$1: okhttp3.Cache this$0
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
okhttp3.ResponseBody$BomAwareReader: java.io.Reader delegate
okhttp3.HttpUrl$Builder: int port
androidx.collection.SparseArrayCompat: java.lang.Object DELETED
com.appspa.update.R$anim: int abc_tooltip_enter
com.appspa.update.R$styleable: int[] Spinner
androidx.viewpager.R$id: int async
androidx.appcompat.view.SupportMenuInflater: java.lang.Object mRealOwner
androidx.loader.content.CursorLoader: android.net.Uri mUri
com.xuexiang.xhttp2.R$styleable: int MenuView_android_itemTextAppearance
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$color: int abc_background_cache_hint_selector_material_dark
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Small
com.appspa.demo.R$styleable: int SearchView_voiceIcon
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
io.reactivex.internal.operators.maybe.MaybeNever: io.reactivex.internal.operators.maybe.MaybeNever INSTANCE
io.reactivex.processors.PublishProcessor: io.reactivex.processors.PublishProcessor$PublishSubscription[] TERMINATED
com.appspa.update.R$styleable: int AppCompatTextView_android_textAppearance
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: boolean allowFatal
androidx.core.R$id: int accessibility_custom_action_3
androidx.appcompat.R$bool: int abc_allow_stacked_button_bar
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_9
androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer: int bufferSize
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: long serialVersionUID
androidx.appcompat.app.AlertController: android.os.Handler mHandler
io.reactivex.observables.GroupedObservable: java.lang.Object key
androidx.core.R$id: int accessibility_custom_action_9
androidx.core.app.ShareCompat$IntentReader: android.content.Intent mIntent
androidx.appcompat.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.appcompat.view.SupportMenuInflater$MenuState: int defaultGroupId
io.reactivex.processors.ReplayProcessor: boolean done
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: io.reactivex.functions.Action onAfterTerminate
io.reactivex.internal.operators.flowable.FlowableSwitchMap: io.reactivex.functions.Function mapper
okhttp3.OkHttpClient: int readTimeout
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapSingleObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: long timespan
androidx.core.graphics.drawable.RoundedBitmapDrawable: int mBitmapWidth
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: int mStyle
io.reactivex.internal.operators.flowable.FlowableGroupJoin: io.reactivex.functions.Function leftEnd
androidx.activity.R$styleable: int GradientColor_android_gradientRadius
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent
com.appspa.demo.R$color: int tooltip_background_dark
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: long index
androidx.activity.R$attr: int ttcIndex
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.appspa.update.R$layout: int abc_list_menu_item_radio
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: io.reactivex.Observer downstream
com.appspa.demo.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.core.view.ViewCompat: int OVER_SCROLL_ALWAYS
androidx.drawerlayout.R$id: int async
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.xuexiang.xhttp2.model.SchedulerType: com.xuexiang.xhttp2.model.SchedulerType _io_main
androidx.fragment.app.FragmentManagerImpl$1: androidx.fragment.app.FragmentManagerImpl this$0
com.appspa.update.R$styleable: int SearchView_android_focusable
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: boolean done
com.xuexiang.xhttp2.R$string: int abc_searchview_description_submit
okhttp3.internal.connection.RealConnection: okhttp3.ConnectionPool connectionPool
androidx.core.R$id: int text
com.appspa.update.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.appspa.update.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState
androidx.appcompat.R$style: int Platform_Widget_AppCompat_Spinner
com.xuexiang.xhttp2.R$styleable: int MenuView_subMenuArrow
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$attr: int buttonBarStyle
io.reactivex.internal.operators.completable.CompletableDelay: io.reactivex.CompletableSource source
androidx.fragment.R$styleable: int GradientColor_android_endY
com.appspa.demo.R$styleable: int ActionBar_title
androidx.activity.R$dimen: int notification_subtext_size
com.appspa.update.R$attr: int actionProviderClass
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: org.reactivestreams.Subscription upstream
androidx.fragment.R$layout: int notification_action_tombstone
com.appspa.demo.R$id: int iv_top
com.appspa.demo.R$style: int Platform_ThemeOverlay_AppCompat
io.reactivex.processors.MulticastProcessor: boolean refcount
com.appspa.demo.R$color: int material_grey_850
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: io.reactivex.Observer downstream
io.reactivex.internal.subscribers.LambdaSubscriber: io.reactivex.functions.Consumer onError
com.xuexiang.xhttp2.R$styleable: int TextAppearance_fontFamily
org.aspectj.runtime.reflect.SignatureImpl: int modifiers
androidx.viewpager.widget.ViewPager: boolean DEBUG
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: io.reactivex.functions.BiFunction generator
androidx.appcompat.R$attr: int state_above_anchor
com.xuexiang.xhttp2.R$color: int switch_thumb_disabled_material_dark
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object mProvider
androidx.appcompat.R$layout: int abc_alert_dialog_material
com.appspa.update.R$styleable: int AppCompatTheme_selectableItemBackground
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsHideReplaced
androidx.core.app.Person: java.lang.String IS_IMPORTANT_KEY
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: long serialVersionUID
com.appspa.update.R$styleable: int LinearLayoutCompat_android_baselineAligned
androidx.vectordrawable.R$string: int status_bar_notification_info_overflow
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: int limit
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: io.reactivex.functions.Consumer disposer
org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: org.reactivestreams.Processor reactiveStreams
androidx.appcompat.widget.ActivityChooserModel: boolean mHistoricalRecordsChanged
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.appspa.demo.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_SearchResult
io.reactivex.internal.operators.observable.ObservableElementAt: long index
io.reactivex.internal.operators.single.SingleTimeout: io.reactivex.SingleSource other
com.appspa.demo.R$drawable: int notification_action_background
com.appspa.demo.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: int maxSize
androidx.loader.R$styleable: int GradientColor_android_startY
okhttp3.internal.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
com.appspa.update.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.appspa.demo.R$styleable: int ActionBar_divider
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber this$0
org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER_RETURNING
androidx.appcompat.app.AppCompatViewInflater: java.util.Map sConstructorMap
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject$ReplayDisposable[] TERMINATED
androidx.annotation.Dimension: int SP
androidx.vectordrawable.R$id: int accessibility_custom_action_2
com.appspa.update.R$styleable: int Spinner_android_entries
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: long serialVersionUID
androidx.vectordrawable.R$id: int icon_group
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: long serialVersionUID
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR
com.xuexiang.xhttp2.annotation.NetMethod: int JSON
io.reactivex.processors.AsyncProcessor: io.reactivex.processors.AsyncProcessor$AsyncSubscription[] EMPTY
com.appspa.update.widget.UpdateDialogActivity: android.widget.Button mBtnUpdate
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Display3
io.reactivex.internal.operators.flowable.FlowableGroupJoin: org.reactivestreams.Publisher other
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: java.util.concurrent.atomic.AtomicReference upstream
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.Gson gson
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: java.util.concurrent.locks.Lock lock
io.reactivex.internal.operators.completable.CompletableMerge: int maxConcurrency
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState
io.reactivex.internal.operators.observable.ObservableGroupBy$State: java.util.concurrent.atomic.AtomicBoolean once
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: java.util.concurrent.atomic.AtomicReference error
androidx.activity.R$styleable: int GradientColor_android_startX
androidx.appcompat.view.SupportMenuInflater: java.lang.String XML_ITEM
com.xuexiang.xhttp2.R$drawable: int abc_btn_colored_material
okhttp3.Cache$CacheRequestImpl: boolean done
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels
io.reactivex.internal.operators.flowable.FlowableZip: org.reactivestreams.Publisher[] sources
androidx.viewpager.R$dimen: int notification_big_circle_margin
com.xuexiang.xhttp2.R$styleable: int FontFamily_fontProviderFetchStrategy
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.appspa.update.entity.UpdateError$ERROR: int CHECK_UPDATING
androidx.appcompat.widget.SearchView: android.os.Bundle mAppSearchData
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y
com.appspa.update.R$style: int Base_V21_Theme_AppCompat_Light
io.reactivex.internal.observers.DeferredScalarDisposable: java.lang.Object value
androidx.appcompat.R$styleable: int SwitchCompat_track
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String PANE_TITLE_KEY
com.appspa.demo.R$style: int Base_V26_Theme_AppCompat
com.appspa.update.R$id: int action_menu_divider
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.CollapsibleActionView mWrappedView
io.reactivex.internal.operators.maybe.MaybeToObservable: io.reactivex.MaybeSource source
com.appspa.update.R$dimen: int space_bg_app_info_radius
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_showText
com.appspa.demo.R$string: int abc_menu_meta_shortcut_label
io.reactivex.internal.operators.observable.ObservableDistinct: io.reactivex.functions.Function keySelector
com.appspa.demo.R$color: int primary_text_default_material_light
okhttp3.Cache$CacheResponseBody$1: okhttp3.internal.cache.DiskLruCache$Snapshot val$snapshot
com.appspa.update.R$styleable: int MenuItem_numericModifiers
io.reactivex.internal.operators.observable.ObservableSampleTimed: boolean emitLast
androidx.appcompat.R$dimen: int abc_action_bar_overflow_padding_end_material
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: io.reactivex.internal.util.AtomicThrowable errors
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertController$AlertParams P
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: int index
androidx.appcompat.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
androidx.appcompat.R$drawable: int abc_btn_colored_material
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: long consumed
androidx.appcompat.R$attr: int actionProviderClass
androidx.loader.R$styleable: int[] FontFamily
com.appspa.update.R$drawable: int abc_list_selector_background_transition_holo_dark
io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent: io.reactivex.SingleObserver downstream
androidx.loader.R$id: int text2
io.reactivex.subjects.BehaviorSubject: java.lang.Object[] EMPTY_ARRAY
com.appspa.update.service.DownloadService$FileDownloadCallBack$3: java.io.File val$apkFile
com.appspa.update.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.appspa.demo.R$attr: int trackTintMode
androidx.appcompat.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_21
androidx.interpolator.view.animation.LookupTableInterpolator: float mStepSize
com.xuexiang.xhttp2.XHttp: boolean mStrictMode
com.xuexiang.xhttp2.R$string: int abc_menu_delete_shortcut_label
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable
androidx.core.view.MotionEventCompat: int AXIS_DISTANCE
com.appspa.update.widget.UpdateDialog: android.widget.ImageView mIvTop
androidx.fragment.R$styleable: int ColorStateListItem_alpha
com.appspa.demo.R$dimen: int tooltip_horizontal_padding
io.reactivex.internal.subscribers.InnerQueuedSubscriber: int prefetch
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.appspa.update.R$styleable: int FontFamilyFont_fontStyle
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
androidx.appcompat.widget.ActionMenuView: int mMinCellSize
okhttp3.internal.http2.Http2Connection: java.util.Map streams
androidx.core.app.JobIntentService$JobServiceEngineImpl: android.app.job.JobParameters mParams
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.Advice[] declaredAdvice
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateY
androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue
okhttp3.Address: java.util.List protocols
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_TINT
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: boolean cancelled
com.appspa.update.R$styleable: int AlertDialog_buttonIconDimen
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Dialog_Alert
androidx.fragment.R$styleable: int FontFamilyFont_android_fontWeight
com.appspa.update.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
com.appspa.update.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.appspa.demo.R$attr: int titleMarginTop
com.google.gson.internal.LinkedHashTreeMap$AvlIterator: com.google.gson.internal.LinkedHashTreeMap$Node stackTop
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_fontStyle
androidx.appcompat.R$styleable: int MenuItem_android_checked
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: io.reactivex.Scheduler scheduler
okhttp3.internal.http2.Huffman: int[] CODES
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: io.reactivex.ObservableEmitter emitter
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: io.reactivex.internal.util.AtomicThrowable errors
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
com.appspa.demo.R$dimen: int abc_action_button_min_height_material
androidx.core.util.PatternsCompat: java.lang.String LABEL_CHAR
io.reactivex.subjects.UnicastSubject: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
io.reactivex.internal.operators.maybe.MaybeMaterialize: io.reactivex.Maybe source
com.zhy.http.okhttp.request.CountingRequestBody$CountingSink: long bytesWritten
com.xuexiang.xhttp2.R$drawable: int abc_ratingbar_small_material
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorControlActivated
com.appspa.demo.R$id: int expand_activities_button
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int ttcIndex
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarStyle
androidx.appcompat.view.menu.MenuItemImpl: int mShowAsAction
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_SET_ORDERING
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$outFragment
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: boolean done
com.appspa.demo.R$styleable: int FontFamilyFont_android_fontWeight
com.appspa.update.R$style: int Widget_AppCompat_ImageButton
androidx.viewpager.widget.PagerTabStrip: int mMinPaddingBottom
androidx.core.app.NotificationCompat$Action$WearableExtender: int FLAG_HINT_LAUNCHES_ACTIVITY
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator: io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber[] subscribers
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarLength
io.reactivex.internal.operators.flowable.FlowableFromFuture: java.util.concurrent.Future future
com.xuexiang.xhttp2.R$dimen: int abc_control_inset_material
com.xuexiang.xhttp2.R$styleable: int View_theme
androidx.loader.R$color: int notification_action_color_filter
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Title
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
com.xuexiang.xhttp2.R$attr: int state_above_anchor
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber[] CANCELLED
com.appspa.demo.R$style: int Widget_AppCompat_PopupMenu
androidx.appcompat.view.menu.MenuBuilder: android.content.Context mContext
com.appspa.update.R$attr: int progressBarStyle
androidx.appcompat.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker
io.reactivex.internal.operators.flowable.FlowableCombineLatest: boolean delayErrors
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String tag
androidx.core.view.PointerIconCompat: int TYPE_ZOOM_IN
androidx.appcompat.R$drawable: int abc_btn_radio_to_on_mtrl_000
androidx.appcompat.R$anim: int abc_slide_out_bottom
io.reactivex.internal.operators.flowable.FlowableBufferTimed: java.util.concurrent.Callable bufferSupplier
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int LINEJOIN_ROUND
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver parent
io.reactivex.observers.BaseTestConsumer: java.lang.Thread lastThread
com.appspa.update.R$id: int search_src_text
androidx.loader.R$id: int blocking
io.reactivex.internal.operators.single.SingleCreate$Emitter: long serialVersionUID
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
com.appspa.update.widget.UpdateDialog: android.widget.LinearLayout mLlClose
okhttp3.Cache: int hitCount
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRtl
com.appspa.demo.R$style: int Widget_AppCompat_ImageButton
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: io.reactivex.functions.Consumer onSubscribe
com.appspa.update.R$styleable: int[] XNumberProgressBar
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.cursoradapter.widget.SimpleCursorAdapter: java.lang.String[] mOriginalFrom
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: long timeout
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: long serialVersionUID
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.InterTypeConstructorDeclaration[] declaredITDCons
com.appspa.demo.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
androidx.activity.R$styleable: int GradientColor_android_startColor
com.appspa.demo.R$dimen: int notification_right_side_padding_top
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: boolean terminate
com.appspa.demo.R$styleable: int MenuView_subMenuArrow
androidx.fragment.app.FragmentHostCallback: android.content.Context mContext
io.reactivex.internal.observers.BasicFuseableObserver: boolean done
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer: java.lang.Throwable error
com.appspa.demo.R$anim: int spa_app_window_out
io.reactivex.internal.schedulers.RxThreadFactory: java.lang.String prefix
com.xuexiang.xhttp2.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display4
com.appspa.update.R$attr: int colorBackgroundFloating
com.appspa.demo.R$styleable: int AppCompatSeekBar_tickMarkTint
com.appspa.update.R$attr: int colorPrimaryDark
com.appspa.demo.R$style: int Widget_AppCompat_Light_PopupMenu
androidx.appcompat.app.AlertController$2: androidx.appcompat.app.AlertController this$0
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: long count
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.cache.converter.IDiskConverter mDiskConverter
com.appspa.update.R$drawable: int abc_item_background_holo_light
com.appspa.update.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_RESULT_KEY
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.internal.schedulers.TrampolineScheduler INSTANCE
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.model.HttpHeaders mHeaders
androidx.customview.R$color: int notification_action_color_filter
com.appspa.update.R$style: int Base_ThemeOverlay_AppCompat_Dialog
androidx.core.R$id: int accessibility_custom_action_28
com.appspa.update.R$id: int accessibility_custom_action_17
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActivityChooserView
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
androidx.loader.R$styleable: int GradientColor_android_endColor
androidx.appcompat.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_INTERPOLATOR
androidx.appcompat.widget.SearchView$1: androidx.appcompat.widget.SearchView this$0
io.reactivex.internal.operators.observable.ObservableBuffer: int skip
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: boolean next
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableUsing: boolean eager
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: io.reactivex.disposables.Disposable upstream
androidx.customview.R$color: int notification_icon_bg_color
com.appspa.demo.R$drawable: int abc_text_select_handle_left_mtrl_dark
androidx.appcompat.R$style: int TextAppearance_AppCompat_Title
androidx.core.app.NotificationCompat: int GROUP_ALERT_SUMMARY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode
io.reactivex.internal.operators.flowable.FlowableBufferTimed: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: long serialVersionUID
com.appspa.update.R$color: int bright_foreground_inverse_material_light
okhttp3.Cookie$Builder: boolean hostOnly
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeStart
androidx.drawerlayout.R$drawable: int notification_template_icon_bg
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher: int prefetch
androidx.viewpager.R$id: int notification_background
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber parent
com.appspa.update.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.xuexiang.xhttp2.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean mItalic
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy BUFFER
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$id: int right_icon
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PARAGRAPH
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: io.reactivex.internal.util.AtomicThrowable errors
com.xuexiang.xhttp2.R$color: int abc_tint_btn_checkable
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: java.util.concurrent.TimeUnit unit
com.xuexiang.xhttp2.R$styleable: int SearchView_commitIcon
io.reactivex.exceptions.MissingBackpressureException: long serialVersionUID
androidx.appcompat.widget.ListPopupWindow: int mPromptPosition
androidx.fragment.app.Fragment$SavedState: android.os.Bundle mState
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
androidx.core.app.NotificationCompat$WearableExtender: android.graphics.Bitmap mBackground
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNegativeText
com.appspa.update.R$style: int Widget_AppCompat_ActionBar
androidx.appcompat.R$style: int Animation_AppCompat_Tooltip
com.appspa.update.R$styleable: int CompoundButton_android_button
com.appspa.demo.R$style: int Widget_AppCompat_Light_SearchView
androidx.vectordrawable.R$color: int ripple_material_light
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCH_NAVIGATION
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: int expectedModCount
com.appspa.demo.R$drawable: int abc_text_select_handle_middle_mtrl_light
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: java.lang.Object[] current
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Field sOverlapAnchorField
androidx.drawerlayout.R$drawable: int notification_bg
androidx.appcompat.R$styleable: int[] FontFamily
com.xuexiang.xhttp2.R$dimen: int notification_large_icon_height
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver parent
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: boolean isOpen
androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility
androidx.customview.R$id: int text2
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: long serialVersionUID
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
androidx.loader.content.CursorLoader: androidx.core.os.CancellationSignal mCancellationSignal
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle: org.reactivestreams.Publisher second
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: long currentBytes
androidx.fragment.R$id: int tag_accessibility_heading
androidx.core.view.ViewPropertyAnimatorCompat$1: android.view.View val$view
androidx.appcompat.widget.SearchView: android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.appspa.demo.R$id: int accessibility_custom_action_12
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.lang.Integer RIGHT_CLOSE
androidx.fragment.R$id: int accessibility_custom_action_20
io.reactivex.internal.operators.observable.ObservablePublish: java.util.concurrent.atomic.AtomicReference current
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: io.reactivex.Observer downstream
com.appspa.demo.R$attr: int ratingBarStyleSmall
com.appspa.update.R$dimen: int disabled_alpha_material_dark
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderFetchTimeout
com.xuexiang.xhttp2.R$attr: int buttonBarNeutralButtonStyle
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_DELETE
io.reactivex.internal.operators.single.SingleDelay$Delay: io.reactivex.internal.disposables.SequentialDisposable sd
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Large
okhttp3.internal.Util: java.nio.charset.Charset UTF_32_BE
com.google.gson.internal.ConstructorConstructor: java.util.Map instanceCreators
com.appspa.demo.R$id: int action_bar_container
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver parent
com.xuexiang.xhttp2.model.ApiResult: java.lang.String Msg
io.reactivex.internal.schedulers.IoScheduler: java.util.concurrent.ThreadFactory threadFactory
io.reactivex.internal.operators.observable.ObservableFlatMap: io.reactivex.functions.Function mapper
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mTickerView
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.viewpager.R$styleable: int GradientColor_android_gradientRadius
androidx.core.text.util.FindAddress: java.util.regex.Pattern sLocationNameRe
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionButton
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: long serialVersionUID
androidx.loader.content.AsyncTaskLoader: long mUpdateThrottle
com.zhy.http.okhttp.OkHttpUtils$1: com.zhy.http.okhttp.OkHttpUtils this$0
com.appspa.demo.R$layout: int notification_action
com.appspa.demo.R$attr: int textColorAlertDialogListItem
io.reactivex.internal.operators.single.SingleMaterialize: io.reactivex.Single source
io.reactivex.internal.operators.flowable.FlowableDebounceTimed: java.util.concurrent.TimeUnit unit
com.appspa.demo.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeBackground
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: boolean done
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable: io.reactivex.functions.Function mapper
androidx.appcompat.R$styleable: int Spinner_android_entries
io.reactivex.internal.operators.observable.ObservableFromFuture: java.util.concurrent.Future future
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: boolean done
com.appspa.demo.R$id: int radio
androidx.core.app.RemoteInput: java.lang.String EXTRA_DATA_TYPE_RESULTS_DATA
androidx.appcompat.R$id: int accessibility_custom_action_29
androidx.viewpager.widget.PagerAdapter: android.database.DataSetObserver mViewPagerObserver
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: boolean done
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap mSampleTile
com.appspa.demo.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
androidx.fragment.app.FragmentStatePagerAdapter: int mBehavior
androidx.appcompat.widget.ScrollingTabContainerView: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: io.reactivex.functions.Function mapper
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_thumbTextPadding
com.xuexiang.xhttp2.cache.RxCache: com.xuexiang.xhttp2.cache.converter.IDiskConverter diskConverter
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent mIntent
io.reactivex.internal.operators.observable.ObservableCombineLatest: io.reactivex.functions.Function combiner
com.xuexiang.xhttp2.R$styleable: int PopupWindow_android_popupAnimationStyle
com.appspa.update.widget.UpdateDialogActivity: com.appspa.update.entity.PromptEntity mPromptEntity
androidx.appcompat.R$styleable: int[] SearchView
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: long serialVersionUID
androidx.appcompat.widget.AppCompatSpinner: int MAX_ITEMS_MEASURED
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: io.reactivex.internal.util.AtomicThrowable error
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller
com.appspa.demo.R$attr: int actionModeSplitBackground
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: java.lang.Object[] latest
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener
androidx.appcompat.R$attr: int listChoiceIndicatorSingleAnimated
androidx.core.R$attr: int fontVariationSettings
com.appspa.demo.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
io.reactivex.internal.observers.BiConsumerSingleObserver: io.reactivex.functions.BiConsumer onCallback
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: int index
androidx.appcompat.app.ActionBarDrawerToggle: android.view.View$OnClickListener mToolbarNavigationClickListener
com.appspa.demo.R$styleable: int AppCompatTheme_android_windowIsFloating
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: java.util.concurrent.BlockingQueue buf
retrofit2.RequestBuilder: okhttp3.FormBody$Builder formBuilder
io.reactivex.internal.operators.completable.CompletableAndThenCompletable: io.reactivex.CompletableSource source
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: io.reactivex.functions.Action onCancel
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: int offset
com.xuexiang.xhttp2.R$styleable: int MenuItem_tooltipText
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: long serialVersionUID
com.appspa.update.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.appcompat.widget.ViewStubCompat: int mInflatedId
retrofit2.ParameterHandler$PartMap: java.lang.String transferEncoding
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int VERY_WIDE
com.appspa.demo.R$style: int Widget_AppCompat_RatingBar
com.xuexiang.xhttp2.R$style: int Widget_Compat_NotificationActionText
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: int sourceFused
com.appspa.update.R$attr: int spinnerDropDownItemStyle
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_LABEL
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemAlphabeticShortcut
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber subscriber
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BYTE_FACTORY
androidx.appcompat.R$dimen: int abc_seekbar_track_progress_height_material
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: long serialVersionUID
com.appspa.update.R$attr: int buttonTintMode
com.appspa.demo.R$drawable: int btn_radio_on_to_off_mtrl_animation
com.xuexiang.xhttp2.R$styleable: int[] ColorStateListItem
androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeTask: io.reactivex.MaybeSource source
com.appspa.update.AppSpace: com.appspa.update.proxy.IUpdateHttpService mUpdateHttpService
com.xuexiang.xhttp2.R$attr: int contentInsetStartWithNavigation
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$id: int src_over
io.reactivex.internal.operators.observable.ObservableSubscribeOn: io.reactivex.Scheduler scheduler
androidx.versionedparcelable.VersionedParcelStream: int TYPE_NULL
com.appspa.update.R$style: int Base_Widget_AppCompat_Spinner_Underlined
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: java.util.List buffer
io.reactivex.internal.operators.single.SingleDoOnError$DoOnError: io.reactivex.SingleObserver downstream
com.appspa.demo.R$attr: int measureWithLargestChild
androidx.core.app.NotificationCompat$Builder: boolean mProgressIndeterminate
androidx.appcompat.R$color: int tooltip_background_dark
io.reactivex.internal.schedulers.RxThreadFactory: int priority
com.xuexiang.xhttp2.R$id: int notification_main_column_container
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: boolean cancelled
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.internal.util.ListAddBiConsumer INSTANCE
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: long serialVersionUID
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver parent
okhttp3.Handshake: java.util.List peerCertificates
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: java.lang.Object value
com.xuexiang.xhttp2.R$attr: int titleMarginBottom
com.google.gson.stream.JsonReader: char[] buffer
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration
androidx.appcompat.R$color: int dim_foreground_material_dark
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: long serialVersionUID
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node prev
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber parent
com.xuexiang.xhttp2.R$attr: int firstBaselineToTopHeight
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind PERCFLOWBELOW
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: io.reactivex.disposables.Disposable upstream
org.aspectj.internal.lang.reflect.PointcutExpressionImpl: java.lang.String expression
com.appspa.demo.R$layout: int abc_tooltip
retrofit2.Platform: boolean hasJava8Types
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE_EXTEND
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Body1
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError: long serialVersionUID
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: java.lang.Object mInfo
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: io.reactivex.functions.Function onSuccessMapper
com.appspa.demo.R$id: int spacer
retrofit2.KotlinExtensions$await$4$2: kotlinx.coroutines.CancellableContinuation $continuation
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.demo.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
okhttp3.Cache: int networkCount
com.appspa.demo.R$style: int Theme_AppCompat_DayNight_Dialog
com.xuexiang.xhttp2.R$dimen: int abc_dropdownitem_text_padding_right
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$id: int action_bar_root
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: io.reactivex.Observer downstream
androidx.core.graphics.drawable.RoundedBitmapDrawable: int mBitmapHeight
com.appspa.demo.R$attr: int xnpb_max
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: java.util.concurrent.atomic.AtomicReference mainDisposable
com.xuexiang.xhttp2.R$styleable: int[] AnimatedStateListDrawableTransition
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: long count
io.reactivex.internal.operators.flowable.FlowableCache: io.reactivex.internal.operators.flowable.FlowableCache$Node head
androidx.appcompat.R$style: int Base_AlertDialog_AppCompat_Light
androidx.fragment.app.Fragment$AnimationInfo: androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: android.view.MenuItem val$item
io.reactivex.Scheduler$DisposeTask: java.lang.Runnable decoratedRun
androidx.core.content.pm.ShortcutInfoCompat: boolean mIsAlwaysBadged
com.appspa.update.proxy.impl.DefaultPrompterProxyImpl: com.appspa.update.proxy.IUpdateProxy mUpdateProxy
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: long serialVersionUID
androidx.appcompat.R$id: int accessibility_custom_action_20
okhttp3.internal.http1.Http1Codec$ChunkedSource: okhttp3.internal.http1.Http1Codec this$0
androidx.appcompat.R$styleable: int View_paddingEnd
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: java.lang.Throwable error
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.os.HandlerThread sHandlerThread
androidx.appcompat.widget.ActionMenuPresenter: int mMinCellSize
io.reactivex.internal.operators.flowable.FlowableMapPublisher: org.reactivestreams.Publisher source
com.appspa.demo.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
io.reactivex.internal.operators.flowable.FlowableCache: int capacityHint
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: long serialVersionUID
androidx.appcompat.R$style: int Platform_V21_AppCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: float[] mTmpFloats
androidx.fragment.app.DialogFragment: java.lang.String SAVED_BACK_STACK_ID
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Constructor sFontFamilyCtor
androidx.core.view.PointerIconCompat: int TYPE_TEXT
androidx.core.view.ViewCompat: int SCROLL_AXIS_HORIZONTAL
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_GROUP_KEY
androidx.core.content.FileProvider: java.lang.String TAG_FILES_PATH
com.appspa.demo.R$color: int primary_dark_material_light
com.appspa.demo.R$style: int Widget_AppCompat_ProgressBar
com.appspa.update.R$attr: int dropDownListViewStyle
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport parent
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mContentView
androidx.appcompat.R$styleable: int AppCompatTheme_editTextColor
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate: io.reactivex.functions.Predicate predicate
androidx.customview.R$drawable: int notify_panel_notification_icon_bg
androidx.core.widget.NestedScrollView: int[] mScrollConsumed
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.appspa.update.R$string: int abc_menu_meta_shortcut_label
com.appspa.update.R$color: int space_default_theme_color
androidx.appcompat.R$attr: int defaultQueryHint
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: long serialVersionUID
androidx.appcompat.R$attr: int fontFamily
com.appspa.update.widget.UpdateDialogActivity: com.appspa.update.proxy.IPrompterProxy sIPrompterProxy
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_DayNight_NoActionBar
io.reactivex.internal.subscriptions.SubscriptionArbiter: org.reactivestreams.Subscription actual
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: io.reactivex.Observer downstream
com.appspa.update.R$id: int uniform
androidx.lifecycle.Lifecycling: int GENERATED_CALLBACK
com.google.gson.Gson: com.google.gson.internal.Excluder excluder
androidx.appcompat.graphics.drawable.StateListDrawable: boolean DEBUG
com.appspa.update.R$attr: int buttonBarNeutralButtonStyle
androidx.core.app.NotificationCompat: int BADGE_ICON_LARGE
androidx.appcompat.R$id: int search_close_btn
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingTop
com.google.gson.Gson$1: com.google.gson.Gson this$0
com.appspa.demo.R$styleable: int AppCompatTheme_controlBackground
com.appspa.demo.R$styleable: int SearchView_queryBackground
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: long serialVersionUID
okhttp3.internal.http2.Huffman$Node: int terminalBits
io.reactivex.internal.operators.observable.ObservableConcatMap: int bufferSize
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: long serialVersionUID
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_fontStyle
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: int bufferSize
com.zhy.http.okhttp.request.OkHttpRequest: java.util.Map headers
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStopTime
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber parent
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: io.reactivex.Observer downstream
androidx.appcompat.widget.ActionMenuPresenter: boolean mPendingOverflowIconSet
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: java.util.ArrayDeque windows
com.appspa.demo.R$attr: int autoSizeStepGranularity
androidx.fragment.R$id: int accessibility_custom_action_26
com.appspa.demo.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.core.provider.FontsContractCompat$1: android.content.Context val$context
com.xuexiang.xhttp2.R$id: int line3
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: java.lang.Runnable mPeekRunnable
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int ITEM_VIEW_TYPE_ACTIVITY
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_18
com.xuexiang.xhttp2.R$string: int status_bar_notification_info_overflow
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_thumbTint
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ActivityChooserView$Callbacks mCallbacks
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets
androidx.appcompat.R$styleable: int SearchView_suggestionRowLayout
androidx.loader.R$style: int TextAppearance_Compat_Notification_Time
com.appspa.update.R$styleable: int View_paddingEnd
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
io.reactivex.internal.operators.completable.CompletableCache: io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache[] EMPTY
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: io.reactivex.internal.util.AtomicThrowable errors
io.reactivex.internal.operators.observable.ObservableWindowBoundary: io.reactivex.ObservableSource other
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: io.reactivex.functions.BiConsumer collector
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate
androidx.drawerlayout.widget.DrawerLayout: java.util.ArrayList mNonDrawerViews
androidx.core.app.Person$Builder: androidx.core.graphics.drawable.IconCompat mIcon
androidx.appcompat.R$attr: int showTitle
com.appspa.update.UpdateManager: java.lang.String mCacheDir
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_FONT_UNAVAILABLE
androidx.appcompat.R$id: int action_mode_close_button
androidx.vectordrawable.animated.R$id: int title
com.xuexiang.xhttp2.cache.converter.GsonDiskConverter: com.google.gson.Gson mGson
io.reactivex.processors.BehaviorProcessor: java.util.concurrent.atomic.AtomicReference subscribers
retrofit2.CompletableFutureCallAdapterFactory: retrofit2.CallAdapter$Factory INSTANCE
com.appspa.update.R$styleable: int ActionBarLayout_android_layout_gravity
com.google.gson.GsonBuilder: int timeStyle
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_drawableTintMode
androidx.fragment.R$id: int accessibility_custom_action_11
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_REPLY
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor processor
androidx.appcompat.R$styleable: int CompoundButton_buttonTint
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
com.appspa.update.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mOverflowOnly
io.reactivex.internal.operators.single.SingleContains: java.lang.Object value
androidx.appcompat.R$styleable: int AppCompatTheme_tooltipFrameBackground
io.reactivex.internal.operators.observable.ObservablePublishSelector: io.reactivex.functions.Function selector
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String KEY_CONFIRM_LABEL
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: java.util.concurrent.atomic.AtomicLong requested
com.xuexiang.xhttp2.R$attr: int drawerArrowStyle
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
com.xuexiang.xhttp2.R$attr: int subtitleTextColor
com.appspa.update.R$bool: int abc_allow_stacked_button_bar
androidx.appcompat.app.AlertDialog: androidx.appcompat.app.AlertController mAlert
androidx.appcompat.R$styleable: int MenuGroup_android_orderInCategory
androidx.appcompat.R$styleable: int GradientColor_android_tileMode
androidx.appcompat.R$styleable: int MenuGroup_android_id
androidx.core.util.PatternsCompat: java.lang.String WEB_URL_WITH_PROTOCOL
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable: io.reactivex.Observer child
androidx.viewpager.widget.PagerTabStrip: float mInitialMotionX
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: boolean cancelled
com.xuexiang.xhttp2.R$styleable: int AppCompatSeekBar_tickMark
com.appspa.demo.R$dimen: int abc_button_inset_vertical_material
androidx.appcompat.app.AlertController: android.view.Window mWindow
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe: boolean delayErrors
com.xuexiang.xhttp2.request.BaseRequest: java.lang.String mCacheKey
io.reactivex.internal.operators.single.SingleDoFinally: io.reactivex.functions.Action onFinally
retrofit2.RequestFactory$Builder: java.lang.annotation.Annotation[] methodAnnotations
com.appspa.update.R$dimen: int abc_list_item_height_small_material
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: io.reactivex.functions.Predicate predicate
androidx.core.R$dimen: int notification_large_icon_height
androidx.core.app.NotificationManagerCompat$CancelTask: boolean all
com.appspa.update.proxy.impl.DefaultUpdateChecker$3: java.lang.String val$result
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.appspa.demo.R$attr: int imageButtonStyle
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
androidx.appcompat.R$styleable: int SwitchCompat_trackTintMode
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: io.reactivex.functions.BiFunction errorHandler
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mTmpInfo
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
com.appspa.update.R$style: int Base_V28_Theme_AppCompat_Light
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$style: int XUpdate_Dialog
io.reactivex.internal.functions.Functions$Array4Func: io.reactivex.functions.Function4 f
com.appspa.demo.R$style: int Widget_AppCompat_Spinner
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId
androidx.appcompat.R$styleable: int AppCompatTheme_colorPrimary
androidx.fragment.app.FragmentTransaction: int OP_UNSET_PRIMARY_NAV
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okio.BufferedSource delegateSource
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onInitIoHandler
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_NEVER
androidx.appcompat.widget.ActionBarOverlayLayout: android.animation.AnimatorListenerAdapter mTopAnimatorListener
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
androidx.appcompat.R$attr: int checkedTextViewStyle
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.appspa.update.R$anim: int abc_fade_in
androidx.appcompat.R$color: int abc_search_url_text
androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup
com.appspa.demo.R$styleable: int SearchView_suggestionRowLayout
com.appspa.update.R$styleable: int AppCompatTheme_tooltipForegroundColor
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback
com.appspa.demo.R$attr: int logo
androidx.appcompat.R$styleable: int AppCompatTheme_tooltipForegroundColor
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder$Callback mCallback
androidx.core.graphics.TypefaceCompatBaseImpl: int INVALID_KEY
okhttp3.internal.Util: java.util.regex.Pattern VERIFY_AS_IP_ADDRESS
androidx.appcompat.R$styleable: int AppCompatTheme_textColorSearchUrl
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo mMenuInfo
com.appspa.demo.R$styleable: int CompoundButton_buttonTint
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable mIconDrawable
com.appspa.demo.R$styleable: int GradientColor_android_startY
com.google.gson.internal.Streams$AppendableWriter: com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite
io.reactivex.internal.operators.single.SingleDoOnDispose: io.reactivex.functions.Action onDispose
androidx.vectordrawable.R$id: int notification_main_column_container
androidx.appcompat.R$attr: int thumbTintMode
androidx.viewpager.R$dimen: int notification_large_icon_width
com.jakewharton.disklrucache.DiskLruCache: int valueCount
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: long serialVersionUID
com.appspa.update.R$drawable: int abc_switch_track_mtrl_alpha
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver[] observers
androidx.appcompat.widget.SearchView: android.widget.ImageView mCloseButton
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMinTextSize
androidx.appcompat.R$style: int Widget_Compat_NotificationActionText
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_textFontWeight
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: java.lang.Object NEXT_WINDOW
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_alphabeticShortcut
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
androidx.appcompat.R$style: int TextAppearance_AppCompat_Subhead
com.xuexiang.xhttp2.cache.RxCache$1: com.xuexiang.xhttp2.cache.model.CacheMode val$cacheMode
com.xuexiang.xhttp2.R$styleable: int Toolbar_popupTheme
com.xuexiang.xhttp2.R$drawable: int abc_ic_voice_search_api_material
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH
io.reactivex.subjects.PublishSubject: io.reactivex.subjects.PublishSubject$PublishDisposable[] EMPTY
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_android_textOn
com.appspa.update.R$styleable: int MenuGroup_android_orderInCategory
androidx.core.R$id: int line1
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactory
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_controlBackground
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: java.util.concurrent.Callable bufferSupplier
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.xuexiang.xhttp2.R$id: int right_side
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: androidx.viewpager.widget.ViewPager this$0
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: io.reactivex.functions.BiFunction reducer
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: io.reactivex.Observer downstream
androidx.loader.content.Loader$ForceLoadContentObserver: androidx.loader.content.Loader this$0
androidx.core.graphics.TypefaceCompatBaseImpl: java.util.concurrent.ConcurrentHashMap mFontFamilies
com.appspa.update.R$styleable: int Toolbar_title
io.reactivex.internal.operators.maybe.MaybeMap: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.single.SingleDoOnSuccess: io.reactivex.functions.Consumer onSuccess
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.view.OneShotPreDrawListener: android.view.ViewTreeObserver mViewTreeObserver
io.reactivex.internal.functions.Functions$NotificationOnComplete: io.reactivex.functions.Consumer onNotification
com.appspa.demo.R$attr: int fontFamily
androidx.appcompat.widget.ShareActionProvider: int mMaxShownActivityCount
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.MediaType contentType
com.appspa.update.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
com.appspa.update.R$dimen: int abc_dialog_min_width_minor
io.reactivex.internal.operators.maybe.MaybeConcatArray: io.reactivex.MaybeSource[] sources
androidx.loader.R$dimen: int notification_right_side_padding_top
com.appspa.demo.R$attr: int buttonStyleSmall
com.xuexiang.xhttp2.annotation.NetMethod: java.lang.String PUT
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: java.util.List buffers
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$sharedElementTransition
com.appspa.update.R$color: int switch_thumb_material_light
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: io.reactivex.internal.util.AtomicThrowable errors
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_CCM_8_SHA256
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_visible
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int VALUE_TYPE_COLOR
androidx.appcompat.R$color: int abc_tint_seek_thumb
androidx.appcompat.R$drawable: int abc_btn_radio_to_on_mtrl_015
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: io.reactivex.MaybeSource other
io.reactivex.internal.operators.flowable.FlowableScan: io.reactivex.functions.BiFunction accumulator
androidx.customview.widget.ViewDragHelper: int MAX_SETTLE_DURATION
androidx.appcompat.widget.PopupMenu: android.content.Context mContext
com.appspa.update.R$styleable: int StateListDrawableItem_android_drawable
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator parent
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory INTEGER_FACTORY
androidx.appcompat.view.menu.ListMenuPresenter: int mItemIndexOffset
androidx.core.graphics.PathParser: java.lang.String LOGTAG
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: java.lang.Object value
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
com.appspa.demo.R$styleable: int AppCompatTheme_editTextBackground
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: int consumed
androidx.appcompat.R$attr: int textAppearancePopupMenuHeader
com.appspa.update.R$attr: int backgroundTint
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampDownDuration
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable: boolean delayErrors
androidx.appcompat.R$attr: int actionButtonStyle
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.appspa.demo.R$styleable: int CompoundButton_buttonTintMode
androidx.appcompat.widget.ActionMenuPresenter: boolean mMaxItemsSet
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
com.appspa.demo.R$attr: int windowFixedWidthMinor
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_EditText
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver other
io.reactivex.processors.UnicastProcessor: java.util.concurrent.atomic.AtomicBoolean once
androidx.drawerlayout.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemClickListener mOnItemClickListener
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.appspa.demo.R$styleable: int AppCompatTextView_android_textAppearance
com.xuexiang.xhttp2.R$styleable: int Toolbar_contentInsetLeft
com.appspa.update.R$dimen: int abc_cascading_menus_min_smallest_width
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapSingleObserver: io.reactivex.MaybeObserver downstream
androidx.customview.widget.ViewDragHelper: android.view.View mCapturedView
com.appspa.demo.R$attr: int fontProviderCerts
io.reactivex.internal.observers.BlockingBaseObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.entity.PromptEntity: boolean mSupportBackgroundUpdate
io.reactivex.internal.operators.completable.CompletableUsing: io.reactivex.functions.Consumer disposer
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup
com.appspa.update.R$styleable: int ActionBar_backgroundStacked
io.reactivex.internal.operators.observable.ObservableReduceMaybe: io.reactivex.ObservableSource source
com.appspa.update.R$color: int background_material_light
androidx.appcompat.R$id: int tag_accessibility_clickable_spans
retrofit2.RequestBuilder: java.lang.String relativeUrl
com.appspa.demo.R$id: int action_image
com.xuexiang.xhttp2.R$string: int abc_action_bar_home_description
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: io.reactivex.MaybeObserver downstream
com.appspa.update.entity.PromptEntity: int mTopResId
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.widget.ScrollingTabContainerView: int mContentHeight
androidx.loader.R$drawable: int notification_action_background
com.xuexiang.xhttp2.R$styleable: int[] Toolbar
com.appspa.update.R$style: int Widget_AppCompat_Spinner_Underlined
com.appspa.demo.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$1: com.xuexiang.xhttp2.transform.func.RetryExceptionFunc this$0
okhttp3.internal.http2.Http2Stream: long bytesLeftInWriteWindow
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: boolean once
androidx.appcompat.resources.R$id: int accessibility_custom_action_23
com.appspa.demo.R$string: int space_error_check_no_new_version
androidx.core.provider.FontsContractCompat$2: androidx.core.content.res.ResourcesCompat$FontCallback val$fontCallback
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate: io.reactivex.functions.BiPredicate predicate
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: int rightIndex
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setAlpnProtocols
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_RatingBar
com.appspa.update.R$styleable: int SwitchCompat_android_textOn
io.reactivex.internal.operators.observable.ObservableWindowTimed: boolean restartTimerOnMaxSize
okhttp3.CacheControl$Builder: boolean noTransform
androidx.collection.SimpleArrayMap: java.lang.String TAG
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver: io.reactivex.CompletableObserver downstream
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener mListener
com.appspa.demo.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.view.menu.ActionMenuItem: int NO_ICON
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.appcompat.widget.SwitchCompat: int mSwitchBottom
androidx.appcompat.widget.LinearLayoutCompat: int mDividerPadding
com.appspa.demo.R$styleable: int DrawerArrowToggle_color
androidx.viewpager.R$attr: int alpha
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
androidx.drawerlayout.R$id: int chronometer
io.reactivex.internal.operators.flowable.FlowableGenerate: io.reactivex.functions.Consumer disposeState
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: int consumed
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: boolean delayError
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: int INTERRUPTED
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: java.util.concurrent.atomic.AtomicReference active
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: int fusionMode
io.reactivex.internal.operators.flowable.FlowableCollectSingle: java.util.concurrent.Callable initialSupplier
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.cookie.CookieManager mCookieJar
okhttp3.Cache$Entry: okhttp3.Protocol protocol
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: io.reactivex.internal.subscriptions.SubscriptionArbiter sa
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
com.appspa.update.R$id: int titleDividerNoCustom
androidx.appcompat.R$styleable: int TextAppearance_android_typeface
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$drawable: int abc_list_divider_material
com.appspa.demo.R$style: int TextAppearance_AppCompat_Display2
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: io.reactivex.SingleObserver downstream
androidx.appcompat.R$style: int Widget_AppCompat_Toolbar
io.reactivex.internal.operators.single.SingleCache: java.util.concurrent.atomic.AtomicReference observers
androidx.activity.R$id: int accessibility_custom_action_9
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: io.reactivex.CompletableObserver downstream
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
androidx.lifecycle.Transformations$1: androidx.lifecycle.MediatorLiveData val$result
io.reactivex.internal.subscribers.LambdaSubscriber: io.reactivex.functions.Action onComplete
androidx.lifecycle.ViewModelStore: java.util.HashMap mMap
com.appspa.update.R$attr: int autoSizeMinTextSize
com.appspa.demo.R$styleable: int AppCompatTheme_windowNoTitle
androidx.vectordrawable.R$id: int accessibility_custom_action_23
androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.appspa.demo.R$styleable: int AppCompatTextView_textLocale
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver[] observers
androidx.appcompat.resources.R$layout: int notification_template_part_time
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_endColor
com.appspa.demo.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_TEXT
io.reactivex.internal.operators.flowable.FlowableJoin: io.reactivex.functions.Function rightEnd
com.xuexiang.xhttp2.R$drawable: int abc_ic_menu_overflow_material
androidx.viewpager.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background
io.reactivex.internal.operators.completable.CompletableNever: io.reactivex.Completable INSTANCE
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarTheme
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable[] $VALUES
retrofit2.RequestFactory$Builder: boolean gotQueryName
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING
com.appspa.demo.R$integer: int config_tooltipAnimTime
com.xuexiang.xhttp2.R$attr: int searchHintIcon
androidx.appcompat.R$attr: int collapseIcon
androidx.collection.SimpleArrayMap: int BASE_SIZE
androidx.appcompat.app.TwilightManager: int SUNRISE
androidx.appcompat.app.TwilightManager: int SUNSET
androidx.activity.R$id: int accessibility_custom_action_2
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CALENDAR_FACTORY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable: io.reactivex.functions.Function selector
com.appspa.update.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
retrofit2.converter.gson.GsonConverterFactory: com.google.gson.Gson gson
io.reactivex.internal.operators.observable.ObservableDefer: java.util.concurrent.Callable supplier
androidx.vectordrawable.R$id: int accessibility_custom_action_18
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: boolean delayError
com.appspa.demo.R$id: int accessibility_custom_action_28
com.appspa.update.R$attr: int drawableStartCompat
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback
com.xuexiang.xhttp2.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.xuexiang.xhttp2.R$layout: int abc_action_menu_item_layout
androidx.core.R$layout: int notification_template_custom_big
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
androidx.core.view.ViewCompat: java.lang.reflect.Field sMinHeightField
com.appspa.update.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.appspa.update.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.appspa.demo.R$attr: int actionOverflowButtonStyle
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: java.lang.Object NEXT
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: io.reactivex.internal.queue.MpscLinkedQueue queue
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: java.lang.Object value
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: io.reactivex.processors.UnicastProcessor window
com.xuexiang.xhttp2.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.appcompat.R$id: int accessibility_custom_action_12
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.R$color: int primary_dark_material_dark
androidx.fragment.app.BackStackRecord: boolean mCommitted
androidx.customview.R$attr: int fontVariationSettings
androidx.appcompat.widget.DropDownListView: int mSelectionTopPadding
androidx.appcompat.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.appspa.update.R$attr: int elevation
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: java.util.concurrent.atomic.AtomicReference actual
androidx.core.app.NotificationCompat: int FLAG_SHOW_LIGHTS
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver: io.reactivex.disposables.Disposable upstream
okhttp3.internal.cache.DiskLruCache: long maxSize
org.aspectj.lang.Aspects14: java.lang.Object[] EMPTY_OBJECT_ARRAY
androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabStyle
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: int size
io.reactivex.internal.operators.observable.ObservableConcatMapEager: int maxConcurrency
com.appspa.update.R$id: int action_context_bar
com.appspa.demo.R$drawable: int abc_text_cursor_material
androidx.appcompat.R$dimen: int notification_subtext_size
com.xuexiang.xhttp2.R$attr: int buttonTint
com.appspa.demo.R$style: int Platform_ThemeOverlay_AppCompat_Dark
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
com.appspa.update.R$style: int TextAppearance_AppCompat_Body2
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver: long serialVersionUID
com.google.gson.internal.UnsafeAllocator$3: java.lang.reflect.Method val$newInstance
com.appspa.update.R$attr: int windowMinWidthMinor
androidx.appcompat.widget.PopupMenu: androidx.appcompat.view.menu.MenuPopupHelper mPopup
com.xuexiang.xhttp2.R$dimen: int abc_alert_dialog_button_dimen
com.appspa.demo.R$styleable: int FontFamily_fontProviderPackage
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_LIST
io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction: long delayTime
com.xuexiang.xhttp2.cache.RxCache: com.xuexiang.xhttp2.cache.key.ICacheKeyCreator sICacheKeyCreator
androidx.appcompat.R$id: int title_template
androidx.customview.R$dimen: int notification_small_icon_background_padding
androidx.fragment.app.FragmentManagerImpl: boolean DEBUG
com.xuexiang.xhttp2.R$dimen: int abc_action_button_min_width_overflow_material
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: io.reactivex.functions.BiFunction errorHandler
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: long timespan
okhttp3.internal.ws.RealWebSocket: java.lang.Runnable writerRunnable
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.ObservableSource onSubscribe
com.appspa.update.R$attr: int expandActivityOverflowButtonDrawable
com.appspa.demo.R$layout: int abc_list_menu_item_layout
androidx.appcompat.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.xuexiang.xhttp2.R$style: int Platform_AppCompat_Light
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: int index
androidx.appcompat.resources.R$color: int secondary_text_default_material_light
okio.Buffer: long size
androidx.appcompat.app.WindowDecorActionBar: android.app.Dialog mDialog
androidx.appcompat.R$styleable: int Toolbar_android_minHeight
androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext
androidx.appcompat.R$styleable: int LinearLayoutCompat_divider
androidx.appcompat.R$styleable: int MenuGroup_android_visible
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: io.reactivex.functions.BiConsumer collector
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: io.reactivex.functions.BiFunction reducer
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long REVERSIBLE_FLAG_BIT
okhttp3.internal.ws.WebSocketWriter$FrameSink: long contentLength
com.appspa.update.R$attr: int actionModePopupWindowStyle
com.appspa.demo.R$id: int actions
okio.Buffer$UnsafeCursor: int end
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: long serialVersionUID
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sIOThreadExecutor
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.core.view.OneShotPreDrawListener: java.lang.Runnable mRunnable
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.lang.Integer RIGHT_VALUE
com.appspa.demo.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.appcompat.R$dimen: int tooltip_y_offset_non_touch
com.google.gson.internal.bind.util.ISO8601Utils: java.util.TimeZone TIMEZONE_UTC
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: long serialVersionUID
androidx.appcompat.R$styleable: int Toolbar_popupTheme
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: io.reactivex.internal.util.ErrorMode errorMode
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask: io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker this$0
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver: io.reactivex.SingleObserver downstream
com.xuexiang.xhttp2.R$dimen: int abc_edit_text_inset_bottom_material
androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha
org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: io.reactivex.internal.disposables.SequentialDisposable task
io.reactivex.internal.operators.flowable.FlowableGroupJoin: io.reactivex.functions.Function rightEnd
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$drawable: int abc_text_cursor_material
com.jakewharton.disklrucache.DiskLruCache$Entry: long[] lengths
androidx.fragment.app.DialogFragment: int STYLE_NO_TITLE
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_default_padding_end_material
com.appspa.update.R$styleable: int AppCompatTextView_textLocale
com.appspa.update.R$id: int up
retrofit2.converter.gson.GsonRequestBodyConverter: okhttp3.MediaType MEDIA_TYPE
com.appspa.demo.R$attr: int panelMenuListTheme
io.reactivex.internal.operators.maybe.MaybeCache: java.util.concurrent.atomic.AtomicReference observers
retrofit2.HttpServiceMethod: retrofit2.Converter responseConverter
androidx.appcompat.R$styleable: int View_android_theme
androidx.loader.R$dimen: int compat_button_padding_horizontal_material
io.reactivex.internal.util.AppendOnlyLinkedArrayList: int capacity
com.appspa.demo.R$attr: int thumbTintMode
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: android.animation.ObjectAnimator mAnim
okhttp3.internal.http2.Http2Connection: boolean shutdown
androidx.viewpager.R$dimen: int notification_action_text_size
androidx.core.view.MotionEventCompat: int AXIS_VSCROLL
androidx.appcompat.R$drawable: int notify_panel_notification_icon_bg
androidx.fragment.R$dimen: int notification_top_pad
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: int mFontWeight
io.reactivex.internal.operators.flowable.FlowableMapNotification: java.util.concurrent.Callable onCompleteSupplier
androidx.loader.content.AsyncTaskLoader$LoadTask: androidx.loader.content.AsyncTaskLoader this$0
com.appspa.update.R$color: int abc_tint_seek_thumb
okio.ByteString: okio.ByteString EMPTY
com.appspa.update.R$layout: int abc_dialog_title_material
com.appspa.update.R$style: int Widget_AppCompat_Button_Borderless
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontStyle
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_HINT_SHOW_BACKGROUND_ONLY
io.reactivex.subjects.PublishSubject$PublishDisposable: long serialVersionUID
androidx.core.text.HtmlCompat: int FROM_HTML_MODE_COMPACT
androidx.appcompat.R$style: int Base_Widget_AppCompat_ProgressBar
io.reactivex.internal.schedulers.SchedulerWhen$ImmediateAction: java.lang.Runnable action
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
io.reactivex.internal.operators.single.SingleCreate$Emitter: io.reactivex.SingleObserver downstream
com.xuexiang.xhttp2.R$styleable: int[] AppCompatImageView
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver other
androidx.core.util.PatternsCompat: java.lang.String PROTOCOL
com.appspa.demo.R$color: int abc_input_method_navigation_guard
androidx.cursoradapter.widget.CursorAdapter: boolean mAutoRequery
androidx.appcompat.app.AlertController$3: android.view.View val$bottom
androidx.appcompat.R$attr: int alertDialogCenterButtons
io.reactivex.subjects.MaybeSubject$MaybeDisposable: long serialVersionUID
androidx.appcompat.view.menu.MenuBuilder: boolean mIsVisibleItemsStale
org.aspectj.internal.lang.reflect.PointcutBasedPerClauseImpl: org.aspectj.lang.reflect.PointcutExpression pointcutExpression
io.reactivex.internal.schedulers.ComputationScheduler: java.util.concurrent.atomic.AtomicReference pool
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: java.util.concurrent.TimeUnit unit
com.appspa.update.R$attr: int splitTrack
okio.Okio$2: okio.Timeout val$timeout
okio.Pipe: boolean sourceClosed
androidx.activity.R$styleable: int[] FontFamilyFont
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: boolean done
androidx.appcompat.view.menu.BaseMenuWrapper: android.content.Context mContext
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier: java.util.concurrent.Callable boundarySupplier
io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber: io.reactivex.functions.Function mapper
io.reactivex.internal.util.ExceptionHelper$Termination: long serialVersionUID
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Button
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_titleCondensed
androidx.appcompat.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.activity.R$id: int accessibility_custom_action_25
com.appspa.demo.R$id: int tag_screen_reader_focusable
io.reactivex.internal.operators.flowable.FlowableObserveOn: int prefetch
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
androidx.fragment.R$id: int accessibility_custom_action_24
io.reactivex.internal.operators.single.SingleCache: io.reactivex.SingleSource source
com.xuexiang.xhttp2.cache.key.Strings: com.xuexiang.xhttp2.cache.key.IObjectSerializer sISerializer
io.reactivex.internal.operators.flowable.FlowablePublish: int bufferSize
com.appspa.update.proxy.impl.DefaultUpdateChecker$3: com.appspa.update.proxy.impl.DefaultUpdateChecker this$0
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController$AlertParams this$0
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: java.lang.Throwable error
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver
androidx.vectordrawable.R$color: int secondary_text_default_material_light
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: boolean cancelled
com.xuexiang.xhttp2.R$attr: int thumbTint
androidx.appcompat.R$attr: int alertDialogButtonGroupStyle
androidx.core.content.pm.ShortcutInfoCompat: android.content.Context mContext
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.appspa.update.R$color: int primary_material_light
io.reactivex.internal.observers.DisposableLambdaObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_LOCATION
androidx.appcompat.R$id: int text2
com.appspa.demo.R$attr: int actionButtonStyle
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: boolean once
androidx.core.widget.NestedScrollView: boolean mFillViewport
com.appspa.update.R$attr: int xnpb_unreached_bar_height
com.xuexiang.xhttp2.R$layout: int abc_alert_dialog_button_bar_material
com.xuexiang.xhttp2.R$id: int alertTitle
androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_HTML_ELEMENT
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_ENTER
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: io.reactivex.subjects.BehaviorSubject state
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
com.xuexiang.xhttp2.R$color: int dim_foreground_disabled_material_light
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.String SHAPE_GROUP
com.appspa.demo.R$attr: int actionProviderClass
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: io.reactivex.disposables.CompositeDisposable disposables
androidx.core.R$id: int chronometer
androidx.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild
androidx.appcompat.widget.VectorEnabledTintResources: int MAX_SDK_WHERE_REQUIRED
androidx.appcompat.R$id: int default_activity_button
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
com.appspa.update.R$style: int Widget_Compat_NotificationActionText
com.appspa.update.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.appspa.update.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.xuexiang.xhttp2.R$styleable: int Toolbar_subtitle
androidx.customview.widget.ExploreByTouchHelper: int INVALID_ID
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: io.reactivex.disposables.Disposable upstream
androidx.core.view.InputDeviceCompat: int SOURCE_UNKNOWN
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$exitTransition
com.appspa.update.R$color: int primary_text_disabled_material_dark
com.appspa.demo.R$attr: int borderlessButtonStyle
androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR
com.xuexiang.xhttp2.R$color: int tooltip_background_light
androidx.appcompat.widget.ActivityChooserView: android.widget.PopupWindow$OnDismissListener mOnDismissListener
com.google.gson.internal.UnsafeAllocator$2: java.lang.reflect.Method val$newInstance
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
io.reactivex.internal.operators.maybe.MaybePeek: io.reactivex.functions.Consumer onErrorCall
com.appspa.demo.R$id: int action_bar_subtitle
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: io.reactivex.disposables.Disposable upstream
androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint
io.reactivex.internal.util.VolatileSizeArrayList: java.util.ArrayList list
androidx.fragment.R$styleable: int GradientColor_android_endX
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier DEFAULT_UNBOUNDED_FACTORY
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String ADD_FONT_FROM_BUFFER_METHOD
androidx.core.R$id: int accessibility_custom_action_18
io.reactivex.internal.operators.observable.ObservableDoAfterNext: io.reactivex.functions.Consumer onAfterNext
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.xuexiang.xhttp2.R$style: int Platform_ThemeOverlay_AppCompat_Dark
okhttp3.MultipartBody$Builder: okio.ByteString boundary
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber this$0
io.reactivex.internal.observers.BlockingMultiObserver: boolean cancelled
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: io.reactivex.internal.subscriptions.SubscriptionArbiter sa
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: java.util.concurrent.atomic.AtomicReference current
io.reactivex.internal.observers.InnerQueuedObserver: boolean done
com.appspa.demo.R$attr: int isLightTheme
com.appspa.demo.R$id: int action_bar_root
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsOut
androidx.fragment.R$id: int blocking
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
com.appspa.update.R$color: int secondary_text_disabled_material_dark
com.appspa.update.R$attr: int preserveIconSpacing
androidx.fragment.app.FragmentManagerImpl: int ANIM_DUR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: io.reactivex.internal.disposables.SequentialDisposable arbiter
androidx.appcompat.R$attr: int titleMargin
com.appspa.update.R$styleable: int Toolbar_android_gravity
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.demo.R$id: int info
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.os.PowerManager mPowerManager
androidx.viewpager.R$drawable: int notification_action_background
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_DISABLED
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer
com.appspa.demo.R$styleable: int MenuItem_android_icon
com.appspa.update.R$attr: int fontProviderAuthority
com.appspa.update.R$drawable: int abc_action_bar_item_background_material
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_NOT_NEEDED
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo: java.lang.reflect.Method setHomeAsUpIndicator
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: java.lang.Object NEXT_WINDOW
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: long remaining
androidx.customview.widget.ViewDragHelper: int EDGE_TOP
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: java.lang.Throwable error
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y
com.appspa.demo.R$string: int space_error_check_no_wifi
com.appspa.demo.R$drawable: int abc_ic_arrow_drop_right_black_24dp
androidx.fragment.R$styleable: int GradientColor_android_endColor
androidx.appcompat.R$id: int forever
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$drawable: int abc_item_background_holo_light
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_MAX
com.appspa.demo.R$string: int abc_action_menu_overflow_description
okio.GzipSink: okio.DeflaterSink deflaterSink
com.appspa.update.service.DownloadService$FileDownloadCallBack$4: java.lang.Throwable val$throwable
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$drawable: int notification_template_icon_bg
io.reactivex.internal.operators.observable.ObservableThrottleLatest: long timeout
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable: io.reactivex.internal.util.ErrorMode errorMode
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
androidx.appcompat.widget.SwitchCompat: int mSwitchRight
io.reactivex.internal.schedulers.IoScheduler: io.reactivex.internal.schedulers.IoScheduler$ThreadWorker SHUTDOWN_THREAD_WORKER
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderAuthority
com.appspa.update.R$styleable: int ActionBar_divider
androidx.fragment.app.DialogFragment: int mTheme
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: java.util.concurrent.atomic.AtomicBoolean once
androidx.core.app.NotificationCompat$Builder: int mGroupAlertBehavior
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri mUri
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.graphics.PathParser$PathDataNode: float[] mParams
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver otherObserver
androidx.appcompat.R$color: int material_grey_600
androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape
androidx.activity.R$dimen: int notification_action_text_size
com.appspa.update.R$id: int group_divider
com.appspa.update.R$color: int ripple_material_dark
com.appspa.demo.R$id: int visible
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper
androidx.appcompat.R$dimen: int abc_text_size_menu_material
androidx.fragment.app.FragmentActivity: int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
com.xuexiang.xhttp2.R$attr: int buttonTintMode
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Body1
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate: io.reactivex.internal.operators.maybe.MaybeDoOnTerminate this$0
com.appspa.demo.R$color: int foreground_material_dark
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.appspa.update.R$style: int ThemeOverlay_AppCompat_Light
com.appspa.update.R$styleable: int AppCompatTheme_controlBackground
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb: int[] THEME_ATTRS
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mTmpInfo
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: io.reactivex.internal.util.AtomicThrowable errors
com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility: com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility INVISIBLE
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: long serialVersionUID
com.appspa.update.R$styleable: int MenuView_android_itemTextAppearance
com.appspa.update.service.DownloadService: java.lang.CharSequence CHANNEL_NAME
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor
com.appspa.demo.R$attr: int actionDropDownStyle
com.appspa.update.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
io.reactivex.Scheduler$Worker$PeriodicTask: java.lang.Runnable decoratedRun
com.appspa.demo.R$string: int abc_capital_off
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: org.reactivestreams.Subscriber downstream
androidx.customview.R$styleable: int FontFamily_fontProviderAuthority
com.appspa.update.R$style: int TextAppearance_AppCompat_Title_Inverse
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Subhead
com.xuexiang.xhttp2.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
io.reactivex.internal.operators.flowable.FlowableWindowTimed: java.util.concurrent.TimeUnit unit
androidx.appcompat.R$dimen: int abc_dialog_fixed_width_minor
com.google.gson.Gson: java.util.Map typeTokenCache
io.reactivex.internal.operators.flowable.FlowableFromArray: java.lang.Object[] array
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_editTextBackground
io.reactivex.internal.operators.observable.ObservableGroupBy$State: boolean done
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: boolean done
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: io.reactivex.ObservableSource source
androidx.viewpager.widget.ViewPager: int mRestoredCurItem
com.appspa.update.R$styleable: int SearchView_goIcon
com.appspa.update.R$attr: int actionBarTabTextStyle
com.appspa.update.R$attr: int queryBackground
androidx.appcompat.R$drawable: int abc_item_background_holo_dark
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowOperation: java.lang.Object open
com.xuexiang.xhttp2.R$styleable: int[] MenuView
androidx.vectordrawable.R$id: int normal
androidx.appcompat.R$styleable: int[] AppCompatSeekBar
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: boolean done
okhttp3.MultipartBody: byte[] DASHDASH
androidx.appcompat.R$styleable: int AppCompatSeekBar_android_thumb
androidx.fragment.R$id: int tag_accessibility_actions
com.appspa.update.R$styleable: int AppCompatTheme_colorControlActivated
io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$exitingViews
androidx.loader.R$styleable: int[] GradientColor
com.google.gson.FieldAttributes: java.lang.reflect.Field field
androidx.appcompat.widget.DropDownListView: int mSelectionRightPadding
androidx.activity.R$style: int Widget_Compat_NotificationActionText
androidx.core.view.DragStartHelper: int mLastTouchY
androidx.appcompat.R$styleable: int GradientColor_android_centerColor
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: java.lang.Object[] values
com.appspa.demo.R$drawable: int abc_btn_switch_to_on_mtrl_00012
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.Class serverProviderClass
com.appspa.demo.R$styleable: int DrawerArrowToggle_barLength
androidx.viewpager.widget.ViewPager$ItemInfo: float offset
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: java.util.concurrent.TimeUnit unit
com.appspa.demo.R$layout: int abc_screen_simple_overlay_action_mode
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: io.reactivex.internal.queue.MpscLinkedQueue queue
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.xuexiang.xhttp2.R$attr: int subMenuArrow
com.google.gson.internal.LinkedHashTreeMap: int size
androidx.core.app.FrameMetricsAggregator: int INPUT_INDEX
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: io.reactivex.Observer observer
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: int limit
com.appspa.update.R$id: int chronometer
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INT_FLAG
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: io.reactivex.Scheduler$Worker worker
androidx.customview.R$dimen: int compat_button_padding_vertical_material
com.xuexiang.xhttp2.R$style: int Base_AlertDialog_AppCompat
io.reactivex.internal.operators.parallel.ParallelReduce: io.reactivex.parallel.ParallelFlowable source
com.zhy.http.okhttp.request.PostFileRequest: java.io.File file
androidx.drawerlayout.R$id: int blocking
androidx.appcompat.R$string: int abc_searchview_description_voice
com.appspa.demo.R$drawable: int abc_ic_star_black_48dp
androidx.viewpager.widget.ViewPager$SavedState: int position
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: long serialVersionUID
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransition
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver INNER_DISPOSED
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
androidx.appcompat.R$dimen: int abc_text_size_button_material
androidx.appcompat.widget.SearchView$10: androidx.appcompat.widget.SearchView this$0
androidx.loader.R$dimen: int notification_action_icon_size
androidx.appcompat.R$styleable: int ActionMode_subtitleTextStyle
androidx.core.app.FrameMetricsAggregator: int SYNC_INDEX
com.appspa.demo.R$attr: int windowActionModeOverlay
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: java.util.concurrent.atomic.AtomicBoolean once
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.functions.Consumer onSubscribe
com.xuexiang.xhttp2.R$drawable: int abc_btn_default_mtrl_shape
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: io.reactivex.SingleObserver downstream
androidx.cursoradapter.widget.ResourceCursorAdapter: int mDropDownLayout
androidx.appcompat.widget.ActivityChooserModel: java.lang.String mHistoryFileName
com.xuexiang.xhttp2.R$dimen: int abc_progress_bar_height_material
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_title
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.appcompat.app.AlertController: int mCheckedItem
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
io.reactivex.observers.SerializedObserver: boolean done
androidx.appcompat.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
androidx.core.app.NotificationCompat: int GROUP_ALERT_ALL
androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
com.appspa.demo.R$styleable: int Toolbar_titleMargin
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display2
com.appspa.demo.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
com.appspa.update.R$attr: int firstBaselineToTopHeight
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.subscriptions.SubscriptionArbiter: boolean unbounded
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: java.util.concurrent.atomic.AtomicInteger subscriberCount
com.appspa.update.R$layout: int abc_popup_menu_item_layout
retrofit2.Response: okhttp3.Response rawResponse
com.jakewharton.disklrucache.DiskLruCache: java.io.File directory
com.zhy.http.okhttp.request.PostStringRequest: okhttp3.MediaType mediaType
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: boolean tillTheEnd
androidx.core.os.LocaleListCompatWrapper: java.util.Locale LOCALE_EN_XA
androidx.appcompat.app.TwilightManager$TwilightState: long tomorrowSunrise
com.google.gson.stream.JsonWriter: java.lang.String indent
com.appspa.demo.R$attr: int collapseContentDescription
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: io.reactivex.Scheduler scheduler
androidx.core.os.LocaleListCompatWrapper: java.util.Locale[] mList
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: long index
okhttp3.MultipartBody: okio.ByteString boundary
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarDivider
androidx.appcompat.R$interpolator: int fast_out_slow_in
androidx.core.app.Person: java.lang.String IS_BOT_KEY
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction onFlowableSubscribe
com.xuexiang.xhttp2.cache.RxCache$4: com.xuexiang.xhttp2.cache.RxCache this$0
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: io.reactivex.internal.util.ErrorMode errorMode
com.xuexiang.xhttp2.R$styleable: int[] TextAppearance
com.appspa.update.R$string: int space_lab_update
com.appspa.demo.R$styleable: int SearchView_searchIcon
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: boolean val$isPrimitive
androidx.core.util.PatternsCompat: java.util.regex.Pattern WEB_URL
androidx.appcompat.R$attr: int spinBars
androidx.appcompat.R$attr: int trackTint
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOW_CONTENT_CHANGED
androidx.loader.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.internal.util.VolatileSizeArrayList: long serialVersionUID
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: int STATE_ACTIVE
androidx.appcompat.resources.R$id: int accessibility_custom_action_8
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Light_DarkActionBar
androidx.appcompat.R$styleable: int AppCompatTheme_dialogTheme
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X
io.reactivex.internal.observers.DeferredScalarDisposable: int DISPOSED
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO_TIME
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: boolean cancelled
androidx.versionedparcelable.VersionedParcelStream: int TYPE_SUB_PERSISTABLE_BUNDLE
com.jakewharton.disklrucache.Util: java.nio.charset.Charset UTF_8
androidx.core.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector
io.reactivex.internal.operators.observable.ObservableCache: io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable[] EMPTY
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: com.google.gson.TypeAdapter val$typeAdapter
androidx.appcompat.R$styleable: int MenuView_android_verticalDivider
androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: java.util.logging.Logger logger
com.xuexiang.xhttp2.R$id: int tag_accessibility_pane_title
com.xuexiang.xhttp2.R$drawable: int abc_btn_switch_to_on_mtrl_00012
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: io.reactivex.processors.UnicastProcessor window
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier bufferFactory
androidx.appcompat.R$styleable: int AppCompatTheme_dividerHorizontal
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
androidx.appcompat.R$attr: int track
com.appspa.demo.R$styleable: int AppCompatTheme_colorError
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader mShader
com.appspa.demo.R$layout: int abc_action_menu_item_layout
com.appspa.update.R$style: int Widget_AppCompat_CompoundButton_Switch
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: boolean done
androidx.collection.SparseArrayCompat: java.lang.Object[] mValues
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: io.reactivex.Scheduler$Worker worker
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.String TAG
okhttp3.Response: okhttp3.Response cacheResponse
io.reactivex.internal.operators.maybe.MaybeCount: io.reactivex.MaybeSource source
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate: io.reactivex.functions.Action onTerminate
com.appspa.demo.R$attr: int ratingBarStyle
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: okhttp3.internal.http2.Http2Connection this$0
io.reactivex.internal.operators.observable.ObservableLastMaybe: io.reactivex.ObservableSource source
androidx.viewpager.R$layout: int notification_action
com.appspa.demo.R$styleable: int[] ColorStateListItem
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.appcompat.widget.ViewStubCompat: java.lang.ref.WeakReference mInflatedViewRef
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject$ReplayDisposable[] EMPTY
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_ACTION
io.reactivex.observers.SafeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$drawable: int abc_btn_radio_material
androidx.appcompat.R$attr: int colorPrimary
com.xuexiang.xhttp2.R$attr: int windowActionModeOverlay
androidx.appcompat.widget.LinearLayoutCompat: int mOrientation
com.appspa.demo.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$NextObserver: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.observable.ObservableCombineLatest: io.reactivex.ObservableSource[] sources
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: long serialVersionUID
androidx.fragment.app.FragmentState: boolean mFromLayout
com.appspa.update.proxy.impl.DefaultUpdateDownloader$1: com.appspa.update.entity.UpdateEntity val$updateEntity
com.appspa.demo.R$attr: int showDividers
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: io.reactivex.functions.Function mapper
com.appspa.update.service.DownloadService$FileDownloadCallBack: android.os.Handler mMainHandler
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH
com.appspa.update.R$id: int activity_chooser_view_content
androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableCollectSingle: io.reactivex.functions.BiConsumer collector
androidx.core.widget.TextViewCompat: boolean sMinModeFieldFetched
retrofit2.RequestFactory$Builder: boolean gotField
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: boolean terminate
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Title
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: java.lang.Throwable error
retrofit2.ParameterHandler$PartMap: int p
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers
com.xuexiang.xhttp2.request.BaseRequest: long mCacheTime
io.reactivex.internal.operators.single.SingleTakeUntil: org.reactivestreams.Publisher other
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO
androidx.viewpager.widget.ViewPager: float mLastMotionY
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity
androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: boolean done
com.appspa.update.R$id: int action_mode_close_button
androidx.appcompat.resources.R$styleable: int StateListDrawableItem_android_drawable
com.google.gson.internal.bind.ObjectTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_gravity
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: int skip
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.Person mPerson
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: int mProxyEndCount
okhttp3.internal.ws.RealWebSocket$PingRunnable: okhttp3.internal.ws.RealWebSocket this$0
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.InterTypeMethodDeclaration[] declaredITDMethods
androidx.appcompat.R$styleable: int View_android_focusable
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
androidx.appcompat.R$attr: int subMenuArrow
io.reactivex.internal.operators.flowable.FlowableWindowTimed: long timeskip
com.xuexiang.xhttp2.R$color: int foreground_material_light
androidx.vectordrawable.animated.R$string: int status_bar_notification_info_overflow
com.google.gson.GsonBuilder: boolean serializeSpecialFloatingPointValues
androidx.appcompat.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_content_inset_with_nav
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: boolean mClosingActionMenu
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.functions.Consumer onAfterNext
androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher: org.reactivestreams.Publisher other
io.reactivex.internal.operators.completable.CompletableDelay: long delay
com.appspa.demo.R$styleable: int[] SwitchCompat
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableBufferBoundary: io.reactivex.functions.Function bufferClose
io.reactivex.internal.operators.single.SingleDelayWithObservable: io.reactivex.ObservableSource other
androidx.appcompat.widget.ListPopupWindow: android.os.Handler mHandler
androidx.activity.R$drawable: int notification_tile_bg
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] $VALUES
androidx.appcompat.view.menu.MenuBuilder: java.lang.String ACTION_VIEW_STATES_KEY
io.reactivex.internal.subscribers.BasicFuseableSubscriber: int sourceMode
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Dialog_MinWidth
com.appspa.update.R$style: int Base_V26_Theme_AppCompat_Light
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.String mMethodName
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.appcompat.R$drawable: int abc_item_background_holo_light
androidx.appcompat.R$styleable: int Toolbar_titleMargins
io.reactivex.internal.observers.FutureObserver: java.lang.Throwable error
io.reactivex.internal.operators.single.SingleDelayWithSingle: io.reactivex.SingleSource source
androidx.vectordrawable.animated.R$id: int forever
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: int capacityHint
androidx.core.app.NotificationManagerCompat: int SIDE_CHANNEL_RETRY_MAX_COUNT
io.reactivex.internal.operators.observable.ObservableDoOnLifecycle: io.reactivex.functions.Action onDispose
androidx.core.text.BidiFormatter$Builder: androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat
com.xuexiang.xhttp2.R$string: int abc_menu_space_shortcut_label
androidx.appcompat.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
okio.Buffer$UnsafeCursor: okio.Segment segment
androidx.appcompat.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] mMessages
io.reactivex.internal.schedulers.ScheduledDirectTask: long serialVersionUID
com.xuexiang.xhttp2.R$color: int primary_text_disabled_material_dark
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: com.jakewharton.disklrucache.DiskLruCache$Editor this$1
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMinor
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: long emitted
androidx.activity.R$dimen: int notification_large_icon_width
com.xuexiang.xhttp2.R$color: int abc_primary_text_material_dark
com.google.gson.internal.LinkedTreeMap$EntrySet$1: com.google.gson.internal.LinkedTreeMap$EntrySet this$1
com.appspa.demo.R$attr: int windowMinWidthMajor
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: java.lang.Object singleItem
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: io.reactivex.Scheduler scheduler
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean defaultItemChecked
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: boolean done
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: io.reactivex.internal.fuseable.QueueSubscription qs
com.appspa.update.R$style: int Base_Widget_AppCompat_ActivityChooserView
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: java.lang.Object item
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: long serialVersionUID
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_DIV
com.appspa.update.R$style: int Base_V23_Theme_AppCompat
androidx.fragment.app.FragmentState: java.lang.String mClassName
com.appspa.demo.R$attr: int textAppearanceLargePopupMenu
androidx.core.text.TextDirectionHeuristicsCompat: int STATE_FALSE
androidx.appcompat.R$drawable: int notification_bg_low
androidx.core.text.util.FindAddress: java.lang.String HOUSE_POST_DELIM
com.xuexiang.xhttp2.R$anim: int abc_slide_in_bottom
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: boolean fused
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: boolean outputFused
com.appspa.demo.R$attr: int colorControlHighlight
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: java.util.Collection buffer
com.appspa.demo.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.viewpager.widget.PagerTitleStrip: int TEXT_SPACING
androidx.vectordrawable.animated.R$layout: int notification_template_custom_big
androidx.lifecycle.LiveData$1: androidx.lifecycle.LiveData this$0
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String PNG_CONTENT_TYPE
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.appcompat.resources.R$id: int icon
com.appspa.demo.R$integer: int abc_config_activityShortDur
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext
io.reactivex.internal.subscribers.InnerQueuedSubscriber: io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport parent
androidx.appcompat.R$styleable: int FontFamilyFont_fontStyle
com.appspa.update.AppSpace: com.appspa.update.listener.OnUpdateFailureListener mOnUpdateFailureListener
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: long serialVersionUID
androidx.collection.CircularArray: int mHead
androidx.appcompat.R$style: int Base_DialogWindowTitle_AppCompat
com.appspa.update.R$styleable: int ActionBar_contentInsetStartWithNavigation
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: org.reactivestreams.Subscriber downstream
com.appspa.update.R$dimen: int disabled_alpha_material_light
com.xuexiang.xhttp2.request.BaseRequest: android.content.Context mContext
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: io.reactivex.disposables.Disposable timer
androidx.appcompat.R$id: int screen
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mOriginalClickableSpanId
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: int count
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: io.reactivex.BackpressureOverflowStrategy strategy
androidx.loader.R$attr: int alpha
com.appspa.demo.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference mInternalScopeRef
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber parent
com.appspa.demo.R$attr: int listDividerAlertDialog
io.reactivex.internal.observers.DisposableLambdaObserver: io.reactivex.functions.Consumer onSubscribe
androidx.core.R$id: int accessibility_custom_action_10
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
com.xuexiang.xhttp2.R$attr: int contentInsetEnd
okhttp3.internal.cache2.Relay: okio.ByteString metadata
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTintMode
com.xuexiang.xhttp2.R$drawable: int abc_ic_star_black_16dp
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_STANDARD
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: io.reactivex.functions.BiPredicate comparer
androidx.core.app.NotificationCompat: int STREAM_DEFAULT
org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.ref.SoftReference toStringCacheRef
io.reactivex.internal.operators.observable.ObservableDoOnEach: io.reactivex.functions.Consumer onError
com.appspa.demo.R$styleable: int MenuItem_android_enabled
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: java.lang.Integer LEFT_CLOSE
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: int complete
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.internal.operators.maybe.MaybeToPublisher[] $VALUES
com.jakewharton.disklrucache.DiskLruCache: java.io.OutputStream NULL_OUTPUT_STREAM
androidx.fragment.app.FragmentStatePagerAdapter: java.util.ArrayList mSavedState
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: boolean done
androidx.appcompat.R$id: int list_item
androidx.appcompat.R$styleable: int MenuItem_numericModifiers
androidx.appcompat.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
io.reactivex.internal.operators.flowable.FlowableThrottleLatest: java.util.concurrent.TimeUnit unit
androidx.drawerlayout.R$id: int notification_background
androidx.core.R$id: int accessibility_custom_action_23
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.viewpager.widget.ViewPager: java.util.Comparator COMPARATOR
androidx.activity.R$id: int accessibility_custom_action_16
androidx.appcompat.widget.ActivityChooserModel: java.lang.String DEFAULT_HISTORY_FILE_NAME
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: boolean active
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionBar
androidx.appcompat.widget.Toolbar: java.lang.String TAG
androidx.activity.R$dimen: int notification_small_icon_background_padding
io.reactivex.subjects.UnicastSubject: boolean delayError
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Tooltip
io.reactivex.subscribers.ResourceSubscriber: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: java.util.concurrent.TimeUnit unit
androidx.loader.R$dimen: int notification_top_pad_large_text
com.xuexiang.xhttp2.R$id: int edit_query
androidx.appcompat.view.menu.ListMenuPresenter: int mId
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.collection.ArraySet: int BASE_SIZE
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet
com.xuexiang.xhttp2.R$color: int abc_primary_text_disable_only_material_dark
androidx.core.R$styleable: int GradientColor_android_centerY
androidx.activity.R$styleable: int GradientColorItem_android_offset
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber: boolean done
androidx.core.text.util.FindAddress$ZipRange: int mHigh
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.appspa.update.entity.DownloadEntity: boolean mIsShowNotification
androidx.appcompat.widget.ToolbarWidgetWrapper: android.widget.Spinner mSpinner
com.appspa.update.R$attr: int ratingBarStyleIndicator
androidx.vectordrawable.R$styleable: int GradientColor_android_startY
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.appcompat.view.menu.CascadingMenuPopup: int ITEM_LAYOUT
androidx.core.app.NotificationCompat$CarExtender: android.graphics.Bitmap mLargeIcon
com.appspa.update.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.appcompat.R$drawable: int abc_list_selector_holo_light
androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material
com.appspa.update.R$id: int accessibility_custom_action_3
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: boolean done
com.appspa.update.widget.NumberProgressBar: android.graphics.Paint mReachedBarPaint
androidx.core.app.NotificationCompat$Builder: java.lang.String mSortKey
com.xuexiang.xhttp2.cache.core.LruDiskCache: java.io.File mDiskDir
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed: int bufferSize
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String declaringTypeName
androidx.appcompat.resources.R$dimen: int notification_action_text_size
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: long serialVersionUID
androidx.appcompat.resources.R$styleable: int FontFamilyFont_fontWeight
org.aspectj.lang.SoftException: java.lang.Throwable inner
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: java.util.concurrent.atomic.AtomicReference subscribers
io.reactivex.internal.operators.flowable.FlowableScanSeed: io.reactivex.functions.BiFunction accumulator
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix
io.reactivex.internal.operators.parallel.ParallelFilterTry: io.reactivex.parallel.ParallelFlowable source
okhttp3.Response$Builder: okhttp3.Response priorResponse
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
io.reactivex.internal.operators.flowable.FlowableFlatMap: io.reactivex.functions.Function mapper
androidx.activity.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: long serialVersionUID
androidx.appcompat.resources.R$styleable: int FontFamilyFont_font
com.appspa.update.R$string: int space_lab_new_version_size
io.reactivex.internal.operators.single.SingleCache: java.lang.Object value
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind PERTHIS
androidx.viewpager.R$id: int action_text
androidx.appcompat.R$style: int Base_Widget_AppCompat_TextView
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: io.reactivex.functions.Predicate predicate
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
androidx.fragment.R$dimen: int compat_control_corner_material
androidx.appcompat.R$id: int group_divider
com.appspa.demo.R$string: int abc_menu_ctrl_shortcut_label
com.appspa.update.R$string: int abc_menu_ctrl_shortcut_label
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Button
androidx.appcompat.R$drawable: int abc_tab_indicator_material
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode[] $VALUES
io.reactivex.processors.PublishProcessor: java.lang.Throwable error
com.appspa.demo.R$styleable: int ActionBar_contentInsetRight
io.reactivex.internal.operators.flowable.FlowableCache$Node: io.reactivex.internal.operators.flowable.FlowableCache$Node next
com.zhy.http.okhttp.request.OkHttpRequest: int id
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: int bufferSize
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.fragment.R$id: int title
androidx.core.widget.TextViewCompat$OreoCallback: boolean mCanUseMenuBuilderReferences
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupVisible
com.appspa.update.R$styleable: int[] AppCompatTextView
com.xuexiang.xhttp2.R$dimen: int abc_text_size_title_material
androidx.collection.ArraySet: java.lang.Object[] OBJECT
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable: io.reactivex.Observable parent
com.appspa.update.R$string: int abc_menu_shift_shortcut_label
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_ASSIST_READING_CONTEXT
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic mTextDir
okio.ForwardingSink: okio.Sink delegate
com.google.gson.stream.JsonReader: int PEEKED_NULL
androidx.vectordrawable.R$attr: int fontWeight
com.appspa.update.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.appspa.update.widget.UpdateDialog: android.widget.TextView mTvUpdateInfo
com.appspa.demo.R$styleable: int MenuView_android_verticalDivider
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int titleMargins
androidx.appcompat.app.ActionBarDrawerToggle: boolean mDrawerSlideAnimationEnabled
com.xuexiang.xhttp2.R$layout: int abc_alert_dialog_material
com.appspa.demo.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
androidx.viewpager.widget.PagerTabStrip$1: androidx.viewpager.widget.PagerTabStrip this$0
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapSupport parent
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: long serialVersionUID
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mBackgroundTint
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe: io.reactivex.Flowable source
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
androidx.appcompat.R$style: int Base_V22_Theme_AppCompat_Light
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
com.appspa.update.R$color: int switch_thumb_disabled_material_light
com.xuexiang.xhttp2.R$dimen: int abc_text_size_button_material
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.core.provider.SelfDestructiveThread: android.os.HandlerThread mThread
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.core.text.util.FindAddress$ZipRange: int mException2
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.widget.ListAdapter mAdapter
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_Switch
com.appspa.demo.R$id: int text
androidx.appcompat.R$styleable: int Toolbar_logo
com.appspa.update.R$drawable: int notification_bg_low_pressed
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: java.util.concurrent.atomic.AtomicBoolean firstRequest
androidx.core.text.util.FindAddress: java.util.regex.Pattern sSuffixedNumberRe
io.reactivex.internal.observers.ForEachWhileObserver: io.reactivex.functions.Action onComplete
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_HINT_CONTENT_INTENT_LAUNCHES_ACTIVITY
androidx.appcompat.view.menu.MenuWrapperICS: androidx.core.internal.view.SupportMenu mWrappedObject
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.widget.Toolbar this$0
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: io.reactivex.functions.Function rightEnd
com.appspa.demo.R$color: int notification_icon_bg_color
com.appspa.demo.R$style: int Widget_AppCompat_CompoundButton_CheckBox
com.xuexiang.xhttp2.R$styleable: int MenuItem_actionProviderClass
androidx.activity.R$id: int accessibility_action_clickable_span
androidx.appcompat.widget.ScrollingTabContainerView: boolean mAllowCollapse
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mActualBounds
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int NO_REQUEST_NO_VALUE
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_track
com.xuexiang.xhttp2.R$attr: int dialogTheme
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.appspa.demo.R$string: int space_tip_permissions_reject
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusX
com.appspa.demo.R$id: int tabMode
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
okhttp3.internal.http.StatusLine: int code
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_trackTintMode
androidx.fragment.app.FragmentTabHost: android.content.Context mContext
okhttp3.internal.cache.DiskLruCache: int appVersion
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: long serialVersionUID
com.google.gson.internal.bind.ArrayTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.xuexiang.xhttp2.cache.RxCache$2: java.lang.String val$key
com.appspa.update.R$styleable: int View_theme
io.reactivex.internal.operators.completable.CompletableResumeNext: io.reactivex.CompletableSource source
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle: java.lang.Object seed
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.view.menu.MenuBuilder: boolean mOptionalIconsVisible
okhttp3.ResponseBody$BomAwareReader: okio.BufferedSource source
com.appspa.update.R$attr: int contentInsetStartWithNavigation
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: androidx.appcompat.widget.ActionMenuView this$0
com.xuexiang.xhttp2.R$attr: int listPreferredItemPaddingStart
io.reactivex.internal.operators.flowable.FlowableRetryWhen$RetryWhenSubscriber: long serialVersionUID
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Medium
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$styleable: int[] RecycleListView
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.internal.util.AtomicThrowable errors
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator parent
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: org.reactivestreams.Publisher source
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber$ConsumerIndexHolder: io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber parent
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mAlwaysInTapRegion
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther this$0
com.appspa.demo.R$style: int TextAppearance_AppCompat_Caption
io.reactivex.internal.operators.flowable.FlowableInterval: io.reactivex.Scheduler scheduler
com.appspa.update.R$id: int accessibility_custom_action_31
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: java.util.concurrent.atomic.AtomicBoolean once
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: java.util.concurrent.atomic.AtomicReference inner
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int SHOW_PRESS
com.google.gson.internal.ConstructorConstructor$2: com.google.gson.InstanceCreator val$rawTypeCreator
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: java.lang.Object defaultValue
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] mFonts
io.reactivex.internal.operators.single.SingleDelay: java.util.concurrent.TimeUnit unit
com.appspa.update.R$attr: int checkedTextViewStyle
com.appspa.update.R$id: int spacer
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_31
com.xuexiang.xhttp2.R$layout: int abc_activity_chooser_view_list_item
retrofit2.converter.gson.GsonRequestBodyConverter: com.google.gson.Gson gson
com.appspa.update.entity.UpdateError$ERROR: int INSTALL_FAILED
io.reactivex.internal.operators.flowable.FlowableInternalHelper$TimedReplay: io.reactivex.Scheduler scheduler
okhttp3.CacheControl: int maxStaleSeconds
io.reactivex.internal.operators.flowable.FlowableWindowTimed: long maxSize
androidx.loader.content.ModernAsyncTask: java.util.concurrent.FutureTask mFuture
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver[] observers
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN
com.appspa.update.R$attr: int alphabeticModifiers
retrofit2.Response: java.lang.Object body
com.appspa.update.R$id: int progress_circular
retrofit2.HttpServiceMethod$SuspendForResponse: retrofit2.CallAdapter callAdapter
com.xuexiang.xhttp2.R$attr: int spinnerDropDownItemStyle
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: int index
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: long serialVersionUID
com.appspa.update.R$layout: int notification_template_part_chronometer
androidx.loader.R$layout: int notification_template_part_time
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: boolean delayError
com.appspa.update.R$string: int space_connecting_service
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.PorterDuff$Mode mTickMarkTintMode
io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt: io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt INSTANCE
com.appspa.update.entity.UpdateError$ERROR: int PROMPT_UNKNOWN
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: long serialVersionUID
com.appspa.demo.R$id: int submit_area
com.xuexiang.xhttp2.R$styleable: int SearchView_searchHintIcon
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
androidx.vectordrawable.animated.R$drawable: int notification_bg_normal_pressed
androidx.vectordrawable.R$styleable: int GradientColor_android_centerY
com.appspa.update.R$id: int notification_main_column
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Caption
androidx.core.graphics.PaintCompat: java.lang.String TOFU_STRING
com.appspa.demo.R$dimen: int abc_control_padding_material
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int mExpandedIndex
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.appspa.demo.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver: io.reactivex.Observer observer
com.appspa.demo.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.core.view.InputDeviceCompat: int SOURCE_KEYBOARD
com.xuexiang.xhttp2.cookie.PersistentCookieStore: android.content.SharedPreferences cookiePrefs
com.appspa.update.proxy.impl.DefaultUpdateChecker$3: com.appspa.update.proxy.IUpdateProxy val$updateProxy
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer: io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable this$0
androidx.appcompat.app.AlertController$ButtonHandler: int MSG_DISMISS_DIALOG
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: boolean restartTimerOnMaxSize
androidx.fragment.R$id: int accessibility_custom_action_14
com.appspa.update.R$drawable: int abc_cab_background_top_material
androidx.appcompat.resources.R$id: int accessibility_custom_action_6
com.appspa.update.R$styleable: int FontFamily_fontProviderPackage
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mSubText
androidx.loader.R$styleable: int GradientColorItem_android_color
okhttp3.CipherSuite: java.lang.String javaName
io.reactivex.subjects.SerializedSubject: boolean emitting
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.appspa.update.R$id: int multiply
com.xuexiang.xhttp2.cache.RxCache$Builder: boolean isDiskCache
com.appspa.update.R$style: int TextAppearance_AppCompat_Display2
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener
com.appspa.demo.R$color: int background_material_dark
okhttp3.Cache$Entry: java.lang.String requestMethod
androidx.viewpager.R$dimen: int notification_small_icon_size_as_large
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: android.app.PendingIntent mReadPendingIntent
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: long serialVersionUID
androidx.appcompat.view.menu.MenuBuilder: int mDefaultShowAsAction
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Consumer errorHandler
com.appspa.demo.R$attr: int buttonBarPositiveButtonStyle
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: io.reactivex.Observer downstream
com.appspa.demo.R$style: int Base_Widget_AppCompat_PopupMenu
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BYTE
io.reactivex.internal.operators.completable.CompletableAmb$Amb: io.reactivex.disposables.CompositeDisposable set
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.update.R$id: int tv_update_info
com.google.gson.Gson$2: com.google.gson.Gson this$0
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: java.lang.Throwable error
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: androidx.collection.SimpleArrayMap mMenus
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView
com.appspa.demo.R$id: int accessibility_custom_action_27
com.google.gson.internal.bind.TypeAdapters$32: com.google.gson.TypeAdapter val$typeAdapter
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_textStyle
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: io.reactivex.ObservableSource other
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: io.reactivex.internal.disposables.SequentialDisposable task
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: io.reactivex.internal.disposables.ArrayCompositeDisposable frc
com.appspa.demo.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.appspa.update.R$attr: int iconTint
androidx.loader.R$string: int status_bar_notification_info_overflow
com.appspa.update.R$styleable: int AppCompatImageView_srcCompat
io.reactivex.internal.operators.observable.ObservableJoin: io.reactivex.functions.Function rightEnd
com.appspa.update.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch
androidx.appcompat.widget.DropDownListView: int mSelectionBottomPadding
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: org.reactivestreams.Subscription upstream
okhttp3.Cookie$Builder: java.lang.String name
okhttp3.Response$Builder: okhttp3.Response networkResponse
androidx.core.widget.AutoScrollHelper: float RELATIVE_UNSPECIFIED
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody$CountingSink: long lastRefreshUiTime
io.reactivex.internal.operators.single.SingleDoOnEvent: io.reactivex.SingleSource source
com.appspa.update.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.update.R$drawable: int notification_action_background
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int numericModifiers
com.google.gson.stream.JsonWriter: boolean lenient
com.appspa.demo.R$attr: int fontProviderFetchTimeout
com.appspa.demo.R$dimen: int abc_edit_text_inset_top_material
androidx.appcompat.R$layout: int abc_activity_chooser_view_list_item
androidx.core.app.NotificationCompat$WearableExtender: int UNSET_ACTION_INDEX
com.appspa.update.R$layout: int notification_template_part_time
io.reactivex.subjects.UnicastSubject: java.util.concurrent.atomic.AtomicBoolean once
com.xuexiang.xhttp2.R$drawable: int abc_list_focused_holo
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
io.reactivex.internal.operators.observable.ObservableToListSingle: java.util.concurrent.Callable collectionSupplier
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CUT
androidx.customview.widget.ViewDragHelper: int mDragState
com.appspa.update.R$id: int search_edit_frame
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter
androidx.appcompat.view.ContextThemeWrapper: int mThemeResource
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorPrimaryDark
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.xuexiang.xhttp2.R$attr: int buttonStyleSmall
com.appspa.demo.R$drawable: int abc_tab_indicator_material
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField
com.xuexiang.xhttp2.R$attr: int textAppearanceLargePopupMenu
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext: java.lang.Object t
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence mLabel
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_4
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
com.google.gson.stream.JsonReader: int lineStart
androidx.core.widget.AutoScrollHelper: int DEFAULT_MINIMUM_VELOCITY_DIPS
com.appspa.update.R$attr: int tooltipForegroundColor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$attr: int dividerHorizontal
io.reactivex.internal.operators.flowable.FlowableConcatMapEager: io.reactivex.internal.util.ErrorMode errorMode
androidx.loader.app.LoaderManagerImpl$LoaderObserver: androidx.loader.content.Loader mLoader
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: java.util.concurrent.TimeUnit unit
androidx.customview.widget.ViewDragHelper: int EDGE_BOTTOM
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_23
com.appspa.update.service.DownloadService: androidx.core.app.NotificationCompat$Builder mBuilder
com.appspa.update.R$dimen: int hint_pressed_alpha_material_dark
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SERVICE
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarButtonStyle
androidx.fragment.app.ListFragment: android.view.View mListContainer
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: java.lang.Throwable error
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: int index
okhttp3.OkHttpClient: int callTimeout
androidx.appcompat.R$attr: int actionModeFindDrawable
androidx.activity.R$styleable: int FontFamily_fontProviderFetchTimeout
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: long index
io.reactivex.internal.operators.observable.ObservableSkipLastTimed: io.reactivex.Scheduler scheduler
io.reactivex.internal.functions.Functions$BoundedConsumer: int bufferSize
androidx.core.widget.AutoScrollHelper: boolean mEnabled
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: io.reactivex.disposables.CompositeDisposable set
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: org.reactivestreams.Publisher fallback
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3: java.lang.String val$key
io.reactivex.observers.BaseTestConsumer: java.util.List values
androidx.appcompat.view.menu.ActionMenuItem: int mGroup
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.xuexiang.xhttp2.R$attr: int textAppearanceListItemSecondary
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mStackedBackground
com.google.gson.stream.JsonScope: int EMPTY_OBJECT
androidx.appcompat.app.AppCompatDelegateImpl$4: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.content.res.AppCompatResources: java.util.WeakHashMap sColorStateCaches
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String ABORT_CREATION_METHOD
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: boolean inputExhausted
com.xuexiang.xhttp2.R$id: int search_go_btn
com.appspa.update.R$style: int Base_Widget_AppCompat_Button_Small
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$styleable: int DrawerArrowToggle_gapBetweenBars
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: int bufferSize
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber this$0
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver: boolean done
androidx.core.util.TimeUtils: java.lang.Object sFormatSync
androidx.fragment.app.FragmentTransaction: int OP_ADD
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: java.util.concurrent.atomic.AtomicLong missedRequested
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver: boolean done
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: boolean active
com.appspa.update.widget.UpdateDialogActivity: com.appspa.update.entity.UpdateEntity mUpdateEntity
io.reactivex.internal.operators.completable.CompletableToSingle: java.lang.Object completionValue
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: java.lang.Object defaultValue
io.reactivex.internal.operators.maybe.MaybeZipArray: io.reactivex.functions.Function zipper
com.appspa.update.R$dimen: int space_button_min_height
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_PRAGMA
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node right
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTooltipText
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: io.reactivex.functions.Function close
com.appspa.demo.R$styleable: int ActionBar_popupTheme
com.appspa.update.R$string: int abc_capital_on
com.xuexiang.xhttp2.R$attr: int windowActionBarOverlay
com.appspa.demo.R$style: int Base_V28_Theme_AppCompat
io.reactivex.processors.ReplayProcessor$ReplaySubscription: java.lang.Object index
io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache: io.reactivex.internal.operators.completable.CompletableCache this$0
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable: io.reactivex.functions.Function mapper
androidx.appcompat.R$styleable: int AppCompatTheme_controlBackground
androidx.viewpager.R$drawable: int notification_tile_bg
io.reactivex.internal.schedulers.ExecutorScheduler: java.util.concurrent.Executor executor
androidx.appcompat.R$attr: int actionModePopupWindowStyle
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String CONTENT_MIME_TYPES_KEY
okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Display2
com.xuexiang.xhttp2.R$color: int highlighted_text_material_dark
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: io.reactivex.internal.operators.flowable.FlowableGroupJoin$JoinSupport parent
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: int index
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.app.AlertDialog mDialog
androidx.fragment.app.FragmentTransitionCompat21$4: android.graphics.Rect val$epicenter
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: long serialVersionUID
androidx.appcompat.R$styleable: int GradientColor_android_startColor
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.Boolean mIsGroupConversation
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText mWrapped
androidx.core.app.NotificationCompat$Action$Builder: android.os.Bundle mExtras
androidx.core.text.BidiFormatter$DirectionalityEstimator: java.lang.CharSequence text
com.appspa.update.R$styleable: int MenuItem_iconTintMode
com.appspa.demo.R$attr: int windowFixedHeightMajor
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler NEW_THREAD
androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs
com.xuexiang.xhttp2.XHttp: long mCacheMaxSize
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: long serialVersionUID
androidx.core.R$id: int time
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.content.Context mContext
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.MenuBuilder val$menu
androidx.loader.R$styleable: int GradientColor_android_type
com.appspa.update.R$drawable: int abc_text_cursor_material
androidx.loader.R$id: int icon_group
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_fontFamily
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback
androidx.appcompat.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.operators.flowable.FlowableFromPublisher: org.reactivestreams.Publisher publisher
com.appspa.update.widget.NumberProgressBar: boolean mDrawUnreachedBar
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: io.reactivex.functions.Predicate predicate
com.appspa.demo.R$attr: int track
com.appspa.update.R$styleable: int ActionBar_homeAsUpIndicator
com.appspa.update.R$style: int XUpdate_DialogTheme
com.appspa.update.R$dimen: int abc_action_bar_stacked_max_height
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
okhttp3.internal.http2.Http2Connection$PingRunnable: int payload1
retrofit2.RequestFactory$Builder: boolean gotQuery
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: io.reactivex.Scheduler scheduler
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup
com.appspa.demo.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: int size
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: java.lang.Thread thread
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator
androidx.appcompat.widget.MenuPopupWindow: java.lang.reflect.Method sSetTouchModalMethod
io.reactivex.subjects.UnicastSubject: io.reactivex.internal.observers.BasicIntQueueDisposable wip
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: long serialVersionUID
io.reactivex.internal.util.AppendOnlyLinkedArrayList: int offset
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$2: com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy this$0
com.appspa.update.R$drawable: int abc_btn_switch_to_on_mtrl_00012
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_NoActionBar
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray: io.reactivex.CompletableSource[] sources
androidx.core.view.NestedScrollingChildHelper: android.view.View mView
androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS
okhttp3.Cookie: boolean persistent
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_THUMBS_UP
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: java.util.concurrent.Executor executor
androidx.core.content.res.FontResourcesParserCompat: int NORMAL_WEIGHT
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte[] DIR_TYPE_CACHE
com.appspa.demo.R$attr: int allowStacking
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: long serialVersionUID
com.appspa.demo.R$id: int up
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String JPG_CONTENT_TYPE
com.appspa.update.R$style: int TextAppearance_AppCompat_Display3
com.appspa.demo.R$styleable: int AppCompatTextView_drawableTopCompat
androidx.appcompat.resources.R$id: int accessibility_custom_action_12
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast: java.util.concurrent.atomic.AtomicInteger wip
androidx.appcompat.R$id: int normal
com.appspa.demo.R$dimen: int tooltip_margin
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onScheduleHandler
okhttp3.internal.cache2.Relay: okio.Buffer buffer
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: java.util.concurrent.atomic.AtomicReference inner
androidx.core.R$drawable: int notification_template_icon_bg
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int MAX_NUM_POINTS
androidx.core.util.PatternsCompat: java.lang.String PATH_AND_QUERY
com.google.gson.internal.bind.TypeAdapters$35: java.lang.Class val$clazz
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: boolean requested
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_enabled
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo mSetIndicatorInfo
com.appspa.update.utils.ShellUtils$CommandResult: int result
com.appspa.demo.R$attr: int checkedTextViewStyle
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String FORMAT_HTTP_DATA
com.appspa.demo.R$attr: int numericModifiers
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Display1
com.xuexiang.xhttp2.request.BaseRequest: int mRetryCount
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedReplayCallable: io.reactivex.Flowable parent
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$style: int TextAppearance_AppCompat_Inverse
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: io.reactivex.MaybeSource source
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: long serialVersionUID
androidx.appcompat.R$drawable: int abc_ic_clear_material
androidx.appcompat.R$styleable: int PopupWindow_android_popupAnimationStyle
androidx.activity.R$id: int accessibility_custom_action_24
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: int consumed
androidx.appcompat.R$id: int src_over
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: boolean done
com.xuexiang.xhttp2.R$drawable: int abc_textfield_activated_mtrl_alpha
androidx.appcompat.R$style: int AlertDialog_AppCompat
com.xuexiang.xhttp2.R$styleable: int[] CompoundButton
com.appspa.update.AppSpace: com.appspa.update.proxy.IFileEncryptor mFileEncryptor
androidx.core.R$id: int accessibility_custom_action_4
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_HEADING
androidx.appcompat.widget.Toolbar: int mTitleTextAppearance
com.xuexiang.xhttp2.R$attr: int ratingBarStyleIndicator
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: java.lang.reflect.Field val$field
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.ImageView mIconView
io.reactivex.internal.operators.observable.ObservableZip: io.reactivex.functions.Function zipper
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder mRemote
com.appspa.update.R$color: int dim_foreground_material_dark
androidx.viewpager.widget.ViewPager$4: androidx.viewpager.widget.ViewPager this$0
androidx.appcompat.view.menu.ListMenuItemView: android.widget.LinearLayout mContent
androidx.core.app.NotificationCompat: java.lang.String EXTRA_COMPACT_ACTIONS
com.zhy.http.okhttp.request.CountingRequestBody: com.zhy.http.okhttp.request.CountingRequestBody$CountingSink countingSink
com.appspa.demo.R$dimen: int abc_text_size_headline_material
androidx.loader.R$layout: int notification_template_part_chronometer
io.reactivex.internal.operators.observable.ObservableWindow: long count
com.google.gson.GsonBuilder: int dateStyle
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTint
androidx.customview.R$styleable: int GradientColor_android_endX
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_dialogTheme
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: long timespan
com.google.gson.GsonBuilder: java.lang.String datePattern
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: java.util.concurrent.CompletableFuture future
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TINT_LIST
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: boolean cancelled
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: long serialVersionUID
com.appspa.demo.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.appcompat.R$attr: int searchHintIcon
com.appspa.demo.R$layout: int select_dialog_singlechoice_material
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver: io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver this$0
androidx.loader.R$id: int action_image
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineChildTop
retrofit2.RequestFactory$Builder: java.lang.reflect.Type[] parameterTypes
androidx.core.R$attr: int alpha
io.reactivex.subjects.CompletableSubject$CompletableDisposable: io.reactivex.CompletableObserver downstream
androidx.appcompat.widget.SuggestionsAdapter: int REFINE_NONE
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.xuexiang.xhttp2.R$drawable: int abc_switch_track_mtrl_alpha
androidx.fragment.app.FragmentTransaction: int mPopEnterAnim
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$styleable: int ViewBackgroundHelper_backgroundTintMode
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: int otherState
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mTimeoutMs
androidx.appcompat.R$attr: int listPreferredItemPaddingRight
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_END_KEY
com.xuexiang.xhttp2.R$dimen: int abc_dropdownitem_icon_width
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy YIELD
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.drawable.Drawable mTickMark
androidx.activity.R$drawable: int notification_icon_background
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: java.util.concurrent.TimeUnit unit
io.reactivex.internal.observers.DeferredScalarObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.widget.UpdateDialogFragment: com.appspa.update.proxy.IPrompterProxy sIPrompterProxy
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_PopupMenu
androidx.appcompat.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.xuexiang.xhttp2.R$dimen: int abc_text_size_subtitle_material_toolbar
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_10
androidx.appcompat.R$styleable: int SwitchCompat_switchTextAppearance
com.appspa.update.R$attr: int listMenuViewStyle
com.appspa.update.R$dimen: int notification_content_margin_start
okhttp3.internal.http2.Huffman$Node: int symbol
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver: boolean done
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_fontVariationSettings
okio.Buffer: byte[] DIGITS
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable: io.reactivex.SingleSource source
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE
org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor: java.util.concurrent.Flow$Processor flow
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_reached_color
com.appspa.demo.R$drawable: int abc_ic_go_search_api_material
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: boolean cancelled
androidx.core.graphics.drawable.IconCompat: int mType
com.xuexiang.xhttp2.R$styleable: int ButtonBarLayout_allowStacking
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$1: com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy this$0
org.aspectj.runtime.internal.CFlowStack: org.aspectj.runtime.internal.cflowstack.ThreadStackFactory tsFactory
androidx.appcompat.R$attr: int actionBarPopupTheme
com.appspa.update.R$drawable: int notification_bg_normal_pressed
com.appspa.update.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
androidx.vectordrawable.animated.R$color: int notification_icon_bg_color
androidx.appcompat.widget.SwitchCompat: boolean mSplitTrack
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton
androidx.appcompat.R$attr: int windowActionBar
okhttp3.internal.http2.Huffman: byte[] CODE_LENGTHS
okhttp3.Response: java.lang.String message
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder mRemote
androidx.appcompat.widget.AppCompatTextHelper: int SANS
com.appspa.update.R$string: int abc_searchview_description_query
io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn: io.reactivex.SingleObserver observer
io.reactivex.internal.operators.observable.ObservableZipIterable: io.reactivex.functions.BiFunction zipper
io.reactivex.internal.operators.single.SingleTimeout: io.reactivex.SingleSource source
io.reactivex.observers.ResourceObserver: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_UNSPECIFIED
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: boolean cancelled
androidx.appcompat.R$styleable: int[] ButtonBarLayout
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: io.reactivex.internal.util.AtomicThrowable errors
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: long produced
okhttp3.internal.cache2.Relay: okio.Source upstream
retrofit2.DefaultCallAdapterFactory$1: java.util.concurrent.Executor val$executor
com.appspa.update.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.appspa.update.R$attr: int maxButtonHeight
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext
com.appspa.update.R$styleable: int AppCompatTheme_viewInflaterClass
androidx.vectordrawable.R$attr: int fontProviderQuery
androidx.appcompat.R$layout: int abc_cascading_menu_item_layout
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ButtonBar
okhttp3.Headers$Builder: java.util.List namesAndValues
com.zhy.http.okhttp.request.RequestCall: com.zhy.http.okhttp.request.OkHttpRequest okHttpRequest
com.appspa.demo.R$color: int secondary_text_default_material_light
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: boolean disposed
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_left
com.xuexiang.xhttp2.R$style: int AlertDialog_AppCompat_Light
androidx.appcompat.R$styleable: int ActionMenuItemView_android_minWidth
com.appspa.demo.R$styleable: int[] MenuView
com.appspa.update.R$attr: int actionModeSelectAllDrawable
com.xuexiang.xhttp2.R$id: int shortcut
androidx.collection.SparseArrayCompat: int[] mKeys
androidx.appcompat.app.WindowDecorActionBar$TabImpl: android.graphics.drawable.Drawable mIcon
io.reactivex.android.MainThreadDisposable$1: io.reactivex.android.MainThreadDisposable this$0
androidx.customview.R$dimen: int notification_right_side_padding_top
androidx.cursoradapter.widget.SimpleCursorAdapter: androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder mViewBinder
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderCerts
androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged
com.appspa.demo.R$styleable: int TextAppearance_android_textColor
com.google.gson.internal.bind.JsonTreeWriter: java.lang.String pendingName
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: long serialVersionUID
androidx.appcompat.R$drawable: int notification_bg_low_normal
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.String THREAD_NAME_STEM
io.reactivex.internal.operators.flowable.FlowableTimeInterval: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: java.util.concurrent.atomic.AtomicLong index
com.appspa.demo.R$drawable: int abc_switch_track_mtrl_alpha
com.appspa.update.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.google.gson.internal.bind.TypeAdapters$34: java.lang.Class val$base
okio.Pipe: okio.Buffer buffer
com.appspa.update.service.DownloadService$FileDownloadCallBack$2: float val$progress
com.zhy.http.okhttp.request.OtherRequest: java.lang.String method
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: java.lang.Object resource
com.xuexiang.xhttp2.R$styleable: int[] ActionBar
com.appspa.demo.R$style: int Base_ThemeOverlay_AppCompat
androidx.appcompat.resources.R$drawable: int abc_vector_test
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: java.util.concurrent.atomic.AtomicReference current
com.xuexiang.xhttp2.R$styleable: int SearchView_goIcon
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: int consumed
androidx.appcompat.R$layout: int abc_dialog_title_material
androidx.core.text.PrecomputedTextCompat$Params: android.text.PrecomputedText$Params mWrapped
com.xuexiang.xhttp2.XHttp: java.lang.String mSubUrl
io.reactivex.internal.subscribers.BoundedSubscriber: int limit
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: io.reactivex.internal.util.AtomicThrowable error
androidx.activity.ImmLeaksCleaner: int INIT_SUCCESS
io.reactivex.internal.operators.completable.CompletableAndThenCompletable: io.reactivex.CompletableSource next
com.xuexiang.xhttp2.model.HttpParams$FileWrapper: com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack responseCallBack
com.google.gson.internal.bind.TypeAdapters$27: java.lang.String YEAR
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterable: java.lang.Iterable sources
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_NONE
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar_TabView
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_measureWithLargestChild
androidx.core.view.GravityCompat: int RELATIVE_LAYOUT_DIRECTION
com.xuexiang.xhttp2.R$attr: int ratingBarStyleSmall
com.appspa.update.widget.NumberProgressBar: float mDrawTextStart
retrofit2.Retrofit$Builder: okhttp3.Call$Factory callFactory
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: io.reactivex.internal.disposables.SequentialDisposable upstream
androidx.appcompat.view.menu.MenuAdapter: boolean mOverflowOnly
com.appspa.update.R$attr: int buttonIconDimen
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.content.ClipDescription mDescription
androidx.loader.content.ModernAsyncTask: int CORE_POOL_SIZE
com.xuexiang.xhttp2.R$layout: int abc_screen_content_include
com.appspa.update.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.appspa.demo.R$styleable: int AppCompatTheme_actionButtonStyle
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: io.reactivex.disposables.Disposable timer
com.appspa.update.R$style: int Widget_AppCompat_EditText
com.xuexiang.xhttp2.R$attr: int contentInsetStart
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_INPUT
okhttp3.internal.ws.WebSocketWriter$FrameSink: okhttp3.internal.ws.WebSocketWriter this$0
androidx.vectordrawable.R$styleable: int GradientColor_android_gradientRadius
okio.Segment: okio.Segment prev
okhttp3.OkHttpClient: boolean followSslRedirects
io.reactivex.internal.operators.flowable.FlowableCache: java.util.concurrent.atomic.AtomicBoolean once
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_11
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: java.util.concurrent.atomic.AtomicReference timer
com.appspa.update.R$id: int accessibility_custom_action_11
com.appspa.demo.R$drawable: int spa_bg_app_top
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.vectordrawable.R$attr: int ttcIndex
io.reactivex.internal.operators.flowable.FlowablePublish: org.reactivestreams.Publisher onSubscribe
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTint
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_SENDER
io.reactivex.internal.operators.single.SingleFromCallable: java.util.concurrent.Callable callable
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: io.reactivex.functions.Consumer disposeState
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: long size
com.appspa.update.R$attr: int progressBarPadding
androidx.appcompat.R$drawable: int btn_checkbox_checked_mtrl
okhttp3.OkHttpClient$Builder: boolean followRedirects
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onConnectableObservableAssembly
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: long serialVersionUID
androidx.appcompat.R$bool: int abc_action_bar_embed_tabs
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mSystemInflater
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ListView
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function IDENTITY
com.appspa.demo.R$drawable: int abc_btn_switch_to_on_mtrl_00001
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: boolean mDefaultIsRtl
okhttp3.OkHttpClient: okhttp3.Cache cache
com.xuexiang.xhttp2.request.BaseRequest: okhttp3.OkHttpClient mOkHttpClient
com.appspa.demo.R$styleable: int Toolbar_contentInsetEndWithActions
androidx.fragment.R$styleable: int GradientColor_android_startColor
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: io.reactivex.Observer downstream
androidx.appcompat.app.AlertController$3: androidx.appcompat.app.AlertController this$0
io.reactivex.internal.operators.flowable.FlowableGroupBy: int bufferSize
com.appspa.update.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer: java.util.List buffer
androidx.customview.R$styleable: int GradientColorItem_android_offset
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_CONNECTION
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay: io.reactivex.Flowable parent
androidx.core.graphics.PathSegment: float mStartFraction
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: io.reactivex.internal.operators.observable.ObservableCache parent
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: int scalarLimit
androidx.viewpager.R$attr: int fontStyle
com.xuexiang.xhttp2.R$layout: int select_dialog_multichoice_material
androidx.appcompat.widget.ThemeUtils: int[] ACTIVATED_STATE_SET
androidx.core.graphics.ColorUtils: double XYZ_WHITE_REFERENCE_X
androidx.appcompat.R$id: int accessibility_custom_action_14
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.cache.RxCache$5: java.lang.String val$key
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.appspa.update.R$styleable: int AppCompatTextHelper_android_drawableEnd
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: long index
okio.Okio$4: java.net.Socket val$socket
androidx.appcompat.R$styleable: int AppCompatTheme_searchViewStyle
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache
com.xuexiang.xhttp2.R$styleable: int SearchView_submitBackground
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair: java.lang.Object second
com.xuexiang.xhttp2.R$id: int italic
com.appspa.update.R$attr: int titleTextColor
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: int prefetch
com.appspa.update.entity.PromptEntity: boolean mIgnoreDownloadError
androidx.appcompat.widget.ActivityChooserView: android.view.View mActivityChooserContent
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mShowingMenus
com.xuexiang.xhttp2.R$dimen: int compat_button_padding_horizontal_material
io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver: io.reactivex.functions.Consumer onAfterNext
io.reactivex.internal.operators.observable.ObservableReplay$Replay: io.reactivex.observables.ConnectableObservable co
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: long serialVersionUID
androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier: java.util.concurrent.Callable boundarySupplier
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: int STATE_ACTIVE
androidx.appcompat.R$string: int abc_searchview_description_submit
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme mTheme
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_APPLICATION
com.appspa.update.R$id: int accessibility_custom_action_16
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableItem
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: boolean delayError
com.google.gson.stream.JsonReader: int[] stack
com.appspa.demo.R$styleable: int SwitchCompat_android_textOff
retrofit2.RequestFactory$Builder: java.util.regex.Pattern PARAM_URL_REGEX
com.appspa.update.R$drawable: int abc_ic_star_half_black_48dp
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$Completion: io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber this$0
com.xuexiang.xhttp2.R$attr: int textAppearancePopupMenuHeader
com.appspa.update.R$attr: int goIcon
com.appspa.demo.R$color: int primary_text_disabled_material_dark
io.reactivex.internal.schedulers.ExecutorScheduler: boolean interruptibleWorker
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_ttcIndex
io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor$MulticastSubscription[] EMPTY
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: java.lang.Throwable error
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.appcompat.R$drawable: int abc_list_focused_holo
androidx.core.view.MotionEventCompat: int ACTION_POINTER_INDEX_MASK
com.appspa.update.R$style: int Base_Theme_AppCompat_Light
com.google.gson.JsonIOException: long serialVersionUID
com.xuexiang.xhttp2.R$anim: int abc_slide_out_top
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: long timeskip
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_NAME
com.appspa.update.R$drawable: int abc_btn_borderless_material
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutNumericModifiers
com.appspa.update.R$drawable: int abc_list_divider_mtrl_alpha
com.appspa.update.widget.UpdateDialogActivity: android.widget.TextView mTvIgnore
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: java.util.Collection buffer
androidx.appcompat.widget.Toolbar: boolean mCollapsible
io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object ASYNC_DISPOSED
com.appspa.demo.R$attr: int homeAsUpIndicator
androidx.core.view.inputmethod.InputConnectionCompat$2: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener
androidx.activity.R$drawable: int notification_bg_low
com.appspa.update.R$dimen: int abc_dialog_padding_top_material
com.appspa.update.R$dimen: int hint_alpha_material_light
androidx.appcompat.widget.SearchView: android.widget.ImageView mCollapsedIcon
com.appspa.demo.R$id: int ifRoom
androidx.appcompat.app.AlertController$AlertParams: boolean[] mCheckedItems
com.appspa.demo.R$style: int ThemeOverlay_AppCompat_Light
androidx.appcompat.R$layout: int abc_list_menu_item_layout
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_ALPHA
androidx.appcompat.widget.SwitchCompat: boolean mHasTrackTintMode
io.reactivex.internal.operators.completable.CompletableFromObservable: io.reactivex.ObservableSource observable
androidx.customview.R$attr: int fontProviderQuery
io.reactivex.processors.ReplayProcessor$ReplaySubscription: boolean cancelled
androidx.appcompat.R$layout: int select_dialog_item_material
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapSingleObserver: java.util.concurrent.atomic.AtomicReference parent
androidx.appcompat.widget.ScrollingTabContainerView: android.view.animation.Interpolator sAlphaInterpolator
com.appspa.update.R$attr: int xnpb_reached_color
androidx.appcompat.resources.R$styleable: int GradientColor_android_startY
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: long serialVersionUID
com.appspa.update.R$styleable: int SearchView_queryBackground
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ProgressBar
com.appspa.update.R$color: int abc_hint_foreground_material_light
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: io.reactivex.Observer downstream
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo
com.appspa.update.R$attr: int textAppearanceListItem
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: int bufferSize
com.xuexiang.xhttp2.R$id: int search_voice_btn
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.DownloadEntity mDownloadEntity
com.appspa.update.R$dimen: int abc_action_bar_default_padding_end_material
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: boolean connected
androidx.core.text.PrecomputedTextCompat: android.text.Spannable mText
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: java.util.concurrent.atomic.AtomicReference current
android.support.v4.os.ResultReceiver: android.os.Handler mHandler
com.appspa.update.R$styleable: int AppCompatTheme_actionMenuTextColor
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther: org.reactivestreams.Publisher main
com.appspa.update.R$attr: int colorSwitchThumbNormal
androidx.core.app.NotificationCompat: int FLAG_ONLY_ALERT_ONCE
androidx.core.view.MotionEventCompat: int AXIS_HAT_X
androidx.activity.R$id: int action_image
com.appspa.demo.R$styleable: int SearchView_closeIcon
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: int maxConcurrency
androidx.appcompat.R$id: int accessibility_custom_action_31
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mItem
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: io.reactivex.internal.util.AtomicThrowable error
com.appspa.update.service.DownloadService: android.app.NotificationManager mNotificationManager
io.reactivex.processors.UnicastProcessor: io.reactivex.internal.subscriptions.BasicIntQueueSubscription wip
androidx.loader.R$drawable: int notify_panel_notification_icon_bg
com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility: com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility VISIBLE
io.reactivex.internal.operators.observable.ObservableTimeout: io.reactivex.ObservableSource firstTimeoutIndicator
retrofit2.RequestBuilder: boolean hasBody
androidx.appcompat.widget.AppCompatSpinner: android.graphics.Rect mTempRect
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: int bufferSize
androidx.core.text.BidiFormatter: java.lang.String LRM_STRING
com.appspa.demo.R$styleable: int Toolbar_maxButtonHeight
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: io.reactivex.MaybeObserver downstream
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.arch.core.executor.DefaultTaskExecutor: java.util.concurrent.ExecutorService mDiskIO
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: io.reactivex.Scheduler scheduler
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
androidx.appcompat.R$id: int scrollView
androidx.appcompat.widget.TooltipPopup: int[] mTmpAnchorPos
androidx.appcompat.R$color: int material_blue_grey_900
com.xuexiang.xhttp2.cache.RxCache: long diskMaxSize
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method warnIfOpenMethod
com.appspa.update.entity.UpdateEntity: android.os.Parcelable$Creator CREATOR
androidx.core.text.util.FindAddress$ZipRange: int mLow
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2
com.xuexiang.xhttp2.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
androidx.vectordrawable.animated.R$id: int text2
com.appspa.update.R$id: int accessibility_custom_action_5
io.reactivex.internal.operators.observable.ObservablePublish$PublishSource: java.util.concurrent.atomic.AtomicReference curr
com.xuexiang.xhttp2.R$styleable: int MenuGroup_android_checkableBehavior
androidx.lifecycle.Transformations$2$1: androidx.lifecycle.Transformations$2 this$0
com.zhy.http.okhttp.builder.OkHttpRequestBuilder: java.util.Map params
com.appspa.demo.R$attr: int actionModeShareDrawable
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
androidx.core.R$id: int notification_main_column
androidx.fragment.R$id: int tag_accessibility_clickable_spans
androidx.appcompat.widget.ActionBarContainer: boolean mIsSplit
androidx.customview.R$drawable: int notification_bg_normal
io.reactivex.internal.operators.observable.ObservableCollectSingle: java.util.concurrent.Callable initialSupplier
androidx.appcompat.app.AlertController: int mMultiChoiceItemLayout
androidx.appcompat.app.AlertController$3: android.view.View val$top
androidx.core.R$attr: int ttcIndex
com.xuexiang.xhttp2.R$id: int radio
com.google.gson.Gson: int timeStyle
com.google.gson.internal.Excluder: int modifiers
androidx.core.app.AppOpsManagerCompat: int MODE_ERRORED
androidx.appcompat.view.SupportMenuInflater$MenuState: int defaultItemCategory
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: org.reactivestreams.Subscriber downstream
androidx.activity.R$id: int accessibility_custom_action_13
androidx.core.app.NotificationCompat$Builder: int mColor
androidx.core.graphics.ColorUtils: int MIN_ALPHA_SEARCH_MAX_ITERATIONS
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling SKIP
com.appspa.demo.R$styleable: int ActionBar_contentInsetStartWithNavigation
androidx.core.widget.NestedScrollView: int mNestedYOffset
com.zhy.http.okhttp.callback.FileCallBack$1: long val$total
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay: int bufferSize
com.appspa.update.R$styleable: int GradientColor_android_centerX
com.appspa.demo.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
androidx.appcompat.widget.ResourceManagerInternal: java.lang.String PLATFORM_VD_CLAZZ
com.xuexiang.xhttp2.R$style: int Base_V22_Theme_AppCompat_Light
androidx.appcompat.resources.R$id: int accessibility_custom_action_19
com.appspa.demo.R$styleable: int ActionBar_elevation
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mCustomView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
com.appspa.update.R$style: int Widget_AppCompat_DropDownItem_Spinner
androidx.fragment.R$layout: int notification_template_part_time
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: io.reactivex.internal.fuseable.QueueDisposable qd
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_REMOTE_INPUTS
com.appspa.demo.R$style: int Widget_AppCompat_SeekBar
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEXT_LINES
com.appspa.demo.R$styleable: int Toolbar_android_minHeight
io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver: io.reactivex.subjects.PublishSubject subject
retrofit2.ParameterHandler$Query: retrofit2.Converter valueConverter
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty: io.reactivex.ObservableSource other
androidx.appcompat.R$anim: int abc_slide_in_top
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$style: int Platform_V25_AppCompat
androidx.appcompat.resources.R$styleable: int GradientColor_android_centerColor
com.xuexiang.xhttp2.R$attr: int buttonGravity
com.appspa.update.R$styleable: int AppCompatTheme_ratingBarStyle
androidx.core.view.inputmethod.InputConnectionCompat$1: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
retrofit2.RequestFactory: java.lang.reflect.Method method
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: long serialVersionUID
androidx.core.text.util.LinkifyCompat$LinkSpec: int start
androidx.fragment.R$id: int chronometer
com.zhy.http.okhttp.https.HttpsUtils$MyTrustManager: javax.net.ssl.X509TrustManager defaultTrustManager
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
okhttp3.internal.cache2.Relay: boolean complete
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
androidx.appcompat.widget.SearchView$4: androidx.appcompat.widget.SearchView this$0
com.google.gson.internal.bind.TypeAdapters$26$1: com.google.gson.TypeAdapter val$dateTypeAdapter
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_DESCRIPTION_INTEROP_KEY
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.appspa.demo.R$id: int accessibility_custom_action_25
androidx.appcompat.widget.LinearLayoutCompat: int mDividerHeight
androidx.appcompat.app.AlertController: android.view.View mView
androidx.viewpager.widget.ViewPager: float mLastOffset
androidx.appcompat.R$color: int bright_foreground_material_light
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe: io.reactivex.Observable source
com.google.gson.internal.LinkedHashTreeMap: int modCount
androidx.appcompat.widget.ActivityChooserView: android.graphics.drawable.Drawable mActivityChooserContentBackground
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mArrowShaftLength
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_ttcIndex
com.appspa.update.R$dimen: int abc_dialog_min_width_major
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: long count
androidx.appcompat.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode DEFAULT
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status RUNNING
androidx.versionedparcelable.VersionedParcelStream: int mCount
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: io.reactivex.subjects.UnicastSubject window
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
androidx.appcompat.widget.SwitchCompat: int mSwitchWidth
com.xuexiang.xhttp2.R$string: int abc_shareactionprovider_share_with
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.appspa.update.R$string: int space_error_check_apk_cache_dir_empty
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: boolean cancelled
androidx.vectordrawable.R$styleable: int GradientColor_android_startColor
com.jakewharton.disklrucache.DiskLruCache: long maxSize
com.appspa.demo.R$attr: int alertDialogCenterButtons
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: long serialVersionUID
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.ref.WeakReference mView
com.appspa.update.UpdateManager$Builder: com.appspa.update.proxy.IUpdateHttpService updateHttpService
androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd
com.appspa.update.entity.PromptEntity: android.os.Parcelable$Creator CREATOR
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mTotalDuration
com.appspa.demo.R$styleable: int StateListDrawable_android_visible
androidx.customview.widget.ExploreByTouchHelper: androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: android.view.animation.Interpolator mInterpolator
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_VALUE_TYPE
com.appspa.demo.R$styleable: int Toolbar_title
com.appspa.update.R$attr: int panelBackground
com.xuexiang.xhttp2.R$styleable: int Toolbar_logo
com.appspa.update.entity.UpdateError$ERROR: int CHECK_APK_CACHE_DIR_EMPTY
androidx.core.provider.SelfDestructiveThread$2: androidx.core.provider.SelfDestructiveThread this$0
androidx.appcompat.R$styleable: int[] CompoundButton
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: boolean cancelled
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_CHOICES
io.reactivex.processors.MulticastProcessor$MulticastSubscription: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$style: int Theme_AppCompat_DayNight_DarkActionBar
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mSystemContext
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber this$0
com.appspa.demo.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
com.appspa.update.R$color: int dim_foreground_disabled_material_dark
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: android.app.PendingIntent mReplyPendingIntent
io.reactivex.internal.operators.parallel.ParallelFilterTry$1: int[] $SwitchMap$io$reactivex$parallel$ParallelFailureHandling
com.appspa.update.R$attr: int closeIcon
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: int prefetch
androidx.appcompat.R$layout: int notification_template_custom_big
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany: java.lang.Iterable otherIterable
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterator: java.util.Iterator sit
androidx.appcompat.R$attr: int lineHeight
io.reactivex.internal.operators.observable.ObservableCache: io.reactivex.internal.operators.observable.ObservableCache$Node head
androidx.core.app.NotificationCompat$Action$Builder: int mIcon
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: androidx.appcompat.widget.ActionMenuPresenter this$0
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver otherObserver
io.reactivex.internal.operators.flowable.FlowableBuffer: java.util.concurrent.Callable bufferSupplier
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod
androidx.core.app.Person: boolean mIsBot
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError: io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver this$0
com.appspa.demo.R$attr: int progressBarPadding
androidx.appcompat.widget.ActivityChooserModel: java.util.Map sDataModelRegistry
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: long serialVersionUID
org.aspectj.runtime.reflect.FieldSignatureImpl: java.lang.Class fieldType
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: io.reactivex.functions.Function rightEnd
com.xuexiang.xhttp2.R$dimen: int abc_list_item_padding_horizontal_material
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.VelocityTracker mVelocityTracker
com.appspa.update.R$color: int error_color_material_dark
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: io.reactivex.internal.util.AtomicThrowable errors
okio.Buffer$UnsafeCursor: okio.Buffer buffer
com.appspa.update.R$dimen: int abc_search_view_preferred_width
com.xuexiang.xhttp2.R$drawable: int abc_seekbar_thumb_material
com.appspa.update.service.DownloadService$FileDownloadCallBack$1: com.appspa.update.service.DownloadService$FileDownloadCallBack this$1
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver observer2
androidx.appcompat.app.AlertController$AlertParams$2: int mLabelIndex
androidx.appcompat.R$dimen: int abc_button_inset_vertical_material
okhttp3.internal.ws.RealWebSocket: java.lang.String key
androidx.core.widget.PopupWindowCompat: boolean sGetWindowLayoutTypeMethodAttempted
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter
androidx.appcompat.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.appspa.update.R$attr: int listPreferredItemPaddingRight
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeCloseDrawable
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: long serialVersionUID
androidx.appcompat.widget.TooltipCompatHandler: int mHoverSlop
com.appspa.update.R$id: int action_bar_title
androidx.lifecycle.Lifecycling: int REFLECTIVE_CALLBACK
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.viewpager.widget.ViewPager: int CLOSE_ENOUGH
com.appspa.update.R$attr: int autoSizeStepGranularity
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: androidx.core.text.PrecomputedTextCompat$Params mParams
androidx.loader.R$dimen: int notification_small_icon_background_padding
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: io.reactivex.CompletableObserver downstream
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: boolean serialized
androidx.drawerlayout.R$styleable: int[] FontFamilyFont
androidx.core.view.PointerIconCompat: int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW
io.reactivex.internal.operators.flowable.FlowableCache: io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription[] TERMINATED
androidx.customview.widget.ViewDragHelper: int DIRECTION_ALL
io.reactivex.schedulers.Timed: java.lang.Object value
com.xuexiang.xhttp2.cache.RxCache$2: com.xuexiang.xhttp2.cache.RxCache this$0
androidx.vectordrawable.animated.R$id: int tag_unhandled_key_event_manager
com.google.gson.stream.JsonReader: int PEEKED_BEGIN_OBJECT
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_fontVariationSettings
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Light_ActionBar
okio.ByteString: char[] HEX_DIGITS
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager$TwilightState mTwilightState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mCachedRootAlpha
androidx.core.widget.AutoScrollHelper: float NO_MIN
com.appspa.demo.R$attr: int drawerArrowStyle
com.appspa.demo.R$dimen: int notification_main_column_padding_top
androidx.appcompat.R$styleable: int AppCompatTheme_switchStyle
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: java.util.concurrent.atomic.AtomicLong requested
androidx.core.R$id: int accessibility_custom_action_31
io.reactivex.internal.queue.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference consumerNode
androidx.core.text.PrecomputedTextCompat: java.lang.Object sLock
io.reactivex.internal.operators.single.SingleDoFinally: io.reactivex.SingleSource source
androidx.appcompat.R$styleable: int StateListDrawableItem_android_drawable
androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.FragmentManager mFragmentManager
androidx.appcompat.R$drawable: int abc_list_selector_background_transition_holo_light
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.completable.CompletableLift: io.reactivex.CompletableSource source
androidx.drawerlayout.R$styleable: int GradientColor_android_startColor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: java.util.Collection buffer
com.appspa.demo.R$attr: int colorSwitchThumbNormal
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: io.reactivex.internal.util.ErrorMode errorMode
com.xuexiang.xhttp2.request.BaseRequest: int mRetryIncreaseDelay
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: int STATE_INACTIVE
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.fragment.R$id: int notification_background
com.appspa.update.R$attr: int queryHint
com.google.gson.internal.bind.TypeAdapters$27: java.lang.String MINUTE
androidx.vectordrawable.R$integer: int status_bar_notification_info_maxnum
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mMinimumFlingVelocity
okhttp3.Cache$CacheRequestImpl: okhttp3.internal.cache.DiskLruCache$Editor editor
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat
io.reactivex.internal.operators.observable.ObservableTakeWhile: io.reactivex.functions.Predicate predicate
androidx.viewpager.widget.ViewPager: int mPageMargin
okhttp3.Dispatcher: java.util.Deque runningSyncCalls
com.appspa.update.R$attr: int drawableRightCompat
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int size
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_INT
com.appspa.update.R$styleable: int SwitchCompat_switchTextAppearance
androidx.appcompat.R$styleable: int AppCompatTheme_dropDownListViewStyle
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE
com.appspa.update.widget.UpdateDialog: android.widget.Button mBtnBackgroundUpdate
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: int index
androidx.appcompat.view.menu.StandardMenuPopup: int mDropDownGravity
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$attr: int elevation
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode END
com.xuexiang.xhttp2.R$attr: int actionOverflowButtonStyle
androidx.appcompat.R$styleable: int MenuItem_alphabeticModifiers
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier mTextClassifier
androidx.appcompat.R$dimen: int compat_notification_large_icon_max_height
androidx.core.R$id: int action_divider
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_text_offset
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: io.reactivex.Observer downstream
okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache
com.appspa.demo.R$styleable: int SwitchCompat_switchMinWidth
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext: io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver this$0
androidx.core.text.ICUCompat: java.lang.reflect.Method sAddLikelySubtagsMethod
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTopCompat
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int MAX_ACTIVITY_COUNT_UNLIMITED
com.appspa.update.R$style: int ThemeOverlay_AppCompat_Dialog
com.appspa.demo.R$styleable: int ActionBar_customNavigationLayout
com.appspa.demo.R$attr: int toolbarStyle
com.xuexiang.xhttp2.R$attr: int closeItemLayout
androidx.appcompat.R$dimen: int highlight_alpha_material_dark
com.appspa.demo.R$layout: int abc_list_menu_item_radio
androidx.loader.R$id: int italic
androidx.activity.R$styleable: int GradientColor_android_centerX
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Matrix mChildInvertedMatrix
androidx.appcompat.R$attr: int dividerHorizontal
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_29
com.xuexiang.xhttp2.R$attr: int drawableTopCompat
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError: io.reactivex.MaybeSource[] sources
com.appspa.update.UpdateManager: com.appspa.update.service.OnFileDownloadListener mOnFileDownloadListener
io.reactivex.internal.operators.flowable.FlowablePublishMulticast: boolean delayError
androidx.core.text.ICUCompat: java.lang.reflect.Method sGetScriptMethod
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: io.reactivex.SingleObserver downstream
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mDownFocusY
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: boolean hasNext
com.xuexiang.xhttp2.R$attr: int customNavigationLayout
androidx.appcompat.R$id: int uniform
com.appspa.update.R$dimen: int abc_text_size_title_material_toolbar
com.appspa.update.widget.NumberProgressBar: java.lang.String mPrefix
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect mEpicenterBounds
com.appspa.update.R$id: int listMode
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
androidx.core.view.PointerIconCompat: int TYPE_VERTICAL_DOUBLE_ARROW
androidx.activity.R$dimen: int notification_action_icon_size
androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeLeft
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup
androidx.appcompat.widget.SearchView$8: androidx.appcompat.widget.SearchView this$0
io.reactivex.internal.observers.CallbackCompletableObserver: io.reactivex.functions.Action onComplete
androidx.appcompat.widget.AppCompatDrawableManager: boolean DEBUG
androidx.drawerlayout.R$id: int tag_unhandled_key_event_manager
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: io.reactivex.disposables.Disposable upstream
androidx.vectordrawable.R$dimen: int compat_button_padding_vertical_material
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: io.reactivex.internal.disposables.SequentialDisposable serial
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: int OTHER_STATE_HAS_VALUE
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate: io.reactivex.MaybeObserver downstream
com.appspa.demo.R$styleable: int FontFamilyFont_font
com.appspa.demo.R$id: int right_icon
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: io.reactivex.functions.Consumer onAfterSuccess
com.appspa.update.R$styleable: int[] AppCompatTextHelper
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_START
io.reactivex.internal.operators.observable.ObservableRange: int start
com.xuexiang.xhttp2.R$styleable: int ActionBar_hideOnContentScroll
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: long serialVersionUID
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TITLE
io.reactivex.observers.TestObserver$EmptyObserver: io.reactivex.observers.TestObserver$EmptyObserver[] $VALUES
com.xuexiang.xhttp2.R$drawable: int notification_tile_bg
androidx.core.app.SharedElementCallback: int MAX_IMAGE_SIZE
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop: io.reactivex.functions.Consumer onDrop
androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
io.reactivex.internal.operators.flowable.FlowableRepeatUntil: io.reactivex.functions.BooleanSupplier until
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: long produced
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: io.reactivex.subjects.UnicastSubject this$0
com.appspa.demo.R$styleable: int ActionMode_height
retrofit2.Utils$GenericArrayTypeImpl: java.lang.reflect.Type componentType
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: io.reactivex.internal.fuseable.SimpleQueue queue
com.xuexiang.xhttp2.XHttp: int mRetryDelay
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: long serialVersionUID
androidx.core.R$style: int Widget_Compat_NotificationActionContainer
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_REMOTE_INPUT
io.reactivex.processors.BehaviorProcessor: io.reactivex.processors.BehaviorProcessor$BehaviorSubscription[] EMPTY
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: java.util.List[] lists
androidx.core.text.BidiFormatter: int DIR_UNKNOWN
androidx.appcompat.widget.ListPopupWindow: int MATCH_PARENT
androidx.core.view.animation.PathInterpolatorApi14: float PRECISION
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.request.BaseRequest: long mConnectTimeout
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: java.lang.Object v2
com.appspa.demo.R$styleable: int AppCompatTheme_listDividerAlertDialog
androidx.appcompat.R$styleable: int FontFamilyFont_fontWeight
com.appspa.update.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.appcompat.R$dimen: int abc_dialog_padding_top_material
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.appcompat.R$dimen: int compat_button_inset_vertical_material
com.xuexiang.xhttp2.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.appcompat.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: io.reactivex.ObservableSource source
com.appspa.update._AppSpace: java.util.Map sCheckMap
io.reactivex.internal.operators.flowable.FlowableConcatMap$SimpleScalarSubscription: java.lang.Object value
com.xuexiang.xhttp2.R$attr: int track
com.appspa.demo.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
androidx.viewpager.widget.ViewPager: boolean mIsScrollStarted
io.reactivex.internal.operators.flowable.FlowableAll: io.reactivex.functions.Predicate predicate
com.appspa.demo.R$id: int blocking
com.appspa.update.R$attr: int navigationMode
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
com.appspa.demo.R$color: int space_close_line_color
androidx.viewpager.R$layout: int notification_action_tombstone
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sDrawableCacheField
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: io.reactivex.functions.BiFunction reducer
io.reactivex.internal.operators.single.SingleTimeout: io.reactivex.Scheduler scheduler
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarTabBarStyle
io.reactivex.internal.operators.single.SingleAmb: java.lang.Iterable sourcesIterable
okhttp3.internal.http2.Hpack$Reader: int headerCount
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: boolean done
androidx.activity.R$id: int line1
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: long serialVersionUID
androidx.loader.content.Loader: boolean mReset
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$4: com.xuexiang.xhttp2.subsciber.DownloadSubscriber this$0
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MARK_AS_UNREAD
androidx.activity.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: int mSlop
com.xuexiang.xhttp2.R$id: int multiply
androidx.vectordrawable.animated.R$id: int normal
androidx.activity.R$drawable: int notification_bg_low_normal
io.reactivex.internal.operators.maybe.MaybeFromCallable: java.util.concurrent.Callable callable
androidx.appcompat.widget.RtlSpacingHelper: int mRight
androidx.appcompat.resources.R$styleable: int ColorStateListItem_android_color
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] $VALUES
com.appspa.update.R$styleable: int AppCompatImageView_tintMode
androidx.customview.R$id: int tag_unhandled_key_event_manager
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: io.reactivex.Observer downstream
androidx.core.app.SharedElementCallback: android.graphics.Matrix mTempMatrix
com.xuexiang.xhttp2.R$id: int action_menu_divider
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: long serialVersionUID
androidx.appcompat.R$dimen: int abc_text_size_large_material
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_LOAD_ERROR
androidx.appcompat.R$style: int Widget_AppCompat_ActionMode
com.appspa.update.R$style: int TextAppearance_Compat_Notification_Line2
com.appspa.update.widget.UpdateDialogActivity: android.widget.LinearLayout mLlClose
com.appspa.update.R$styleable: int TextAppearance_android_shadowDx
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_9
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: io.reactivex.observers.SerializedObserver serial
com.xuexiang.xhttp2.R$drawable: int abc_scrubber_control_off_mtrl_alpha
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.internal.util.ListAddBiConsumer[] $VALUES
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber[] EMPTY
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction: io.reactivex.functions.Function zipper
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$enteringViews
io.reactivex.internal.operators.single.SingleDoOnSuccess$DoOnSuccess: io.reactivex.internal.operators.single.SingleDoOnSuccess this$0
com.appspa.update.R$dimen: int hint_pressed_alpha_material_light
com.appspa.update.R$styleable: int MenuGroup_android_enabled
org.aspectj.runtime.reflect.SourceLocationImpl: int line
androidx.appcompat.app.AlertController: android.os.Message mButtonNeutralMessage
com.google.gson.internal.bind.DateTypeAdapter: java.util.List dateFormats
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_PopupWindow
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemEnabled
com.xuexiang.xhttp2.R$dimen: int compat_notification_large_icon_max_height
androidx.core.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY
com.appspa.demo.R$dimen: int abc_text_size_small_material
androidx.appcompat.R$attr: int windowMinWidthMinor
io.reactivex.processors.UnicastProcessor: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
androidx.core.R$id: int tag_unhandled_key_listeners
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$style: int TextAppearance_Compat_Notification_Title
androidx.drawerlayout.R$dimen: int notification_small_icon_background_padding
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: java.util.concurrent.atomic.AtomicBoolean once
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary: io.reactivex.ObservableSource boundary
androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActiveDelegates
okhttp3.Address: javax.net.SocketFactory socketFactory
androidx.appcompat.app.AlertController$5: android.view.View val$bottom
com.appspa.demo.R$id: int center_vertical
com.appspa.update.R$attr: int fontProviderFetchStrategy
androidx.appcompat.graphics.drawable.DrawableContainer: int mLastIndex
io.reactivex.internal.subscribers.SubscriberResourceWrapper: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.subscribers.ResourceSubscriber: java.util.concurrent.atomic.AtomicLong missedRequested
io.reactivex.internal.operators.flowable.FlowablePublishAlt: java.util.concurrent.atomic.AtomicReference current
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.appspa.update.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.core.view.MotionEventCompat: int AXIS_SCROLL
androidx.annotation.VisibleForTesting: int PACKAGE_PRIVATE
com.appspa.demo.R$dimen: int space_content_padding
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: long serialVersionUID
com.appspa.update.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.appcompat.widget.ScrollingTabContainerView$1: android.view.View val$tabView
com.appspa.update.R$attr: int iconifiedByDefault
com.appspa.update.UpdateManager: com.appspa.update.proxy.IUpdateParser mIUpdateParser
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: int size
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: java.lang.Object defaultValue
com.appspa.demo.R$anim: int abc_fade_in
io.reactivex.internal.operators.flowable.FlowableBufferTimed: long timespan
io.reactivex.internal.operators.observable.ObservableCache: boolean done
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: long COMPLETE_MASK
com.appspa.demo.R$style: int Widget_AppCompat_PopupWindow
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: java.util.concurrent.atomic.AtomicReference error
androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat sInstance
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate mDelegate
androidx.core.app.JobIntentService: boolean mInterruptIfStopped
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_default_height_material
androidx.appcompat.resources.R$attr: int fontProviderAuthority
androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_LONG_CLICK
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: boolean fused
com.appspa.demo.R$id: int action_bar_activity_content
com.xuexiang.xhttp2.R$color: int primary_material_dark
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.appspa.update.R$styleable: int ActionBar_contentInsetLeft
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: java.lang.Object value
androidx.core.R$styleable: int FontFamily_fontProviderCerts
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: io.reactivex.internal.operators.flowable.FlowableRefCount parent
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_MALFORMED_QUERY
androidx.core.R$id: int accessibility_custom_action_19
androidx.viewpager.R$styleable: int GradientColor_android_centerColor
com.appspa.update.R$dimen: int space_content_line_spacing_extra_size
com.xuexiang.xhttp2.exception.ApiExceptionHandler: com.xuexiang.xhttp2.exception.IExceptionHandler sIExceptionHandler
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: java.util.concurrent.Callable other
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE
com.appspa.update.R$attr: int trackTintMode
androidx.customview.R$drawable: int notification_tile_bg
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: long serialVersionUID
androidx.viewpager.R$id: int right_side
com.appspa.update.R$styleable: int SearchView_iconifiedByDefault
androidx.core.R$styleable: int FontFamilyFont_android_font
androidx.loader.R$styleable: int FontFamilyFont_fontVariationSettings
com.appspa.update.R$attr: int actionBarSplitStyle
androidx.lifecycle.ClassesInfoCache: int CALL_TYPE_NO_ARG
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.util.concurrent.atomic.AtomicReference error
androidx.activity.R$dimen: int compat_notification_large_icon_max_width
com.zhy.http.okhttp.request.PostFormRequest: java.util.List files
com.xuexiang.xhttp2.R$styleable: int[] FontFamily
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.appspa.update.R$string: int abc_shareactionprovider_share_with_application
com.appspa.update.R$style: int Platform_ThemeOverlay_AppCompat_Light
androidx.appcompat.R$id: int tag_transition_group
androidx.appcompat.R$id: int accessibility_action_clickable_span
androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState
com.appspa.demo.R$style: int Base_Theme_AppCompat_DialogWhenLarge
androidx.fragment.app.FragmentManagerImpl$4: androidx.fragment.app.FragmentManagerImpl this$0
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onObservableAssembly
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String INSTALL_SHORTCUT_PERMISSION
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable mIconDrawable
com.appspa.update.R$attr: int xnpb_max
io.reactivex.internal.operators.observable.ObservableGroupBy: boolean delayError
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
com.appspa.demo.R$attr: int tickMark
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.vectordrawable.animated.R$dimen: int notification_large_icon_width
io.reactivex.internal.operators.flowable.FlowableLastSingle: org.reactivestreams.Publisher source
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
androidx.customview.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.R$styleable: int[] StateListDrawable
androidx.appcompat.R$string: int abc_activity_chooser_view_see_all
com.xuexiang.xhttp2.R$anim: int abc_fade_out
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener
com.appspa.update.R$styleable: int MenuItem_android_checked
com.appspa.demo.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
retrofit2.ParameterHandler$FieldMap: retrofit2.Converter valueConverter
androidx.core.widget.ContentLoadingProgressBar: java.lang.Runnable mDelayedShow
androidx.fragment.R$id: int accessibility_custom_action_12
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry: io.reactivex.parallel.ParallelFlowable source
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher: io.reactivex.functions.Function mapper
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onComputationHandler
androidx.core.R$id: int title
androidx.core.R$styleable: int[] FontFamily
com.appspa.demo.R$styleable: int SwitchCompat_thumbTint
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
com.appspa.update.R$attr: int textLocale
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int FLAG_IS_OPENING
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper$Callback mCallback
androidx.appcompat.resources.R$id: int accessibility_custom_action_28
androidx.fragment.app.FragmentActivity: boolean mStopped
io.reactivex.internal.operators.flowable.FlowableDematerialize: io.reactivex.functions.Function selector
androidx.appcompat.R$styleable: int AppCompatImageView_tintMode
com.appspa.demo.R$style: int Base_Widget_AppCompat_SearchView
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: java.util.concurrent.Callable bufferSupplier
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$drawable: int notification_template_icon_low_bg
com.xuexiang.xhttp2.transform.HttpSchedulersTransformer: com.xuexiang.xhttp2.model.SchedulerType mSchedulerType
androidx.fragment.app.FragmentState: int mContainerId
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_CONTENT_TYPE
com.appspa.demo.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.activity.R$color: int ripple_material_light
com.appspa.update.R$attr: int backgroundTintMode
com.appspa.demo.R$layout: int abc_search_dropdown_item_icons_2line
io.reactivex.internal.operators.maybe.MaybeAmb: io.reactivex.MaybeSource[] sources
androidx.activity.R$dimen: int notification_top_pad_large_text
androidx.activity.R$dimen: int compat_button_padding_horizontal_material
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.appspa.update.R$styleable: int DrawerArrowToggle_thickness
androidx.viewpager.R$attr: int fontVariationSettings
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_GESTURE_DETECTION_START
com.appspa.update.R$id: int search_close_btn
androidx.core.widget.NestedScrollView: int mLastMotionY
androidx.loader.R$dimen: int compat_control_corner_material
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable: java.lang.Runnable run
androidx.core.widget.CompoundButtonCompat: java.lang.reflect.Field sButtonDrawableField
com.appspa.demo.R$color: int tooltip_background_light
io.reactivex.internal.operators.flowable.FlowableBuffer: int size
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper: int index
androidx.fragment.app.FragmentPagerAdapter: boolean DEBUG
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: java.util.concurrent.atomic.AtomicInteger producerIndex
com.xuexiang.xhttp2.R$string: int abc_menu_ctrl_shortcut_label
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: io.reactivex.CompletableObserver downstream
com.appspa.update.R$styleable: int TextAppearance_android_textColor
com.appspa.demo.R$styleable: int Spinner_android_prompt
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_MESSAGE
com.appspa.update.R$color: int abc_btn_colored_borderless_text_material
com.appspa.update.R$styleable: int ActionBar_homeLayout
androidx.core.provider.SelfDestructiveThread: android.os.Handler$Callback mCallback
retrofit2.Retrofit$Builder: retrofit2.Platform platform
com.xuexiang.xhttp2.R$id: int action_divider
com.xuexiang.xhttp2.R$attr: int selectableItemBackgroundBorderless
androidx.appcompat.widget.SearchView: boolean mVoiceButtonEnabled
androidx.vectordrawable.R$drawable: int notify_panel_notification_icon_bg
androidx.core.provider.FontRequest: java.lang.String mQuery
com.appspa.update.R$attr: int borderlessButtonStyle
com.xuexiang.xhttp2.R$dimen: int abc_text_size_display_1_material
org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11: java.util.Hashtable counters
androidx.appcompat.resources.R$dimen: int notification_media_narrow_margin
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: boolean terminated
com.appspa.update.R$id: int on
androidx.appcompat.widget.ListPopupWindow: int POSITION_PROMPT_ABOVE
com.appspa.demo.R$styleable: int Spinner_android_entries
androidx.appcompat.R$layout: int abc_screen_content_include
androidx.customview.R$id: int time
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_Switch
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.functions.Function onInitMainThreadHandler
com.appspa.update.R$style: int Theme_AppCompat_CompactMenu
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: io.reactivex.Scheduler$Worker worker
androidx.core.content.res.ResourcesCompat$FontCallback$2: int val$reason
androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionX
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: io.reactivex.internal.fuseable.SimpleQueue queue
okhttp3.internal.ws.RealWebSocket$2: okhttp3.internal.ws.RealWebSocket this$0
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: java.util.concurrent.atomic.AtomicReference inner
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver boundaryObserver
okhttp3.internal.ws.WebSocketWriter: boolean isClient
androidx.core.content.FileProvider: java.lang.String ATTR_PATH
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: io.reactivex.functions.BiPredicate comparer
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String EXTRA_SHORTCUT_ID
androidx.appcompat.R$dimen: int abc_search_view_preferred_width
androidx.vectordrawable.R$id: int forever
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.String SHAPE_CLIP_PATH
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableLastSingle: java.lang.Object defaultItem
com.appspa.update.R$style: int TextAppearance_AppCompat_Title
com.appspa.update.R$id: int src_atop
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowOperation: java.lang.Object open
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_unreached_color
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: java.util.concurrent.atomic.AtomicInteger waiting
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification: io.reactivex.functions.Function onErrorMapper
com.xuexiang.xhttp2.R$attr: int actionBarTabBarStyle
com.appspa.demo.R$style: int Theme_AppCompat_Dialog_Alert
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: boolean done
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.view.inputmethod.InputContentInfo mObject
com.appspa.update.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
androidx.core.widget.NestedScrollView: int mMaximumVelocity
androidx.core.app.NotificationCompat$Builder: android.app.Notification mPublicVersion
com.appspa.update.R$style: int TextAppearance_AppCompat_Display1
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: boolean eager
com.appspa.demo.R$styleable: int ActionMode_subtitleTextStyle
androidx.customview.widget.ViewDragHelper: int EDGE_ALL
androidx.loader.content.ModernAsyncTask: java.util.concurrent.atomic.AtomicBoolean mCancelled
com.jakewharton.disklrucache.DiskLruCache$Editor: boolean committed
androidx.appcompat.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.customview.R$layout: int notification_template_icon_group
com.appspa.update.R$attr: int subtitle
androidx.core.widget.AutoScrollHelper: int HORIZONTAL
androidx.core.provider.FontsContractCompat$Columns: java.lang.String ITALIC
com.appspa.demo.R$style: int Widget_AppCompat_Button_Small
androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode
androidx.fragment.app.ListFragment: android.widget.ListAdapter mAdapter
com.appspa.demo.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: io.reactivex.SingleObserver downstream
com.appspa.demo.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.xuexiang.xhttp2.R$dimen: int notification_media_narrow_margin
com.xuexiang.xhttp2.R$dimen: int tooltip_precise_anchor_extra_offset
androidx.core.view.WindowInsetsCompat: java.lang.Object mInsets
androidx.appcompat.R$styleable: int PopupWindow_android_popupBackground
io.reactivex.schedulers.TestScheduler$TestWorker: boolean disposed
androidx.appcompat.R$id: int submit_area
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: io.reactivex.ObservableSource fallback
com.appspa.demo.R$style: int Platform_AppCompat
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: boolean done
okhttp3.FormBody: okhttp3.MediaType CONTENT_TYPE
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: long serialVersionUID
androidx.appcompat.R$style: int Platform_AppCompat
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer ERROR_CONSUMER
com.appspa.update.widget.UpdateDialogFragment: com.appspa.update.entity.UpdateEntity mUpdateEntity
androidx.appcompat.widget.ListPopupWindow: int mDropDownGravity
androidx.appcompat.widget.ThemeUtils: int[] PRESSED_STATE_SET
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_WHEN
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
androidx.vectordrawable.R$id: int text2
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: io.reactivex.SingleSource source
okhttp3.Cache$Entry: okhttp3.Handshake handshake
androidx.appcompat.resources.R$id: int accessibility_custom_action_24
com.appspa.update.widget.NumberProgressBar: boolean mDrawReachedBar
com.google.gson.stream.JsonReader: int PEEKED_FALSE
org.aspectj.runtime.reflect.SignatureImpl: boolean useCache
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnGestureListener mListener
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable: long time
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicLong windows
com.appspa.update.R$attr: int measureWithLargestChild
androidx.core.util.PatternsCompat: java.lang.String PUNYCODE_TLD
io.reactivex.internal.operators.flowable.FlowableReduceWithSingle: java.util.concurrent.Callable seedSupplier
com.appspa.demo.R$id: int tag_accessibility_pane_title
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableBottomTint
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: long serialVersionUID
com.google.gson.JsonArray: java.util.List elements
com.xuexiang.xhttp2.R$attr: int actionBarPopupTheme
okhttp3.Handshake: java.util.List localCertificates
com.appspa.demo.R$color: int switch_thumb_material_light
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
org.aspectj.runtime.reflect.StringMaker: org.aspectj.runtime.reflect.StringMaker shortStringMaker
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator: io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver this$0
okio.GzipSource: okio.InflaterSource inflaterSource
io.reactivex.internal.operators.parallel.ParallelConcatMap: io.reactivex.parallel.ParallelFlowable source
com.xuexiang.xhttp2.R$attr: int editTextColor
androidx.core.view.PointerIconCompat: int TYPE_HORIZONTAL_DOUBLE_ARROW
io.reactivex.internal.operators.observable.ObservableRefCount: int n
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost
com.appspa.demo.R$attr: int windowMinWidthMinor
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
androidx.appcompat.view.menu.CascadingMenuPopup: int mLastPosition
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ItemDelayFunction: io.reactivex.functions.Function itemDelay
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$SubjectWork: boolean open
androidx.core.app.NotificationCompat$Builder: java.lang.String mShortcutId
com.appspa.demo.R$dimen: int abc_action_button_min_width_overflow_material
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver inner
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: java.util.concurrent.atomic.AtomicInteger wip
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
org.aspectj.runtime.reflect.SourceLocationImpl: java.lang.String fileName
androidx.core.content.res.ComplexColorCompat: android.content.res.ColorStateList mColorStateList
androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.content.Context mContext
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: java.util.concurrent.ScheduledExecutorService executor
io.reactivex.internal.operators.single.SingleZipArray$SingletonArrayFunc: io.reactivex.internal.operators.single.SingleZipArray this$0
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: io.reactivex.functions.BiFunction generator
okhttp3.Dispatcher: java.lang.Runnable idleCallback
io.reactivex.disposables.ReferenceDisposable: long serialVersionUID
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
androidx.appcompat.R$styleable: int GradientColor_android_endY
androidx.appcompat.R$styleable: int AppCompatTheme_buttonStyleSmall
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: boolean done
androidx.vectordrawable.R$id: int accessibility_custom_action_24
com.appspa.update.R$attr: int showAsAction
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: io.reactivex.disposables.Disposable upstream
androidx.vectordrawable.R$id: int accessibility_custom_action_9
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: org.aspectj.lang.reflect.DeclareAnnotation$Kind kind
androidx.versionedparcelable.VersionedParcelStream: boolean mIgnoreParcelables
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_LINK_URI_KEY
com.appspa.update._AppSpace: android.os.Handler sMainHandler
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: org.reactivestreams.Subscriber downstream
androidx.customview.R$id: int action_container
com.appspa.demo.R$id: int accessibility_custom_action_17
com.appspa.demo.R$drawable: int abc_scrubber_track_mtrl_alpha
androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: io.reactivex.internal.util.AtomicThrowable errors
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch
androidx.core.text.PrecomputedTextCompat$Params: int mBreakStrategy
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner this$0
com.appspa.update.R$drawable: int abc_text_select_handle_right_mtrl_dark
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter INET_ADDRESS
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: boolean mainDone
com.appspa.update.entity.DownloadEntity: java.lang.String mTip
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String packageName
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.subscribers.DefaultSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$attr: int displayOptions
com.appspa.demo.R$id: int action_bar_spinner
com.xuexiang.xhttp2.R$style: int Base_Animation_AppCompat_Tooltip
com.appspa.demo.R$styleable: int MenuItem_android_checked
io.reactivex.subjects.SerializedSubject: boolean done
androidx.activity.R$id: int accessibility_custom_action_20
androidx.viewpager.R$dimen: int notification_top_pad_large_text
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: boolean done
retrofit2.RequestFactory$Builder: boolean gotBody
androidx.core.app.NotificationCompat: int COLOR_DEFAULT
io.reactivex.internal.operators.observable.ObservableAll: io.reactivex.functions.Predicate predicate
com.xuexiang.xhttp2.R$attr: int goIcon
com.zhy.http.okhttp.request.OtherRequest: okhttp3.MediaType MEDIA_TYPE_PLAIN
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_CONTENT_DISPOSITION
com.appspa.update.R$dimen: int hint_alpha_material_dark
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionMode
retrofit2.Retrofit$Builder: java.util.concurrent.Executor callbackExecutor
androidx.appcompat.R$style: int TextAppearance_AppCompat_Menu
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.reflect.Type responseType
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim
com.appspa.demo.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.vectordrawable.animated.R$drawable: int notification_bg_low_pressed
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: org.reactivestreams.Subscriber[] subscribers
com.appspa.update.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.appcompat.resources.R$id: int tag_transition_group
com.xuexiang.xhttp2.R$color: int switch_thumb_material_light
com.xuexiang.xhttp2.R$styleable: int AlertDialog_listLayout
androidx.viewpager.widget.PagerTitleStrip: android.widget.TextView mNextText
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: boolean done
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderPackage
androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader
com.appspa.demo.R$style: int Theme_AppCompat_Dialog
retrofit2.converter.gson.GsonRequestBodyConverter: java.nio.charset.Charset UTF_8
io.reactivex.subscribers.SafeSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$dimen: int notification_action_icon_size
com.appspa.demo.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
androidx.core.app.FrameMetricsAggregator: int COMMAND_INDEX
com.xuexiang.xhttp2.R$attr: int searchViewStyle
androidx.vectordrawable.R$dimen: int notification_main_column_padding_top
com.xuexiang.xhttp2.R$attr: int textAppearanceListItem
com.appspa.update.R$styleable: int FontFamilyFont_android_ttcIndex
com.appspa.update.R$drawable: int abc_ic_star_black_16dp
androidx.appcompat.R$attr: int switchTextAppearance
androidx.core.text.TextUtilsCompat: java.lang.String HEBR_SCRIPT_SUBTAG
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: long serialVersionUID
com.appspa.update.R$drawable: int abc_list_focused_holo
androidx.fragment.app.ListFragment: int INTERNAL_EMPTY_ID
androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService mService
io.reactivex.internal.operators.maybe.MaybeFromAction: io.reactivex.functions.Action action
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_REPEAT_COUNT
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableSwitchMap: io.reactivex.functions.Function mapper
androidx.core.view.PointerIconCompat: int TYPE_ARROW
io.reactivex.internal.operators.observable.ObservableDelay: long delay
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: io.reactivex.disposables.Disposable upstream
androidx.drawerlayout.R$styleable: int GradientColor_android_startY
androidx.core.app.NotificationCompat$Action$Builder: android.app.PendingIntent mIntent
androidx.core.text.util.LinkifyCompat$LinkSpec: java.lang.String url
com.xuexiang.xhttp2.R$string: int abc_searchview_description_clear
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: io.reactivex.functions.Predicate predicate
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutTask: long idx
com.appspa.demo.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.appspa.demo.R$attr: int actionModeBackground
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: org.reactivestreams.Subscription upstream
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2
com.xuexiang.xhttp2.R$drawable: int abc_list_selector_disabled_holo_light
com.appspa.demo.R$attr: int checkboxStyle
com.xuexiang.xhttp2.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
io.reactivex.internal.operators.flowable.FlowableMapNotification: io.reactivex.functions.Function onNextMapper
androidx.core.content.ContextCompat: java.lang.Object sLock
okhttp3.internal.platform.OptionalMethod: java.lang.Class[] methodParams
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$drawable: int abc_ratingbar_small_material
androidx.appcompat.R$attr: int actionModeCloseDrawable
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver parent
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: boolean done
androidx.appcompat.R$styleable: int Toolbar_subtitle
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon
com.appspa.demo.R$style: int Base_AlertDialog_AppCompat_Light
io.reactivex.schedulers.Timed: long time
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: int sourceMode
androidx.appcompat.R$dimen: int abc_list_item_height_large_material
com.google.gson.internal.bind.JsonTreeWriter: java.io.Writer UNWRITABLE_WRITER
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
androidx.core.provider.SelfDestructiveThread: java.lang.Object mLock
com.appspa.update.R$id: int radio
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_text_color
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_27
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.parallel.ParallelFromPublisher: int parallelism
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener
com.appspa.update.widget.UpdateDialog: com.appspa.update.proxy.IPrompterProxy mPrompterProxy
androidx.core.graphics.drawable.RoundedBitmapDrawable: int mTargetDensity
androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: long serialVersionUID
org.aspectj.runtime.reflect.StringMaker: boolean includeModifiers
com.appspa.update.R$dimen: int tooltip_vertical_padding
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: io.reactivex.internal.util.AtomicThrowable error
retrofit2.ParameterHandler$Header: retrofit2.Converter valueConverter
com.appspa.demo.R$attr: int colorBackgroundFloating
com.appspa.update.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
androidx.fragment.app.FragmentManagerNonConfig: java.util.Map mChildNonConfigs
androidx.appcompat.R$style: int Widget_AppCompat_PopupMenu
com.appspa.demo.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: long serialVersionUID
io.reactivex.disposables.CompositeDisposable: boolean disposed
io.reactivex.internal.operators.flowable.FlowableInterval: long period
androidx.viewpager.R$styleable: int GradientColor_android_startColor
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: io.reactivex.Observer downstream
androidx.core.view.MotionEventCompat: int AXIS_GAS
com.appspa.demo.R$styleable: int AppCompatTheme_actionDropDownStyle
com.xuexiang.xhttp2.cache.core.LruMemoryCache: android.util.LruCache mMemoryCache
com.appspa.demo.R$dimen: int abc_action_bar_stacked_max_height
io.reactivex.internal.observers.InnerQueuedObserver: io.reactivex.internal.observers.InnerQueuedObserverSupport parent
androidx.activity.R$color: int secondary_text_default_material_light
androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_FILTER_KEY_EVENTS
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator parent
androidx.appcompat.R$attr: int spinnerDropDownItemStyle
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Light
com.xuexiang.xhttp2.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.appspa.demo.R$id: int accessibility_custom_action_23
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
io.reactivex.internal.util.LinkedArrayList: int size
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: boolean done
com.appspa.update.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
io.reactivex.internal.operators.single.SingleEquals: io.reactivex.SingleSource second
androidx.appcompat.R$attr: int actionBarSplitStyle
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_content_inset_material
retrofit2.RequestBuilder: okhttp3.Request$Builder requestBuilder
com.xuexiang.xhttp2.R$color: int switch_thumb_normal_material_light
com.appspa.update.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
androidx.appcompat.R$attr: int buttonPanelSideLayout
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: int sourceCount
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuBuilder mMenu
com.appspa.update.R$color: int foreground_material_light
okhttp3.Cache$CacheRequestImpl$1: okhttp3.Cache$CacheRequestImpl this$1
androidx.core.R$styleable: int ColorStateListItem_android_alpha
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver otherObserver
io.reactivex.internal.queue.MpscLinkedQueue: java.util.concurrent.atomic.AtomicReference producerNode
io.reactivex.internal.operators.single.SingleDelay$Delay$OnError: java.lang.Throwable e
androidx.activity.R$id: int tag_unhandled_key_listeners
com.appspa.update.R$styleable: int[] AppCompatTheme
androidx.appcompat.widget.SwitchCompat: float mThumbPosition
com.xuexiang.xhttp2.R$string: int abc_menu_meta_shortcut_label
androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActiveDelegatesLock
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: java.lang.Throwable error
androidx.appcompat.widget.ActionMenuPresenter: boolean mStrictWidthLimit
androidx.appcompat.R$id: int select_dialog_listview
androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: long serialVersionUID
com.appspa.demo.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
com.appspa.update.UpdateManager$Builder: boolean isWifiOnly
androidx.lifecycle.ClassesInfoCache$MethodReference: java.lang.reflect.Method mMethod
io.reactivex.internal.operators.observable.ObservablePublish: io.reactivex.ObservableSource source
androidx.appcompat.widget.ScrollingTabContainerView: int FADE_DURATION
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.xuexiang.xhttp2.R$id: int progress_circular
com.appspa.update.R$style: int Animation_AppCompat_DropDownUp
com.xuexiang.xhttp2.R$styleable: int ActionBar_height
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask: java.util.concurrent.atomic.AtomicBoolean once
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowEnterTransitionOverlap
androidx.viewpager.widget.PagerTabStrip: int FULL_UNDERLINE_HEIGHT
androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller
com.xuexiang.xhttp2.R$drawable: int notification_bg_normal_pressed
com.appspa.update.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.xuexiang.xhttp2.R$id: int none
io.reactivex.internal.observers.LambdaObserver: long serialVersionUID
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: boolean cancelled
androidx.core.app.NotificationCompatJellybean: java.lang.String EXTRA_DATA_ONLY_REMOTE_INPUTS
androidx.appcompat.widget.SearchView: boolean DBG
androidx.vectordrawable.animated.R$id: int notification_main_column_container
com.appspa.demo.R$styleable: int LinearLayoutCompat_android_baselineAligned
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.R$attr: int titleTextAppearance
com.appspa.update.R$id: int icon_group
androidx.appcompat.R$color: int foreground_material_dark
com.appspa.update.R$dimen: int tooltip_horizontal_padding
androidx.core.app.BundleCompat$BundleCompatBaseImpl: boolean sGetIBinderMethodFetched
com.xuexiang.xhttp2.R$styleable: int ActionMode_background
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabBarStyle
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: java.lang.Object[] array
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object value
com.appspa.demo.R$dimen: int abc_text_size_title_material
androidx.fragment.app.ListFragment: java.lang.Runnable mRequestFocus
androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor
com.appspa.update.R$style: int Platform_ThemeOverlay_AppCompat
com.appspa.demo.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE
com.appspa.demo.R$styleable: int MenuView_android_horizontalDivider
androidx.fragment.app.FragmentManagerImpl$2: androidx.fragment.app.FragmentManagerImpl this$0
com.appspa.update.R$style: int Widget_AppCompat_SearchView_ActionBar
androidx.appcompat.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_WEIGHT
okhttp3.RealCall: okhttp3.Request originalRequest
androidx.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width
androidx.appcompat.resources.R$id: int tag_accessibility_actions
com.appspa.demo.R$style: int TextAppearance_Compat_Notification_Time
okhttp3.internal.connection.StreamAllocation: okhttp3.Address address
androidx.vectordrawable.animated.R$id: int action_text
io.reactivex.internal.operators.flowable.FlowableBufferBoundary: org.reactivestreams.Publisher bufferOpen
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: long index
com.appspa.update.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.fragment.R$styleable: int FontFamilyFont_fontWeight
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: long serialVersionUID
androidx.core.app.JobIntentService$JobWorkEnqueuer: android.app.job.JobInfo mJobInfo
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
io.reactivex.internal.functions.Functions$Array6Func: io.reactivex.functions.Function6 f
androidx.appcompat.R$attr: int progressBarPadding
com.appspa.update.R$styleable: int AppCompatTheme_buttonStyleSmall
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.xuexiang.xhttp2.request.BaseBodyRequest: java.lang.Object mObject
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method removeMethod
com.appspa.update.UpdateManager: com.appspa.update.proxy.IUpdatePrompter mIUpdatePrompter
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: java.util.concurrent.atomic.AtomicInteger remaining
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_BUTTON
com.appspa.update.R$attr: int editTextStyle
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup
androidx.appcompat.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.xuexiang.xhttp2.R$styleable: int PopupWindow_overlapAnchor
androidx.fragment.app.FragmentTransitionImpl$3: java.util.ArrayList val$sharedElementsIn
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: long count
io.reactivex.internal.operators.mixed.SingleFlatMapObservable: io.reactivex.functions.Function mapper
com.appspa.demo.R$style: int Widget_AppCompat_ActionBar_TabBar
com.appspa.update.service.DownloadService$DownloadBinder: com.appspa.update.service.DownloadService$FileDownloadCallBack mFileDownloadCallBack
io.reactivex.internal.operators.flowable.FlowableLastSingle: java.lang.Object defaultItem
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
androidx.core.R$id: int blocking
androidx.appcompat.R$drawable: int notification_template_icon_low_bg
com.xuexiang.xhttp2.R$styleable: int ActionBar_contentInsetLeft
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: io.reactivex.functions.Action onFinally
androidx.appcompat.view.menu.CascadingMenuPopup: int mXOffset
com.appspa.update.R$drawable: int spa_icon_app_close
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: long serialVersionUID
com.appspa.update.R$dimen: int abc_text_size_body_2_material
com.appspa.demo.R$drawable: int abc_text_select_handle_right_mtrl_dark
androidx.fragment.R$dimen: int notification_main_column_padding_top
androidx.fragment.R$dimen: int notification_action_text_size
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.parallel.ParallelMapTry$1: int[] $SwitchMap$io$reactivex$parallel$ParallelFailureHandling
androidx.appcompat.R$id: int spacer
com.appspa.demo.R$color: int material_blue_grey_950
com.appspa.update.R$attr: int collapseIcon
com.appspa.update.R$attr: int actionModeWebSearchDrawable
androidx.appcompat.widget.TooltipPopup: android.graphics.Rect mTmpDisplayFrame
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.view.menu.CascadingMenuPopup: int mRawDropDownGravity
androidx.core.app.NotificationCompat$WearableExtender: int mContentIcon
androidx.viewpager.R$drawable: int notification_template_icon_low_bg
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: io.reactivex.CompletableObserver downstream
androidx.core.view.PointerIconCompat: java.lang.Object mPointerIcon
androidx.loader.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
io.reactivex.internal.operators.single.SingleContains: io.reactivex.functions.BiPredicate comparer
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: org.reactivestreams.Subscriber downstream
okhttp3.internal.cache.DiskLruCache: java.util.regex.Pattern LEGAL_KEY_PATTERN
androidx.appcompat.widget.ViewStubCompat: androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener
androidx.fragment.app.FragmentManagerImpl$5: android.view.ViewGroup val$container
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusX
com.appspa.update.R$styleable: int[] ActionMenuItemView
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: int maxConcurrency
androidx.viewpager.widget.ViewPager: java.lang.String TAG
io.reactivex.subjects.BehaviorSubject: java.util.concurrent.locks.Lock writeLock
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: androidx.appcompat.widget.DropDownListView this$0
com.xuexiang.xhttp2.R$attr: int switchStyle
com.xuexiang.xhttp2.cache.RxCache$Builder: int memoryMaxSize
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: io.reactivex.Observer downstream
androidx.viewpager.widget.PagerTitleStrip: int mScaledTextSpacing
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: long index
androidx.appcompat.app.ResourcesFlusher: java.lang.String TAG
com.appspa.update.logs.UpdateLog: com.appspa.update.logs.ILogger sILogger
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer: io.reactivex.functions.Action onOverflow
com.appspa.demo.R$id: int accessibility_custom_action_6
com.xuexiang.xhttp2.R$dimen: int abc_config_prefDialogWidth
okio.GzipSource: java.util.zip.Inflater inflater
com.xuexiang.xhttp2.R$id: int action_container
androidx.appcompat.view.ActionMode: boolean mTitleOptionalHint
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int FUSED_CONSUMED
com.appspa.demo.R$attr: int actionModePasteDrawable
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_RESULT_RECEIVER_KEY
androidx.appcompat.app.WindowDecorActionBar: int INVALID_POSITION
com.appspa.update.R$id: int accessibility_custom_action_8
androidx.vectordrawable.R$styleable: int[] GradientColorItem
androidx.appcompat.R$id: int accessibility_custom_action_17
com.appspa.update.R$attr: int alertDialogTheme
okhttp3.Cookie: java.lang.String path
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$id: int add
androidx.appcompat.R$styleable: int SwitchCompat_android_textOff
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter this$0
androidx.appcompat.view.menu.ActionMenuItemView: int mSavedPaddingLeft
com.appspa.update.entity.UpdateError$ERROR: int CHECK_NO_NEW_VERSION
androidx.appcompat.R$id: int progress_circular
com.appspa.demo.R$attr: int actionBarSplitStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
com.appspa.demo.R$style: int Base_Widget_AppCompat_Button
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.customview.R$id: int right_icon
androidx.appcompat.R$style: int TextAppearance_Compat_Notification
io.reactivex.internal.operators.observable.ObservableMap: io.reactivex.functions.Function function
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_VALUE_CONNECTION_KEEP_ALIVE
retrofit2.ParameterHandler$QueryMap: int p
com.appspa.demo.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
androidx.fragment.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: int STATE_INACTIVE
io.reactivex.internal.operators.completable.CompletableTimeout: long timeout
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: io.reactivex.functions.Predicate predicate
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: io.reactivex.functions.Function nextSupplier
io.reactivex.internal.operators.observable.ObservableBufferBoundary: java.util.concurrent.Callable bufferSupplier
com.appspa.update.R$layout: int abc_expanded_menu_layout
com.appspa.update.R$style: int Widget_AppCompat_DrawerArrowToggle
io.reactivex.internal.operators.completable.CompletableTimer: long delay
androidx.loader.R$id: int right_icon
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNegativeButtonIcon
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mShortcutView
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent
com.jakewharton.disklrucache.DiskLruCache: java.io.File journalFileTmp
com.appspa.update.R$string: int space_download_complete
com.xuexiang.xhttp2.R$layout: int abc_screen_simple_overlay_action_mode
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager
okhttp3.internal.cache.DiskLruCache$3: java.util.Iterator delegate
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: java.util.concurrent.atomic.AtomicInteger remaining
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
androidx.vectordrawable.R$id: int tag_accessibility_actions
io.reactivex.internal.util.OpenHashSet: float loadFactor
com.appspa.demo.R$string: int abc_menu_space_shortcut_label
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_DayNight
com.google.gson.GsonBuilder: boolean lenient
io.reactivex.internal.queue.SpscArrayQueue: long serialVersionUID
com.appspa.update.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Switch
com.appspa.demo.R$layout: int abc_activity_chooser_view_list_item
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: io.reactivex.Observer downstream
androidx.customview.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator
androidx.vectordrawable.R$dimen: int notification_right_icon_size
com.google.gson.internal.ConstructorConstructor$3: java.lang.reflect.Constructor val$constructor
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher: org.reactivestreams.Publisher other
com.appspa.update.R$attr: int voiceIcon
androidx.core.widget.ScrollerCompat: android.widget.OverScroller mScroller
androidx.core.widget.TextViewCompat: boolean sMaxModeFieldFetched
io.reactivex.internal.operators.flowable.FlowableConcatMap$1: int[] $SwitchMap$io$reactivex$internal$util$ErrorMode
com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node parent
com.appspa.update.R$dimen: int compat_notification_large_icon_max_width
com.appspa.update.R$style: int Widget_AppCompat_Button_Colored
com.xuexiang.xhttp2.R$attr: int buttonBarPositiveButtonStyle
com.xuexiang.xhttp2.R$style: int Base_V28_Theme_AppCompat
androidx.core.view.MotionEventCompat: int AXIS_PRESSURE
androidx.fragment.app.FragmentTransition$3: androidx.collection.ArrayMap val$inSharedElements
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Header$Listener headersListener
com.google.gson.internal.bind.TypeAdapters$32: java.lang.Class val$type
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: boolean mShowDefaultActivity
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
io.reactivex.exceptions.CompositeException: java.lang.Throwable cause
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
androidx.appcompat.R$dimen: int notification_top_pad_large_text
com.appspa.demo.R$styleable: int MenuItem_android_titleCondensed
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver: io.reactivex.CompletableObserver downstream
androidx.customview.R$dimen: int compat_notification_large_icon_max_width
com.appspa.demo.R$drawable: int abc_textfield_search_material
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: java.lang.Object value
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.widget.TextView mTextView
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Display4
io.reactivex.internal.operators.observable.ObservableWindowTimed: java.util.concurrent.TimeUnit unit
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.appspa.demo.R$style: int Platform_V21_AppCompat_Light
androidx.vectordrawable.R$id: int accessibility_custom_action_6
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
okhttp3.CacheControl$Builder: int maxAgeSeconds
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: org.reactivestreams.Subscription upstream
androidx.core.R$id: int line3
androidx.loader.content.CursorLoader: androidx.loader.content.Loader$ForceLoadContentObserver mObserver
androidx.core.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier: java.util.concurrent.Callable bufferSupplier
com.appspa.update.R$drawable: int abc_cab_background_internal_bg
androidx.core.R$id: int tag_accessibility_actions
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.util.concurrent.atomic.AtomicInteger active
androidx.viewpager.R$dimen: int compat_notification_large_icon_max_height
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
com.appspa.update.R$styleable: int MenuItem_actionViewClass
io.reactivex.internal.operators.parallel.ParallelSortedJoin: io.reactivex.parallel.ParallelFlowable source
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: long serialVersionUID
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Display2
androidx.appcompat.R$dimen: int hint_alpha_material_light
com.appspa.update.R$styleable: int PopupWindow_overlapAnchor
androidx.core.app.Person: java.lang.CharSequence mName
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver parent
com.appspa.demo.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment mInstance
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
retrofit2.ParameterHandler$Part: okhttp3.Headers headers
com.appspa.update.R$dimen: int space_title_text_size
com.xuexiang.xhttp2.R$layout: int abc_action_menu_layout
com.appspa.update.R$attr: int actionBarWidgetTheme
androidx.vectordrawable.animated.R$color: int notification_action_color_filter
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: io.reactivex.Observer downstream
androidx.appcompat.R$dimen: int compat_button_padding_vertical_material
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
io.reactivex.internal.operators.flowable.FlowableInterval: long initialDelay
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: boolean cancelled
androidx.savedstate.Recreator: java.lang.String COMPONENT_KEY
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe: int prefetch
com.appspa.update.proxy.impl.DefaultUpdateDownloader: android.content.ServiceConnection mServiceConnection
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.util.concurrent.atomic.AtomicLong requested
com.xuexiang.xhttp2.R$color: int background_material_dark
com.appspa.demo.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView
com.appspa.update.R$styleable: int SwitchCompat_switchMinWidth
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: java.util.concurrent.atomic.AtomicInteger wip
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_DialogWhenLarge
com.appspa.update.entity.UpdateError$ERROR: int CHECK_IGNORED_VERSION
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView
androidx.drawerlayout.R$attr: int fontProviderCerts
com.appspa.update.R$style: int TextAppearance_AppCompat_Menu
androidx.loader.content.ModernAsyncTask: java.util.concurrent.Executor sDefaultExecutor
okio.InflaterSource: okio.BufferedSource source
com.appspa.update.R$attr: int contentDescription
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier: java.util.concurrent.Callable other
io.reactivex.internal.operators.flowable.FlowableReplay: java.util.concurrent.Callable bufferFactory
androidx.appcompat.R$drawable: int abc_list_selector_holo_dark
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: io.reactivex.SingleObserver downstream
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dialog
androidx.core.content.pm.ActivityInfoCompat: int CONFIG_UI_MODE
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitle
androidx.appcompat.R$string: int abc_menu_sym_shortcut_label
androidx.appcompat.R$dimen: int abc_config_prefDialogWidth
com.appspa.demo.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Spinner_Underlined
com.appspa.update.R$dimen: int abc_action_button_min_width_overflow_material
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: java.util.concurrent.atomic.AtomicLong requested
com.appspa.demo.R$attr: int colorPrimary
androidx.appcompat.view.menu.CascadingMenuPopup: int HORIZ_POSITION_LEFT
io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError: io.reactivex.internal.operators.completable.CompletableOnErrorComplete this$0
com.xuexiang.xhttp2.R$styleable: int ActionBar_customNavigationLayout
com.appspa.demo.R$styleable: int Toolbar_subtitleTextColor
androidx.drawerlayout.R$styleable: int FontFamilyFont_font
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node parent
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed: long time
io.reactivex.internal.subscriptions.SubscriptionArbiter: boolean cancelled
org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl: java.lang.String targetTypeName
com.appspa.update.R$attr: int panelMenuListTheme
com.appspa.demo.R$styleable: int[] DrawerArrowToggle
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.cache.RxCache mRxCache
androidx.vectordrawable.R$styleable: int[] GradientColor
com.xuexiang.xhttp2.R$color: int bright_foreground_disabled_material_dark
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: java.util.concurrent.TimeUnit unit
androidx.core.view.InputDeviceCompat: int SOURCE_ROTARY_ENCODER
io.reactivex.subjects.ReplaySubject$Node: java.lang.Object value
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
retrofit2.Retrofit$1: retrofit2.Platform platform
com.xuexiang.xhttp2.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
io.reactivex.internal.operators.flowable.FlowableLimit: long n
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.versionedparcelable.VersionedParcel: int EX_ILLEGAL_ARGUMENT
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: java.util.concurrent.atomic.AtomicReference current
okhttp3.internal.connection.StreamAllocation: boolean canceled
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy STRING
com.appspa.demo.R$id: int SYM
com.appspa.demo.R$dimen: int abc_action_bar_content_inset_material
androidx.fragment.app.BackStackState: int mTransitionStyle
com.appspa.demo.R$styleable: int AppCompatSeekBar_tickMarkTintMode
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver[] CANCELLED
com.appspa.update.R$color: int primary_text_disabled_material_light
io.reactivex.internal.operators.flowable.FlowableConcatMap: io.reactivex.functions.Function mapper
io.reactivex.observers.TestObserver: io.reactivex.internal.fuseable.QueueDisposable qd
io.reactivex.internal.operators.flowable.FlowableSequenceEqual: io.reactivex.functions.BiPredicate comparer
androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache
com.appspa.demo.R$color: int abc_primary_text_disable_only_material_light
androidx.core.widget.AutoScrollHelper: int mActivationDelay
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnConditionalSubscriber: long serialVersionUID
androidx.core.view.MotionEventCompat: int AXIS_TOOL_MINOR
androidx.drawerlayout.widget.DrawerLayout: android.graphics.Paint mScrimPaint
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float[] VALUES
com.xuexiang.xhttp2.R$dimen: int abc_control_corner_material
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableSkip: long n
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_android_textAppearance
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: io.reactivex.internal.disposables.SequentialDisposable timed
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$3: com.xuexiang.xhttp2.callback.CallBack val$callBack
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_SELECTION
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: long serialVersionUID
com.appspa.update.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver otherObserver
com.appspa.update.R$color: int primary_text_default_material_light
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.appspa.update.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.appspa.demo.R$styleable: int View_theme
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: java.util.Map lefts
androidx.fragment.R$styleable: int[] GradientColor
androidx.appcompat.R$drawable: int abc_action_bar_item_background_material
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: long serialVersionUID
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent mIntent
androidx.appcompat.R$id: int content
androidx.core.view.MotionEventCompat: int AXIS_RTRIGGER
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: boolean done
androidx.appcompat.widget.ButtonBarLayout: int PEEK_BUTTON_DP
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_VALUE_ACCEPT_ENCODING
androidx.viewpager.R$styleable: int[] ColorStateListItem
androidx.activity.R$attr: int fontProviderCerts
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe: int prefetch
androidx.appcompat.R$styleable: int ActionBar_progressBarPadding
com.appspa.demo.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader: android.app.ProgressDialog mDialog
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: io.reactivex.Scheduler$Worker worker
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: io.reactivex.functions.BiPredicate predicate
androidx.loader.content.ModernAsyncTask$1: java.util.concurrent.atomic.AtomicInteger mCount
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mSlopBounds
com.appspa.demo.R$style: int Widget_AppCompat_ActivityChooserView
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: long delay
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: io.reactivex.internal.observers.InnerQueuedObserver current
io.reactivex.Notification: io.reactivex.Notification COMPLETE
androidx.fragment.app.FragmentManager: int POP_BACK_STACK_INCLUSIVE
com.appspa.demo.R$style: int Widget_AppCompat_Button_Colored
androidx.appcompat.app.TwilightCalculator: long sunrise
com.google.gson.JsonStreamParser: com.google.gson.stream.JsonReader parser
com.xuexiang.xhttp2.R$layout: int abc_list_menu_item_icon
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: long serialVersionUID
androidx.fragment.R$id: int tag_unhandled_key_event_manager
androidx.viewpager.R$drawable: int notification_bg
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: java.util.Map rights
com.appspa.demo.R$style: int Widget_AppCompat_Toolbar
androidx.loader.content.ModernAsyncTask: int MAXIMUM_POOL_SIZE
com.appspa.update.utils.FileUtils: java.lang.String APP_EXT_STORAGE_PATH
io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor$ReplaySubscription[] EMPTY
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: long count
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Line2
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
io.reactivex.internal.operators.flowable.FlowableFilter: io.reactivex.functions.Predicate predicate
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton
io.reactivex.internal.operators.flowable.FlowableUsing: io.reactivex.functions.Consumer disposer
androidx.appcompat.R$id: int title
androidx.vectordrawable.R$styleable: int FontFamilyFont_font
androidx.customview.R$dimen: int compat_control_corner_material
io.reactivex.internal.operators.observable.ObservableReduceWithSingle: io.reactivex.functions.BiFunction reducer
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: io.reactivex.functions.Action onFinally
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: boolean cancelled
androidx.core.view.MotionEventCompat: int AXIS_RZ
io.reactivex.internal.operators.maybe.MaybeMergeArray: io.reactivex.MaybeSource[] sources
androidx.appcompat.R$styleable: int ViewStubCompat_android_inflatedId
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
io.reactivex.observers.ResourceSingleObserver: io.reactivex.internal.disposables.ListCompositeDisposable resources
com.google.gson.JsonPrimitive: java.lang.Class[] PRIMITIVE_TYPES
androidx.activity.R$styleable: int[] GradientColor
androidx.core.app.NotificationCompat: java.lang.String EXTRA_LARGE_ICON
com.xuexiang.xhttp2.R$layout: int notification_action
io.reactivex.internal.operators.maybe.MaybeSubscribeOn: io.reactivex.Scheduler scheduler
com.appspa.update.R$styleable: int Toolbar_android_minHeight
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater mInflater
com.appspa.demo.R$attr: int actionLayout
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_24
io.reactivex.internal.operators.completable.CompletableAmb$Amb: java.util.concurrent.atomic.AtomicBoolean once
okhttp3.internal.http2.Http2Connection$2: long val$unacknowledgedBytesRead
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver CANCELLED
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: int HOST_VIEW_ID
androidx.core.view.LayoutInflaterCompat: boolean sCheckedField
androidx.appcompat.app.ToolbarActionBar$2: androidx.appcompat.app.ToolbarActionBar this$0
com.xuexiang.xhttp2.R$layout: int abc_action_mode_bar
com.xuexiang.xhttp2.R$styleable: int GradientColorItem_android_offset
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: boolean connected
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.appcompat.view.SupportMenuInflater this$0
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.ActionMode$Callback mCallback
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager
com.appspa.demo.R$color: int material_grey_100
com.appspa.demo.R$id: int progress_horizontal
androidx.appcompat.R$id: int action_text
androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.String TAG
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableCompat
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe: io.reactivex.functions.Function mapper
com.xuexiang.xhttp2.R$styleable: int View_android_theme
com.appspa.update.R$styleable: int ViewBackgroundHelper_backgroundTintMode
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.appspa.update.R$color: int space_close_line_color
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
com.xuexiang.xhttp2.R$dimen: int highlight_alpha_material_light
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.view.menu.ActionMenuItem mNavItem
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: int mFinalVisibility
androidx.core.provider.FontsContractCompat$FontInfo: int mResultCode
com.appspa.demo.R$layout: int custom_dialog
io.reactivex.internal.operators.observable.BlockingObservableMostRecent: java.lang.Object initialValue
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_ROW_INT
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.appspa.demo.R$styleable: int[] PopupWindow
com.appspa.demo.R$string: int abc_menu_delete_shortcut_label
com.appspa.demo.R$color: int bright_foreground_material_light
io.reactivex.internal.operators.observable.ObservableFlattenIterable: io.reactivex.functions.Function mapper
androidx.drawerlayout.R$dimen: int notification_content_margin_start
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: io.reactivex.functions.Function mapper
androidx.appcompat.R$attr: int ratingBarStyleIndicator
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.xuexiang.xhttp2.R$dimen: int notification_large_icon_width
androidx.activity.R$id: int tag_accessibility_pane_title
com.appspa.demo.R$attr: int drawableEndCompat
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory DEFAULT_FACTORY
io.reactivex.internal.operators.single.SingleDoOnTerminate$DoOnTerminate: io.reactivex.internal.operators.single.SingleDoOnTerminate this$0
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed: long timeout
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: boolean done
androidx.appcompat.R$attr: int iconTintMode
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mTextColors
okhttp3.internal.http.RealInterceptorChain: int calls
okhttp3.internal.connection.RealConnection$1: okhttp3.internal.connection.RealConnection this$0
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$attr: int contentDescription
io.reactivex.internal.operators.single.SingleDetach: io.reactivex.SingleSource source
io.reactivex.internal.operators.parallel.ParallelCollect: java.util.concurrent.Callable initialCollection
androidx.core.app.RemoteInput$Builder: android.os.Bundle mExtras
androidx.appcompat.R$id: int accessibility_custom_action_18
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault
androidx.appcompat.R$attr: int paddingBottomNoButtons
androidx.vectordrawable.animated.R$dimen: int notification_right_side_padding_top
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: io.reactivex.ObservableSource second
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: androidx.appcompat.widget.ActivityChooserModel this$0
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Spinner
androidx.vectordrawable.R$dimen: int notification_small_icon_size_as_large
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind FULL
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceWebSearchIntent
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0
com.appspa.update.R$style: int Base_ThemeOverlay_AppCompat_Dark
androidx.appcompat.widget.AppCompatTextHelper: int SERIF
io.reactivex.disposables.RunnableDisposable: long serialVersionUID
com.appspa.update.R$dimen: int abc_text_size_subhead_material
io.reactivex.internal.operators.observable.ObservableAmb: java.lang.Iterable sourcesIterable
okhttp3.internal.Util: java.util.TimeZone UTC
com.appspa.demo.R$dimen: int abc_text_size_subhead_material
androidx.core.graphics.drawable.WrappedDrawableState: int mChangingConfigurations
androidx.drawerlayout.R$id: int notification_main_column
okhttp3.internal.connection.StreamAllocation: boolean released
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
com.appspa.update.R$attr: int xnpb_unreached_color
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup
com.jakewharton.disklrucache.DiskLruCache$1: com.jakewharton.disklrucache.DiskLruCache this$0
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: io.reactivex.ObservableSource fallback
com.xuexiang.xhttp2.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath
com.appspa.demo.R$drawable: int abc_ic_star_black_36dp
androidx.core.graphics.PathSegment: android.graphics.PointF mEnd
androidx.appcompat.resources.R$drawable: int notification_bg_low_normal
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: java.util.concurrent.atomic.AtomicReference subscribers
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: int capacityHint
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: boolean done
com.xuexiang.xhttp2.R$attr: int listChoiceIndicatorSingleAnimated
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$layout: int abc_alert_dialog_title_material
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: java.lang.Object value
com.appspa.update.R$attr: int actionModePasteDrawable
androidx.appcompat.widget.AppCompatImageHelper: android.widget.ImageView mView
com.appspa.update.R$styleable: int AppCompatTheme_alertDialogStyle
okhttp3.Address: okhttp3.Dns dns
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: org.reactivestreams.Publisher other
com.zhy.http.okhttp.builder.OkHttpRequestBuilder: int id
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: boolean done
com.xuexiang.xhttp2.cache.RxCache$3: com.xuexiang.xhttp2.cache.RxCache this$0
androidx.core.view.MotionEventCompat: int ACTION_HOVER_ENTER
androidx.fragment.R$id: int accessibility_custom_action_30
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification: java.util.concurrent.Callable onCompleteSupplier
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: int leftIndex
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle: io.reactivex.ObservableSource first
com.appspa.update.R$id: int alertTitle
androidx.appcompat.R$styleable: int ActionBar_displayOptions
io.reactivex.internal.operators.completable.CompletableAmb$Amb: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: io.reactivex.Scheduler$Worker worker
androidx.vectordrawable.R$dimen: int notification_top_pad
androidx.appcompat.R$styleable: int PopupWindowBackgroundState_state_above_anchor
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: android.view.MenuItem$OnMenuItemClickListener mObject
androidx.core.app.ShareCompat$IntentReader: android.content.ComponentName mCallingActivity
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: io.reactivex.internal.disposables.ListCompositeDisposable both
com.xuexiang.xhttp2.R$attr: int overlapAnchor
io.reactivex.internal.subscribers.BlockingBaseSubscriber: boolean cancelled
io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver: io.reactivex.disposables.CompositeDisposable set
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$1: long val$fileSize
com.appspa.demo.R$style: int Widget_AppCompat_Light_ListView_DropDown
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast: io.reactivex.internal.operators.flowable.FlowableGroupBy$State state
io.reactivex.internal.operators.flowable.FlowableElementAt: long index
androidx.appcompat.widget.ToolbarWidgetWrapper: int mNavigationMode
com.appspa.update.R$string: int space_lab_ready_update
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Subhead
io.reactivex.internal.operators.single.SingleDoOnTerminate$DoOnTerminate: io.reactivex.SingleObserver downstream
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_DISMISSAL_ID
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$attr: int logo
androidx.customview.widget.ViewDragHelper$2: androidx.customview.widget.ViewDragHelper this$0
com.appspa.update.UpdateManager$Builder: java.lang.String updateUrl
okio.GzipSource: int section
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber this$0
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String mDismissalId
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: long serialVersionUID
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemChecked
com.xuexiang.xhttp2.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.vectordrawable.R$id: int accessibility_custom_action_22
io.reactivex.internal.functions.Functions$ListSorter: java.util.Comparator comparator
okhttp3.HttpUrl: java.lang.String username
androidx.activity.R$drawable: int notification_bg_low_pressed
com.xuexiang.xhttp2.R$attr: int isLightTheme
org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: org.aspectj.lang.reflect.AjType type
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar
androidx.fragment.app.ListFragment: android.os.Handler mHandler
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mBackground
io.reactivex.internal.operators.observable.ObservableBufferTimed: int maxSize
io.reactivex.internal.subscribers.StrictSubscriber: org.reactivestreams.Subscriber downstream
androidx.collection.CircularArray: int mCapacityBitmask
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: org.reactivestreams.Subscriber downstream
com.google.gson.internal.UnsafeAllocator$1: java.lang.Object val$unsafe
com.xuexiang.xhttp2.R$attr: int drawableBottomCompat
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: android.graphics.drawable.Animatable2$AnimationCallback mPlatformCallback
androidx.viewpager.widget.ViewPager: int INVALID_POINTER
androidx.appcompat.R$attr: int subtitleTextAppearance
androidx.customview.R$attr: int ttcIndex
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: com.xuexiang.xhttp2.callback.UIProgressResponseCallBack this$0
androidx.viewpager.R$id: int normal
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_OK
io.reactivex.internal.schedulers.SchedulerWhen$OnCompletedAction: io.reactivex.CompletableObserver actionCompletable
androidx.fragment.app.Fragment$AnimationInfo: int mNextAnim
com.xuexiang.xhttp2.R$id: int line1
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.atomic.AtomicBoolean val$running
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator parent
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float[] VALUES
io.reactivex.subscribers.SafeSubscriber: boolean done
io.reactivex.internal.subscribers.InnerQueuedSubscriber: int limit
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle: java.lang.Object seed
okhttp3.internal.Util: java.lang.String[] EMPTY_STRING_ARRAY
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable: io.reactivex.MaybeSource source
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_START
androidx.appcompat.R$attr: int navigationMode
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicBoolean stopWindows
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
androidx.appcompat.R$attr: int ttcIndex
androidx.appcompat.R$color: int secondary_text_disabled_material_dark
io.reactivex.internal.operators.flowable.FlowableZipIterable: java.lang.Iterable other
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ProgressBar
com.xuexiang.xhttp2.R$style: int Base_V21_Theme_AppCompat_Dialog
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
com.xuexiang.xhttp2.R$attr: int tooltipFrameBackground
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: androidx.core.view.AccessibilityDelegateCompat mCompat
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: io.reactivex.disposables.Disposable upstream
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableEndTint
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: io.reactivex.internal.operators.parallel.ParallelPeek parent
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: java.lang.Object value
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.util.concurrent.atomic.AtomicReferenceArray consumerBuffer
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$inNames
io.reactivex.internal.operators.observable.ObservablePublish: io.reactivex.ObservableSource onSubscribe
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentTitle
androidx.appcompat.R$styleable: int MenuItem_iconTint
com.xuexiang.xhttp2.R$dimen: int abc_switch_padding
androidx.appcompat.R$attr: int actionModeSelectAllDrawable
androidx.versionedparcelable.VersionedParcelStream: int TYPE_INT
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: io.reactivex.Scheduler scheduler
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.view.View mDelegateView
com.appspa.demo.R$attr: int buttonBarStyle
com.appspa.update.entity.UpdateEntity: java.lang.String mUpdateContent
androidx.appcompat.widget.SearchView: java.lang.Runnable mReleaseCursorRunnable
com.xuexiang.xhttp2.R$attr: int closeIcon
androidx.appcompat.widget.SwitchCompat: int mThumbWidth
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.internal.util.ErrorMode errorMode
androidx.appcompat.R$attr: int buttonBarPositiveButtonStyle
com.xuexiang.xhttp2.R$styleable: int AppCompatSeekBar_tickMarkTint
com.xuexiang.xhttp2.R$styleable: int Toolbar_contentInsetStart
com.appspa.demo.R$id: int tag_accessibility_actions
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES
okhttp3.internal.http1.Http1Codec$FixedLengthSource: long bytesRemaining
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: boolean checkNext
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator parent
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: long serialVersionUID
com.xuexiang.xhttp2.utils.Utils: java.lang.String EXT_PICTURES_PATH
com.appspa.update.R$string: int abc_menu_space_shortcut_label
io.reactivex.internal.operators.observable.ObservableOnErrorReturn: io.reactivex.functions.Function valueSupplier
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: boolean terminated
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: io.reactivex.internal.disposables.SequentialDisposable task
io.reactivex.internal.operators.flowable.FlowableReplay$ConnectableFlowableReplay: io.reactivex.flowables.ConnectableFlowable cf
androidx.loader.R$id: int notification_main_column
com.xuexiang.xhttp2.R$attr: int textColorAlertDialogListItem
androidx.core.app.NotificationCompat: int DEFAULT_SOUND
androidx.core.text.util.FindAddress: java.lang.String SP
com.appspa.demo.R$style: int Base_V21_Theme_AppCompat_Dialog
androidx.appcompat.R$dimen: int abc_text_size_display_2_material
androidx.customview.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.String TAG
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: long serialVersionUID
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
io.reactivex.internal.operators.maybe.MaybeCache: java.util.concurrent.atomic.AtomicReference source
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_drawableLeftCompat
androidx.vectordrawable.animated.R$styleable: int[] GradientColor
com.appspa.update.R$style: int Theme_AppCompat_Dialog_Alert
androidx.fragment.R$drawable: int notification_icon_background
com.xuexiang.xhttp2.cache.RxCache$1: com.xuexiang.xhttp2.cache.RxCache this$0
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_DRAGGING
com.appspa.demo.R$attr: int goIcon
com.appspa.demo.R$string: int abc_menu_sym_shortcut_label
androidx.viewpager.widget.ViewPager: int mScrollState
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: boolean fastPath
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int actionProviderClass
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Display4
androidx.appcompat.widget.AppCompatAutoCompleteTextView: int[] TINT_ATTRS
androidx.loader.content.ModernAsyncTask: int KEEP_ALIVE
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int spinnerStyle
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sAddFontWeightStyle
com.appspa.demo.R$attr: int textAllCaps
androidx.core.text.BidiFormatter: androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC
com.xuexiang.xhttp2.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
androidx.vectordrawable.animated.R$style: int Widget_Compat_NotificationActionContainer
com.appspa.demo.R$styleable: int AppCompatTextView_autoSizeStepGranularity
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: long serialVersionUID
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_icon
androidx.collection.LruCache: int hitCount
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontWeight
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: android.os.Bundle sEmptyBundle
com.appspa.demo.R$layout: int support_simple_spinner_dropdown_item
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$styleable: int ActionBar_background
retrofit2.OkHttpCall: java.lang.Object[] args
androidx.appcompat.resources.R$id: int tag_accessibility_heading
androidx.appcompat.R$style: int Base_V28_Theme_AppCompat
io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.internal.schedulers.RxThreadFactory SINGLE_THREAD_FACTORY
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
androidx.core.widget.ContentLoadingProgressBar$2: androidx.core.widget.ContentLoadingProgressBar this$0
io.reactivex.internal.operators.flowable.FlowableMapNotification: io.reactivex.functions.Function onErrorMapper
androidx.core.content.PermissionChecker: int PERMISSION_DENIED
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PASTE
androidx.viewpager.R$attr: int font
androidx.core.provider.FontRequest: int mCertificatesArray
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher: io.reactivex.functions.Function mapper
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Light
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
androidx.cursoradapter.widget.CursorAdapter: int FLAG_AUTO_REQUERY
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int popupMenuStyle
androidx.appcompat.widget.ContentFrameLayout: androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: io.reactivex.CompletableObserver downstream
com.appspa.update.R$id: int line1
androidx.vectordrawable.R$dimen: int compat_button_padding_horizontal_material
com.appspa.demo.R$styleable: int DrawerArrowToggle_drawableSize
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabText
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver: io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver parent
com.appspa.update.R$dimen: int notification_main_column_padding_top
com.appspa.demo.R$styleable: int TextAppearance_android_textColorHint
com.appspa.demo.R$color: int primary_material_light
androidx.appcompat.R$styleable: int AlertDialog_buttonIconDimen
com.google.gson.internal.ConstructorConstructor$2: java.lang.reflect.Type val$type
androidx.appcompat.R$styleable: int Toolbar_titleMargin
androidx.appcompat.view.menu.ListMenuItemView: java.lang.String TAG
com.appspa.demo.R$dimen: int abc_panel_menu_list_width
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: io.reactivex.Scheduler$Worker w
io.reactivex.internal.operators.flowable.FlowableCache: long size
com.appspa.demo.R$styleable: int AppCompatTextHelper_android_drawableLeft
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState
androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility
androidx.appcompat.app.ActionBarDrawerToggle: int mOpenDrawerContentDescRes
androidx.appcompat.R$styleable: int AppCompatTextView_fontFamily
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: io.reactivex.subjects.UnicastSubject window
org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String name
io.reactivex.internal.functions.Functions$NotificationOnNext: io.reactivex.functions.Consumer onNotification
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$EntrySet entrySet
androidx.appcompat.R$id: int radio
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: io.reactivex.internal.util.AppendOnlyLinkedArrayList queue
com.appspa.demo.R$style: int Base_DialogWindowTitleBackground_AppCompat
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dark
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder mParentMenu
io.reactivex.internal.operators.completable.CompletableDelay$Delay: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: long serialVersionUID
androidx.appcompat.R$style: int Base_Theme_AppCompat_CompactMenu
com.appspa.update.R$id: int actions
androidx.viewpager.R$id: int icon_group
androidx.drawerlayout.widget.DrawerLayout: float mDrawerElevation
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_Button
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
com.xuexiang.xhttp2.R$styleable: int MenuGroup_android_id
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: long bytesRead
io.reactivex.internal.operators.flowable.FlowableGenerate: java.util.concurrent.Callable stateSupplier
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean cancelled
io.reactivex.internal.operators.observable.ObservableCollectSingle: io.reactivex.ObservableSource source
io.reactivex.internal.operators.single.SingleDelay: io.reactivex.SingleSource source
com.google.gson.Gson: boolean DEFAULT_ESCAPE_HTML
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: com.xuexiang.xhttp2.subsciber.impl.IProgressLoader mIProgressLoader
androidx.appcompat.resources.R$styleable: int ColorStateListItem_android_alpha
io.reactivex.internal.operators.parallel.ParallelMapTry: io.reactivex.functions.Function mapper
com.google.gson.JsonNull: com.google.gson.JsonNull INSTANCE
androidx.fragment.R$attr: int alpha
com.xuexiang.xhttp2.R$attr: int fontStyle
androidx.lifecycle.LiveData: java.lang.Object mData
androidx.appcompat.R$styleable: int MenuItem_contentDescription
com.appspa.demo.R$drawable: int notification_tile_bg
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: retrofit2.Call $this_await$inlined
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTopTint
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection
com.appspa.update.R$id: int notification_background
androidx.appcompat.R$styleable: int FontFamily_fontProviderPackage
com.appspa.update.R$dimen: int space_content_text_size
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_DEFAULT
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_autoSizeStepGranularity
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitleCondensed
com.appspa.demo.R$style: int TextAppearance_AppCompat_Menu
androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: int maxConcurrency
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupMaxWidth
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_TITLE
com.appspa.update.R$attr: int submitBackground
com.appspa.demo.R$color: int abc_primary_text_material_dark
androidx.customview.R$id: int action_divider
com.appspa.update.R$styleable: int SwitchCompat_trackTint
io.reactivex.internal.subscribers.BlockingBaseSubscriber: java.lang.Throwable error
com.appspa.update.R$attr: int spinnerStyle
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver parent
androidx.drawerlayout.R$color: int secondary_text_default_material_light
com.appspa.demo.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: java.util.concurrent.Callable boundarySupplier
retrofit2.OkHttpCall: boolean executed
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Title_Inverse
com.appspa.demo.R$id: int btn_save
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$string: int space_lab_install
com.appspa.demo.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
io.reactivex.internal.operators.observable.ObservableRetryWhen: io.reactivex.functions.Function handler
okhttp3.internal.http2.Http2Connection$4: okhttp3.internal.http2.Http2Connection this$0
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle: io.reactivex.MaybeSource source
com.appspa.update.R$attr: int drawableLeftCompat
com.appspa.update.R$dimen: int abc_text_size_caption_material
com.xuexiang.xhttp2.R$drawable: int abc_ratingbar_indicator_material
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] PREVAILING_RULE
io.reactivex.internal.operators.flowable.FlowableDebounceTimed: io.reactivex.Scheduler scheduler
okhttp3.internal.http2.Http2Stream: java.util.Deque headersQueue
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: io.reactivex.Observer child
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
androidx.collection.LongSparseArray: int mSize
androidx.appcompat.resources.R$styleable: int GradientColorItem_android_color
com.appspa.update.R$style: int Widget_AppCompat_RatingBar_Small
com.appspa.demo.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$styleable: int Toolbar_logoDescription
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_IF_NONE_MATCH
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: io.reactivex.Observer downstream
com.google.gson.stream.JsonReader: int PEEKED_DOUBLE_QUOTED
io.reactivex.internal.observers.ForEachWhileObserver: boolean done
org.aspectj.internal.lang.reflect.AdviceImpl: org.aspectj.lang.reflect.AdviceKind kind
com.appspa.demo.R$styleable: int[] TextAppearance
androidx.appcompat.R$id: int right_side
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: boolean delayErrors
com.xuexiang.xhttp2.R$styleable: int ViewStubCompat_android_id
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementSourceNames
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchorSet
androidx.appcompat.app.AlertController: android.widget.ImageView mIconView
androidx.core.app.Person: java.lang.String ICON_KEY
com.appspa.demo.R$attr: int singleChoiceItemLayout
androidx.appcompat.widget.Toolbar$2: androidx.appcompat.widget.Toolbar this$0
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: io.reactivex.MaybeObserver downstream
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: org.reactivestreams.Subscriber downstream
okhttp3.Dispatcher: int maxRequests
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: int limit
io.reactivex.internal.operators.observable.ObservableDelay: boolean delayError
androidx.core.app.NotificationCompat$WearableExtender: int mCustomContentHeight
androidx.core.app.NotificationCompat$Action$Builder: java.lang.CharSequence mTitle
io.reactivex.internal.schedulers.SingleScheduler: java.util.concurrent.atomic.AtomicReference executor
com.xuexiang.xhttp2.exception.ServerException: java.lang.String message
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicReference upstream
okio.Segment: byte[] data
com.appspa.demo.R$id: int META
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIT_SET
androidx.drawerlayout.R$id: int notification_main_column_container
okhttp3.FormBody: java.util.List encodedNames
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable
androidx.appcompat.app.ActionBarDrawerToggle: int mCloseDrawerContentDescRes
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: io.reactivex.internal.fuseable.QueueSubscription qs
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
io.reactivex.subjects.MaybeSubject: java.util.concurrent.atomic.AtomicBoolean once
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: boolean mainDone
com.appspa.update.R$attr: int contentInsetRight
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon
com.appspa.update.R$styleable: int LinearLayoutCompat_dividerPadding
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: long serialVersionUID
androidx.appcompat.resources.R$id: int tag_unhandled_key_listeners
com.appspa.update.R$color: int primary_dark_material_dark
io.reactivex.internal.observers.DeferredScalarDisposable: int FUSED_CONSUMED
io.reactivex.processors.BehaviorProcessor: long index
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: long produced
androidx.drawerlayout.widget.DrawerLayout: int MIN_FLING_VELOCITY
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_8
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable: io.reactivex.CompletableSource other
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: okhttp3.internal.http2.Settings val$settings
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_DEFAULT
com.xuexiang.xhttp2.R$styleable: int SearchView_queryBackground
androidx.appcompat.app.AlertController: android.widget.TextView mMessageView
androidx.fragment.app.Fragment: boolean mAdded
androidx.viewpager.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: java.lang.Object NULL_KEY
com.appspa.demo.entity.CustomResult$VersionInfo: java.lang.String md5
com.appspa.update.R$styleable: int AppCompatTheme_colorBackgroundFloating
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: io.reactivex.functions.BiPredicate predicate
com.appspa.demo.R$attr: int dropDownListViewStyle
androidx.core.view.MotionEventCompat: int AXIS_RUDDER
com.xuexiang.xhttp2.R$id: int action_image
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onSingleAssembly
com.appspa.demo.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: long serialVersionUID
com.appspa.demo.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable: io.reactivex.MaybeSource source
io.reactivex.internal.subscribers.StrictSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.core.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: boolean cancelled
androidx.drawerlayout.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.appcompat.R$attr: int panelMenuListTheme
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: boolean done
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.app.WindowDecorActionBar this$0
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache: io.reactivex.CompletableObserver downstream
com.appspa.update.R$dimen: int abc_text_size_large_material
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: io.reactivex.functions.Function mapper
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
androidx.fragment.R$id: int accessibility_custom_action_4
com.appspa.demo.R$id: int bottom
androidx.appcompat.R$styleable: int AppCompatTheme_editTextBackground
com.appspa.demo.R$attr: int switchStyle
androidx.appcompat.content.res.AppCompatResources: java.lang.Object sColorStateCacheLock
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_text_size
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTint
androidx.core.view.GravityCompat: int START
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.util.concurrent.atomic.AtomicBoolean cancelled
com.zhy.http.okhttp.OkHttpUtils$3: com.zhy.http.okhttp.OkHttpUtils this$0
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.drawerlayout.widget.DrawerLayout: boolean mDrawStatusBarBackground
com.appspa.demo.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: long serialVersionUID
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPES_ALL_MASK
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE
com.appspa.demo.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
com.appspa.demo.R$id: int top
androidx.core.text.BidiFormatter: char PDF
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: java.util.concurrent.TimeUnit unit
androidx.appcompat.resources.R$styleable: int GradientColor_android_gradientRadius
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Menu
com.xuexiang.xhttp2.R$attr: int actionModeCopyDrawable
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: boolean done
okio.Buffer$2: okio.Buffer this$0
com.appspa.update.R$style: int Base_V7_Theme_AppCompat_Light
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter: io.reactivex.functions.BiFunction combiner
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator: java.lang.Object buf
io.reactivex.internal.operators.observable.ObservableWindowTimed: long maxSize
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Display1
okhttp3.internal.platform.Jdk9Platform: java.lang.reflect.Method setProtocolMethod
androidx.fragment.app.Fragment: int mState
retrofit2.ParameterHandler$FieldMap: java.lang.reflect.Method method
com.appspa.demo.R$id: int accessibility_custom_action_4
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: long serialVersionUID
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver parent
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mIsCheckedColumn
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnError: org.reactivestreams.Subscriber subscriber
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
io.reactivex.internal.schedulers.ScheduledRunnable: int PARENT_INDEX
androidx.appcompat.app.TwilightCalculator: int DAY
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: io.reactivex.MaybeObserver downstream
okio.ByteString: int hashCode
io.reactivex.internal.operators.observable.ObservableRange: long end
retrofit2.ParameterHandler$Path: int p
com.appspa.demo.R$dimen: int notification_right_icon_size
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: java.util.concurrent.atomic.AtomicLong requested
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionButton
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver: io.reactivex.functions.BiPredicate comparer
com.xuexiang.xhttp2.R$styleable: int DrawerArrowToggle_arrowShaftLength
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler IO
androidx.activity.R$drawable: int notification_bg_normal
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: io.reactivex.internal.disposables.SequentialDisposable timer
com.appspa.update.UpdateManager$Builder: com.appspa.update.proxy.IUpdateChecker updateChecker
androidx.appcompat.R$drawable: int abc_seekbar_track_material
com.appspa.update.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.google.gson.internal.UnsafeAllocator$2: int val$constructorId
androidx.appcompat.R$styleable: int MenuItem_android_onClick
androidx.core.R$dimen: int notification_right_side_padding_top
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: io.reactivex.CompletableSource other
com.appspa.update.R$anim: int abc_slide_in_top
io.reactivex.internal.operators.maybe.MaybeZipIterable$SingletonArrayFunc: io.reactivex.internal.operators.maybe.MaybeZipIterable this$0
io.reactivex.internal.operators.parallel.ParallelFilter: io.reactivex.parallel.ParallelFlowable source
com.google.gson.stream.JsonReader: int PEEKED_UNQUOTED
androidx.appcompat.widget.ActivityChooserModel: android.content.Intent mIntent
androidx.vectordrawable.R$styleable: int[] FontFamilyFont
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_max
androidx.appcompat.R$string: int abc_search_hint
com.appspa.update.R$id: int screen
androidx.appcompat.view.menu.ExpandedMenuView: int mAnimations
com.appspa.update.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
androidx.appcompat.R$dimen: int abc_alert_dialog_button_dimen
com.appspa.update.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.appspa.demo.R$id: int action_menu_divider
androidx.activity.R$styleable: int GradientColor_android_centerY
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: boolean delayErrors
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable: io.reactivex.Observable parent
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: org.reactivestreams.Subscription upstream
androidx.appcompat.widget.ScrollingTabContainerView$1: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.appspa.update.R$styleable: int FontFamily_fontProviderCerts
androidx.fragment.R$drawable: int notification_bg
com.appspa.update.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.appspa.update.R$color: int abc_search_url_text
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_LAST_MODIFIED
com.xuexiang.xhttp2.R$style: int AlertDialog_AppCompat
androidx.drawerlayout.widget.DrawerLayout: java.util.List mListeners
com.appspa.demo.R$id: int notification_main_column
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable: java.lang.Iterable sources
androidx.appcompat.view.menu.MenuItemImpl$1: androidx.appcompat.view.menu.MenuItemImpl this$0
com.appspa.update.R$dimen: int space_close_line_width
androidx.fragment.app.FragmentStatePagerAdapter: int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT
com.appspa.demo.R$string: int abc_shareactionprovider_share_with_application
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.widget.MenuPopupWindow mPopup
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.FragmentTransaction mCurTransaction
androidx.customview.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.util.AtomicFile: java.io.File mBackupName
org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl: int parameterAdjustmentFactor
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: long serialVersionUID
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: java.util.concurrent.Semaphore notify
com.appspa.demo.R$styleable: int PopupWindow_overlapAnchor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int LINECAP_ROUND
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingTopNoTitle
retrofit2.Retrofit$1: java.lang.Object[] emptyArgs
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.Object x509TrustManagerExtensions
androidx.drawerlayout.R$dimen: int notification_top_pad_large_text
io.reactivex.internal.schedulers.AbstractDirectTask: java.util.concurrent.FutureTask DISPOSED
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_spinnerStyle
com.zhy.http.okhttp.request.OtherRequest: java.lang.String content
com.appspa.demo.R$string: int space_lab_downloading
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Subhead_Inverse
androidx.customview.R$styleable: int FontFamily_fontProviderFetchStrategy
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: java.lang.Object value
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_PROGRESS
androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext
io.reactivex.internal.operators.single.SingleZipIterable: io.reactivex.functions.Function zipper
androidx.appcompat.R$attr: int titleTextColor
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: boolean otherDone
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: int maxConcurrency
io.reactivex.internal.operators.observable.ObservableAny: io.reactivex.functions.Predicate predicate
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: io.reactivex.functions.Action onOverflow
com.appspa.demo.R$layout: int notification_action_tombstone
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int DOUBLE_TAP_TIMEOUT
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode mIconTintMode
io.reactivex.internal.operators.flowable.FlowableSingleSingle: io.reactivex.Flowable source
com.xuexiang.xhttp2.R$attr: int defaultQueryHint
io.reactivex.internal.operators.observable.ObservableRangeLong: long start
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.appspa.update.R$styleable: int AppCompatTheme_homeAsUpIndicator
androidx.activity.R$dimen: int compat_button_inset_vertical_material
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar_TabText
androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: boolean terminated
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded
androidx.appcompat.widget.PopupMenu: androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener mMenuItemClickListener
com.appspa.update.R$styleable: int ColorStateListItem_alpha
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_endX
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect
com.xuexiang.xhttp2.R$attr: int homeAsUpIndicator
androidx.appcompat.R$styleable: int DrawerArrowToggle_barLength
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: java.util.concurrent.atomic.AtomicReference other
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: boolean outputFused
com.appspa.update.R$styleable: int View_android_focusable
androidx.appcompat.widget.ActionMenuPresenter: int mOpenSubMenuId
androidx.core.widget.EdgeEffectCompat: android.widget.EdgeEffect mEdgeEffect
com.xuexiang.xhttp2.R$attr: int queryHint
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: io.reactivex.functions.Action onComplete
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem$OnMenuItemClickListener mClickListener
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: io.reactivex.internal.disposables.SequentialDisposable direct
androidx.viewpager.R$dimen: int compat_button_padding_vertical_material
com.xuexiang.xhttp2.model.ApiResult: java.lang.String CODE
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe: boolean delayErrors
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.view.LayoutInflater mDropDownInflater
androidx.vectordrawable.R$id: int action_text
okhttp3.Challenge: java.util.Map authParams
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
androidx.appcompat.R$style: int Widget_AppCompat_ListView_Menu
androidx.core.content.pm.ShortcutInfoCompat: android.content.ComponentName mActivity
com.xuexiang.xhttp2.R$attr: int tooltipForegroundColor
androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_NONE
androidx.appcompat.widget.AbsActionBarView: int FADE_DURATION
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: retrofit2.Callback val$callback
com.appspa.demo.R$attr: int layout
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_alertDialogStyle
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: io.reactivex.Observer downstream
androidx.appcompat.R$styleable: int MenuItem_android_title
androidx.viewpager.R$id: int info
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver parent
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$styleable: int AlertDialog_buttonIconDimen
androidx.activity.R$id: int action_divider
com.appspa.update.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.appspa.update.R$styleable: int AppCompatTheme_colorAccent
androidx.appcompat.app.TwilightCalculator: float OBLIQUITY
com.appspa.update.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
androidx.core.app.TaskStackBuilder: java.util.ArrayList mIntents
androidx.core.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemAlphabeticModifiers
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
io.reactivex.processors.BehaviorProcessor: java.util.concurrent.locks.Lock writeLock
com.appspa.demo.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String UTC_ID
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: java.util.concurrent.TimeUnit unit
androidx.lifecycle.ViewModelProvider: java.lang.String DEFAULT_KEY
androidx.appcompat.app.AlertController$AlertParams: android.view.View mView
io.reactivex.internal.operators.flowable.FlowableIntervalRange: long initialDelay
io.reactivex.internal.operators.flowable.FlowableGroupBy: io.reactivex.functions.Function valueSelector
com.appspa.update.R$drawable: int abc_dialog_material_background
io.reactivex.internal.operators.maybe.MaybeDoFinally: io.reactivex.functions.Action onFinally
org.aspectj.runtime.reflect.SignatureImpl: java.lang.Class declaringType
androidx.vectordrawable.animated.R$dimen: int notification_action_icon_size
com.appspa.demo.R$styleable: int ActionBar_backgroundSplit
androidx.loader.R$styleable: int FontFamilyFont_ttcIndex
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: int MAX_ACTION_BUTTONS
com.xuexiang.xhttp2.R$style: int Theme_AppCompat
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.xuexiang.xhttp2.reflect.TypeToken: java.lang.reflect.Type type
androidx.activity.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.app.AppOpsManagerCompat: int MODE_ALLOWED
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_gradientRadius
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: io.reactivex.disposables.CompositeDisposable observers
com.appspa.update.entity.UpdateError$ERROR: int CHECK_PARSE
io.reactivex.internal.operators.maybe.MaybeUsing: io.reactivex.functions.Function sourceSupplier
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: long serialVersionUID
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mAnchorView
com.xuexiang.xhttp2.R$attr: int lineHeight
androidx.activity.ComponentActivity: int mContentLayoutId
com.appspa.update.R$dimen: int abc_dropdownitem_text_padding_left
com.appspa.update.R$styleable: int AppCompatTheme_listMenuViewStyle
com.xuexiang.xhttp2.R$attr: int actionBarSize
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$SequentialDispose: java.lang.Runnable decoratedRun
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onInitSingleHandler
com.xuexiang.xhttp2.R$dimen: int abc_control_padding_material
androidx.fragment.R$id: int accessibility_custom_action_22
androidx.core.provider.FontsContractCompat: java.lang.Object sLock
com.xuexiang.xhttp2.R$color: int material_grey_600
androidx.fragment.R$dimen: int notification_big_circle_margin
androidx.core.internal.view.SupportMenu: int CATEGORY_SHIFT
com.appspa.update.R$styleable: int TextAppearance_android_typeface
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.xuexiang.xhttp2.R$style: int Base_V7_Theme_AppCompat_Light
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscription: java.util.concurrent.Flow$Subscription flow
androidx.appcompat.widget.AppCompatSpinner: android.content.Context mPopupContext
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: int prefetch
com.xuexiang.xhttp2.R$attr: int showDividers
com.xuexiang.xhttp2.R$dimen: int tooltip_precise_anchor_threshold
androidx.appcompat.widget.ListPopupWindow: java.lang.String TAG
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle: io.reactivex.functions.Function mapper
com.google.gson.internal.ConstructorConstructor$3: com.google.gson.internal.ConstructorConstructor this$0
com.appspa.update.utils.ShellUtils: java.lang.String COMMAND_SU
retrofit2.ParameterHandler$Header: java.lang.String name
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mMutated
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
androidx.fragment.R$id: int accessibility_custom_action_9
okhttp3.internal.http2.Http2Connection$PingRunnable: int payload2
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: boolean cancelled
retrofit2.ParameterHandler$FieldMap: boolean encoded
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$attr: int actionBarWidgetTheme
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: boolean done
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_EXPIRES
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: io.reactivex.Observer downstream
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.core.widget.AutoScrollHelper: boolean mNeedsCancel
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxDescent
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint
androidx.appcompat.view.menu.ActionMenuItem: int HIDDEN
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$outNames
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: io.reactivex.functions.Function keySelector
okhttp3.ResponseBody$1: okio.BufferedSource val$content
io.reactivex.internal.operators.observable.ObservableReplay$Replay: io.reactivex.Observable observable
androidx.core.text.util.FindAddress: java.lang.String WORD_END
com.appspa.update.proxy.impl.DefaultUpdateChecker$1: com.appspa.update.proxy.IUpdateProxy val$updateProxy
androidx.appcompat.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
androidx.appcompat.R$dimen: int abc_text_size_subhead_material
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: java.lang.Object[] latest
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: boolean done
androidx.appcompat.R$styleable: int Toolbar_menu
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_orientation
androidx.appcompat.widget.ListPopupWindow: android.widget.PopupWindow mPopup
androidx.core.util.LogWriter: java.lang.String mTag
com.xuexiang.xhttp2.R$drawable: int abc_list_longpressed_holo
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedReplayCallable: int bufferSize
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup
androidx.drawerlayout.widget.DrawerLayout: int mLockModeStart
androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: boolean delayErrors
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: long serialVersionUID
com.appspa.update.R$attr: int colorControlActivated
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: boolean timerFired
okhttp3.internal.cache.DiskLruCache: java.lang.Runnable cleanupRunnable
androidx.vectordrawable.R$id: int accessibility_custom_action_11
okio.HashingSink: javax.crypto.Mac mac
androidx.appcompat.R$dimen: int notification_small_icon_size_as_large
com.appspa.demo.R$dimen: int hint_alpha_material_light
androidx.vectordrawable.animated.R$drawable: int notify_panel_notification_icon_bg
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent: java.lang.Object initialValue
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: io.reactivex.functions.Function mapper
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter
io.reactivex.internal.operators.observable.ObservableCollectSingle: io.reactivex.functions.BiConsumer collector
androidx.appcompat.R$styleable: int DrawerArrowToggle_thickness
androidx.appcompat.R$styleable: int[] ActionBar
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.appspa.update.entity.UpdateError$ERROR: int CHECK_NET_REQUEST
androidx.fragment.app.ListFragment$1: androidx.fragment.app.ListFragment this$0
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableItem_android_id
androidx.appcompat.app.WindowDecorActionBar$3: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.vectordrawable.R$dimen: int compat_notification_large_icon_max_width
com.appspa.demo.entity.CustomResult$VersionInfo: boolean hasUpdate
io.reactivex.internal.operators.parallel.ParallelJoin: int prefetch
com.appspa.update.R$attr: int fontWeight
com.xuexiang.xhttp2.R$color: int error_color_material_dark
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.appspa.demo.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.appspa.update.R$id: int accessibility_custom_action_21
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: long end
androidx.appcompat.R$styleable: int ActionBar_backgroundSplit
com.xuexiang.xhttp2.R$drawable: int abc_spinner_mtrl_am_alpha
io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: long execTime
com.google.gson.internal.bind.TypeAdapters$33: com.google.gson.TypeAdapter val$typeAdapter
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: boolean done
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker[] eventLoops
io.reactivex.internal.operators.flowable.FlowableAny: io.reactivex.functions.Predicate predicate
androidx.core.os.CancellationSignal: java.lang.Object mCancellationSignalObj
androidx.appcompat.R$id: int accessibility_custom_action_5
com.xuexiang.xhttp2.R$attr: int toolbarNavigationButtonStyle
androidx.appcompat.R$drawable: int abc_seekbar_thumb_material
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: long timeout
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List mMessages
androidx.core.R$id: int accessibility_action_clickable_span
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME
okhttp3.internal.http1.Http1Codec: okhttp3.OkHttpClient client
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
androidx.appcompat.widget.TooltipCompatHandler$2: androidx.appcompat.widget.TooltipCompatHandler this$0
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: long count
androidx.appcompat.app.AlertController$AlertParams$2: int mIsCheckedIndex
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: java.util.concurrent.atomic.AtomicReference task
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter mColorFilter
androidx.appcompat.resources.R$attr: int font
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.google.gson.Gson: boolean prettyPrinting
com.appspa.demo.http.OKHttpUpdateHttpService$2: com.appspa.demo.http.OKHttpUpdateHttpService this$0
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mEpicenterBounds
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] mParticipants
io.reactivex.internal.operators.completable.CompletablePeek: io.reactivex.functions.Action onAfterTerminate
com.appspa.demo.R$dimen: int space_button_text_size_mini
com.appspa.update.R$style: int Base_TextAppearance_AppCompat
androidx.appcompat.app.TwilightManager$TwilightState: boolean isNight
androidx.appcompat.R$id: int unchecked
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable: io.reactivex.ObservableSource source
okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] cleanFiles
androidx.savedstate.Recreator$SavedStateProvider: java.util.Set mClasses
androidx.appcompat.R$styleable: int SwitchCompat_showText
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber parent
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: boolean done
io.reactivex.internal.operators.maybe.MaybeDefer: java.util.concurrent.Callable maybeSupplier
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mIcon
org.aspectj.internal.lang.reflect.StringToType$1: java.lang.Class val$baseClass
com.google.gson.reflect.TypeToken: java.lang.reflect.Type type
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: boolean syncFused
androidx.collection.SimpleArrayMap: boolean DEBUG
androidx.appcompat.widget.ToolbarWidgetWrapper$2: int val$visibility
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.appspa.update.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.appspa.update.R$style: int Base_V7_Widget_AppCompat_EditText
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: io.reactivex.disposables.Disposable upstream
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR
io.reactivex.internal.operators.flowable.FlowableCollect: io.reactivex.functions.BiConsumer collector
com.xuexiang.xhttp2.R$style: int TextAppearance_Compat_Notification_Time
io.reactivex.internal.operators.maybe.MaybeZipArray: io.reactivex.MaybeSource[] sources
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String EXTRA_LONG_LIVED
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Menu
com.appspa.update.entity.UpdateError: int mCode
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: long serialVersionUID
com.appspa.update.R$style: int XUpdate_Fragment_Dialog
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: io.reactivex.Scheduler$Worker worker
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowNoTitle
com.google.gson.internal.ConstructorConstructor$9: com.google.gson.internal.ConstructorConstructor this$0
androidx.vectordrawable.animated.R$dimen: int compat_notification_large_icon_max_width
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableTakePublisher: org.reactivestreams.Publisher source
io.reactivex.internal.operators.flowable.FlowableFlatMap: int maxConcurrency
com.appspa.demo.R$layout: int abc_search_view
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
com.appspa.update.R$attr: int fontProviderFetchTimeout
io.reactivex.internal.operators.flowable.FlowableSamplePublisher: org.reactivestreams.Publisher source
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Large
androidx.viewpager.R$styleable: int FontFamilyFont_android_font
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: org.reactivestreams.Publisher source
androidx.vectordrawable.animated.R$dimen: int notification_media_narrow_margin
androidx.appcompat.R$styleable: int AppCompatTheme_panelMenuListWidth
androidx.appcompat.app.AlertController: android.view.View mCustomTitleView
com.appspa.demo.R$styleable: int Toolbar_navigationContentDescription
com.appspa.demo.R$styleable: int Toolbar_menu
com.appspa.update.R$attr: int buttonStyleSmall
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
androidx.appcompat.R$color: int error_color_material_light
com.xuexiang.xhttp2.R$drawable: int abc_edit_text_material
androidx.vectordrawable.R$attr: int fontProviderAuthority
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutNumericModifiers
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
io.reactivex.internal.operators.completable.CompletableDelay$Delay: long delay
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: long timeout
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_overflow_padding_end_material
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe: io.reactivex.internal.util.ErrorMode errorMode
androidx.appcompat.widget.SearchView: boolean mExpandedInActionView
androidx.appcompat.view.menu.CascadingMenuPopup$3: androidx.appcompat.view.menu.CascadingMenuPopup this$0
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: io.reactivex.functions.Function leftEnd
androidx.appcompat.R$styleable: int Toolbar_navigationIcon
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: long serialVersionUID
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
com.xuexiang.xhttp2.R$id: int list_item
com.appspa.update.R$style: int Widget_AppCompat_Toolbar
com.appspa.update.R$styleable: int Toolbar_titleTextAppearance
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mSubMenuArrowView
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
androidx.core.app.AppOpsManagerCompat: int MODE_IGNORED
androidx.loader.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: io.reactivex.internal.queue.MpscLinkedQueue queue
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: boolean done
com.appspa.update.R$style: int Base_V22_Theme_AppCompat
com.xuexiang.xhttp2.R$drawable: int notification_bg_low_pressed
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: boolean done
androidx.appcompat.R$color: int primary_text_default_material_dark
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontVariationSettings
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY
io.reactivex.internal.util.OpenHashSet: java.lang.Object[] keys
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: long index
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$style: int Widget_AppCompat_Button
org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl: java.lang.String name
androidx.vectordrawable.R$dimen: int notification_small_icon_background_padding
androidx.appcompat.app.AlertController$AlertParams: android.content.Context mContext
androidx.fragment.app.ListFragment: boolean mListShown
com.appspa.demo.R$style: int Base_Theme_AppCompat_CompactMenu
com.xuexiang.xhttp2.R$styleable: int[] SwitchCompat
com.appspa.demo.R$styleable: int AppCompatTheme_alertDialogStyle
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementTargetNames
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: int bufferSize
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: boolean eager
com.appspa.update.R$color: int background_floating_material_light
com.appspa.update.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.appspa.update.R$attr: int subtitleTextAppearance
io.reactivex.internal.subscribers.ForEachWhileSubscriber: boolean done
com.appspa.update.widget.UpdateDialogActivity: android.widget.Button mBtnBackgroundUpdate
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: java.util.concurrent.Callable other
androidx.appcompat.resources.R$id: int accessibility_custom_action_3
com.appspa.update.R$attr: int fontStyle
com.appspa.update.R$color: int abc_search_url_text_normal
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: java.util.concurrent.atomic.AtomicInteger wip
com.appspa.demo.R$drawable: int abc_item_background_holo_light
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnMenuItemClickListener mClickListener
com.appspa.demo.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
androidx.appcompat.R$style: int Base_V26_Theme_AppCompat
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_ARCHIVE
androidx.appcompat.R$styleable: int ActionBar_navigationMode
com.appspa.demo.R$styleable: int Toolbar_titleMarginTop
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: long serialVersionUID
androidx.appcompat.R$attr: int layout
androidx.appcompat.resources.R$layout: int custom_dialog
okhttp3.HttpUrl: java.util.List queryNamesAndValues
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: java.lang.Object[] row
androidx.appcompat.widget.SuggestionsAdapter: int mFlagsCol
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord lastInTransaction
com.google.gson.internal.bind.SqlDateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.appcompat.widget.TooltipPopup: int[] mTmpAppPos
androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeEnd
androidx.core.util.TimeUtils: int HUNDRED_DAY_FIELD_LEN
androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$id: int activity_chooser_view_content
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SPIN
com.xuexiang.xhttp2.R$attr: int actionButtonStyle
com.appspa.demo.R$color: int dim_foreground_material_dark
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
androidx.fragment.app.FragmentTransitionImpl$2: androidx.fragment.app.FragmentTransitionImpl this$0
io.reactivex.internal.operators.observable.ObservableObserveOn: boolean delayError
com.xuexiang.xhttp2.R$attr: int autoSizeTextType
io.reactivex.internal.operators.parallel.ParallelFlatMap: io.reactivex.functions.Function mapper
retrofit2.ParameterHandler$Headers: java.lang.reflect.Method method
androidx.appcompat.R$attr: int ratingBarStyleSmall
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
androidx.core.app.BundleCompat$BundleCompatBaseImpl: java.lang.reflect.Method sPutIBinderMethod
com.xuexiang.xhttp2.R$attr: int backgroundTint
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: io.reactivex.functions.BooleanSupplier stop
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_11
okhttp3.ConnectionPool: java.util.Deque connections
com.appspa.update.widget.UpdateDialogFragment: android.widget.Button mBtnBackgroundUpdate
retrofit2.OkHttpCall: okhttp3.Call rawCall
androidx.viewpager.R$styleable: int GradientColor_android_centerY
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
com.xuexiang.xhttp2.R$layout: int abc_search_view
com.appspa.demo.R$color: int accent_material_dark
com.appspa.demo.R$styleable: int Toolbar_contentInsetStart
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: boolean done
retrofit2.adapter.rxjava2.RxJava2CallAdapter: java.lang.reflect.Type responseType
okhttp3.CacheControl: int sMaxAgeSeconds
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle: io.reactivex.Flowable source
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId
androidx.appcompat.app.TwilightCalculator: long UTC_2000
androidx.core.app.NotificationManagerCompat: java.lang.Object sLock
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$attr: int tint
com.appspa.update.R$attr: int buttonPanelSideLayout
io.reactivex.internal.subscribers.BlockingSubscriber: java.util.Queue queue
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: io.reactivex.MaybeObserver downstream
androidx.appcompat.R$id: int action_bar_subtitle
com.xuexiang.xhttp2.R$styleable: int ActionBar_subtitle
com.xuexiang.xhttp2.R$styleable: int SearchView_android_imeOptions
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: org.reactivestreams.Subscriber child
androidx.appcompat.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
io.reactivex.internal.operators.observable.ObservableGroupBy$State: java.util.concurrent.atomic.AtomicBoolean cancelled
com.xuexiang.xhttp2.R$dimen: int tooltip_vertical_padding
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_E
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicReference boundary
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: io.reactivex.Observer downstream
com.appspa.demo.R$id: int tag_transition_group
com.appspa.update.proxy.impl.DefaultUpdateChecker$1: java.lang.String val$url
androidx.core.view.PointerIconCompat: int TYPE_COPY
com.xuexiang.xhttp2.R$string: int abc_menu_alt_shortcut_label
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription
retrofit2.BuiltInConverters: boolean checkForKotlinUnit
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: java.lang.Object v2
com.appspa.demo.R$style: int Platform_V25_AppCompat_Light
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.TwilightManager mTwilightManager
androidx.viewpager.widget.ViewPager: int mCurItem
androidx.appcompat.R$attr: int actionModeStyle
com.appspa.demo.R$id: int tag_accessibility_heading
com.xuexiang.xhttp2.R$drawable: int tooltip_frame_light
okio.AsyncTimeout$1: okio.AsyncTimeout this$0
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight
io.reactivex.internal.observers.DisposableLambdaObserver: io.reactivex.Observer downstream
com.appspa.update.R$color: int switch_thumb_disabled_material_dark
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerOuter: io.reactivex.functions.Function mapper
com.appspa.demo.R$dimen: int abc_dialog_min_width_minor
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
androidx.customview.R$styleable: int ColorStateListItem_android_alpha
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$attr: int dialogCornerRadius
retrofit2.adapter.rxjava2.RxJava2CallAdapter: boolean isAsync
retrofit2.adapter.rxjava2.RxJava2CallAdapter: boolean isCompletable
retrofit2.ParameterHandler$Body: retrofit2.Converter converter
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: java.util.concurrent.Future evictorTask
androidx.drawerlayout.R$dimen: int notification_big_circle_margin
com.appspa.demo.R$style: int Widget_AppCompat_PopupMenu_Overflow
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: io.reactivex.functions.Consumer onNext
androidx.appcompat.R$dimen: int notification_right_icon_size
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
io.reactivex.internal.operators.observable.ObservableFromIterable: java.lang.Iterable source
androidx.loader.R$styleable: int FontFamilyFont_font
io.reactivex.internal.operators.flowable.FlowableDoOnEach: io.reactivex.functions.Action onAfterTerminate
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.appcompat.R$string: int abc_action_bar_up_description
com.appspa.demo.R$style: int Widget_AppCompat_ActionButton_CloseMode
androidx.appcompat.app.AppCompatDelegate: int FEATURE_SUPPORT_ACTION_BAR_OVERLAY
com.appspa.update.R$styleable: int SearchView_commitIcon
androidx.appcompat.R$attr: int drawableEndCompat
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_1
androidx.activity.R$id: int async
androidx.fragment.app.FragmentTabHost: androidx.fragment.app.FragmentManager mFragmentManager
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.String LOGTAG
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver parent
androidx.fragment.app.Fragment: boolean mFromLayout
androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMinTextSizeInPx
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_FORWARD
com.google.gson.Gson: com.google.gson.FieldNamingStrategy fieldNamingStrategy
com.xuexiang.xhttp2.R$color: int highlighted_text_material_light
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_FULL_SCREEN
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontWeight
com.appspa.update.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
io.reactivex.internal.operators.completable.CompletableDefer: java.util.concurrent.Callable completableSupplier
com.appspa.demo.R$id: int disableHome
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpCodec
com.appspa.demo.R$styleable: int MenuItem_iconTintMode
android.support.v4.app.INotificationSideChannel$Stub: int TRANSACTION_cancel
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: io.reactivex.MaybeObserver downstream
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_LTR
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.String LOG_TAG
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.content.Context mContext
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: boolean done
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCHSCREEN
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderFetchStrategy
com.appspa.update.widget.NumberProgressBar: boolean mIfDrawText
androidx.appcompat.view.SupportMenuInflater$MenuState: int defaultItemId
androidx.appcompat.R$attr: int titleMarginBottom
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: java.lang.reflect.Method doBeforeTextChanged
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN
androidx.appcompat.R$attr: int itemPadding
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: long produced
com.appspa.demo.R$style: int Base_V26_Theme_AppCompat_Light
com.xuexiang.xhttp2.R$dimen: int abc_edit_text_inset_top_material
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: io.reactivex.functions.Function combiner
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableCreate: io.reactivex.BackpressureStrategy backpressure
io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable: java.lang.Object value
retrofit2.RequestFactory: boolean isKotlinSuspendFunction
androidx.core.view.ViewCompat: boolean sMinWidthFieldFetched
androidx.appcompat.R$styleable: int[] View
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: java.util.concurrent.atomic.AtomicLong index
com.xuexiang.xhttp2.cookie.PersistentCookieStore: java.util.Map cookies
androidx.vectordrawable.animated.R$id: int notification_main_column
androidx.appcompat.widget.AppCompatSpinner$SavedState: boolean mShowDropdown
com.appspa.update.R$styleable: int StateListDrawable_android_constantSize
com.appspa.update.R$id: int progress_horizontal
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: org.reactivestreams.Subscriber downstream
androidx.core.R$drawable: int notification_bg
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets
com.appspa.demo.R$attr: int drawableSize
com.appspa.demo.R$styleable: int AlertDialog_listLayout
com.jakewharton.disklrucache.DiskLruCache: java.util.regex.Pattern LEGAL_KEY_PATTERN
com.xuexiang.xhttp2.R$dimen: int abc_search_view_preferred_height
com.appspa.update.widget.NumberProgressBar: int mMaxProgress
com.appspa.update.R$styleable: int MenuItem_tooltipText
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: org.reactivestreams.Subscriber downstream
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: int prefetch
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display1
androidx.core.app.JobIntentService$WorkEnqueuer: int mJobId
io.reactivex.internal.operators.single.SingleZipIterable: java.lang.Iterable sources
androidx.loader.content.Loader: int mId
androidx.vectordrawable.R$id: int text
io.reactivex.internal.operators.flowable.FlowableRefCount: io.reactivex.flowables.ConnectableFlowable source
com.appspa.update.widget.UpdateDialog: android.widget.TextView mTvTitle
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_POSITION
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.observable.ObservableElementAtMaybe: io.reactivex.ObservableSource source
com.xuexiang.xhttp2.R$color: int material_blue_grey_800
com.xuexiang.xhttp2.R$dimen: int compat_button_inset_vertical_material
androidx.customview.R$style: int TextAppearance_Compat_Notification_Title
com.xuexiang.xhttp2.R$attr: int listChoiceBackgroundIndicator
org.aspectj.runtime.reflect.AdviceSignatureImpl: java.lang.Class returnType
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: android.content.SharedPreferences cookiePrefs
com.xuexiang.xhttp2.R$styleable: int[] FontFamilyFont
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver otherObserver
androidx.drawerlayout.R$id: int icon_group
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int[][] mStateSets
androidx.core.view.ViewCompat: int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
com.appspa.update.R$styleable: int AppCompatTheme_tooltipFrameBackground
androidx.appcompat.widget.ThemeUtils: int[] TEMP_ARRAY
com.appspa.demo.R$dimen: int notification_content_margin_start
com.xuexiang.xhttp2.R$style: int Base_V28_Theme_AppCompat_Light
com.appspa.update.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.appcompat.resources.R$layout: int notification_template_part_chronometer
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mContentDescription
io.reactivex.internal.operators.observable.ObservableAutoConnect: io.reactivex.functions.Consumer connection
androidx.appcompat.R$string: int abc_searchview_description_search
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableStartTint
com.appspa.demo.R$dimen: int abc_dialog_title_divider_material
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: long period
androidx.lifecycle.ComputableLiveData: java.util.concurrent.atomic.AtomicBoolean mComputing
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$id: int action_bar_title
com.xuexiang.xhttp2.R$id: int search_bar
com.appspa.demo.R$string: int space_error_install_failed
androidx.vectordrawable.animated.R$dimen: int compat_button_inset_vertical_material
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
com.xuexiang.xhttp2.R$styleable: int DrawerArrowToggle_drawableSize
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: long index
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer
androidx.fragment.app.ListFragment: android.widget.TextView mStandardEmptyView
androidx.appcompat.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.appcompat.app.ResourcesFlusher: boolean sDrawableCacheFieldFetched
androidx.customview.R$dimen: int notification_media_narrow_margin
androidx.core.app.AppLaunchChecker: java.lang.String KEY_STARTED_FROM_LAUNCHER
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.FragmentManager mFragmentManager
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: androidx.appcompat.app.ToolbarActionBar this$0
io.reactivex.internal.operators.observable.ObservableObserveOn: int bufferSize
com.appspa.demo.R$styleable: int TextAppearance_android_shadowDy
io.reactivex.subjects.ReplaySubject$ReplayDisposable: long serialVersionUID
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_Button
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory UUID_FACTORY
com.appspa.update.R$styleable: int FontFamilyFont_android_fontWeight
io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object SYNC_DISPOSED
org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind AFTER_THROWING
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderAuthority
com.appspa.demo.R$dimen: int compat_button_padding_vertical_material
com.xuexiang.xhttp2.model.HttpParams$FileWrapper: java.lang.String fileName
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStarted
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: boolean done
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver[] observers
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sActionsField
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged: io.reactivex.functions.Function keySelector
com.appspa.demo.R$style: int TextAppearance_AppCompat_Button
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.reflect.Type type
com.appspa.update.R$attr: int numericModifiers
androidx.appcompat.resources.R$layout: int notification_template_custom_big
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_RIGHT
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarStyle
com.appspa.update.R$anim: int abc_slide_in_bottom
io.reactivex.internal.operators.observable.ObservableIntervalRange: io.reactivex.Scheduler scheduler
okhttp3.EventListener$2: okhttp3.EventListener val$listener
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$CloseGuard closeGuard
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: io.reactivex.Scheduler$Worker worker
androidx.appcompat.R$styleable: int ActionMode_titleTextStyle
com.xuexiang.xhttp2.R$id: int title_template
androidx.appcompat.R$attr: int buttonCompat
com.appspa.update.R$styleable: int[] MenuItem
com.appspa.demo.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
org.aspectj.runtime.reflect.StringMaker: boolean includeEnclosingPoint
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: io.reactivex.internal.fuseable.QueueSubscription qs
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.widget.AbsActionBarView: int mContentHeight
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: io.reactivex.functions.Function mapper
androidx.appcompat.R$color: int bright_foreground_disabled_material_dark
androidx.core.R$dimen: int notification_subtext_size
androidx.appcompat.R$id: int search_src_text
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.os.IBinder iBinder
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
com.google.gson.Gson: boolean generateNonExecutableJson
io.reactivex.internal.subscribers.BlockingBaseSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged: io.reactivex.functions.Function keySelector
androidx.core.app.RemoteInput: java.lang.String RESULTS_CLIP_LABEL
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.ResourceManagerInternal mResourceManager
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: int prefetch
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: java.lang.Throwable error
androidx.drawerlayout.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.R$color: int bright_foreground_material_dark
io.reactivex.internal.operators.flowable.FlowableRangeLong: long start
io.reactivex.internal.operators.parallel.ParallelFilter: io.reactivex.functions.Predicate predicate
androidx.appcompat.R$drawable: int abc_btn_radio_material_anim
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: io.reactivex.CompletableObserver downstream
com.appspa.demo.R$bool: int abc_config_actionMenuItemAllCaps
com.appspa.update.R$dimen: int space_common_padding
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm
androidx.appcompat.widget.PopupMenu$3: androidx.appcompat.widget.PopupMenu this$0
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver inner
okhttp3.internal.cache.CacheInterceptor$1: boolean cacheRequestClosed
androidx.activity.R$id: int accessibility_custom_action_18
com.xuexiang.xhttp2.R$attr: int fontWeight
androidx.drawerlayout.widget.DrawerLayout: androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate
com.appspa.demo.R$styleable: int[] AnimatedStateListDrawableTransition
io.reactivex.internal.operators.single.SingleFlatMapPublisher: io.reactivex.SingleSource source
androidx.appcompat.R$anim: int abc_grow_fade_in_from_bottom
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: io.reactivex.Observer downstream
io.reactivex.subjects.ReplaySubject$ReplayDisposable: java.lang.Object index
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_3
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: boolean hasValue
androidx.core.os.EnvironmentCompat: java.lang.String TAG
com.appspa.demo.R$drawable: int notification_template_icon_bg
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: io.reactivex.functions.Action onAfterTerminate
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: io.reactivex.ObservableSource open
androidx.savedstate.SavedStateRegistry$1: androidx.savedstate.SavedStateRegistry this$0
com.appspa.demo.R$styleable: int[] MenuGroup
com.appspa.demo.R$drawable: int abc_seekbar_tick_mark_material
androidx.appcompat.R$attr: int textAppearanceSearchResultTitle
com.xuexiang.xhttp2.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.reflect.Type componentType
androidx.fragment.R$id: int tag_accessibility_pane_title
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: io.reactivex.functions.BiFunction reducer
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer: boolean unbounded
com.xuexiang.xhttp2.R$layout: int abc_tooltip
com.appspa.demo.R$attr: int buttonTintMode
androidx.core.app.NotificationCompat$CarExtender: int mColor
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode[] $VALUES
io.reactivex.internal.operators.flowable.FlowableGroupBy: io.reactivex.functions.Function mapFactory
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: io.reactivex.functions.BiPredicate comparer
com.xuexiang.xhttp2.R$attr: int tickMark
okhttp3.Request: okhttp3.HttpUrl url
androidx.core.internal.view.SupportMenu: int CATEGORY_MASK
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
com.appspa.demo.R$dimen: int notification_top_pad
com.appspa.update.R$drawable: int abc_list_selector_holo_light
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver INNER_DISPOSED
com.xuexiang.xhttp2.R$string: int abc_menu_sym_shortcut_label
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: io.reactivex.SingleSource source
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: java.util.Collection buffer
com.appspa.update.R$styleable: int ActionMode_closeItemLayout
androidx.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: io.reactivex.functions.BiFunction resultSelector
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
com.google.gson.stream.JsonReader: int peeked
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory NUMBER_FACTORY
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.LinearLayoutCompat mTabLayout
io.reactivex.internal.operators.maybe.MaybeCreate: io.reactivex.MaybeOnSubscribe source
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: long serialVersionUID
androidx.core.view.MotionEventCompat: int AXIS_TOUCH_MINOR
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object key
com.xuexiang.xhttp2.utils.ApiUtils: com.xuexiang.xhttp2.utils.ApiUtils$IRequestHandler sRequestHandler
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable
androidx.appcompat.widget.ListPopupWindow: android.widget.ListAdapter mAdapter
androidx.activity.R$dimen: int notification_main_column_padding_top
com.appspa.update.R$string: int space_error_check_no_network
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode
com.appspa.update.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.appspa.demo.R$style: int TextAppearance_AppCompat
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder mAdapterMenu
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId
com.appspa.update.R$id: int accessibility_custom_action_29
com.xuexiang.xhttp2.R$color: int abc_primary_text_material_light
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: io.reactivex.functions.Predicate predicate
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle: io.reactivex.functions.BiPredicate comparer
com.appspa.demo.R$attr: int defaultQueryHint
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$attr: int fontProviderFetchStrategy
androidx.customview.R$drawable: int notification_bg_low_normal
retrofit2.OkHttpCall$NoContentResponseBody: okhttp3.MediaType contentType
androidx.appcompat.app.AlertController$4: androidx.appcompat.app.AlertController this$0
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: int leavesToSkip
androidx.appcompat.R$color: int abc_tint_spinner
com.appspa.update.R$attr: int windowActionBar
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: boolean done
com.appspa.update.R$attr: int dividerHorizontal
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$dimen: int notification_top_pad_large_text
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer: int size
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: boolean done
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener
io.reactivex.processors.BehaviorProcessor: java.util.concurrent.locks.ReadWriteLock lock
com.appspa.demo.R$drawable: int abc_btn_check_material_anim
androidx.appcompat.R$styleable: int[] AppCompatTextView
com.appspa.update.R$id: int accessibility_custom_action_4
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableStart
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton_Overflow
com.appspa.demo.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.appcompat.widget.ActionMenuView: java.lang.String TAG
androidx.appcompat.widget.SwitchCompat: android.graphics.Rect mTempRect
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
com.xuexiang.xhttp2.cache.RxCache$Builder: com.xuexiang.xhttp2.cache.converter.IDiskConverter diskConverter
com.appspa.demo.R$id: int listMode
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable INSTANCE
okhttp3.EventListener: okhttp3.EventListener NONE
androidx.appcompat.resources.R$dimen: int notification_right_icon_size
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY
com.appspa.update.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: java.lang.Object value
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer EMPTY_CONSUMER
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: long batchSize
com.appspa.demo.R$style: int TextAppearance_AppCompat_Medium
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.subscriptions.AsyncSubscription: long serialVersionUID
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
androidx.appcompat.R$styleable: int TextAppearance_android_fontFamily
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode IMMEDIATE
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: java.util.Map groups
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: io.reactivex.internal.operators.observable.ObservableZip$ZipObserver[] observers
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: androidx.appcompat.widget.ListPopupWindow this$0
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable INSTANCE
androidx.vectordrawable.R$id: int notification_main_column
io.reactivex.internal.observers.LambdaObserver: io.reactivex.functions.Consumer onNext
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_BRAILLE
androidx.customview.widget.ViewDragHelper: int[] mInitialEdgesTouched
retrofit2.BuiltInConverters$RequestBodyConverter: retrofit2.BuiltInConverters$RequestBodyConverter INSTANCE
com.zhy.http.okhttp.OkHttpUtils$2: int val$id
androidx.appcompat.R$drawable: int btn_radio_on_to_off_mtrl_animation
androidx.core.widget.AutoScrollHelper: float DEFAULT_MAXIMUM_EDGE
androidx.core.R$integer: int status_bar_notification_info_maxnum
com.google.gson.internal.JavaVersion: int majorJavaVersion
androidx.appcompat.R$attr: int actionDropDownStyle
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: int bufferSize
com.appspa.demo.R$id: int accessibility_custom_action_2
io.reactivex.internal.operators.flowable.FlowableTimeout: org.reactivestreams.Publisher firstTimeoutIndicator
androidx.appcompat.R$layout: int abc_expanded_menu_layout
androidx.appcompat.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Resources mResources
com.xuexiang.xhttp2.R$attr: int selectableItemBackground
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: io.reactivex.functions.Function mapper
com.xuexiang.xhttp2.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
androidx.appcompat.R$drawable: int abc_ic_ab_back_material
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher: io.reactivex.functions.Function mapper
com.appspa.update.R$attr: int dialogCornerRadius
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ImageButton
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver parent
androidx.loader.content.ModernAsyncTask: int MESSAGE_POST_RESULT
com.google.gson.internal.LinkedTreeMap: boolean $assertionsDisabled
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder mBuilder
androidx.appcompat.widget.PopupMenu: androidx.appcompat.widget.PopupMenu$OnDismissListener mOnDismissListener
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListener mListener
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay: io.reactivex.Scheduler scheduler
androidx.fragment.R$id: int accessibility_action_clickable_span
io.reactivex.internal.operators.observable.ObservableGroupBy$State: io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver parent
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_NONE
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: io.reactivex.internal.disposables.SequentialDisposable upstream
com.appspa.demo.R$string: int abc_action_mode_done
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$Cancellation: io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber this$0
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: io.reactivex.SingleObserver downstream
androidx.core.internal.view.SupportMenu: int USER_SHIFT
com.appspa.update.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
androidx.appcompat.R$styleable: int TextAppearance_android_shadowDx
com.appspa.update.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
androidx.core.view.MotionEventCompat: int AXIS_RELATIVE_X
io.reactivex.processors.ReplayProcessor$ReplaySubscription: long serialVersionUID
androidx.viewpager.R$attr: int fontWeight
com.appspa.demo.R$color: int abc_tint_seek_thumb
okhttp3.internal.http2.Http2Connection$5: okhttp3.internal.http2.Http2Connection this$0
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$AlertParams this$0
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.collection.CircularIntArray: int mTail
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemListenerMethodName
com.appspa.demo.entity.CustomResult$VersionInfo: boolean isIgnorable
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.resources.R$id: int right_side
androidx.appcompat.R$styleable: int Toolbar_titleMarginStart
androidx.appcompat.R$style: int Widget_AppCompat_SearchView_ActionBar
com.xuexiang.xhttp2.R$attr: int initialActivityCount
androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim
androidx.appcompat.widget.ActivityChooserView: int mDefaultActionButtonContentDescription
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: io.reactivex.Observer downstream
com.appspa.update.R$attr: int tooltipFrameBackground
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
com.xuexiang.xhttp2.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.appspa.demo.R$styleable: int[] XNumberProgressBar
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: org.reactivestreams.Subscriber downstream
androidx.vectordrawable.animated.R$drawable: int notification_action_background
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUSED
androidx.fragment.app.FragmentTransition$2: androidx.fragment.app.FragmentTransitionImpl val$impl
com.xuexiang.xhttp2.R$style: int Base_V21_Theme_AppCompat_Light
androidx.appcompat.widget.SwitchCompat: android.text.TextPaint mTextPaint
io.reactivex.internal.operators.flowable.FlowableDoOnEach: io.reactivex.functions.Consumer onNext
androidx.core.app.NotificationManagerCompat: java.lang.String OP_POST_NOTIFICATION
io.reactivex.internal.operators.observable.ObservableGroupBy$State: java.lang.Object key
com.appspa.demo.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.R$id: int line1
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: long serialVersionUID
com.google.gson.internal.GsonBuildConfig: java.lang.String VERSION
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout
com.xuexiang.xhttp2.R$id: int up
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: io.reactivex.functions.Predicate predicate
com.appspa.demo.R$styleable: int[] ActivityChooserView
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: java.lang.Object u
androidx.appcompat.R$dimen: int abc_edit_text_inset_top_material
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.update.R$dimen: int abc_text_size_menu_header_material
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: io.reactivex.ObservableSource items
okio.GzipSource: java.util.zip.CRC32 crc
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$2: com.xuexiang.xhttp2.transform.func.RetryExceptionFunc this$0
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: int size
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicInteger windows
com.appspa.update.R$attr: int drawableEndCompat
androidx.appcompat.view.menu.MenuBuilder: boolean mGroupDividerEnabled
com.appspa.demo.R$styleable: int AppCompatTextView_drawableTint
androidx.core.text.BidiFormatter$DirectionalityEstimator: int length
androidx.core.widget.ContentLoadingProgressBar: java.lang.Runnable mDelayedHide
com.appspa.update.R$styleable: int AppCompatTheme_colorError
androidx.customview.widget.ViewDragHelper: android.widget.OverScroller mScroller
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: org.reactivestreams.Subscriber downstream
okhttp3.Route: java.net.InetSocketAddress inetSocketAddress
com.google.gson.Gson$5: com.google.gson.TypeAdapter val$longAdapter
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ListView_Menu
io.reactivex.exceptions.CompositeException: java.lang.String message
androidx.core.R$dimen: int compat_button_inset_vertical_material
com.appspa.demo.R$attr: int actionBarTabTextStyle
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTooltipText
com.appspa.demo.R$drawable: int abc_ratingbar_indicator_material
androidx.appcompat.R$attr: int popupTheme
okhttp3.internal.ws.WebSocketWriter$FrameSink: int formatOpcode
com.appspa.update.R$styleable: int ActionMode_background
androidx.customview.R$id: int chronometer
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Class sFontFamily
androidx.core.view.PointerIconCompat: int TYPE_VERTICAL_TEXT
androidx.core.R$id: int accessibility_custom_action_6
com.appspa.demo.R$styleable: int AppCompatTheme_toolbarStyle
io.reactivex.internal.operators.single.SingleOnErrorReturn: java.lang.Object value
com.google.gson.internal.LinkedTreeMap: int size
com.appspa.demo.R$attr: int tooltipFrameBackground
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
com.appspa.demo.R$id: int accessibility_custom_action_15
okhttp3.Request$Builder: okhttp3.HttpUrl url
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display3
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.savedstate.SavedStateRegistry: java.lang.String SAVED_COMPONENTS_KEY
com.appspa.update.R$styleable: int AlertDialog_singleChoiceItemLayout
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback val$callback
androidx.appcompat.R$layout: int abc_search_dropdown_item_icons_2line
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: long serialVersionUID
androidx.fragment.R$id: int icon
com.google.gson.stream.JsonReader: int NUMBER_CHAR_SIGN
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper: androidx.appcompat.app.ToolbarActionBar this$0
androidx.appcompat.resources.R$id: int accessibility_custom_action_18
com.appspa.update.R$styleable: int TextAppearance_fontVariationSettings
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mItems
androidx.appcompat.widget.DropDownListView: int mMotionPosition
io.reactivex.processors.PublishProcessor$PublishSubscription: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$styleable: int[] ListPopupWindow
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence mConversationTitle
androidx.core.text.HtmlCompat: int TO_HTML_PARAGRAPH_LINES_INDIVIDUAL
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll
androidx.fragment.R$attr: int fontWeight
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$RecycleListView val$listView
okhttp3.Cache$CacheRequestImpl: okio.Sink body
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver observer1
com.appspa.demo.R$attr: int titleMarginEnd
androidx.appcompat.R$styleable: int[] GradientColorItem
androidx.core.app.RemoteInput: java.lang.String TAG
androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC
com.appspa.update.R$color: int bright_foreground_inverse_material_dark
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: java.lang.Integer RIGHT_VALUE
androidx.loader.app.LoaderManagerImpl: boolean DEBUG
androidx.core.content.res.FontResourcesParserCompat: int INFINITE_TIMEOUT_VALUE
com.appspa.demo.R$id: int accessibility_custom_action_7
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: java.lang.Object v2
com.appspa.update.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.xuexiang.xhttp2.R$dimen: int abc_dialog_fixed_width_minor
com.google.gson.Gson: java.lang.String datePattern
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: io.reactivex.disposables.CompositeDisposable set
androidx.appcompat.widget.SearchView: android.view.View mSubmitArea
androidx.appcompat.R$dimen: int tooltip_margin
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: long time
com.appspa.demo.R$color: int foreground_material_light
com.xuexiang.xhttp2.R$styleable: int MenuItem_alphabeticModifiers
androidx.appcompat.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.google.gson.stream.JsonReader: int PEEKED_END_ARRAY
okhttp3.internal.cache.CacheInterceptor$1: okhttp3.internal.cache.CacheRequest val$cacheRequest
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
io.reactivex.internal.schedulers.ComputationScheduler: java.util.concurrent.ThreadFactory threadFactory
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: boolean mProxyStarted
com.appspa.demo.entity.CustomResult$VersionInfo: int versionCode
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: io.reactivex.internal.disposables.SequentialDisposable timer
androidx.fragment.app.BackStackState: int mBreadCrumbTitleRes
com.appspa.update.R$styleable: int ActionMode_backgroundSplit
com.appspa.demo.R$id: int npb_progress
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream: io.reactivex.Flowable source
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope GROUP_ID
com.appspa.demo.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$1: java.lang.Object val$t
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapIntoIterable: io.reactivex.functions.Function mapper
androidx.appcompat.app.ToolbarActionBar: java.util.ArrayList mMenuVisibilityListeners
androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified
com.xuexiang.xhttp2.R$styleable: int SearchView_suggestionRowLayout
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.Animator$AnimatorListener mAnimatorListener
okhttp3.internal.connection.RouteException: java.io.IOException firstException
io.reactivex.internal.operators.single.SingleDelay: io.reactivex.Scheduler scheduler
retrofit2.ParameterHandler$QueryMap: boolean encoded
androidx.vectordrawable.R$id: int info
androidx.customview.R$styleable: int GradientColor_android_endColor
androidx.viewpager.R$id: int forever
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: androidx.core.view.accessibility.AccessibilityNodeProviderCompat mCompat
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mTitleView
androidx.appcompat.R$attr: int buttonTint
androidx.customview.R$styleable: int GradientColorItem_android_color
com.xuexiang.xhttp2.R$attr: int expandActivityOverflowButtonDrawable
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier: java.util.concurrent.Callable bufferSupplier
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_TIMESTAMP
com.xuexiang.xhttp2.R$drawable: int abc_spinner_textfield_background_material
androidx.appcompat.R$color: int abc_background_cache_hint_selector_material_light
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: long serialVersionUID
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope TESTS
androidx.vectordrawable.R$id: int accessibility_custom_action_28
androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsInProgress
androidx.loader.R$attr: int fontProviderFetchTimeout
androidx.core.provider.FontsContractCompat$Columns: java.lang.String FILE_ID
io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.google.gson.internal.bind.DateTypeAdapter: com.google.gson.TypeAdapterFactory FACTORY
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices
androidx.core.app.NotificationCompat$Builder: boolean mShowWhen
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontWeight
retrofit2.ParameterHandler$HeaderMap: java.lang.reflect.Method method
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onFlowableAssembly
androidx.activity.R$styleable: int[] ColorStateListItem
androidx.lifecycle.ComputableLiveData: java.lang.Runnable mRefreshRunnable
retrofit2.ParameterHandler$RawPart: retrofit2.ParameterHandler$RawPart INSTANCE
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
com.xuexiang.xhttp2.cache.RxCache$3: java.lang.Object val$value
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$id: int uniform
io.reactivex.internal.operators.observable.ObservableDistinct: java.util.concurrent.Callable collectionSupplier
com.xuexiang.xhttp2.R$id: int search_edit_frame
androidx.appcompat.R$styleable: int MenuItem_actionLayout
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_INPUT_METHOD
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
androidx.activity.R$string: int status_bar_notification_info_overflow
io.reactivex.internal.observers.DeferredScalarDisposable: int FUSED_READY
io.reactivex.internal.operators.observable.ObserverResourceWrapper: long serialVersionUID
androidx.core.content.PermissionChecker: int PERMISSION_GRANTED
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_DRAGGING
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: long emitted
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
io.reactivex.internal.observers.BasicFuseableObserver: io.reactivex.internal.fuseable.QueueDisposable qd
androidx.core.view.MotionEventCompat: int AXIS_X
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarSize
androidx.activity.R$id: int chronometer
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: io.reactivex.internal.queue.SpscArrayQueue queue
androidx.appcompat.R$color: int switch_thumb_disabled_material_light
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: boolean cancelled
androidx.core.R$drawable: int notification_action_background
androidx.viewpager.widget.PagerTitleStrip: android.widget.TextView mPrevText
retrofit2.adapter.rxjava2.RxJava2CallAdapter: boolean isMaybe
io.reactivex.internal.operators.single.SingleResumeNext: io.reactivex.SingleSource source
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String FONT_FAMILY_CLASS
androidx.activity.R$style: int TextAppearance_Compat_Notification_Title
io.reactivex.internal.operators.observable.ObservableRefCount: java.util.concurrent.TimeUnit unit
com.appspa.update.AppSpace: com.appspa.update.proxy.IUpdateDownloader mUpdateDownloader
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: java.util.concurrent.atomic.AtomicReference otherDisposable
androidx.drawerlayout.R$drawable: int notification_action_background
io.reactivex.internal.operators.flowable.FlowableTimer: long delay
androidx.appcompat.view.menu.CascadingMenuPopup: int SUBMENU_TIMEOUT_MS
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
androidx.core.text.util.FindAddress: androidx.core.text.util.FindAddress$ZipRange[] sStateZipCodeRanges
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontWeight
androidx.fragment.R$attr: int fontProviderFetchTimeout
com.zhy.http.okhttp.request.PostFileRequest: okhttp3.MediaType MEDIA_TYPE_STREAM
androidx.appcompat.view.SupportMenuInflater$MenuState: android.graphics.PorterDuff$Mode itemIconTintMode
androidx.core.graphics.drawable.IconCompat: int TYPE_UNKNOWN
androidx.appcompat.R$styleable: int ActionMode_height
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText
com.appspa.demo.R$anim: int abc_slide_in_bottom
com.google.gson.DefaultDateTypeAdapter: java.lang.Class dateType
androidx.core.R$drawable: int notification_bg_low_normal
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.viewpager.widget.ViewPager$LayoutParams: float widthFactor
androidx.core.internal.view.SupportMenu: int USER_MASK
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: org.reactivestreams.Subscriber downstream
androidx.customview.R$style: int Widget_Compat_NotificationActionText
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$1: com.xuexiang.xhttp2.cache.stategy.BaseStrategy this$0
io.reactivex.internal.operators.parallel.ParallelFlatMap: io.reactivex.parallel.ParallelFlowable source
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type rawType
com.zhy.http.okhttp.OkHttpUtils$2: com.zhy.http.okhttp.OkHttpUtils this$0
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: long serialVersionUID
androidx.core.widget.AutoScrollHelper: float DEFAULT_RELATIVE_VELOCITY
com.appspa.update.R$style: int Widget_AppCompat_Light_ListPopupWindow
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: io.reactivex.Observer downstream
com.appspa.update.utils.ShellUtils$CommandResult: java.lang.String successMsg
androidx.appcompat.view.menu.MenuPopupHelper$1: androidx.appcompat.view.menu.MenuPopupHelper this$0
com.xuexiang.xhttp2.R$styleable: int AlertDialog_buttonPanelSideLayout
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: io.reactivex.ObservableSource first
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
io.reactivex.internal.operators.mixed.CompletableAndThenObservable: io.reactivex.ObservableSource other
io.reactivex.internal.operators.flowable.FlowableDoOnEach: io.reactivex.functions.Consumer onError
androidx.core.app.NotificationCompat$WearableExtender: java.util.ArrayList mPages
com.appspa.update.R$attr: int itemPadding
androidx.viewpager.R$drawable: int notification_bg_normal_pressed
com.xuexiang.xhttp2.R$color: int dim_foreground_material_dark
androidx.activity.R$layout: int notification_template_part_time
io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction: java.lang.Runnable action
org.aspectj.runtime.reflect.StringMaker: org.aspectj.runtime.reflect.StringMaker longStringMaker
androidx.appcompat.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
com.xuexiang.xhttp2.cache.RxCache$6: com.xuexiang.xhttp2.cache.RxCache this$0
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String EXTRA_PERSON_
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$attr: int xnpb_current
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: android.graphics.Typeface mTypeface
io.reactivex.subjects.ReplaySubject$TimedNode: java.lang.Object value
androidx.appcompat.widget.ForwardingListener: int[] mTmpLocation
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mBigContentView
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: io.reactivex.functions.Action onComplete
okio.InflaterSource: java.util.zip.Inflater inflater
io.reactivex.internal.operators.observable.ObservableZipIterable: io.reactivex.Observable source
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowActionModeOverlay
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: boolean cancelled
io.reactivex.internal.operators.completable.CompletableError: java.lang.Throwable error
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mFillRule
com.appspa.demo.R$attr: int xnpb_reached_color
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
io.reactivex.internal.operators.single.SingleDelay$Delay: io.reactivex.SingleObserver downstream
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.OptionalMethod setUseSessionTickets
com.appspa.update.R$style: int Base_DialogWindowTitle_AppCompat
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: int maxSize
com.appspa.update.R$styleable: int AlertDialog_listLayout
com.xuexiang.xhttp2.R$attr: int logo
com.google.gson.internal.bind.TypeAdapters$34: java.lang.Class val$sub
androidx.appcompat.app.AlertDialog: int LAYOUT_HINT_SIDE
com.appspa.demo.R$color: int highlighted_text_material_light
androidx.viewpager.R$id: int blocking
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.atomic.AtomicReference val$holder
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: java.util.concurrent.atomic.AtomicInteger wip
com.appspa.demo.R$styleable: int Toolbar_titleTextColor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty
io.reactivex.internal.operators.maybe.MaybeDoOnEvent: io.reactivex.functions.BiConsumer onEvent
com.appspa.update.R$drawable: int abc_ic_menu_cut_mtrl_alpha
androidx.core.view.GestureDetectorCompat: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl
com.appspa.demo.R$xml: int network_security_config
androidx.cursoradapter.widget.SimpleCursorAdapter: int[] mTo
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: boolean done
com.appspa.demo.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
com.appspa.demo.R$style: int ThemeOverlay_AppCompat_Dark
com.appspa.demo.R$drawable: int abc_list_divider_material
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: boolean done
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayCallable: io.reactivex.Flowable parent
com.appspa.demo.R$styleable: int MenuGroup_android_checkableBehavior
io.reactivex.internal.operators.single.SingleDoAfterTerminate: io.reactivex.SingleSource source
androidx.vectordrawable.R$styleable: int ColorStateListItem_alpha
io.reactivex.processors.BehaviorProcessor: java.util.concurrent.atomic.AtomicReference terminalEvent
io.reactivex.internal.operators.single.SingleDelay$Delay$OnError: io.reactivex.internal.operators.single.SingleDelay$Delay this$1
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: boolean done
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance
androidx.viewpager.widget.ViewPager: boolean mFakeDragging
com.appspa.update.R$styleable: int ActionMode_subtitleTextStyle
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
androidx.appcompat.widget.DropDownListView: int mSelectionLeftPadding
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.appspa.demo.R$drawable: int abc_ic_menu_share_mtrl_alpha
androidx.activity.R$id: int accessibility_custom_action_5
androidx.appcompat.R$drawable: int abc_btn_check_to_on_mtrl_000
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore mViewModelStore
com.appspa.demo.R$id: int notification_background
androidx.appcompat.widget.MenuPopupWindow: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: io.reactivex.internal.util.AtomicThrowable errors
androidx.core.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: int maxSize
androidx.drawerlayout.R$styleable: int[] FontFamily
androidx.appcompat.R$styleable: int[] LinearLayoutCompat_Layout
androidx.appcompat.app.AppCompatDelegateImpl$5: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.R$styleable: int ActionBar_indeterminateProgressStyle
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: boolean mainDone
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Small
com.appspa.demo.R$attr: int drawableBottomCompat
com.appspa.demo.R$attr: int paddingEnd
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver: java.util.concurrent.atomic.AtomicBoolean winner
okhttp3.internal.Util: okio.ByteString UTF_32_BE_BOM
com.zhy.http.okhttp.OkHttpUtils: okhttp3.OkHttpClient mOkHttpClient
com.appspa.demo.R$styleable: int TextAppearance_android_textStyle
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable adapterState
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PICTURE
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: java.util.concurrent.Callable boundarySupplier
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.parallel.ParallelFlowable source
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription[] EMPTY
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: io.reactivex.subjects.UnicastSubject window
com.appspa.update.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: io.reactivex.internal.disposables.SequentialDisposable sd
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_variablePadding
com.xuexiang.xhttp2.R$dimen: int abc_text_size_small_material
com.appspa.update.R$styleable: int[] StateListDrawableItem
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: io.reactivex.CompletableObserver downstream
retrofit2.Utils: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListPopupWindow
io.reactivex.internal.util.BlockingIgnoringReceiver: java.lang.Throwable error
androidx.fragment.R$drawable: int notification_bg_normal
androidx.appcompat.R$dimen: int abc_action_bar_default_height_material
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: boolean disconnectedEarly
io.reactivex.internal.operators.completable.CompletableMergeIterable: java.lang.Iterable sources
com.appspa.demo.R$attr: int listChoiceIndicatorSingleAnimated
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind PASS_THROUGH
com.appspa.update.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.xuexiang.xhttp2.R$color: int abc_secondary_text_material_dark
androidx.appcompat.R$styleable: int AppCompatTheme_selectableItemBackground
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.demo.R$id: int action_menu_presenter
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
androidx.fragment.app.FragmentTransitionCompat21$3: androidx.fragment.app.FragmentTransitionCompat21 this$0
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: java.util.concurrent.atomic.AtomicReference current
com.appspa.update.R$styleable: int ActionBar_title
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: long index
com.appspa.demo.R$string: int space_error_check_net_request
com.appspa.update.UpdateManager$1: com.appspa.update.UpdateManager this$0
androidx.lifecycle.ClassesInfoCache: int CALL_TYPE_PROVIDER_WITH_EVENT
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.cache.model.CacheMode mCacheMode
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_START_OFFSET
androidx.vectordrawable.animated.R$id: int tag_transition_group
com.xuexiang.xhttp2.R$attr: int contentInsetLeft
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: long serialVersionUID
com.appspa.demo.R$styleable: int MenuItem_alphabeticModifiers
androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: io.reactivex.functions.Function mapper
androidx.core.app.RemoteInput: java.util.Set mAllowedDataTypes
androidx.appcompat.app.NavItemSelectedListener: androidx.appcompat.app.ActionBar$OnNavigationListener mListener
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.appspa.update.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.vectordrawable.R$layout: int notification_action
com.xuexiang.xhttp2.R$string: int abc_menu_enter_shortcut_label
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: io.reactivex.Observer downstream
io.reactivex.internal.operators.maybe.MaybeToSingle: java.lang.Object defaultValue
com.appspa.update.R$attr: int listPreferredItemPaddingStart
com.xuexiang.xhttp2.R$attr: int homeLayout
androidx.appcompat.R$attr: int windowNoTitle
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter keyTypeAdapter
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl mImpl
androidx.customview.R$integer: int status_bar_notification_info_maxnum
androidx.viewpager.widget.PagerTitleStrip: java.lang.ref.WeakReference mWatchingAdapter
com.xuexiang.xhttp2.R$dimen: int tooltip_corner_radius
com.xuexiang.xhttp2.R$color: int ripple_material_light
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_NONE
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: boolean done
io.reactivex.internal.operators.completable.CompletableLift: io.reactivex.CompletableOperator onLift
okhttp3.internal.connection.RouteSelector: java.util.List proxies
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: boolean done
com.appspa.demo.R$attr: int showAsAction
com.jakewharton.disklrucache.DiskLruCache$Editor: boolean hasErrors
com.appspa.update.R$style: int Theme_AppCompat_NoActionBar
com.appspa.demo.R$styleable: int ActionBar_icon
androidx.core.view.DragStartHelper: android.view.View mView
okhttp3.internal.http2.Http2Connection$6: okio.Buffer val$buffer
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: long timeskip
com.appspa.update.R$styleable: int SwitchCompat_thumbTextPadding
com.appspa.demo.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.appspa.demo.R$styleable: int AppCompatTextView_lineHeight
androidx.core.os.LocaleListCompatWrapper: java.util.Locale[] sEmptyList
androidx.versionedparcelable.VersionedParcelStream$1: androidx.versionedparcelable.VersionedParcelStream this$0
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab
androidx.drawerlayout.R$id: int italic
com.appspa.demo.R$id: int scrollView
androidx.core.app.NotificationCompat$WearableExtender: int mGravity
com.appspa.demo.R$attr: int fontStyle
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1: androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback this$1
com.appspa.update.R$dimen: int notification_media_narrow_margin
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler SINGLE
io.reactivex.internal.operators.flowable.FlowableConcatMap: int prefetch
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty: io.reactivex.MaybeSource other
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber other
com.appspa.update.R$id: int line3
io.reactivex.internal.operators.observable.ObservableUsing: io.reactivex.functions.Consumer disposer
androidx.viewpager.R$styleable: int FontFamilyFont_fontStyle
androidx.activity.R$id: int right_icon
androidx.core.widget.PopupWindowCompat: java.lang.String TAG
io.reactivex.subjects.CompletableSubject: java.util.concurrent.atomic.AtomicReference observers
com.appspa.update.service.DownloadService$DownloadBinder: com.appspa.update.service.DownloadService this$0
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar_Small
com.appspa.update.R$attr: int state_above_anchor
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: boolean cancelled
com.appspa.demo.R$styleable: int AppCompatTheme_imageButtonStyle
retrofit2.converter.gson.GsonResponseBodyConverter: com.google.gson.TypeAdapter adapter
com.appspa.demo.R$styleable: int ActionMode_background
com.appspa.update.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
com.appspa.demo.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: long serialVersionUID
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: boolean eager
androidx.appcompat.widget.ResourceManagerInternal: java.lang.String SKIP_DRAWABLE_TAG
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Window$Callback mWindowCallback
com.appspa.update.R$id: int accessibility_action_clickable_span
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$styleable: int SwitchCompat_track
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CUSTOM_SIZE_PRESET
com.xuexiang.xhttp2.R$color: int primary_material_light
io.reactivex.internal.operators.observable.ObservableToListSingle: io.reactivex.ObservableSource source
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.schedulers.AbstractDirectTask: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: boolean done
androidx.appcompat.resources.R$styleable: int GradientColor_android_endY
com.appspa.update.R$dimen: int abc_switch_padding
com.appspa.update.R$color: int accent_material_light
androidx.appcompat.app.AlertController$AlertParams: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
com.appspa.update.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
retrofit2.Invocation: java.util.List arguments
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: io.reactivex.functions.Function itemTimeoutIndicator
okio.Segment: okio.Segment next
com.appspa.demo.R$id: int search_src_text
androidx.core.text.TextDirectionHeuristicsCompat: int STATE_TRUE
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BooleanSupplier onBeforeBlocking
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: io.reactivex.functions.Function keySelector
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver this$0
androidx.appcompat.view.menu.ExpandedMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle: int prefetch
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.appspa.update.R$styleable: int AppCompatTheme_panelMenuListWidth
com.xuexiang.xhttp2.R$attr: int icon
androidx.versionedparcelable.VersionedParcel: int TYPE_STRING
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener
okhttp3.OkHttpClient: java.util.List interceptors
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitleCondensed
com.appspa.demo.R$styleable: int ActionBar_height
com.appspa.demo.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable[] EMPTY
androidx.interpolator.view.animation.LookupTableInterpolator: float[] mValues
com.appspa.update.R$styleable: int AppCompatTheme_actionModeCloseDrawable
androidx.versionedparcelable.VersionedParcelStream: int TYPE_LONG
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: int STATE_INACTIVE
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] $VALUES
androidx.appcompat.resources.R$dimen: int compat_notification_large_icon_max_width
androidx.appcompat.widget.SearchView: int[] mTemp2
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: java.lang.Integer RIGHT_VALUE
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: boolean active
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_drawableBottomCompat
com.appspa.update.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
androidx.vectordrawable.R$id: int right_side
androidx.appcompat.widget.ViewStubCompat: int mLayoutResource
androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha
androidx.customview.R$id: int notification_background
androidx.core.provider.FontsContractCompat: androidx.collection.LruCache sTypefaceCache
com.xuexiang.xhttp2.R$style: int Platform_V25_AppCompat_Light
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab mTab
androidx.core.content.res.FontResourcesParserCompat: int DEFAULT_TIMEOUT_MILLIS
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver parent
androidx.activity.R$styleable: int FontFamilyFont_fontStyle
com.xuexiang.xhttp2.R$color: int abc_tint_default
androidx.fragment.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.R$id: int dialog_button
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: long serialVersionUID
com.appspa.demo.R$attr: int actionBarTheme
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat
androidx.core.provider.SelfDestructiveThread: java.lang.String mThreadName
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferBoundaryObserver: io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver parent
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementTargetNames
com.xuexiang.xhttp2.R$attr: int drawableTint
androidx.loader.R$style: int TextAppearance_Compat_Notification
com.appspa.update.R$styleable: int[] PopupWindow
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: long maxAge
com.appspa.update.R$styleable: int AppCompatTheme_colorControlHighlight
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: int consumed
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap
com.appspa.demo.R$attr: int actionBarTabStyle
io.reactivex.internal.queue.SpscLinkedArrayQueue: int consumerMask
com.appspa.update.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.appspa.update.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.appspa.demo.R$styleable: int GradientColor_android_tileMode
androidx.collection.LruCache: int size
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: long serialVersionUID
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb: java.lang.String TAG
com.appspa.update.entity.DownloadEntity: java.lang.String mWholeMd5
io.reactivex.internal.operators.observable.ObservableCache: int capacityHint
com.appspa.demo.R$dimen: int tooltip_y_offset_touch
androidx.viewpager.widget.ViewPager: int DEFAULT_GUTTER_SIZE
androidx.appcompat.widget.DrawableUtils: java.lang.String TAG
com.appspa.update.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
androidx.core.graphics.drawable.IconCompat: int KEY_SHADOW_ALPHA
com.appspa.demo.R$drawable: int btn_radio_off_mtrl
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_buttonStyle
io.reactivex.internal.operators.observable.AbstractObservableWithUpstream: io.reactivex.ObservableSource source
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: io.reactivex.disposables.CompositeDisposable set
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Body2
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorControlNormal
com.appspa.demo.R$attr: int menu
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
androidx.fragment.R$styleable: int ColorStateListItem_android_color
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: int index
com.appspa.demo.R$style: int Base_V22_Theme_AppCompat_Light
com.xuexiang.xhttp2.R$dimen: int disabled_alpha_material_light
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: io.reactivex.functions.Function mapper
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int[] mFrameTimes
com.appspa.update.R$color: int abc_tint_default
io.reactivex.internal.operators.observable.ObservableBufferTimed: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.completable.CompletableResumeNext: io.reactivex.functions.Function errorMapper
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: long serialVersionUID
com.appspa.demo.R$string: int abc_searchview_description_clear
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: boolean done
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.update.R$attr: int titleMargins
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: long serialVersionUID
com.appspa.update.R$dimen: int abc_action_bar_overflow_padding_end_material
com.appspa.demo.R$id: int end
com.google.gson.internal.bind.TypeAdapters$34: com.google.gson.TypeAdapter val$typeAdapter
androidx.fragment.app.DialogFragment: boolean mShownByMe
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: org.reactivestreams.Subscriber downstream
androidx.vectordrawable.graphics.drawable.AndroidResources: int FAST_OUT_SLOW_IN
androidx.core.provider.FontsContractCompat$4: androidx.core.provider.FontRequest val$request
androidx.fragment.app.Fragment: boolean mRetainInstance
io.reactivex.internal.operators.single.SingleCache: io.reactivex.internal.operators.single.SingleCache$CacheDisposable[] EMPTY
com.appspa.update.R$styleable: int CompoundButton_buttonTint
androidx.customview.widget.FocusStrategy$SequentialComparator: android.graphics.Rect mTemp2
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.appspa.update.R$attr: int hideOnContentScroll
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence mConfirmLabel
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.reflect.Method mResolvedMethod
com.appspa.update.R$attr: int track
okhttp3.internal.http2.Http2Connection: boolean $assertionsDisabled
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification_Time
com.appspa.update.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
com.appspa.demo.R$attr: int autoSizeMaxTextSize
com.appspa.demo.R$string: int abc_capital_on
com.appspa.demo.R$styleable: int GradientColor_android_centerX
androidx.core.app.NotificationCompat$WearableExtender: int SCREEN_TIMEOUT_SHORT
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.reflect.ReflectionAccessor accessor
androidx.core.widget.ContentLoadingProgressBar: boolean mDismissed
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$dimen: int compat_button_padding_vertical_material
com.appspa.demo.R$styleable: int AlertDialog_listItemLayout
androidx.fragment.R$id: int accessibility_custom_action_17
com.xuexiang.xhttp2.R$styleable: int ActionBar_popupTheme
androidx.fragment.R$id: int accessibility_custom_action_7
androidx.appcompat.R$attr: int singleChoiceItemLayout
androidx.core.provider.FontsContractCompat$1: java.lang.String val$id
com.google.gson.internal.Excluder: boolean serializeInnerClasses
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable
androidx.viewpager.widget.PagerTitleStrip: androidx.viewpager.widget.ViewPager mPager
okhttp3.Cookie$Builder: java.lang.String path
androidx.viewpager.R$dimen: int notification_media_narrow_margin
androidx.customview.R$id: int tag_transition_group
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
androidx.appcompat.R$string: int abc_action_menu_overflow_description
com.appspa.demo.R$styleable: int MenuView_android_headerBackground
com.appspa.update.R$attr: int actionModeSplitBackground
androidx.appcompat.R$color: int abc_tint_edittext
androidx.appcompat.view.menu.ListMenuPresenter: android.content.Context mContext
androidx.vectordrawable.animated.R$drawable: int notification_bg
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: long count
okio.Okio$1: okio.Timeout val$timeout
io.reactivex.internal.operators.flowable.FlowableGroupJoin: io.reactivex.functions.BiFunction resultSelector
com.xuexiang.xhttp2.request.BaseRequest: boolean mSign
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: io.reactivex.Observer downstream
androidx.core.content.res.TypedArrayUtils: java.lang.String NAMESPACE
com.appspa.update.R$string: int space_error_check_no_new_version
androidx.vectordrawable.animated.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber parent
com.appspa.update.R$id: int scrollView
com.xuexiang.xhttp2.R$styleable: int ActionMode_titleTextStyle
androidx.drawerlayout.R$styleable: int GradientColor_android_centerX
androidx.appcompat.R$styleable: int FontFamily_fontProviderQuery
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
org.aspectj.runtime.reflect.UnlockSignatureImpl: java.lang.Class parameterType
io.reactivex.internal.operators.flowable.FlowablePublishMulticast: int prefetch
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: boolean done
androidx.appcompat.resources.R$id: int time
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener
androidx.appcompat.view.menu.CascadingMenuPopup: int mDropDownGravity
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentText
com.appspa.demo.R$color: int abc_secondary_text_material_light
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: long serialVersionUID
com.appspa.demo.R$styleable: int MenuGroup_android_orderInCategory
com.appspa.update.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.appspa.demo.R$dimen: int abc_control_inset_material
okhttp3.internal.http2.Http2Connection: long bytesLeftInWriteWindow
com.appspa.demo.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.appcompat.resources.R$attr: int fontProviderFetchStrategy
com.appspa.demo.R$attr: int logoDescription
androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView
io.reactivex.internal.operators.flowable.FlowableWindow: long skip
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
androidx.viewpager.R$string: int status_bar_notification_info_overflow
androidx.appcompat.R$id: int accessibility_custom_action_6
androidx.core.app.RemoteInput: boolean mAllowFreeFormTextInput
com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType: com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType[] $VALUES
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: boolean finished
io.reactivex.internal.operators.completable.CompletableToSingle: java.util.concurrent.Callable completionValueSupplier
com.zhy.http.okhttp.log.LoggerInterceptor: java.lang.String tag
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
androidx.versionedparcelable.VersionedParcel: int TYPE_VERSIONED_PARCELABLE
com.appspa.update.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_FADE_EXIT
com.xuexiang.xhttp2.R$attr: int actionBarWidgetTheme
com.xuexiang.xhttp2.request.BaseRequest: boolean mIsSyncRequest
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.maybe.MaybeFlatten: io.reactivex.functions.Function mapper
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: io.reactivex.MaybeObserver downstream
com.appspa.demo.R$dimen: int abc_dropdownitem_text_padding_left
okhttp3.RequestBody$1: okio.ByteString val$content
com.xuexiang.xhttp2.utils.HttpUtils: java.nio.charset.Charset UTF8
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter
com.xuexiang.xhttp2.R$drawable: int btn_radio_on_to_off_mtrl_animation
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: io.reactivex.functions.Function mapper
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_ttcIndex
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: io.reactivex.internal.util.AtomicThrowable error
com.appspa.demo.R$style: int TextAppearance_AppCompat_Large
com.appspa.update.R$attr: int actionModeShareDrawable
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: java.util.concurrent.atomic.AtomicReference mainSubscription
io.reactivex.internal.observers.CallbackCompletableObserver: io.reactivex.functions.Consumer onError
io.reactivex.internal.operators.completable.CompletablePeek: io.reactivex.functions.Consumer onSubscribe
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: java.lang.Object item
androidx.fragment.R$styleable: int GradientColorItem_android_color
androidx.core.provider.SelfDestructiveThread: int mDestructAfterMillisec
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: long remaining
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo: android.widget.ImageView upIndicatorView
androidx.appcompat.R$id: int checkbox
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: int consumed
io.reactivex.internal.operators.completable.CompletableDoOnEvent: io.reactivex.functions.Consumer onEvent
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall this$0
com.appspa.update.R$drawable: int spa_icon_app_update
androidx.appcompat.R$styleable: int[] AlertDialog
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_drawableTint
androidx.core.app.NotificationCompatJellybean: java.lang.Object sActionsLock
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: float weight
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.MotionEvent mCurrentDownEvent
androidx.core.R$id: int info
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection connection
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
androidx.core.view.WindowCompat: int FEATURE_ACTION_BAR
com.appspa.demo.entity.CustomResult$VersionInfo: boolean isForce
okhttp3.internal.cache.DiskLruCache: boolean initialized
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: io.reactivex.Observer downstream
androidx.core.content.IntentCompat: java.lang.String EXTRA_START_PLAYBACK
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mBigContentView
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive
com.xuexiang.xhttp2.R$id: int spacer
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: org.reactivestreams.Subscription upstream
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
com.google.gson.internal.ConstructorConstructor$4: com.google.gson.internal.ConstructorConstructor this$0
com.appspa.update.R$style: int Widget_AppCompat_RatingBar_Indicator
com.appspa.demo.R$attr: int progressBarStyle
com.appspa.update.R$styleable: int[] SwitchCompat
androidx.viewpager.R$id: int text
io.reactivex.internal.operators.observable.ObservableDebounce: io.reactivex.functions.Function debounceSelector
androidx.fragment.app.FragmentActivity: androidx.collection.SparseArrayCompat mPendingFragmentActivityResults
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay
com.appspa.update.R$layout: int abc_list_menu_item_layout
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Class sFontFamily
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
androidx.core.app.NotificationCompat$CarExtender: java.lang.String EXTRA_COLOR
com.xuexiang.xhttp2.R$attr: int textColorSearchUrl
io.reactivex.internal.operators.single.SingleDelay$Delay: io.reactivex.internal.operators.single.SingleDelay this$0
com.xuexiang.xhttp2.R$integer: int config_tooltipAnimTime
com.appspa.demo.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.customview.R$id: int tag_unhandled_key_listeners
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: android.view.MenuItem$OnActionExpandListener mObject
androidx.loader.R$id: int action_divider
androidx.core.text.BidiFormatter: char RLE
com.appspa.demo.R$styleable: int[] AnimatedStateListDrawableItem
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_SPLIT_SCREEN_DIVIDER
com.appspa.demo.R$styleable: int ActionBar_contentInsetEnd
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector: int bufferSize
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton
com.appspa.demo.R$id: int italic
com.xuexiang.xhttp2.R$dimen: int hint_alpha_material_dark
com.appspa.update.R$id: int accessibility_custom_action_14
androidx.appcompat.R$attr: int editTextBackground
com.appspa.update.R$styleable: int PopupWindow_android_popupAnimationStyle
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_dropDownListViewStyle
androidx.core.text.TextUtilsCompat: java.util.Locale ROOT
androidx.vectordrawable.animated.R$layout: int custom_dialog
androidx.core.app.Person: boolean mIsImportant
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: io.reactivex.disposables.Disposable upstream
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontStyle
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayFunction: io.reactivex.functions.Function selector
io.reactivex.internal.operators.single.SingleDoOnTerminate: io.reactivex.SingleSource source
androidx.appcompat.R$styleable: int TextAppearance_android_textColorHint
com.appspa.demo.R$styleable: int GradientColor_android_type
androidx.fragment.R$id: int actions
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mEndAction
androidx.appcompat.R$id: int accessibility_custom_action_2
io.reactivex.internal.observers.QueueDrainObserver: boolean cancelled
okhttp3.Challenge: java.lang.String scheme
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver otherObserver
com.appspa.update.R$styleable: int View_paddingStart
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: org.reactivestreams.Subscription upstream
okhttp3.internal.http2.Http2Connection$7: int val$streamId
androidx.appcompat.widget.Toolbar: int mGravity
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: io.reactivex.Observer downstream
com.appspa.demo.R$styleable: int AppCompatTheme_colorControlNormal
com.appspa.demo.R$style: int Widget_AppCompat_DrawerArrowToggle
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Line2
com.appspa.demo.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: int rightIndex
androidx.appcompat.R$styleable: int Toolbar_buttonGravity
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView_DropDown
androidx.appcompat.R$dimen: int abc_list_item_padding_horizontal_material
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] $VALUES
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: java.lang.Throwable error
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: int state
com.xuexiang.xhttp2.R$attr: int buttonIconDimen
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.google.gson.stream.JsonReader: long MIN_INCOMPLETE_INTEGER
androidx.appcompat.widget.SearchView: android.view.View mSearchEditFrame
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params mParams
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback
com.appspa.update.R$style: int TextAppearance_AppCompat
org.aspectj.internal.lang.reflect.AdviceImpl: boolean hasExtraParam
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: java.lang.Integer LEFT_VALUE
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue queue
com.appspa.demo.R$attr: int windowActionBar
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mPositiveButtonIcon
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: long serialVersionUID
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
androidx.appcompat.widget.ActivityChooserView: android.widget.FrameLayout mDefaultActivityButton
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast: boolean done
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: io.reactivex.Observer downstream
androidx.core.widget.TextViewCompat: boolean sMaximumFieldFetched
com.xuexiang.xhttp2.R$styleable: int SearchView_voiceIcon
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int mMaxActivityCount
com.google.gson.Gson: java.util.Map instanceCreators
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver inner
androidx.appcompat.widget.SuggestionsAdapter: int mIconName2Col
io.reactivex.internal.operators.flowable.FlowableReduce: io.reactivex.functions.BiFunction reducer
com.appspa.demo.R$string: int abc_prepend_shortcut_label
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Matrix mTmpMatrix
com.appspa.demo.R$styleable: int Toolbar_contentInsetLeft
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: long timespan
androidx.customview.R$styleable: int FontFamilyFont_android_font
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: java.util.Iterator it
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CONTENT_ACTION_INDEX
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$integer: int abc_config_activityDefaultDur
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_EditText
com.appspa.demo.R$drawable: int abc_btn_check_material
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: boolean done
com.appspa.demo.R$attr: int spinnerStyle
com.xuexiang.xhttp2.R$dimen: int notification_top_pad
androidx.viewpager.widget.ViewPager: int[] LAYOUT_ATTRS
com.appspa.demo.R$dimen: int abc_search_view_preferred_height
okio.DeflaterSink: okio.BufferedSink sink
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs
com.google.gson.Gson$4: com.google.gson.TypeAdapter val$longAdapter
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver: java.util.concurrent.atomic.AtomicReference parent
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
androidx.core.app.NotificationCompat$Action: java.lang.String EXTRA_SHOWS_USER_INTERFACE
io.reactivex.internal.operators.completable.CompletableTimer: java.util.concurrent.TimeUnit unit
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: androidx.core.app.NotificationCompatSideChannelService this$0
com.xuexiang.xhttp2.R$dimen: int abc_text_size_caption_material
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: java.util.concurrent.atomic.AtomicInteger wip
androidx.fragment.R$id: int right_side
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_GESTURE_DETECTION_END
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription
androidx.core.provider.FontsContractCompat$FontInfo: int mTtcIndex
com.xuexiang.xhttp2.R$color: int secondary_text_disabled_material_light
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor
androidx.appcompat.widget.DropDownListView: androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation
com.appspa.update.R$dimen: int abc_search_view_preferred_height
com.appspa.demo.R$drawable: int abc_btn_radio_material_anim
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: boolean started
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext: io.reactivex.Observer observer
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableCollect: java.util.concurrent.Callable initialSupplier
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mPositiveButtonListener
androidx.core.view.PointerIconCompat: int TYPE_WAIT
com.appspa.update.R$styleable: int MenuItem_android_titleCondensed
androidx.appcompat.R$drawable: int abc_vector_test
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_SINGLE
com.appspa.update.R$attr: int paddingTopNoTitle
androidx.core.app.NotificationCompat: int VISIBILITY_SECRET
io.reactivex.internal.operators.single.SingleUnsubscribeOn: io.reactivex.SingleSource source
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Light
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBufferTask: int bufferSize
androidx.appcompat.R$attr: int actionBarWidgetTheme
androidx.appcompat.R$attr: int customNavigationLayout
com.xuexiang.xhttp2.XHttp: android.app.Application sContext
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: java.lang.Object item
com.xuexiang.xhttp2.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
androidx.fragment.R$styleable: int FontFamilyFont_font
io.reactivex.internal.operators.observable.ObservableThrottleLatest: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: boolean cancelled
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_TEXT
io.reactivex.internal.operators.flowable.FlowableCollectSingle: io.reactivex.Flowable source
com.appspa.demo.R$id: int search_voice_btn
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable INSTANCE
androidx.core.app.JobIntentService$WorkEnqueuer: android.content.ComponentName mComponentName
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.reactivex.internal.operators.completable.CompletableAmb: io.reactivex.CompletableSource[] sources
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: boolean done
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
com.appspa.demo.R$styleable: int ActionBar_homeLayout
androidx.core.app.NotificationCompat: int PRIORITY_DEFAULT
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: io.reactivex.SingleObserver downstream
com.xuexiang.xhttp2.R$attr: int multiChoiceItemLayout
io.reactivex.Scheduler$DisposeTask: io.reactivex.Scheduler$Worker w
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: io.reactivex.SingleObserver downstream
com.appspa.update.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.xuexiang.xhttp2.cache.core.LruDiskCache: int mAppVersion
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: io.reactivex.internal.util.AtomicThrowable errors
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_CONTEXT_CLICKED
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: boolean cancelled
androidx.appcompat.R$attr: int trackTintMode
io.reactivex.internal.operators.observable.ObservableSampleWithObservable: io.reactivex.ObservableSource other
io.reactivex.subjects.ReplaySubject$ReplayDisposable: io.reactivex.subjects.ReplaySubject state
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier INSTANCE
com.appspa.update.R$styleable: int Spinner_popupTheme
okhttp3.Cache: int writeAbortCount
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: int bufferSize
androidx.activity.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_23
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: io.reactivex.internal.disposables.SequentialDisposable task
androidx.core.provider.SelfDestructiveThread: int MSG_INVOKE_RUNNABLE
okio.RealBufferedSink: okio.Sink sink
okhttp3.internal.connection.RealConnection: long idleAtNanos
androidx.loader.R$id: int tag_unhandled_key_listeners
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.appspa.demo.R$styleable: int TextAppearance_textAllCaps
com.appspa.demo.R$string: int space_error_check_updating
okhttp3.CacheControl: boolean isPublic
io.reactivex.internal.functions.Functions$Array9Func: io.reactivex.functions.Function9 f
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.flowable.FlowableSubscribeOn: boolean nonScheduledRequests
com.appspa.demo.R$drawable: int abc_textfield_activated_mtrl_alpha
io.reactivex.internal.operators.parallel.ParallelFilterTry: io.reactivex.functions.BiFunction errorHandler
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler[] parameterHandlers
io.reactivex.subscribers.SerializedSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.widget.ScrollingTabContainerView: int mMaxTabWidth
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Medium
com.appspa.demo.R$drawable: int abc_list_divider_mtrl_alpha
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_ID_KEY
io.reactivex.internal.operators.flowable.FlowableDistinct: io.reactivex.functions.Function keySelector
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: java.util.Iterator sources
io.reactivex.processors.ReplayProcessor$Node: java.lang.Object value
io.reactivex.internal.queue.SpscArrayQueue: java.util.concurrent.atomic.AtomicLong producerIndex
androidx.appcompat.R$attr: int expandActivityOverflowButtonDrawable
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsets
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle: io.reactivex.internal.util.ErrorMode errorMode
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: io.reactivex.internal.operators.observable.ObservableReplay$ReplayBuffer buffer
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: java.util.Iterator it
androidx.appcompat.R$style: int TextAppearance_AppCompat_Inverse
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.Fragment mCurrentPrimaryItem
com.xuexiang.xhttp2.R$attr: int colorSwitchThumbNormal
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Light_DialogWhenLarge
androidx.fragment.app.FragmentTransaction$Op: int mCmd
androidx.appcompat.widget.AppCompatSeekBarHelper: android.content.res.ColorStateList mTickMarkTintList
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: io.reactivex.Scheduler scheduler
com.appspa.demo.R$attr: int buttonStyle
androidx.activity.R$dimen: int notification_right_side_padding_top
com.appspa.demo.R$attr: int listMenuViewStyle
com.appspa.demo.R$layout: int abc_screen_simple
com.appspa.demo.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.core.R$id: int tag_accessibility_pane_title
androidx.appcompat.widget.ButtonBarLayout: boolean mAllowStacking
retrofit2.Retrofit: java.util.Map serviceMethodCache
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable
androidx.core.view.KeyEventDispatcher: boolean sActionBarFieldsFetched
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber[] subscribers
androidx.appcompat.resources.R$id: int italic
com.appspa.update.R$attr: int windowNoTitle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
com.xuexiang.xhttp2.model.HttpParams$FileWrapper: java.lang.Object file
androidx.appcompat.R$styleable: int ActionBar_subtitleTextStyle
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean firstOutIsPop
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver mTreeObserver
com.xuexiang.xhttp2.R$attr: int buttonBarButtonStyle
com.appspa.demo.R$drawable: int abc_btn_radio_to_on_mtrl_015
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords
androidx.fragment.R$drawable: int notification_template_icon_low_bg
com.xuexiang.xhttp2.R$attr: int arrowShaftLength
okhttp3.internal.http.RealInterceptorChain: int connectTimeout
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: long end
com.xuexiang.xhttp2.R$styleable: int[] ActionMenuItemView
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText
com.appspa.demo.R$color: int switch_thumb_normal_material_dark
androidx.fragment.R$layout: int notification_template_part_chronometer
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: float weight
androidx.appcompat.R$attr: int colorPrimaryDark
io.reactivex.internal.operators.flowable.FlowablePublish: io.reactivex.Flowable source
com.appspa.demo.activity.MainActivity: android.widget.EditText mEtServiceUrl
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: io.reactivex.disposables.Disposable ds
com.appspa.demo.R$id: int accessibility_custom_action_24
com.appspa.update.R$color: int tooltip_background_dark
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: long serialVersionUID
androidx.appcompat.view.menu.CascadingMenuPopup: android.os.Handler mSubMenuHoverHandler
androidx.appcompat.view.SupportMenuInflater: android.content.Context mContext
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_NO
io.reactivex.internal.operators.flowable.FlowableElementAtSingle: io.reactivex.Flowable source
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.appcompat.R$attr: int contentInsetEndWithActions
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: io.reactivex.functions.BiFunction resultSelector
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.update.R$string: int abc_capital_off
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.widget.ListAdapter mListAdapter
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_drawableTopCompat
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: boolean done
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
okio.GzipSink: boolean closed
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment lastIn
androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: long serialVersionUID
androidx.core.app.RemoteInput: int SOURCE_CHOICE
com.appspa.update.R$styleable: int AppCompatTextView_drawableRightCompat
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: java.lang.Object value
android.support.v4.os.ResultReceiver$MyRunnable: android.support.v4.os.ResultReceiver this$0
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: java.util.concurrent.atomic.AtomicReference other
androidx.appcompat.widget.TintResources: java.lang.ref.WeakReference mContextRef
okhttp3.internal.http2.Http2Writer: int maxFrameSize
okhttp3.internal.ws.WebSocketReader: long frameLength
androidx.core.view.MotionEventCompat: int ACTION_HOVER_EXIT
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$style: int Widget_AppCompat_ButtonBar
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Constructor sFontFamilyCtor
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.loader.content.ModernAsyncTask$2: androidx.loader.content.ModernAsyncTask this$0
com.appspa.update.utils.FileUtils: java.lang.String EXT_STORAGE_PATH
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: boolean done
com.zhy.http.okhttp.request.CountingRequestBody: okhttp3.RequestBody delegate
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.disposables.Disposable DISPOSED
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_textColorLink
com.xuexiang.xhttp2.R$style: int Platform_AppCompat
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_28
io.reactivex.internal.operators.observable.ObservableOnErrorNext: io.reactivex.functions.Function nextSupplier
androidx.customview.R$attr: int fontProviderCerts
com.appspa.demo.R$attr: int navigationMode
com.zhy.http.okhttp.callback.FileCallBack: java.lang.String destFileDir
okhttp3.internal.cache.DiskLruCache: int valueCount
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: io.reactivex.functions.Predicate predicate
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleAttr
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: io.reactivex.Scheduler scheduler
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind[] $VALUES
io.reactivex.internal.queue.SpscLinkedArrayQueue: long producerLookAhead
okhttp3.Response: okhttp3.Headers headers
androidx.appcompat.R$styleable: int SearchView_searchHintIcon
com.appspa.update.R$style: int TextAppearance_Compat_Notification_Title
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable mHeaderIcon
androidx.fragment.app.FragmentPagerAdapter: int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status PENDING
androidx.customview.R$dimen: int notification_content_margin_start
com.appspa.update.R$styleable: int Toolbar_subtitle
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mDeferConfirmSingleTap
androidx.appcompat.R$id: int search_button
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer: boolean done
androidx.appcompat.app.TwilightManager: android.location.LocationManager mLocationManager
okhttp3.Response: okhttp3.Protocol protocol
androidx.activity.R$id: int accessibility_custom_action_4
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display2
com.appspa.update.R$attr: int toolbarStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_splitTrack
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: boolean gate
com.appspa.update.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: android.graphics.drawable.Animatable mA
com.appspa.update.R$styleable: int ViewStubCompat_android_layout
androidx.appcompat.app.WindowDecorActionBar$TabImpl: android.view.View mCustomView
com.appspa.update.R$styleable: int AppCompatTextView_autoSizeMinTextSize
io.reactivex.observers.SafeObserver: io.reactivex.Observer downstream
androidx.vectordrawable.R$id: int tag_unhandled_key_listeners
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: java.util.Collection buffer
com.appspa.demo.R$string: int abc_searchview_description_voice
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
androidx.core.R$id: int dialog_button
retrofit2.adapter.rxjava2.CallEnqueueObservable: retrofit2.Call originalCall
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIG_INTEGER
com.xuexiang.xhttp2.R$color: int abc_color_highlight_material
com.appspa.update.R$styleable: int AppCompatTheme_actionModeSplitBackground
com.xuexiang.xhttp2.R$drawable: int abc_item_background_holo_dark
androidx.core.util.PatternsCompat: java.lang.String WEB_URL_WITHOUT_PROTOCOL
io.reactivex.internal.operators.observable.ObservableInterval: io.reactivex.Scheduler scheduler
com.appspa.demo.R$styleable: int AppCompatTheme_borderlessButtonStyle
org.aspectj.runtime.reflect.JoinPointImpl: org.aspectj.lang.JoinPoint$StaticPart staticPart
androidx.core.view.PointerIconCompat: int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW
com.appspa.update.R$styleable: int GradientColor_android_startColor
androidx.customview.widget.ViewDragHelper: int[] mEdgeDragsLocked
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: long serialVersionUID
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence mTitleRight
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int LONG_PRESS
com.appspa.demo.R$attr: int titleTextAppearance
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: java.lang.Object value
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_centerColor
com.appspa.demo.R$color: int abc_tint_switch_track
androidx.activity.R$id: int accessibility_custom_action_21
com.appspa.demo.R$styleable: int ColorStateListItem_alpha
com.appspa.demo.R$drawable: int abc_ic_voice_search_api_material
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mStrategy
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: boolean mLookForRtl
io.reactivex.internal.observers.BasicIntQueueDisposable: long serialVersionUID
com.appspa.update.R$id: int search_badge
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.appspa.demo.R$style: int Base_V23_Theme_AppCompat_Light
androidx.appcompat.widget.SwitchCompat: int SANS
io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove: io.reactivex.schedulers.TestScheduler$TestWorker this$1
androidx.fragment.R$styleable: int GradientColor_android_centerY
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: java.util.concurrent.atomic.AtomicLong requested
com.appspa.demo.R$dimen: int abc_dialog_padding_material
androidx.appcompat.app.AppCompatDelegateImpl: boolean sAlwaysOverrideConfiguration
androidx.appcompat.widget.Toolbar: int mTitleMarginEnd
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: io.reactivex.disposables.Disposable upstream
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateX
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: int bufferSize
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: io.reactivex.Scheduler$Worker worker
androidx.appcompat.resources.R$id: int title
io.reactivex.internal.operators.single.SingleEquals: io.reactivex.SingleSource first
androidx.core.R$id: int accessibility_custom_action_0
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$RecycleListView val$listView
com.appspa.demo.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.appspa.update.R$attr: int actionModeCloseButtonStyle
androidx.fragment.app.FragmentTransaction: int OP_HIDE
com.appspa.demo.R$drawable: int abc_scrubber_primary_mtrl_alpha
io.reactivex.internal.disposables.CancellableDisposable: long serialVersionUID
com.appspa.demo.R$layout: int abc_cascading_menu_item_layout
androidx.core.view.MotionEventCompat: int AXIS_LTRIGGER
com.appspa.update.R$styleable: int AppCompatTheme_windowActionBarOverlay
io.reactivex.subjects.SingleSubject: java.lang.Throwable error
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: org.aspectj.lang.reflect.TypePattern typePattern
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
androidx.appcompat.widget.ActivityChooserModel: java.lang.String TAG_HISTORICAL_RECORDS
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable: io.reactivex.CompletableSource other
androidx.appcompat.R$styleable: int[] MenuItem
io.reactivex.internal.operators.completable.CompletableCache: java.lang.Throwable error
io.reactivex.internal.operators.flowable.FlowableWindowTimed: io.reactivex.Scheduler scheduler
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback
com.appspa.demo.R$attr: int navigationIcon
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTint
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$attr: int drawerArrowStyle
com.appspa.demo.R$styleable: int AlertDialog_singleChoiceItemLayout
com.xuexiang.xhttp2.annotation.NetMethod: long NOT_SET_CACHE_TIME
com.appspa.update.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
retrofit2.RequestFactory$Builder: java.util.regex.Pattern PARAM_NAME_REGEX
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: io.reactivex.functions.Function zipper
androidx.appcompat.widget.ThemeUtils: java.lang.ThreadLocal TL_TYPED_VALUE
androidx.appcompat.R$style: int Widget_AppCompat_TextView
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onMaybeAssembly
androidx.appcompat.R$id: int tag_accessibility_heading
com.appspa.demo.R$styleable: int[] PopupWindowBackgroundState
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform: java.util.Locale mLocale
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: int index
okhttp3.internal.http.RealInterceptorChain: int writeTimeout
com.appspa.update.R$color: int dim_foreground_material_light
androidx.core.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_ASYNC
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: long size
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: long maxAge
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName
okio.Buffer$UnsafeCursor: long offset
androidx.appcompat.app.AlertController: int mSingleChoiceItemLayout
com.xuexiang.xhttp2.R$attr: int showText
org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.reflect.Method baseMethod
io.reactivex.internal.operators.observable.ObservableReplay$MulticastReplay: io.reactivex.functions.Function selector
androidx.appcompat.app.AlertController$ButtonHandler: java.lang.ref.WeakReference mDialog
com.appspa.demo.R$styleable: int SwitchCompat_trackTint
androidx.appcompat.R$styleable: int FontFamily_fontProviderAuthority
androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim
androidx.versionedparcelable.VersionedParcelStream: int TYPE_INT_ARRAY
com.appspa.demo.R$layout: int activity_main
okhttp3.internal.connection.RealConnection: okhttp3.Route route
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Toolbar
io.reactivex.internal.operators.flowable.FlowableZip: io.reactivex.functions.Function zipper
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher: io.reactivex.internal.util.ErrorMode errorMode
retrofit2.ParameterHandler$Headers: int p
io.reactivex.schedulers.Timed: java.util.concurrent.TimeUnit unit
io.reactivex.plugins.RxJavaPlugins: boolean failNonBlockingScheduler
com.zhy.http.okhttp.request.PostFileRequest$1$1: long val$bytesWritten
com.appspa.update.R$attr: int fontProviderQuery
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
com.xuexiang.xhttp2.utils.RequestBodyUtils$1: okhttp3.MediaType val$mediaType
com.appspa.demo.R$styleable: int AppCompatTheme_dialogCornerRadius
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinatorHelper parent
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem
com.appspa.demo.R$styleable: int ActionBar_contentInsetLeft
androidx.appcompat.R$string: int abc_menu_enter_shortcut_label
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_startX
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ZipIterableFunction: io.reactivex.functions.Function zipper
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
androidx.appcompat.widget.ActionMenuView: boolean mFormatItems
androidx.appcompat.widget.AppCompatPopupWindow: boolean mOverlapAnchor
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: java.util.concurrent.TimeUnit unit
androidx.appcompat.view.menu.MenuPopupHelper: boolean mOverflowOnly
androidx.appcompat.R$color: int primary_material_dark
androidx.appcompat.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind PERTARGET
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: boolean inSingle
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher$RailSubscription: io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher this$0
androidx.appcompat.widget.SearchView: android.text.TextWatcher mTextWatcher
com.appspa.demo.R$style: int Base_Widget_AppCompat_RatingBar
androidx.appcompat.widget.ActivityChooserModel: java.lang.Object sRegistryLock
androidx.core.hardware.display.DisplayManagerCompat: java.lang.String DISPLAY_CATEGORY_PRESENTATION
com.appspa.update.R$styleable: int LinearLayoutCompat_android_gravity
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment firstOut
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: android.app.Activity mActivity
com.zhy.http.okhttp.OkHttpUtils$2: okhttp3.Call val$call
com.appspa.demo.R$attr: int ratingBarStyleIndicator
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent mReplyPendingIntent
com.appspa.update.UpdateManager$Builder: boolean isGet
io.reactivex.internal.subscribers.InnerQueuedSubscriber: boolean done
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter: io.reactivex.functions.Function mapper
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItem
io.reactivex.internal.operators.flowable.FlowableBufferTimed: int maxSize
androidx.appcompat.R$id: int accessibility_custom_action_22
com.appspa.update.R$style: int Widget_AppCompat_Button_Borderless_Colored
io.reactivex.internal.operators.observable.ObservableFromCallable: java.util.concurrent.Callable callable
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: org.reactivestreams.Subscription upstream
androidx.fragment.R$id: int accessibility_custom_action_28
io.reactivex.internal.operators.flowable.FlowableReduceWithSingle: org.reactivestreams.Publisher source
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask: io.reactivex.internal.operators.completable.CompletableTimeout this$0
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
androidx.appcompat.widget.DropDownListView: android.graphics.Rect mSelectorRect
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper
io.reactivex.internal.operators.observable.BlockingObservableIterable: io.reactivex.ObservableSource source
androidx.appcompat.R$attr: int drawableStartCompat
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: int expectedModCount
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_TextView_SpinnerItem
androidx.vectordrawable.R$styleable: int GradientColorItem_android_offset
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: java.util.concurrent.atomic.AtomicReference inner
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: boolean fusionMode
androidx.viewpager.R$layout: int notification_template_custom_big
androidx.appcompat.widget.SwitchCompat: int mThumbTextPadding
com.appspa.demo.R$styleable: int FontFamilyFont_android_ttcIndex
com.xuexiang.xhttp2.request.BaseRequest: long mWriteTimeOut
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: int INTERRUPTING
com.appspa.demo.R$style: int Widget_AppCompat_Spinner_DropDown
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_19
com.google.gson.Gson: java.lang.String JSON_NON_EXECUTABLE_PREFIX
androidx.core.app.ActivityRecreator: java.lang.String LOG_TAG
androidx.core.text.BidiFormatter$DirectionalityEstimator: int charIndex
okhttp3.Cache$CacheRequestImpl: okhttp3.Cache this$0
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: boolean delayErrors
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: org.reactivestreams.Publisher source
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: io.reactivex.functions.Function mapper
androidx.appcompat.widget.SearchView$SavedState: boolean isIconified
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: long serialVersionUID
io.reactivex.processors.MulticastProcessor: io.reactivex.internal.fuseable.SimpleQueue queue
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: boolean active
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1
retrofit2.ParameterHandler$Part: java.lang.reflect.Method method
com.xuexiang.xhttp2.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
com.xuexiang.xhttp2.R$styleable: int[] Spinner
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: io.reactivex.functions.Function leftEnd
androidx.core.app.NotificationCompat$Builder: int mVisibility
androidx.customview.widget.ViewDragHelper: int EDGE_LEFT
androidx.appcompat.view.menu.MenuAdapter: int mItemLayoutRes
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: boolean cancelled
androidx.viewpager.R$id: int line3
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction onObservableSubscribe
com.appspa.update.R$styleable: int MenuItem_alphabeticModifiers
androidx.appcompat.R$color: int secondary_text_disabled_material_light
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: java.util.concurrent.atomic.AtomicReference queue
androidx.appcompat.R$styleable: int TextAppearance_android_textColorLink
io.reactivex.internal.operators.single.SingleObserveOn: io.reactivex.SingleSource source
com.xuexiang.xhttp2.R$attr: int windowMinWidthMinor
androidx.cursoradapter.widget.SimpleCursorAdapter: int mStringConversionColumn
io.reactivex.internal.operators.flowable.FlowableZip: int bufferSize
com.appspa.demo.R$drawable: int spa_icon_app_close
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: long serialVersionUID
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCategoryOrder
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Object mAction
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_centerX
androidx.activity.R$id: int accessibility_custom_action_15
com.appspa.demo.R$styleable: int AppCompatTheme_alertDialogCenterButtons
io.reactivex.observers.DisposableObserver: java.util.concurrent.atomic.AtomicReference upstream
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_MIN
androidx.appcompat.R$styleable: int AppCompatTheme_colorAccent
androidx.appcompat.resources.R$id: int normal
androidx.fragment.app.Fragment: int mTargetRequestCode
com.xuexiang.xhttp2.R$styleable: int AppCompatTextHelper_android_drawableRight
com.appspa.demo.R$drawable: int abc_ic_ab_back_material
androidx.appcompat.resources.R$styleable: int[] StateListDrawableItem
androidx.appcompat.R$styleable: int ActionBar_divider
com.appspa.demo.R$attr: int overlapAnchor
androidx.appcompat.R$attr: int fontProviderQuery
androidx.core.R$id: int normal
androidx.viewpager.R$attr: int fontProviderFetchTimeout
androidx.appcompat.widget.ListPopupWindow: int mDropDownVerticalOffset
androidx.core.app.NotificationCompat$Builder: java.lang.String mChannelId
okhttp3.internal.ws.WebSocketReader: boolean closed
androidx.appcompat.R$styleable: int AppCompatTheme_colorBackgroundFloating
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: io.reactivex.functions.BiPredicate comparer
com.xuexiang.xhttp2.R$attr: int paddingEnd
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: io.reactivex.MaybeSource[] sources
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: boolean done
androidx.appcompat.R$dimen: int notification_top_pad
androidx.lifecycle.LiveData: int mActiveCount
com.appspa.demo.R$anim: int abc_shrink_fade_out_from_bottom
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: io.reactivex.functions.BiConsumer onEvent
androidx.fragment.R$styleable: int[] FontFamily
com.appspa.update.R$style: int Widget_AppCompat_ActionButton
com.appspa.update.R$attr: int radioButtonStyle
okhttp3.Address: java.net.Proxy proxy
okhttp3.internal.ws.RealWebSocket$Close: int code
com.appspa.demo.R$styleable: int[] GradientColor
com.appspa.update.R$dimen: int abc_alert_dialog_button_bar_height
io.reactivex.internal.observers.BlockingBaseObserver: boolean cancelled
androidx.fragment.app.FragmentTransition$3: android.view.View val$epicenterView
androidx.lifecycle.ClassesInfoCache: java.util.Map mHasLifecycleMethods
androidx.core.text.util.FindAddress: java.util.regex.Pattern sStateRe
com.appspa.demo.R$color: int switch_thumb_disabled_material_light
com.xuexiang.xhttp2.R$attr: int colorError
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
androidx.core.content.pm.ShortcutInfoCompat: java.util.Set mCategories
androidx.core.widget.NestedScrollView: int mActivePointerId
androidx.appcompat.R$id: int search_voice_btn
androidx.appcompat.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_Button
com.appspa.update.R$style: int Widget_AppCompat_SeekBar
com.xuexiang.xhttp2.R$id: int action_bar
com.appspa.update.R$styleable: int Toolbar_titleMargin
okhttp3.HttpUrl: int port
com.xuexiang.xhttp2.R$styleable: int MenuItem_actionLayout
com.appspa.update.R$styleable: int Toolbar_titleMarginTop
androidx.core.view.PointerIconCompat: int TYPE_CELL
io.reactivex.internal.operators.observable.ObservableAmb: io.reactivex.ObservableSource[] sources
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: io.reactivex.functions.Function itemTimeoutIndicator
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn: io.reactivex.functions.Function valueSupplier
androidx.core.app.JobIntentService$CommandProcessor: androidx.core.app.JobIntentService this$0
com.appspa.update.R$styleable: int TextAppearance_fontFamily
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.widget.ActivityChooserView$2: androidx.appcompat.widget.ActivityChooserView this$0
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnNext: java.lang.Object t
androidx.appcompat.app.TwilightManager: android.content.Context mContext
com.appspa.demo.R$styleable: int MenuItem_actionProviderClass
androidx.drawerlayout.R$layout: int notification_template_part_chronometer
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_onClick
androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: java.util.concurrent.TimeUnit unit
io.reactivex.internal.subscribers.QueueDrainSubscriberPad3: java.util.concurrent.atomic.AtomicLong requested
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.fragment.app.FragmentManagerNonConfig: java.util.Map mViewModelStores
retrofit2.RequestFactory: boolean isFormEncoded
com.appspa.update.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.app.AppCompatViewInflater: java.lang.String LOG_TAG
com.appspa.demo.R$attr: int height
androidx.appcompat.R$style: int TextAppearance_AppCompat_Small_Inverse
androidx.appcompat.R$id: int listMode
androidx.appcompat.R$attr: int backgroundTint
androidx.fragment.R$styleable: int FontFamily_fontProviderQuery
com.xuexiang.xhttp2.R$styleable: int ActionMenuItemView_android_minWidth
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader: com.xuexiang.xhttp2.subsciber.impl.OnProgressCancelListener mOnProgressCancelListener
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$attr: int height
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: java.util.concurrent.Callable bufferSupplier
com.appspa.update.R$anim: int abc_shrink_fade_out_from_bottom
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int FLAG_IS_CLOSING
com.appspa.demo.R$id: int action_context_bar
androidx.vectordrawable.R$id: int actions
androidx.core.graphics.drawable.IconCompat: float ADAPTIVE_ICON_INSET_FACTOR
androidx.customview.R$dimen: int compat_button_padding_horizontal_material
com.xuexiang.xhttp2.R$dimen: int abc_dialog_list_padding_top_no_title
okio.GzipSink: java.util.zip.Deflater deflater
io.reactivex.internal.operators.completable.CompletablePeek: io.reactivex.functions.Consumer onError
com.appspa.update.R$style: int Base_Widget_AppCompat_Light_PopupMenu
androidx.appcompat.R$styleable: int FontFamilyFont_ttcIndex
okhttp3.internal.http2.Http2Connection: long intervalPongsReceived
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber: io.reactivex.processors.UnicastProcessor w
io.reactivex.internal.operators.single.SingleDematerialize: io.reactivex.Single source
androidx.appcompat.R$styleable: int ColorStateListItem_android_color
androidx.customview.R$drawable: int notification_template_icon_low_bg
com.xuexiang.xhttp2.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
com.xuexiang.xhttp2.R$interpolator: int fast_out_slow_in
okio.GzipSource: okio.BufferedSource source
io.reactivex.internal.operators.flowable.FlowableReplay: org.reactivestreams.Publisher onSubscribe
io.reactivex.internal.operators.flowable.FlowableCache$Node: java.lang.Object[] values
io.reactivex.exceptions.UndeliverableException: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int[] GradientColorItem
io.reactivex.internal.operators.flowable.FlowableAutoConnect: io.reactivex.flowables.ConnectableFlowable source
com.appspa.update.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.R$attr: int queryHint
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: java.util.ArrayDeque observers
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionMode
io.reactivex.internal.operators.observable.ObservableToList: java.util.concurrent.Callable collectionSupplier
androidx.appcompat.R$attr: int drawableTopCompat
androidx.appcompat.widget.Toolbar: int mTitleMarginStart
androidx.appcompat.R$attr: int actionViewClass
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
androidx.core.R$id: int accessibility_custom_action_15
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat
androidx.vectordrawable.R$attr: int fontVariationSettings
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: com.google.gson.reflect.TypeToken val$fieldType
androidx.activity.R$drawable: int notification_template_icon_bg
com.google.gson.stream.JsonReader: int pos
com.xuexiang.xhttp2.R$color: int material_blue_grey_950
com.xuexiang.xhttp2.cache.core.LruDiskCache: com.jakewharton.disklrucache.DiskLruCache mDiskLruCache
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: long size
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: io.reactivex.CompletableObserver downstream
androidx.fragment.R$color: int notification_icon_bg_color
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean defaultItemEnabled
androidx.appcompat.R$drawable: int abc_cab_background_internal_bg
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver parent
androidx.vectordrawable.animated.R$id: int right_side
retrofit2.Platform$Android$MainThreadExecutor: android.os.Handler handler
androidx.appcompat.R$styleable: int ActionBar_backgroundStacked
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$style: int AppTheme
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: java.util.concurrent.Semaphore notify
com.appspa.update.R$id: int right_side
io.reactivex.internal.operators.single.SingleDelayWithObservable: io.reactivex.SingleSource source
com.xuexiang.xhttp2.transform.func.ApiResultFunc: com.google.gson.Gson mGson
androidx.appcompat.view.menu.MenuItemImpl: int mCategoryOrder
androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinimumField
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean defaultItemVisible
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: boolean done
com.appspa.demo.R$attr: int titleTextStyle
com.appspa.demo.R$id: int accessibility_custom_action_0
androidx.vectordrawable.animated.R$dimen: int notification_small_icon_background_padding
androidx.appcompat.R$color: int ripple_material_dark
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: boolean delayErrors
androidx.appcompat.R$string: int abc_menu_ctrl_shortcut_label
okhttp3.OkHttpClient$Builder: int callTimeout
io.reactivex.internal.operators.observable.ObservableBuffer: int count
io.reactivex.internal.observers.BlockingObserver: java.lang.Object TERMINATED
androidx.fragment.app.FragmentManagerImpl: boolean mStopped
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: boolean completed
com.appspa.update.R$layout: int abc_action_bar_up_container
com.xuexiang.xhttp2.R$styleable: int ColorStateListItem_android_alpha
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState
com.appspa.demo.R$string: int abc_searchview_description_search
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter val$this$0
androidx.drawerlayout.widget.DrawerLayout: int mMinDrawerMargin
com.appspa.update.entity.UpdateEntity: int mVersionCode
androidx.appcompat.widget.ListPopupWindow: android.view.View mPromptView
androidx.fragment.app.FragmentState: java.lang.String mWho
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter
okhttp3.Request$Builder: java.util.Map tags
com.appspa.update.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.R$styleable: int TextAppearance_textAllCaps
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator: io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver[] observers
androidx.fragment.app.FragmentTransaction: boolean mAllowAddToBackStack
com.appspa.update.R$color: int material_grey_100
androidx.appcompat.resources.R$id: int accessibility_custom_action_29
com.appspa.demo.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
androidx.core.app.NotificationCompat: int VISIBILITY_PRIVATE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
io.reactivex.internal.operators.flowable.FlowableCache: java.lang.Throwable error
androidx.appcompat.view.StandaloneActionMode: java.lang.ref.WeakReference mCustomView
com.appspa.demo.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.appspa.demo.R$dimen: int hint_alpha_material_dark
androidx.core.app.ActivityRecreator: java.lang.reflect.Method requestRelaunchActivityMethod
okio.RealBufferedSource: okio.Source source
com.appspa.update.R$styleable: int[] FontFamilyFont
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue queue
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable: io.reactivex.ObservableSource source
androidx.vectordrawable.animated.R$id: int text
androidx.fragment.R$styleable: int[] FontFamilyFont
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$attr: int lastBaselineToBottomHeight
androidx.appcompat.widget.SearchView: android.graphics.drawable.Drawable mSearchHintIcon
androidx.core.text.util.LinkifyCompat$LinkSpec: android.text.style.URLSpan frameworkAddedSpan
okhttp3.Dns: okhttp3.Dns SYSTEM
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher$RailSubscription: int m
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle: io.reactivex.Flowable source
com.xuexiang.xhttp2.R$drawable: int abc_ic_star_half_black_48dp
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.Object mInfo
androidx.core.view.ViewCompat: java.lang.ThreadLocal sThreadLocalRect
com.appspa.update.R$styleable: int ViewStubCompat_android_inflatedId
com.appspa.demo.R$attr: int contentInsetRight
androidx.appcompat.widget.AbsActionBarView$1: androidx.appcompat.widget.AbsActionBarView this$0
androidx.appcompat.R$string: int abc_toolbar_collapse_description
okhttp3.RealCall: okio.AsyncTimeout timeout
com.appspa.demo.R$attr: int tickMarkTint
com.xuexiang.xhttp2.R$dimen: int abc_text_size_medium_material
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.appspa.update.R$dimen: int abc_progress_bar_height_material
io.reactivex.internal.operators.observable.ObservableSequenceEqual: io.reactivex.ObservableSource second
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy DROP
androidx.viewpager.widget.ViewPager: boolean mPopulatePending
androidx.appcompat.R$attr: int dividerPadding
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver main
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: long count
com.appspa.demo.R$drawable: int notification_icon_background
com.xuexiang.xhttp2.R$id: int buttonPanel
androidx.appcompat.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
androidx.appcompat.R$styleable: int AppCompatTheme_buttonStyle
androidx.loader.R$dimen: int notification_content_margin_start
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: int limit
com.xuexiang.xhttp2.R$dimen: int abc_text_size_display_2_material
com.appspa.demo.R$anim: int abc_popup_exit
io.reactivex.subjects.SingleSubject$SingleDisposable: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$id: int tag_accessibility_heading
androidx.core.R$string: int status_bar_notification_info_overflow
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
io.reactivex.subscribers.ResourceSubscriber: io.reactivex.internal.disposables.ListCompositeDisposable resources
androidx.fragment.app.FragmentTransaction: int OP_REMOVE
androidx.core.view.InputDeviceCompat: int SOURCE_HDMI
androidx.core.view.MotionEventCompat: int AXIS_RY
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Title
com.appspa.update.R$styleable: int AppCompatTheme_dividerHorizontal
io.reactivex.internal.operators.single.SingleDelay: long time
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: io.reactivex.SingleObserver downstream
androidx.loader.R$id: int chronometer
androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber: io.reactivex.functions.Function valueSupplier
androidx.appcompat.R$id: int action_bar_root
com.google.gson.Gson: boolean DEFAULT_LENIENT
androidx.loader.content.Loader: androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener
com.appspa.update.R$style: int Base_Widget_AppCompat_Button_Colored
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_text_visibility
com.appspa.update.entity.DownloadEntity: long mSize
androidx.customview.R$dimen: int notification_action_icon_size
com.appspa.demo.R$id: int accessibility_custom_action_9
com.appspa.demo.R$styleable: int GradientColor_android_gradientRadius
com.appspa.update.R$styleable: int ActionBar_logo
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_ACCESSIBILITY_FOCUS
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: io.reactivex.functions.Function debounceSelector
androidx.core.R$id: int accessibility_custom_action_11
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_OPTS_INTEROP_KEY
com.appspa.update.R$drawable: int abc_ic_star_half_black_36dp
com.appspa.demo.R$styleable: int SwitchCompat_track
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: io.reactivex.MaybeObserver downstream
okio.Okio: java.util.logging.Logger logger
com.appspa.update.R$dimen: int abc_text_size_display_2_material
com.appspa.demo.R$styleable: int MenuItem_android_checkable
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: io.reactivex.functions.Consumer onAfterSuccess
io.reactivex.internal.operators.observable.ObservableObserveOn: io.reactivex.Scheduler scheduler
androidx.core.app.ServiceCompat: int STOP_FOREGROUND_REMOVE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ENUM_FACTORY
androidx.fragment.app.FragmentTransition$2: java.lang.Object val$enterTransition
androidx.vectordrawable.animated.R$style: int Widget_Compat_NotificationActionText
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable: boolean delayErrors
com.appspa.update.R$styleable: int AppCompatTheme_actionBarTabStyle
androidx.appcompat.view.menu.CascadingMenuPopup$2: androidx.appcompat.view.menu.CascadingMenuPopup this$0
io.reactivex.internal.operators.completable.CompletableCache: io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache[] TERMINATED
org.aspectj.runtime.reflect.Factory: java.util.Hashtable prims
androidx.fragment.app.FragmentTabHost: androidx.fragment.app.FragmentTabHost$TabInfo mLastTab
com.appspa.demo.R$styleable: int AppCompatTheme_buttonBarStyle
com.xuexiang.xhttp2.R$dimen: int abc_action_button_min_width_material
com.appspa.demo.R$styleable: int ViewBackgroundHelper_backgroundTint
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int actionModeSplitBackground
androidx.appcompat.widget.ListPopupWindow: int mDropDownWidth
com.appspa.demo.R$drawable: int btn_radio_on_mtrl
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_HINT_SCREEN_TIMEOUT
androidx.lifecycle.LiveData$ObserverWrapper: int mLastVersion
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: io.reactivex.disposables.CompositeDisposable tasks
okhttp3.internal.http2.Http2Connection$5: java.util.List val$requestHeaders
io.reactivex.internal.operators.flowable.FlowableGroupBy: io.reactivex.functions.Function keySelector
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.view.menu.ListMenuPresenter: int mItemLayoutRes
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue
androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
com.appspa.update.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.FieldNamingStrategy fieldNamingPolicy
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: float weight
androidx.appcompat.R$attr: int alertDialogStyle
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner mTabSpinner
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: char[] chars
io.reactivex.internal.operators.completable.CompletableDelay$Delay: boolean delayError
com.appspa.demo.R$drawable: int abc_seekbar_track_material
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: boolean done
com.xuexiang.xhttp2.R$id: int tag_unhandled_key_listeners
androidx.loader.content.Loader: android.content.Context mContext
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen
com.xuexiang.xhttp2.R$attr: int titleTextColor
androidx.drawerlayout.R$attr: int fontProviderFetchTimeout
androidx.appcompat.resources.R$integer: int status_bar_notification_info_maxnum
okhttp3.Response: okhttp3.Request request
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: long serialVersionUID
androidx.appcompat.widget.ActivityChooserView: androidx.core.view.ActionProvider mProvider
com.xuexiang.xhttp2.R$attr: int divider
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ROLE_DESCRIPTION_KEY
androidx.fragment.app.FragmentActivity: java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
com.appspa.demo.R$drawable: int abc_btn_check_to_on_mtrl_000
com.appspa.update.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.core.provider.FontsContractCompat$4$4: androidx.core.provider.FontsContractCompat$4 this$0
com.appspa.update._AppSpace$1: java.lang.String val$url
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.widget.ForwardingListener mForwardingListener
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: boolean done
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: io.reactivex.Scheduler scheduler
androidx.activity.R$id: int text2
io.reactivex.internal.operators.flowable.FlowableSequenceEqual: org.reactivestreams.Publisher first
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_FADE
androidx.fragment.app.FragmentTransaction: int mTransitionStyle
com.appspa.demo.R$dimen: int abc_search_view_preferred_width
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: io.reactivex.functions.Action onAfterTerminate
androidx.appcompat.R$styleable: int ActionBar_contentInsetEnd
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy mStrategy
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$attr: int drawableStartCompat
com.appspa.demo.R$attr: int colorControlActivated
com.appspa.demo.R$attr: int windowActionBarOverlay
com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Class componentType
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
androidx.core.provider.FontsContractCompat$FontRequestCallback: int RESULT_OK
androidx.core.content.res.ResourcesCompat$FontCallback$1: android.graphics.Typeface val$typeface
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: io.reactivex.functions.Function rightEnd
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: boolean notSkippingLocal
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable
com.appspa.update.R$styleable: int[] MenuView
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany: io.reactivex.functions.Function combiner
androidx.core.app.NotificationCompatJellybean: java.lang.String TAG
io.reactivex.internal.operators.single.SingleCache$CacheDisposable: long serialVersionUID
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType COLOR
com.appspa.demo.R$styleable: int AppCompatTheme_windowActionModeOverlay
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: int sourceMode
androidx.appcompat.app.WindowDecorActionBar$1: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.customview.R$attr: int fontStyle
androidx.core.app.NotificationCompat: java.lang.String EXTRA_BIG_TEXT
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: long count
com.appspa.demo.R$styleable: int ActionBar_homeAsUpIndicator
com.appspa.update.R$attr: int titleTextAppearance
androidx.appcompat.widget.ActivityChooserView$5: androidx.appcompat.widget.ActivityChooserView this$0
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: io.reactivex.disposables.CompositeDisposable set
androidx.loader.R$style: int TextAppearance_Compat_Notification_Title
androidx.customview.R$id: int notification_main_column_container
androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl
com.appspa.demo.R$styleable: int AppCompatTheme_panelMenuListWidth
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: double EPSILON
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY
com.google.gson.internal.bind.TypeAdapters$27: java.lang.String SECOND
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: io.reactivex.functions.Function mapper
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_font
androidx.appcompat.resources.R$dimen: int notification_top_pad
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode NO_CACHE
com.appspa.update.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
com.appspa.update.R$styleable: int SwitchCompat_android_thumb
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutAlphabeticModifiers
androidx.core.widget.NestedScrollView: long mLastScroll
androidx.core.view.ViewGroupCompat: int LAYOUT_MODE_OPTICAL_BOUNDS
okhttp3.HttpUrl: java.lang.String host
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okhttp3.ResponseBody delegate
androidx.vectordrawable.animated.R$styleable: int ColorStateListItem_android_alpha
com.appspa.update.R$styleable: int AppCompatTextView_fontVariationSettings
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowOperation: io.reactivex.subjects.UnicastSubject w
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement product
androidx.appcompat.widget.ContentFrameLayout: android.graphics.Rect mDecorPadding
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: boolean disposed
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: int retries
androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral
com.appspa.demo.R$id: int unchecked
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mCachedTint
com.appspa.demo.R$attr: int buttonGravity
retrofit2.Retrofit$1: retrofit2.Retrofit this$0
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: org.reactivestreams.Subscription upstream
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
androidx.appcompat.widget.ThemeUtils: int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
androidx.appcompat.R$id: int split_action_bar
androidx.core.view.ViewCompat: boolean sMinHeightFieldFetched
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: int OTHER_STATE_CONSUMED_OR_EMPTY
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END
com.appspa.update.R$attr: int listPreferredItemHeight
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_startX
androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mCurrentInput
okhttp3.MultipartBody$Builder: java.util.List parts
androidx.core.view.LayoutInflaterCompat: java.lang.reflect.Field sLayoutInflaterFactory2Field
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.appspa.demo.R$styleable: int AppCompatSeekBar_tickMark
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.xuexiang.xhttp2.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: int STATE_RESULT_VALUE
com.appspa.demo.R$dimen: int disabled_alpha_material_light
androidx.appcompat.R$attr: int activityChooserViewStyle
com.xuexiang.xhttp2.R$drawable: int btn_checkbox_unchecked_mtrl
com.google.gson.Gson: boolean htmlSafe
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: int size
io.reactivex.internal.operators.single.SingleDoOnError: io.reactivex.functions.Consumer onError
androidx.appcompat.R$drawable: int btn_radio_on_mtrl
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int mDirection
com.appspa.demo.R$dimen: int space_close_line_width
com.appspa.update.R$styleable: int SearchView_queryHint
com.xuexiang.xhttp2.R$string: int abc_search_hint
com.appspa.demo.R$styleable: int MenuView_android_itemTextAppearance
androidx.drawerlayout.R$id: int line1
com.xuexiang.xhttp2.model.SchedulerType: com.xuexiang.xhttp2.model.SchedulerType _io_io
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontWeight
org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.PointcutExpression pc
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_MALFORMED_QUERY
com.xuexiang.xhttp2.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mIconView
com.appspa.update.R$style: int Base_Widget_AppCompat_RatingBar
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED
androidx.appcompat.view.menu.StandardMenuPopup$1: androidx.appcompat.view.menu.StandardMenuPopup this$0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: java.lang.Object u
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_SearchView
androidx.appcompat.R$color: int abc_primary_text_material_light
com.appspa.update.R$attr: int xnpb_text_visibility
okhttp3.internal.http.CallServerInterceptor$CountingSink: long successfulCount
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher: org.reactivestreams.Publisher source
androidx.core.widget.AutoScrollHelper: boolean mNeedsReset
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener
androidx.core.app.JobIntentService: java.lang.String TAG
com.google.gson.stream.JsonWriter: java.lang.String deferredName
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
io.reactivex.internal.operators.observable.ObservableBufferTimed: java.util.concurrent.TimeUnit unit
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_UNDEFINED
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_7
com.appspa.update.R$drawable: int btn_checkbox_checked_mtrl
androidx.appcompat.R$color: int highlighted_text_material_light
com.appspa.update.R$dimen: int highlight_alpha_material_light
com.appspa.demo.R$dimen: int compat_notification_large_icon_max_height
okhttp3.internal.cache2.FileOperator: java.nio.channels.FileChannel fileChannel
androidx.core.R$id: int tag_screen_reader_focusable
androidx.activity.R$styleable: int[] GradientColorItem
com.appspa.update.R$id: int search_voice_btn
androidx.appcompat.widget.ActionMenuPresenter: boolean mExpandedActionViewsExclusive
androidx.appcompat.R$color: int abc_search_url_text_pressed
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue queue
com.xuexiang.xhttp2.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
retrofit2.OptionalConverterFactory: retrofit2.Converter$Factory INSTANCE
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: boolean unsupported
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl: java.lang.Class[] lower
androidx.appcompat.R$dimen: int abc_dialog_fixed_height_major
com.appspa.demo.R$styleable: int[] ActionBarLayout
com.xuexiang.xhttp2.R$id: int topPanel
androidx.drawerlayout.widget.DrawerLayout: int[] LAYOUT_ATTRS
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mActions
androidx.appcompat.widget.SwitchCompat: java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_DISPLAY_INTENT
androidx.appcompat.R$dimen: int tooltip_precise_anchor_threshold
com.google.gson.internal.LinkedTreeMap: java.util.Comparator NATURAL_ORDER
androidx.drawerlayout.widget.DrawerLayout: int DRAWER_ELEVATION
com.appspa.demo.R$style: int Theme_AppCompat_DayNight_NoActionBar
androidx.core.R$attr: int font
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display4
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: long serialVersionUID
androidx.appcompat.R$styleable: int ViewStubCompat_android_id
com.appspa.demo.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.appspa.demo.R$styleable: int AppCompatTextView_drawableRightCompat
com.appspa.demo.R$dimen: int abc_text_size_caption_material
com.appspa.update.R$color: int background_material_dark
com.appspa.update.R$styleable: int[] GradientColorItem
com.appspa.demo.R$id: int select_dialog_listview
okhttp3.internal.http2.Http2Connection$Builder: boolean client
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
com.xuexiang.xhttp2.R$styleable: int[] MenuGroup
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: org.reactivestreams.Subscription upstream
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String EXTRA_WEARABLE_EXTENSIONS
com.appspa.update.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.appcompat.R$style: int Widget_AppCompat_Light_ListView_DropDown
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.fragment.app.FragmentManagerImpl: java.lang.String VIEW_STATE_TAG
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
com.google.gson.internal.bind.TypeAdapters$26$1: com.google.gson.internal.bind.TypeAdapters$26 this$0
com.xuexiang.xhttp2.R$string: int search_menu_title
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.widget.AppCompatTextHelper: int mFontWeight
com.appspa.demo.R$id: int topPanel
androidx.viewpager.R$styleable: int ColorStateListItem_alpha
com.appspa.update.R$layout: int abc_alert_dialog_material
androidx.fragment.app.Fragment: int ACTIVITY_CREATED
androidx.fragment.app.FragmentTransition$1: java.util.ArrayList val$exitingViews
androidx.drawerlayout.R$color: int notification_icon_bg_color
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer: boolean delayError
io.reactivex.internal.operators.flowable.FlowableLift: io.reactivex.FlowableOperator operator
androidx.activity.R$id: int tag_screen_reader_focusable
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.Person mUser
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
androidx.core.internal.view.SupportMenu: int SUPPORTED_MODIFIERS_MASK
androidx.core.os.LocaleListPlatformWrapper: android.os.LocaleList mLocaleList
androidx.core.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE
okhttp3.internal.http2.Http2Connection: int nextStreamId
com.appspa.update.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X
com.google.gson.internal.bind.JsonTreeWriter: java.util.List stack
androidx.appcompat.widget.ButtonBarLayout: int mMinimumHeight
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_25
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache this$0
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: long index
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver: io.reactivex.MaybeObserver downstream
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float PRECISION
androidx.core.view.DragStartHelper: boolean mDragging
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: boolean delayErrors
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems
okhttp3.CertificatePinner$Pin: okio.ByteString hash
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier: java.util.concurrent.Callable other
androidx.appcompat.R$drawable: int abc_btn_check_material_anim
com.xuexiang.xhttp2.R$string: int abc_action_menu_overflow_description
androidx.customview.R$styleable: int GradientColor_android_centerColor
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle: io.reactivex.Observable source
androidx.appcompat.R$style: int Theme_AppCompat_Dialog
androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_searchViewStyle
androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$1: long val$finalFileSizeDownloaded
androidx.customview.R$styleable: int GradientColor_android_type
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY
androidx.appcompat.R$styleable: int AppCompatTheme_dialogPreferredPadding
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorError
androidx.appcompat.view.menu.StandardMenuPopup: boolean mShowTitle
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: int activeCount
androidx.appcompat.R$dimen: int abc_seekbar_track_background_height_material
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
io.reactivex.internal.functions.Functions$Array5Func: io.reactivex.functions.Function5 f
androidx.appcompat.R$color: int material_blue_grey_950
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: io.reactivex.functions.BiFunction reducer
io.reactivex.internal.operators.observable.ObservableScan: io.reactivex.functions.BiFunction accumulator
com.xuexiang.xhttp2.R$styleable: int Toolbar_titleTextColor
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflowSet
okhttp3.ResponseBody$BomAwareReader: java.nio.charset.Charset charset
com.xuexiang.xhttp2.R$id: int expanded_menu
androidx.core.util.PatternsCompat: java.lang.String IANA_TOP_LEVEL_DOMAINS
com.xuexiang.xhttp2.R$styleable: int MenuGroup_android_visible
androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0
com.appspa.update.R$dimen: int compat_notification_large_icon_max_height
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Button
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM
androidx.appcompat.R$style: int TextAppearance_AppCompat_Headline
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: java.util.ArrayDeque buffers
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: java.util.concurrent.atomic.AtomicBoolean once
androidx.appcompat.R$string: int abc_shareactionprovider_share_with_application
com.appspa.update.R$id: int info
okhttp3.Response: long receivedResponseAtMillis
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: java.util.concurrent.atomic.AtomicInteger wip
io.reactivex.internal.subscribers.InnerQueuedSubscriber: long serialVersionUID
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String mDataMimeType
com.xuexiang.xhttp2.R$styleable: int ViewStubCompat_android_inflatedId
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.xuexiang.xhttp2.R$id: int default_activity_button
com.appspa.update.R$styleable: int SwitchCompat_switchPadding
com.appspa.update.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String KEY_CANCEL_LABEL
androidx.customview.R$style: int Widget_Compat_NotificationActionContainer
androidx.fragment.app.FragmentState: android.os.Bundle mArguments
androidx.appcompat.R$styleable: int SearchView_android_inputType
io.reactivex.internal.operators.observable.ObservableReplay$ScheduledReplaySupplier: io.reactivex.Scheduler scheduler
com.appspa.update.R$styleable: int SearchView_suggestionRowLayout
com.appspa.update.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level HEADERS
okhttp3.Cache$Entry: java.lang.String url
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
okhttp3.ConnectionSpec: java.lang.String[] tlsVersions
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerInner: io.reactivex.functions.BiFunction combiner
com.xuexiang.xhttp2.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.zhy.http.okhttp.builder.PostFormBuilder$FileInput: java.io.File file
io.reactivex.internal.subscribers.BasicFuseableSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: int nonEmptySources
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds
com.xuexiang.xhttp2.R$attr: int colorAccent
io.reactivex.internal.operators.flowable.FlowableDoAfterNext: io.reactivex.functions.Consumer onAfterNext
com.appspa.demo.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.appspa.update.R$color: int abc_tint_switch_track
io.reactivex.internal.observers.FutureSingleObserver: java.lang.Object value
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$id: int checked
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_27
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: boolean mCanceled
com.appspa.update.R$styleable: int Toolbar_menu
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart
androidx.core.app.FrameMetricsAggregator: int SWAP_INDEX
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_SELECTION
io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask: java.util.concurrent.TimeUnit unit
androidx.appcompat.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.appspa.demo.R$styleable: int MenuItem_actionViewClass
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$id: int shortcut
androidx.appcompat.R$color: int abc_hint_foreground_material_dark
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: int index
androidx.core.os.MessageCompat: boolean sTryIsAsynchronous
com.xuexiang.xhttp2.R$style: int Base_V26_Widget_AppCompat_Toolbar
androidx.lifecycle.ComputableLiveData: androidx.lifecycle.LiveData mLiveData
androidx.appcompat.resources.R$id: int notification_background
io.reactivex.internal.operators.flowable.FlowableRefCount: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: java.util.concurrent.TimeUnit unit
androidx.appcompat.widget.TooltipPopup: java.lang.String TAG
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable: io.reactivex.CompletableSource other
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: long remaining
androidx.appcompat.R$drawable: int abc_ic_star_black_48dp
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: org.reactivestreams.Publisher items
androidx.appcompat.R$styleable: int Spinner_android_popupBackground
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.internal.util.ErrorMode errorMode
androidx.appcompat.widget.ActivityChooserView: java.lang.String LOG_TAG
com.zhy.http.okhttp.OkHttpUtils$3: int val$id
androidx.core.app.ActivityRecreator: java.lang.reflect.Field mainThreadField
com.appspa.update.R$drawable: int notification_bg_low
com.appspa.update.R$style: int Base_Widget_AppCompat_ListView
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceAppSearchIntent
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: org.reactivestreams.Subscription upstream
com.google.gson.internal.ConstructorConstructor$7: com.google.gson.internal.ConstructorConstructor this$0
com.appspa.update.R$id: int title
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: io.reactivex.functions.Consumer onError
okhttp3.ConnectionPool: okhttp3.internal.connection.RouteDatabase routeDatabase
com.xuexiang.xhttp2.transform.func.ApiResultFunc: java.lang.reflect.Type mType
androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
okhttp3.Cache$Entry: long receivedResponseMillis
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Body2
androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation
com.appspa.demo.R$style: int Base_V22_Theme_AppCompat
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager sInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY
io.reactivex.internal.operators.flowable.FlowableReplay$SizeBoundReplayBuffer: int limit
com.appspa.update.R$styleable: int Toolbar_titleTextColor
com.appspa.demo.R$id: int submenuarrow
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.appspa.demo.R$attr: int preserveIconSpacing
androidx.core.app.NotificationCompat$Action$WearableExtender: int FLAG_AVAILABLE_OFFLINE
androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
io.reactivex.internal.operators.parallel.ParallelRunOn: io.reactivex.Scheduler scheduler
androidx.activity.R$id: int icon
androidx.appcompat.R$anim: int abc_fade_out
androidx.activity.R$dimen: int notification_content_margin_start
com.appspa.demo.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
androidx.appcompat.R$layout: int abc_select_dialog_material
com.appspa.update.UpdateManager: java.util.Map mParams
com.appspa.update.R$styleable: int ColorStateListItem_android_color
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type upperBound
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: boolean done
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost
androidx.loader.content.AsyncTaskLoader: java.lang.String TAG
com.appspa.update.R$styleable: int DrawerArrowToggle_spinBars
okhttp3.RealCall$AsyncCall: boolean $assertionsDisabled
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher: io.reactivex.MaybeSource source
androidx.appcompat.widget.ActivityChooserView$4: androidx.appcompat.widget.ActivityChooserView this$0
androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: io.reactivex.Observer downstream
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT
io.reactivex.internal.functions.Functions$TimestampFunction: io.reactivex.Scheduler scheduler
androidx.appcompat.R$styleable: int MenuView_android_itemBackground
com.appspa.demo.R$color: int abc_secondary_text_material_dark
androidx.appcompat.R$styleable: int Toolbar_logoDescription
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: io.reactivex.internal.util.AtomicThrowable errors
com.appspa.update.R$color: int abc_btn_colored_text_material
androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager
com.appspa.demo.R$attr: int listChoiceIndicatorMultipleAnimated
com.xuexiang.xhttp2.R$layout: int abc_action_bar_up_container
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask$Status mStatus
androidx.appcompat.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented
androidx.core.view.MotionEventCompat: int ACTION_MASK
androidx.core.app.FrameMetricsAggregator: int DRAW_INDEX
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: int produced
io.reactivex.internal.schedulers.ScheduledRunnable: long serialVersionUID
okhttp3.internal.http1.Http1Codec: okio.BufferedSource source
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: android.view.View mChild
com.appspa.demo.R$style: int TextAppearance_AppCompat_Title_Inverse
com.appspa.update.R$dimen: int abc_action_bar_subtitle_top_margin_material
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe: io.reactivex.MaybeSource other
com.appspa.demo.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
okhttp3.MediaType: java.lang.String subtype
com.appspa.demo.R$string: int default_service_api
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sResourcesImplField
androidx.appcompat.view.menu.ActionMenuItem: android.content.Context mContext
io.reactivex.internal.operators.parallel.ParallelJoin: boolean delayErrors
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.appspa.demo.R$style: int Animation_AppCompat_Tooltip
com.appspa.update.R$attr: int navigationContentDescription
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: io.reactivex.internal.fuseable.SimpleQueue queue
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
com.xuexiang.xhttp2.R$layout: int select_dialog_item_material
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.loader.R$drawable: int notification_template_icon_low_bg
io.reactivex.internal.observers.DeferredScalarDisposable: long serialVersionUID
androidx.viewpager.widget.ViewPager: boolean mFirstLayout
androidx.appcompat.widget.SwitchCompat: int TOUCH_MODE_IDLE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
com.appspa.demo.R$mipmap: int ic_launcher
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_PERSON
androidx.appcompat.view.menu.BaseMenuPresenter: int mMenuLayoutRes
androidx.appcompat.R$attr: int buttonBarNeutralButtonStyle
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: com.google.gson.Gson val$context
androidx.appcompat.R$id: int search_edit_frame
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteSelector$Selection routeSelection
androidx.savedstate.SavedStateRegistry: androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController val$dialog
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: java.util.concurrent.atomic.AtomicReference inner
okhttp3.internal.connection.ConnectInterceptor: okhttp3.OkHttpClient client
io.reactivex.schedulers.TestScheduler$TimedRunnable: long count
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: io.reactivex.Scheduler$Worker w
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: boolean cancelled
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedReplayCallable: int bufferSize
com.xuexiang.xhttp2.R$drawable: int abc_ic_star_half_black_36dp
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$1: com.xuexiang.xhttp2.callback.CallBack val$callBack
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String mBridgeTag
androidx.core.util.TimeUtils: int SECONDS_PER_DAY
com.appspa.update.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.appspa.update.R$dimen: int abc_panel_menu_list_width
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_22
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: long index
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderPackage
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
okhttp3.internal.cache2.Relay$RelaySource: long sourcePos
com.appspa.demo.R$dimen: int highlight_alpha_material_dark
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty: org.reactivestreams.Publisher other
com.appspa.demo.R$styleable: int AppCompatTextView_drawableTintMode
com.appspa.update.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.core.R$id: int italic
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: java.util.Collection buffer
com.xuexiang.xhttp2.R$attr: int backgroundStacked
com.appspa.update.R$styleable: int TextAppearance_textAllCaps
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_current
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_MEDIA
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable: boolean disposed
com.appspa.demo.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.widget.SwitchCompat: int mSwitchTop
com.xuexiang.xhttp2.model.ExpiredInfo: java.lang.String mBodyString
retrofit2.RequestFactory$Builder: okhttp3.MediaType contentType
com.appspa.update.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.appspa.update.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_0
androidx.vectordrawable.R$styleable: int[] FontFamily
androidx.appcompat.R$dimen: int highlight_alpha_material_colored
androidx.viewpager.R$drawable: int notify_panel_notification_icon_bg
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnNext: io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber this$0
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: io.reactivex.Observer downstream
android.support.v4.os.ResultReceiver$MyResultReceiver: android.support.v4.os.ResultReceiver this$0
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_6
androidx.core.R$dimen: int compat_notification_large_icon_max_height
io.reactivex.internal.operators.observable.ObservableFlatMap: int maxConcurrency
androidx.appcompat.R$attr: int homeLayout
androidx.core.app.NotificationCompat$BigPictureStyle: android.graphics.Bitmap mBigLargeIcon
androidx.drawerlayout.R$style: int Widget_Compat_NotificationActionContainer
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: long timeout
androidx.appcompat.widget.ActionBarContextView: int mTitleStyleRes
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: io.reactivex.functions.Function mapper
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.BiFunction onMaybeSubscribe
androidx.appcompat.widget.AppCompatTextHelper: int mStyle
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ActionMenuItemView this$0
com.xuexiang.xhttp2.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
com.appspa.demo.R$attr: int subtitleTextStyle
androidx.appcompat.R$styleable: int AppCompatTheme_actionButtonStyle
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: java.util.concurrent.Callable bufferSupplier
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: java.lang.Object value
androidx.drawerlayout.R$id: int action_text
androidx.core.app.NotificationCompat$MessagingStyle$Message: long mTimestamp
androidx.appcompat.R$styleable: int AppCompatTextView_drawableEndCompat
androidx.core.view.MenuItemCompat$1: androidx.core.view.MenuItemCompat$OnActionExpandListener val$listener
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: java.lang.Throwable error
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: long time
androidx.core.app.NotificationCompatJellybean: java.lang.Object sExtrasLock
com.appspa.demo.R$attr: int paddingStart
androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.utils.FileUtils: java.lang.String EXT_STORAGE_DIR
org.aspectj.lang.reflect.NoSuchPointcutException: long serialVersionUID
com.appspa.update.widget.UpdateDialogActivity: com.appspa.update.widget.NumberProgressBar mNumberProgressBar
androidx.viewpager.R$attr: int fontProviderFetchStrategy
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType GRAVITY
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: java.lang.Object value
com.google.gson.stream.JsonScope: int EMPTY_ARRAY
com.appspa.update.R$styleable: int DrawerArrowToggle_barLength
androidx.core.R$id: int accessibility_custom_action_5
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.appspa.update.R$id: int search_go_btn
com.xuexiang.xhttp2.R$style: int Base_Animation_AppCompat_Dialog
io.reactivex.internal.operators.observable.ObservableTimer: io.reactivex.Scheduler scheduler
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: org.reactivestreams.Subscription upstream
androidx.vectordrawable.animated.R$id: int async
androidx.fragment.app.BackStackState: int[] mOps
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: java.util.concurrent.ConcurrentLinkedQueue expiringWorkerQueue
com.xuexiang.xhttp2.R$dimen: int abc_floating_window_z
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.appspa.update.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.xuexiang.xhttp2.R$attr: int paddingStart
com.appspa.demo.R$attr: int buttonIconDimen
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper DISPOSED
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: io.reactivex.SingleObserver downstream
androidx.appcompat.app.AlertController$AlertParams: int mViewLayoutResId
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord
androidx.fragment.R$styleable: int FontFamily_fontProviderPackage
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Subhead
com.appspa.update.R$drawable: int abc_ic_menu_overflow_material
androidx.appcompat.R$attr: int paddingTopNoTitle
com.appspa.demo.R$anim: int abc_slide_out_top
com.appspa.demo.R$attr: int colorAccent
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: io.reactivex.internal.util.AtomicThrowable errors
androidx.appcompat.R$attr: int fontWeight
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.google.gson.Gson: boolean serializeNulls
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: io.reactivex.internal.util.AtomicThrowable error
com.appspa.update.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
androidx.core.provider.FontsContractCompat$FontInfo: boolean mItalic
io.reactivex.internal.operators.flowable.FlowableOnErrorNext: boolean allowFatal
com.xuexiang.xhttp2.R$dimen: int notification_right_side_padding_top
androidx.appcompat.app.ToolbarActionBar: boolean mToolbarMenuPrepared
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack: android.os.Handler mHandler
io.reactivex.internal.operators.flowable.FlowableRange: int end
com.appspa.demo.R$attr: int seekBarStyle
com.appspa.demo.R$mipmap: int ic_launcher_round
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener
com.appspa.update.R$styleable: int Toolbar_contentInsetEnd
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: io.reactivex.ObservableSource source
androidx.loader.R$styleable: int ColorStateListItem_android_color
com.appspa.demo.R$anim: int abc_tooltip_enter
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mDestroyed
com.xuexiang.xhttp2.R$dimen: int abc_text_size_display_3_material
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: io.reactivex.internal.util.AtomicThrowable errors
com.appspa.update.R$color: int material_blue_grey_950
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_endX
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String[] EMPTY_STRING_ARRAY
androidx.customview.R$id: int action_text
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.Scheduler INSTANCE
io.reactivex.internal.operators.parallel.ParallelCollect: io.reactivex.functions.BiConsumer collector
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
com.appspa.demo.R$style: int Widget_AppCompat_SearchView
com.xuexiang.xhttp2.annotation.NetMethod: java.lang.String POST
io.reactivex.Scheduler$Worker$PeriodicTask: io.reactivex.Scheduler$Worker this$0
com.appspa.update.R$styleable: int MenuView_android_itemIconDisabledAlpha
com.appspa.update.R$string: int abc_searchview_description_voice
okhttp3.RealCall$1: okhttp3.RealCall this$0
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: io.reactivex.functions.Function onErrorMapper
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableWindowTimed: long timespan
com.zhy.http.okhttp.request.OkHttpRequest: okhttp3.Request$Builder builder
com.google.gson.stream.JsonReader: int PEEKED_SINGLE_QUOTED_NAME
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex
androidx.fragment.app.BackStackState: int[] mCurrentMaxLifecycleStates
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: long serialVersionUID
com.appspa.update.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_29
com.appspa.update.R$attr: int showDividers
androidx.appcompat.R$attr: int switchPadding
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int VALUE_TYPE_INT
androidx.core.util.PatternsCompat: java.lang.String TLD_CHAR
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: java.lang.Object item
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1: com.google.gson.internal.LinkedHashTreeMap$EntrySet this$1
io.reactivex.processors.BehaviorProcessor: java.util.concurrent.atomic.AtomicReference value
androidx.vectordrawable.R$drawable: int notification_tile_bg
com.appspa.update.R$id: int custom
com.google.gson.stream.JsonScope: int NONEMPTY_DOCUMENT
androidx.appcompat.app.AlertDialog: int LAYOUT_HINT_NONE
com.appspa.demo.R$dimen: int abc_button_inset_horizontal_material
com.appspa.demo.R$drawable: int btn_radio_off_to_on_mtrl_animation
com.google.gson.GsonBuilder: com.google.gson.LongSerializationPolicy longSerializationPolicy
org.aspectj.internal.lang.reflect.SignaturePatternImpl: java.lang.String sigPattern
com.appspa.update.R$styleable: int AppCompatTheme_actionBarTabBarStyle
androidx.appcompat.R$styleable: int FontFamilyFont_android_ttcIndex
io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver: boolean done
androidx.fragment.app.FragmentActivity: boolean mResumed
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscriber: java.util.concurrent.Flow$Subscriber flow
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_POLITE
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableNever: io.reactivex.Observable INSTANCE
com.xuexiang.xhttp2.R$styleable: int DrawerArrowToggle_arrowHeadLength
androidx.appcompat.widget.SwitchCompat: int mSwitchMinWidth
androidx.fragment.app.DialogFragment: java.lang.String SAVED_DIALOG_STATE_TAG
androidx.core.app.NotificationManagerCompat: java.lang.String EXTRA_USE_SIDE_CHANNEL
androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_SERVICE_DISCONNECTED
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_NONE
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: io.reactivex.disposables.Disposable upstream
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_12
androidx.appcompat.widget.PopupMenu: androidx.appcompat.view.menu.MenuBuilder mMenu
io.reactivex.internal.operators.observable.ObservableZipIterable: java.lang.Iterable other
com.appspa.demo.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_USER_AGENT
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: boolean cancelled
com.google.gson.internal.JsonReaderInternalAccess: com.google.gson.internal.JsonReaderInternalAccess INSTANCE
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: long subscriberCount
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_SearchView
io.reactivex.internal.operators.single.SingleUsing: boolean eager
androidx.appcompat.resources.R$id: int action_text
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.appspa.update.R$attr: int autoSizePresetSizes
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Menu
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_TextView
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundaryObserver: boolean once
io.reactivex.subjects.SerializedSubject: io.reactivex.subjects.Subject actual
io.reactivex.internal.operators.completable.CompletableToFlowable: io.reactivex.CompletableSource source
androidx.drawerlayout.widget.DrawerLayout: int mDrawerState
com.zhy.http.okhttp.request.PostFileRequest: okhttp3.MediaType mediaType
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: io.reactivex.ObservableSource second
retrofit2.adapter.rxjava2.BodyObservable: io.reactivex.Observable upstream
com.appspa.demo.R$styleable: int SearchView_iconifiedByDefault
androidx.appcompat.R$id: int up
androidx.fragment.app.ListFragment: int INTERNAL_LIST_CONTAINER_ID
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Dialog
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: long serialVersionUID
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_ACTION_INTENT
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: io.reactivex.functions.Function mapper
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
androidx.activity.OnBackPressedCallback: boolean mEnabled
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.activity.R$styleable: int FontFamily_fontProviderFetchStrategy
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: long index
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: boolean done
androidx.drawerlayout.R$id: int info
com.appspa.update.R$style: int Widget_AppCompat_ActionBar_Solid
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: boolean cancelled
androidx.core.app.NotificationCompat: java.lang.String EXTRA_IS_GROUP_CONVERSATION
androidx.core.provider.FontsContractCompat$4$1: androidx.core.provider.FontsContractCompat$4 this$0
androidx.core.app.JobIntentService: boolean mDestroyed
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: boolean done
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeight
io.reactivex.internal.operators.flowable.BlockingFlowableNext: org.reactivestreams.Publisher source
com.appspa.demo.R$attr: int trackTint
androidx.appcompat.R$styleable: int[] PopupWindowBackgroundState
com.appspa.update.widget.UpdateDialogActivity: android.widget.ImageView mIvTop
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
com.appspa.demo.R$dimen: int abc_dialog_fixed_width_major
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType NONE
okhttp3.internal.NamedRunnable: java.lang.String name
com.appspa.update.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.core.R$id: int accessibility_custom_action_17
androidx.appcompat.resources.R$dimen: int notification_main_column_padding_top
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled
androidx.appcompat.R$attr: int seekBarStyle
com.appspa.demo.R$styleable: int[] AppCompatTextView
com.appspa.demo.R$style: int XUpdate_ProgressBar_Red
androidx.appcompat.view.StandaloneActionMode: boolean mFocusable
com.appspa.demo.R$integer: int cancel_button_image_alpha
androidx.core.hardware.display.DisplayManagerCompat: android.content.Context mContext
androidx.versionedparcelable.VersionedParcelStream: java.nio.charset.Charset UTF_16
io.reactivex.internal.operators.single.SingleDoAfterSuccess: io.reactivex.functions.Consumer onAfterSuccess
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
androidx.savedstate.Recreator: java.lang.String CLASSES_KEY
com.xuexiang.xhttp2.R$attr: int fontProviderPackage
com.appspa.update.R$id: int text
com.appspa.demo.R$styleable: int Toolbar_collapseIcon
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe: io.reactivex.Flowable source
androidx.fragment.app.Fragment: boolean mRemoving
io.reactivex.processors.PublishProcessor: io.reactivex.processors.PublishProcessor$PublishSubscription[] EMPTY
androidx.appcompat.R$attr: int overlapAnchor
androidx.appcompat.widget.LinearLayoutCompat: int VERTICAL_GRAVITY_COUNT
io.reactivex.subjects.MaybeSubject: java.lang.Object value
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_E_TAG
com.appspa.demo.R$attr: int color
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_INTEGER_ARRAY
io.reactivex.internal.operators.flowable.FlowableTimeInterval: io.reactivex.Scheduler scheduler
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_fontWeight
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: io.reactivex.Observer downstream
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier INSTANCE
com.appspa.demo.R$styleable: int MenuGroup_android_enabled
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: boolean active
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList mIconTintList
com.appspa.update.R$style: int Widget_AppCompat_SearchView
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: boolean mTimeStamp
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int MAX_ACTIVITY_COUNT_DEFAULT
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: java.lang.Integer LEFT_VALUE
com.xuexiang.xhttp2.R$styleable: int[] AnimatedStateListDrawableCompat
com.xuexiang.xhttp2.R$layout: int notification_template_part_chronometer
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: io.reactivex.SingleSource other
androidx.appcompat.R$attr: int fontProviderCerts
com.appspa.update.R$dimen: int compat_button_padding_vertical_material
com.google.gson.stream.JsonReader: int PEEKED_NONE
com.xuexiang.xhttp2.cache.RxCache$Builder: int appVersion
io.reactivex.internal.operators.observable.ObservableDematerialize: io.reactivex.functions.Function selector
androidx.loader.R$id: int notification_main_column_container
androidx.viewpager.R$color: int notification_icon_bg_color
androidx.appcompat.R$id: int action_divider
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: long serialVersionUID
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.os.Handler sHandler
com.google.gson.GsonBuilder: java.util.List hierarchyFactories
androidx.core.R$attr: int fontWeight
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
com.xuexiang.xhttp2.R$drawable: int notification_bg_normal
com.appspa.update.R$color: int material_grey_300
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: long serialVersionUID
androidx.appcompat.widget.SearchView: android.app.SearchableInfo mSearchable
androidx.appcompat.R$styleable: int AppCompatTheme_panelBackground
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
androidx.appcompat.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.appcompat.R$attr: int numericModifiers
androidx.core.graphics.drawable.DrawableCompat: java.lang.String TAG
io.reactivex.android.schedulers.HandlerScheduler: android.os.Handler handler
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
androidx.appcompat.R$dimen: int abc_dropdownitem_icon_width
com.xuexiang.xhttp2.R$attr: int textAppearanceListItemSmall
com.google.gson.internal.LinkedTreeMap$EntrySet: com.google.gson.internal.LinkedTreeMap this$0
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar
okhttp3.Response$Builder: java.lang.String message
com.appspa.demo.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: io.reactivex.Observer downstream
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.Scheduler HELPER
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaY
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_PARAGRAPH
com.appspa.demo.R$dimen: int abc_action_bar_elevation_material
androidx.core.widget.AutoScrollHelper: android.view.View mTarget
com.appspa.update.R$attr: int collapseContentDescription
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbShortTitleText
androidx.appcompat.view.menu.StandardMenuPopup$2: androidx.appcompat.view.menu.StandardMenuPopup this$0
androidx.appcompat.R$styleable: int SwitchCompat_thumbTextPadding
retrofit2.RequestFactory$Builder: okhttp3.Headers headers
androidx.viewpager.R$styleable: int GradientColor_android_centerX
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: io.reactivex.internal.disposables.SequentialDisposable timer
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: java.lang.Integer LEFT_CLOSE
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.reflect.Method mMethod
okhttp3.CertificatePinner: java.util.Set pins
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean lastInIsPop
com.jakewharton.disklrucache.DiskLruCache: java.util.concurrent.Callable cleanupCallable
androidx.appcompat.R$color: int abc_btn_colored_text_material
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable[] EMPTY
androidx.appcompat.app.ActionBar: int DISPLAY_USE_LOGO
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String ITEM_MISSING_DRAWABLE_ERROR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
io.reactivex.internal.observers.InnerQueuedObserver: io.reactivex.internal.fuseable.SimpleQueue queue
androidx.appcompat.widget.ActionBarOverlayLayout$1: androidx.appcompat.widget.ActionBarOverlayLayout this$0
androidx.fragment.app.Fragment$1: androidx.fragment.app.Fragment this$0
com.appspa.update.widget.NumberProgressBar: com.appspa.update.widget.NumberProgressBar$OnProgressBarListener mListener
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
com.appspa.update.R$attr: int backgroundSplit
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed: boolean delayError
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
androidx.appcompat.widget.LinearLayoutCompat: int INDEX_TOP
com.appspa.update.R$layout: int notification_action
io.reactivex.processors.PublishProcessor: java.util.concurrent.atomic.AtomicReference subscribers
com.appspa.update.R$styleable: int[] LinearLayoutCompat
io.reactivex.internal.util.OpenHashSet: int maxSize
androidx.fragment.app.FragmentManagerImpl$4: androidx.fragment.app.Fragment val$fragment
androidx.appcompat.R$layout: int abc_tooltip
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter URI
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionButton_Overflow
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_font
io.reactivex.internal.observers.LambdaObserver: io.reactivex.functions.Consumer onError
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: io.reactivex.internal.disposables.SequentialDisposable timer
androidx.appcompat.R$attr: int listPreferredItemHeightLarge
com.appspa.update.R$dimen: int abc_action_bar_default_padding_start_material
androidx.appcompat.R$style: int Widget_AppCompat_Spinner
androidx.customview.widget.ExploreByTouchHelper: int mAccessibilityFocusedVirtualViewId
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: boolean delayError
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe: io.reactivex.Flowable source
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode FIRST_REMOTE
com.appspa.update.R$style: int TextAppearance_AppCompat_Caption
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask: io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver parent
io.reactivex.internal.operators.observable.ObservableTimeoutTimed: long timeout
com.appspa.update.widget.UpdateDialog: android.widget.Button mBtnUpdate
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int DrawerArrowToggle_color
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_FILES
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode ONLY_REMOTE
io.reactivex.internal.operators.observable.ObservableCache: java.lang.Throwable error
com.xuexiang.xhttp2.cache.RxCache: com.xuexiang.xhttp2.cache.core.CacheCore cacheCore
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA
androidx.fragment.R$styleable: int[] GradientColorItem
com.appspa.demo.R$string: int abc_searchview_description_query
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$drawable: int btn_radio_off_to_on_mtrl_animation
com.appspa.demo.R$styleable: int AppCompatTextView_textAllCaps
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
io.reactivex.subjects.ReplaySubject: java.lang.Object[] EMPTY_ARRAY
com.appspa.demo.R$styleable: int AppCompatTextHelper_android_drawableRight
com.appspa.update.R$styleable: int TextAppearance_android_shadowColor
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle: io.reactivex.MaybeSource source
androidx.viewpager.widget.PagerTitleStrip: int mNonPrimaryAlpha
io.reactivex.internal.observers.ResumeSingleObserver: io.reactivex.SingleObserver downstream
com.appspa.update.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.xuexiang.xhttp2.cache.RxCache: boolean isDiskCache
androidx.appcompat.R$styleable: int AppCompatTextView_drawableLeftCompat
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_textColor
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: java.util.Collection collection
com.xuexiang.xhttp2.R$attr: int paddingBottomNoButtons
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: io.reactivex.internal.operators.flowable.FlowableCache$Node node
com.appspa.update.R$styleable: int[] MenuGroup
com.xuexiang.xhttp2.R$attr: int title
com.xuexiang.xhttp2.XHttp: long mCacheTime
androidx.appcompat.resources.R$styleable: int GradientColor_android_centerX
com.xuexiang.xhttp2.R$id: int title
io.reactivex.internal.operators.observable.ObservableRangeLong: long count
com.appspa.update.R$dimen: int tooltip_y_offset_non_touch
com.appspa.demo.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.core.provider.FontsContractCompat$4$2: androidx.core.provider.FontsContractCompat$4 this$0
com.appspa.update.R$styleable: int ActionBar_progressBarStyle
okhttp3.internal.http2.Http2Stream$FramingSource: boolean $assertionsDisabled
com.xuexiang.xhttp2.R$color: int abc_primary_text_disable_only_material_light
androidx.viewpager.widget.ViewPager$4: android.graphics.Rect mTempRect
io.reactivex.processors.AsyncProcessor: java.lang.Object value
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: io.reactivex.CompletableObserver downstream
com.appspa.demo.R$styleable: int ColorStateListItem_android_alpha
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableTimeout: io.reactivex.functions.Function itemTimeoutIndicator
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
com.xuexiang.xhttp2.R$attr: int windowActionBar
androidx.vectordrawable.R$id: int accessibility_custom_action_21
androidx.core.view.ViewCompat: java.lang.String TAG
androidx.appcompat.resources.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.resources.R$dimen: int notification_large_icon_width
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.fragment.R$id: int normal
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: java.util.concurrent.atomic.AtomicReference upstream
com.xuexiang.xhttp2.R$attr: int switchTextAppearance
io.reactivex.internal.observers.InnerQueuedObserver: int prefetch
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutTask: io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutSupport parent
retrofit2.DefaultCallAdapterFactory: java.util.concurrent.Executor callbackExecutor
com.appspa.demo.R$dimen: int abc_action_bar_overflow_padding_end_material
androidx.core.util.PatternsCompat: java.lang.String EMAIL_CHAR
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_17
io.reactivex.internal.operators.parallel.ParallelReduce: java.util.concurrent.Callable initialSupplier
androidx.vectordrawable.animated.R$id: int notification_background
androidx.vectordrawable.R$id: int accessibility_custom_action_26
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: io.reactivex.disposables.Disposable upstream
androidx.core.widget.ContentLoadingProgressBar: boolean mPostedHide
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$attr: int radioButtonStyle
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver: io.reactivex.SingleObserver downstream
androidx.core.app.NotificationManagerCompat: java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver inner
okhttp3.RealCall$AsyncCall: okhttp3.RealCall this$0
com.appspa.demo.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level BASIC
androidx.core.R$styleable: int[] ColorStateListItem
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionProviderClassName
com.appspa.demo.R$attr: int divider
com.appspa.update.R$string: int abc_activitychooserview_choose_application
com.appspa.update.R$attr: int background
com.xuexiang.xhttp2.R$styleable: int ActionMode_closeItemLayout
com.xuexiang.xhttp2.cookie.SerializableOkHttpCookies: okhttp3.Cookie cookies
androidx.appcompat.R$color: int abc_primary_text_disable_only_material_dark
com.xuexiang.xhttp2.R$id: int action_text
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status FINISHED
androidx.appcompat.resources.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemIconResId
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Info
com.xuexiang.xhttp2.R$drawable: int abc_ic_search_api_material
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: boolean disposed
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_constantSize
com.xuexiang.xhttp2.R$color: int abc_search_url_text_selected
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode BOUNDARY
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: java.util.concurrent.Callable onCompleteSupplier
androidx.fragment.app.FragmentTransitionCompat21$4: androidx.fragment.app.FragmentTransitionCompat21 this$0
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher: int maxConcurrency
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_INTEROP_ACTION
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: io.reactivex.functions.Function mapper
com.appspa.demo.R$anim: int abc_slide_in_top
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount
com.xuexiang.xhttp2.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_drawableEndCompat
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.appspa.demo.R$color: int primary_material_dark
io.reactivex.subjects.ReplaySubject: java.util.concurrent.atomic.AtomicReference observers
io.reactivex.internal.operators.observable.ObservableCache$Node: io.reactivex.internal.operators.observable.ObservableCache$Node next
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Class mType
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: int scalarEmitted
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_EditText
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver[] observers
io.reactivex.internal.operators.maybe.MaybeFilter: io.reactivex.functions.Predicate predicate
androidx.vectordrawable.animated.R$attr: int fontStyle
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderAuthority
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: java.lang.Object singleItem
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node header
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: io.reactivex.Observer downstream
androidx.drawerlayout.R$styleable: int[] ColorStateListItem
com.appspa.demo.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.appspa.update.R$styleable: int MenuItem_android_visible
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_id
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$3: java.lang.String val$finalPath
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: boolean done
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: java.util.concurrent.atomic.AtomicReference subscribers
io.reactivex.internal.schedulers.DisposeOnCancel: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.utils.RequestBodyUtils$1: java.io.InputStream val$inputStream
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: int prefetch
com.xuexiang.xhttp2.R$styleable: int ActionBar_contentInsetEnd
io.reactivex.disposables.CompositeDisposable: io.reactivex.internal.util.OpenHashSet resources
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: io.reactivex.internal.operators.flowable.FlowableReplay$Node tail
androidx.vectordrawable.animated.R$dimen: int notification_main_column_padding_top
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_AUTHOR
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable[] TERMINATED
com.appspa.update.R$integer: int abc_config_activityShortDur
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
io.reactivex.processors.ReplayProcessor: java.util.concurrent.atomic.AtomicReference subscribers
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY
androidx.appcompat.widget.TintTypedArray: android.util.TypedValue mTypedValue
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String TAG
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$attr: int tickMark
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap
io.reactivex.internal.operators.flowable.FlowableConcatArray: boolean delayError
io.reactivex.internal.operators.maybe.MaybeFilterSingle: io.reactivex.functions.Predicate predicate
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
androidx.vectordrawable.R$dimen: int notification_content_margin_start
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
androidx.appcompat.widget.TooltipPopup: android.widget.TextView mMessageView
com.appspa.demo.R$id: int time
retrofit2.ParameterHandler$Query: boolean encoded
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
com.xuexiang.xhttp2.R$dimen: int abc_dialog_fixed_height_major
com.appspa.demo.R$string: int space_error_check_json_empty
com.appspa.update.R$attr: int ttcIndex
androidx.appcompat.R$attr: int windowActionBarOverlay
androidx.vectordrawable.R$color: int notification_action_color_filter
com.appspa.update.R$styleable: int MenuView_android_verticalDivider
androidx.appcompat.widget.SearchView: java.lang.CharSequence mQueryHint
com.appspa.demo.R$string: int space_error_download_failed
androidx.core.util.TimeUtils: int SECONDS_PER_MINUTE
androidx.core.R$attr: int fontProviderAuthority
androidx.appcompat.R$styleable: int MenuItem_android_numericShortcut
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_default_padding_start_material
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCheckable
io.reactivex.internal.operators.completable.CompletableObserveOn: io.reactivex.CompletableSource source
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: io.reactivex.processors.ReplayProcessor$TimedNode head
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges
androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim
androidx.appcompat.widget.SearchView$7: androidx.appcompat.widget.SearchView this$0
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: io.reactivex.MaybeObserver downstream
com.appspa.demo.R$layout: int abc_list_menu_item_icon
androidx.vectordrawable.R$id: int tag_transition_group
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySubscriber: boolean once
org.aspectj.runtime.reflect.JoinPointImpl$StaticPartImpl: java.lang.String kind
okhttp3.Cookie$Builder: boolean secure
com.appspa.update.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.R$dimen: int abc_control_padding_material
okhttp3.RequestBody$1: okhttp3.MediaType val$contentType
com.appspa.demo.R$attr: int dialogTheme
androidx.appcompat.view.menu.MenuItemImpl: boolean mNeedToApplyIconTint
com.appspa.update.R$drawable: int abc_spinner_textfield_background_material
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_CONTENT_URI_INTEROP_KEY
androidx.core.widget.NestedScrollView: float mVerticalScrollFactor
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionBar
okio.Pipe$PipeSink: okio.Timeout timeout
io.reactivex.internal.operators.observable.ObservableWindowTimed: io.reactivex.Scheduler scheduler
com.appspa.update.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.appspa.demo.R$id: int showTitle
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_Switch
com.appspa.update.R$id: int shortcut
io.reactivex.internal.observers.BlockingMultiObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: java.lang.Throwable error
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver this$0
io.reactivex.internal.operators.observable.ObservableDebounceTimed: io.reactivex.Scheduler scheduler
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
androidx.core.view.DragAndDropPermissionsCompat: java.lang.Object mDragAndDropPermissions
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ExpandedMenuView mMenuView
androidx.drawerlayout.R$styleable: int ColorStateListItem_android_alpha
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderQuery
androidx.core.provider.FontsContractCompat$4$9: android.graphics.Typeface val$typeface
androidx.vectordrawable.R$id: int action_divider
com.appspa.update.R$id: int forever
androidx.appcompat.R$id: int topPanel
androidx.appcompat.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_TIME
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: io.reactivex.MaybeObserver downstream
com.appspa.demo.R$string: int app_name
androidx.appcompat.R$style: int Base_Theme_AppCompat
androidx.core.widget.TextViewCompat$OreoCallback: boolean mInitializedMenuBuilderReferences
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.appspa.update.R$drawable: int abc_cab_background_top_mtrl_alpha
com.appspa.update.R$styleable: int[] View
androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative
androidx.appcompat.widget.VectorEnabledTintResources: boolean sCompatVectorFromResourcesEnabled
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_android_weightSum
com.appspa.demo.R$dimen: int notification_large_icon_width
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_CALL
io.reactivex.internal.operators.single.SingleMap$MapSingleObserver: io.reactivex.functions.Function mapper
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_ICON
com.xuexiang.xhttp2.R$styleable: int CompoundButton_buttonTint
androidx.core.provider.FontsContractCompat$2: android.os.Handler val$handler
com.appspa.update.R$id: int action_bar_root
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_UNEXPECTED_DATA_PROVIDED
com.appspa.update.logs.UpdateLog: java.lang.String sTag
androidx.appcompat.R$styleable: int MenuView_android_itemTextAppearance
io.reactivex.subjects.MaybeSubject: java.util.concurrent.atomic.AtomicReference observers
androidx.core.R$styleable: int FontFamilyFont_font
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_dividerHorizontal
okhttp3.HttpUrl$Builder: java.lang.String host
io.reactivex.internal.operators.single.SingleUsing: io.reactivex.functions.Consumer disposer
androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_QUINT
androidx.appcompat.R$layout: int custom_dialog
androidx.vectordrawable.graphics.drawable.AndroidResources: int LINEAR_OUT_SLOW_IN
com.appspa.update.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_OPEN_ENTER
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
com.appspa.update.R$styleable: int[] PopupWindowBackgroundState
com.appspa.update.R$styleable: int ActionBar_icon
androidx.core.view.InputDeviceCompat: int SOURCE_STYLUS
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
androidx.viewpager.R$dimen: int compat_notification_large_icon_max_width
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList mThumbTintList
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_Button
com.appspa.demo.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.appcompat.R$id: int src_in
com.xuexiang.xhttp2.R$styleable: int Toolbar_contentInsetEnd
androidx.vectordrawable.R$id: int tag_accessibility_clickable_spans
androidx.appcompat.app.AlertController$4: android.view.View val$bottom
io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError: io.reactivex.CompletableObserver downstream
com.google.gson.internal.bind.TimeTypeAdapter: java.text.DateFormat format
com.appspa.demo.R$styleable: int GradientColor_android_centerY
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.net.Uri mDataUri
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: io.reactivex.SingleObserver downstream
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotX
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.appspa.demo.R$styleable: int Toolbar_logo
com.xuexiang.xhttp2.R$attr: int actionModeCloseDrawable
androidx.fragment.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.R$styleable: int TextAppearance_android_textFontWeight
androidx.core.app.NotificationCompat$Builder: android.graphics.Bitmap mLargeIcon
com.appspa.update.R$style: int Widget_AppCompat_ActivityChooserView
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody$CountingSink: long contentLength
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: int maxSize
androidx.core.R$color: int notification_icon_bg_color
com.appspa.update.R$drawable: int abc_textfield_default_mtrl_alpha
com.xuexiang.xhttp2.R$string: int abc_action_bar_up_description
io.reactivex.internal.subscribers.DeferredScalarSubscriber: boolean hasValue
com.xuexiang.xhttp2.R$styleable: int ActionBar_homeLayout
com.appspa.demo.R$string: int space_lab_install
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
com.appspa.demo.R$id: int uniform
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor
com.xuexiang.xhttp2.R$id: int textSpacerNoButtons
com.google.gson.internal.LinkedHashTreeMap: java.util.Comparator NATURAL_ORDER
com.appspa.demo.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.reflect.Field overrideField
androidx.appcompat.widget.LinearLayoutCompat: int mDividerWidth
retrofit2.RequestFactory$Builder: retrofit2.Retrofit retrofit
androidx.fragment.app.FragmentState: boolean mHidden
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
com.appspa.update.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.core.app.NotificationManagerCompat: int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.appspa.demo.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.appcompat.R$style: int Widget_AppCompat_PopupWindow
androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass
androidx.appcompat.R$dimen: int abc_floating_window_z
com.xuexiang.xhttp2.annotation.ThreadType: java.lang.String TO_MAIN
retrofit2.ParameterHandler$Field: java.lang.String name
com.appspa.demo.R$styleable: int TextAppearance_fontFamily
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Tooltip
androidx.fragment.app.Fragment: int mContentLayoutId
com.xuexiang.xhttp2.R$dimen: int compat_notification_large_icon_max_width
com.appspa.update.AppSpace: com.appspa.update.proxy.IUpdateParser mUpdateParser
com.xuexiang.xhttp2.R$anim: int btn_checkbox_to_checked_icon_null_animation
androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters
com.appspa.demo.R$styleable: int Toolbar_popupTheme
com.appspa.update.R$color: int bright_foreground_disabled_material_light
androidx.collection.SparseArrayCompat: boolean mGarbage
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: io.reactivex.internal.operators.observable.ObservableRefCount parent
com.xuexiang.xhttp2.R$id: int blocking
androidx.fragment.R$drawable: int notification_bg_low_pressed
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: java.lang.Object value
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_DropDown
com.appspa.demo.R$dimen: int notification_media_narrow_margin
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription: long serialVersionUID
com.appspa.update.entity.PromptEntity: int mThemeColor
androidx.appcompat.widget.ActionBarContainer: android.view.View mActionBarView
com.xuexiang.xhttp2.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer: java.util.Collection buffer
com.zhy.http.okhttp.https.HttpsUtils$MyTrustManager: javax.net.ssl.X509TrustManager localTrustManager
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Rect mTmpBounds
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_SELECTION_CHANGED
androidx.drawerlayout.widget.DrawerLayout: float mInitialMotionY
org.aspectj.lang.Aspects14: java.lang.Class class$java$lang$Object
com.xuexiang.xhttp2.R$styleable: int[] ListPopupWindow
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: org.reactivestreams.Subscription upstream
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: com.google.gson.TypeAdapter delegate
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: boolean done
androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription
io.reactivex.internal.observers.FutureSingleObserver: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTooltipText
okhttp3.internal.cache.DiskLruCache$Editor$1: okhttp3.internal.cache.DiskLruCache$Editor this$1
com.jakewharton.disklrucache.DiskLruCache: long nextSequenceNumber
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: boolean disposed
com.appspa.update.R$drawable: int abc_tab_indicator_material
com.appspa.demo.R$id: int tv_title
androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER
androidx.drawerlayout.R$dimen: int notification_top_pad
com.appspa.update.R$color: int bright_foreground_material_dark
io.reactivex.subjects.ReplaySubject$ReplayDisposable: boolean cancelled
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat_Dark
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.functions.Functions$TimestampFunction: java.util.concurrent.TimeUnit unit
com.appspa.demo.R$styleable: int AppCompatTextView_drawableEndCompat
com.appspa.demo.R$styleable: int AppCompatTheme_colorPrimary
com.appspa.update.R$styleable: int AppCompatTheme_buttonStyle
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver: long serialVersionUID
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Button_Colored
com.appspa.demo.R$style: int Animation_AppCompat_Dialog
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle: org.reactivestreams.Publisher first
org.aspectj.internal.lang.reflect.PointcutBasedPerClauseImpl$1: int[] $SwitchMap$org$aspectj$lang$reflect$PerClauseKind
com.jakewharton.disklrucache.DiskLruCache: int redundantOpCount
androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mRightDragger
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: io.reactivex.functions.Predicate predicate
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mDoubleTapSlopSquare
androidx.appcompat.widget.TooltipCompatHandler: long HOVER_HIDE_TIMEOUT_SHORT_MS
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: boolean mIsShowProgress
androidx.core.graphics.ColorUtils: int MIN_ALPHA_SEARCH_PRECISION
com.google.gson.stream.JsonReader: int PEEKED_DOUBLE_QUOTED_NAME
io.reactivex.internal.subscribers.QueueDrainSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue queue
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: io.reactivex.disposables.Disposable upstream
androidx.vectordrawable.R$id: int accessibility_custom_action_30
com.appspa.demo.R$attr: int actionModeCloseDrawable
com.appspa.demo.R$id: int accessibility_action_clickable_span
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y
androidx.appcompat.R$styleable: int MenuItem_actionProviderClass
androidx.loader.R$id: int text
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.appspa.demo.R$color: int space_content_text_color
io.reactivex.subjects.MaybeSubject: java.lang.Throwable error
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_31
androidx.core.graphics.TypefaceCompat: androidx.collection.LruCache sTypefaceCache
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: org.reactivestreams.Subscription upstream
androidx.activity.R$id: int notification_main_column
com.appspa.demo.R$color: int notification_action_color_filter
com.xuexiang.xhttp2.R$attr: int fontProviderAuthority
androidx.fragment.app.FragmentStatePagerAdapter: int BEHAVIOR_SET_USER_VISIBLE_HINT
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY
androidx.core.app.ActivityOptionsCompat: java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES
androidx.fragment.app.FragmentTransition$4: android.graphics.Rect val$inEpicenter
io.reactivex.internal.observers.BlockingMultiObserver: java.lang.Object value
com.xuexiang.xhttp2.logs.HttpLog: int sLogPriority
com.appspa.demo.R$style: int TextAppearance_AppCompat_Display4
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: boolean done
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$dimen: int space_button_min_height_mini
retrofit2.ParameterHandler$FieldMap: int p
com.xuexiang.xhttp2.R$drawable: int notification_bg_low_normal
androidx.loader.content.AsyncTaskLoader$LoadTask: boolean waiting
com.appspa.demo.R$dimen: int abc_dialog_corner_radius_material
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: io.reactivex.internal.disposables.SequentialDisposable task
androidx.appcompat.resources.R$id: int accessibility_custom_action_0
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mProgress
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: java.util.concurrent.Callable bufferSupplier
com.appspa.demo.R$drawable: int notification_bg_normal
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.ref.WeakReference mCustomView
androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.appspa.demo.R$layout: int notification_template_icon_group
io.reactivex.processors.UnicastProcessor: java.util.concurrent.atomic.AtomicLong requested
androidx.appcompat.R$id: int accessibility_custom_action_27
androidx.appcompat.view.menu.ListMenuItemView: boolean mHasListDivider
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: boolean inMaybe
androidx.appcompat.R$style: int TextAppearance_AppCompat_Medium
com.appspa.demo.R$color: int secondary_text_disabled_material_dark
androidx.fragment.app.FragmentStatePagerAdapter: java.util.ArrayList mFragments
androidx.fragment.R$styleable: int FontFamily_fontProviderCerts
com.xuexiang.xhttp2.R$color: int ripple_material_dark
com.appspa.demo.R$attr: int listPreferredItemPaddingEnd
io.reactivex.internal.subscribers.BlockingSubscriber: long serialVersionUID
androidx.viewpager.R$attr: int fontProviderPackage
androidx.activity.R$drawable: int notify_panel_notification_icon_bg
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector: org.reactivestreams.Publisher open
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: io.reactivex.functions.BiFunction accumulator
androidx.collection.ArraySet: boolean DEBUG
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_13
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.view.menu.ActionMenuItem: int CHECKABLE
io.reactivex.internal.subscribers.ForEachWhileSubscriber: io.reactivex.functions.Consumer onError
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable
com.appspa.demo.R$attr: int contentInsetStart
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: io.reactivex.subjects.Subject signaller
androidx.appcompat.R$anim: int abc_slide_out_top
androidx.core.util.PatternsCompat: java.lang.String STRICT_TLD
com.appspa.demo.R$attr: int toolbarNavigationButtonStyle
androidx.core.R$styleable: int GradientColor_android_startY
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleRes
androidx.activity.R$id: int italic
androidx.appcompat.R$id: int action_bar
com.appspa.update.R$dimen: int highlight_alpha_material_colored
androidx.appcompat.graphics.drawable.StateListDrawable: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver: io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver parent
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: boolean delayError
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark
io.reactivex.internal.operators.observable.ObservableReplay$Node: java.lang.Object value
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: boolean cancelled
com.appspa.demo.R$color: int highlighted_text_material_dark
okhttp3.Cache$2: java.lang.String nextUrl
io.reactivex.internal.operators.parallel.ParallelMapTry: io.reactivex.parallel.ParallelFlowable source
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.functions.Consumer onNext
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_shadowColor
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Button_Small
androidx.appcompat.R$id: int action_mode_bar_stub
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: boolean done
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.subjects.SingleSubject: java.util.concurrent.atomic.AtomicReference observers
androidx.fragment.R$drawable: int notification_bg_normal_pressed
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$attr: int tint
androidx.appcompat.R$style: int Widget_AppCompat_ActivityChooserView
com.appspa.update.R$dimen: int abc_action_button_min_height_material
com.appspa.update.R$string: int space_error_check_ignored_version
androidx.vectordrawable.R$layout: int custom_dialog
com.appspa.demo.R$id: int search_close_btn
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat_Light
io.reactivex.internal.operators.maybe.MaybeDelay: java.util.concurrent.TimeUnit unit
io.reactivex.internal.util.NotificationLite$SubscriptionNotification: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.maybe.MaybeLift: io.reactivex.MaybeOperator operator
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: int OTHER_STATE_HAS_VALUE
com.xuexiang.xhttp2.R$color: int abc_search_url_text
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode
androidx.core.text.PrecomputedTextCompat$Params: int mHyphenationFrequency
com.google.gson.internal.ConstructorConstructor$14: com.google.gson.internal.ConstructorConstructor this$0
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
androidx.activity.R$id: int accessibility_custom_action_12
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle: io.reactivex.functions.Function mapper
com.appspa.demo.R$styleable: int[] ActionMenuItemView
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: int prefetch
androidx.vectordrawable.R$styleable: int GradientColor_android_endColor
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: float mLastFocusY
androidx.drawerlayout.R$id: int title
androidx.appcompat.view.menu.MenuPopupHelper: boolean mForceShowIcon
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
androidx.core.app.NotificationCompat$Builder: int mNumber
androidx.customview.R$styleable: int FontFamilyFont_android_fontWeight
com.google.gson.internal.LazilyParsedNumber: java.lang.String value
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: io.reactivex.functions.Consumer onSuccess
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
androidx.appcompat.R$attr: int listMenuViewStyle
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
com.appspa.demo.R$style: int Base_DialogWindowTitle_AppCompat
com.appspa.demo.R$attr: int contentInsetEndWithActions
androidx.appcompat.R$attr: int tooltipText
com.appspa.update.UpdateManager$Builder: android.content.Context context
androidx.core.R$attr: int fontProviderFetchTimeout
androidx.appcompat.R$styleable: int[] AppCompatTextHelper
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.content.Context mContext
com.appspa.update.R$string: int abc_action_bar_home_description
com.xuexiang.xhttp2.cache.RxCache$Builder: java.lang.String cacheKey
com.appspa.update.R$color: int space_title_text_color
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.String TAG
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.functions.Consumer onError
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
okhttp3.Response: int code
com.zhy.http.okhttp.OkHttpUtils: com.zhy.http.okhttp.utils.Platform mPlatform
com.appspa.update.R$string: int abc_action_menu_overflow_description
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.customview.widget.ExploreByTouchHelper: java.lang.String DEFAULT_CLASS_NAME
androidx.appcompat.R$id: int accessibility_custom_action_24
com.appspa.update.R$color: int secondary_text_disabled_material_light
androidx.viewpager.R$styleable: int[] GradientColorItem
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarTabTextStyle
io.reactivex.internal.operators.completable.CompletableUsing: boolean eager
androidx.core.R$styleable: int GradientColor_android_centerX
androidx.appcompat.widget.SuggestionsAdapter: int mIconName1Col
androidx.appcompat.widget.ScrollingTabContainerView: android.view.ViewPropertyAnimator mVisibilityAnim
io.reactivex.subjects.SingleSubject$SingleDisposable: long serialVersionUID
io.reactivex.exceptions.CompositeException$WrappedPrintStream: java.io.PrintStream printStream
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$finalSharedElementTransition
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: io.reactivex.internal.util.AtomicThrowable error
androidx.appcompat.R$attr: int fontProviderPackage
com.appspa.update.R$dimen: int abc_control_corner_material
androidx.core.app.ActivityRecreator$2: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
com.appspa.update.R$attr: int actionBarSize
com.appspa.demo.R$style: int TextAppearance_AppCompat_Large_Inverse
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: io.reactivex.SingleObserver downstream
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: io.reactivex.functions.BiFunction reducer
com.xuexiang.xhttp2.R$attr: int buttonBarNegativeButtonStyle
com.appspa.demo.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_elevation_material
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: org.reactivestreams.Subscription upstream
androidx.fragment.app.Fragment: boolean mRestored
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_PERCENT
androidx.core.util.PatternsCompat: java.util.regex.Pattern STRICT_DOMAIN_NAME
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: boolean cancelled
okhttp3.internal.connection.StreamAllocation: okhttp3.ConnectionPool connectionPool
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$drawable: int abc_btn_switch_to_on_mtrl_00001
androidx.viewpager.R$dimen: int notification_top_pad
io.reactivex.schedulers.TestScheduler: long counter
com.appspa.demo.R$attr: int buttonCompat
androidx.core.os.CancellationSignal: boolean mIsCanceled
com.jakewharton.disklrucache.DiskLruCache$Editor: com.jakewharton.disklrucache.DiskLruCache$Entry entry
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: java.util.concurrent.atomic.AtomicReference upstream
com.xuexiang.xhttp2.R$attr: int activityChooserViewStyle
com.appspa.update.R$layout: int abc_search_view
androidx.core.app.NotificationCompatJellybean: boolean sActionsAccessFailed
androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper mHelper
androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_RETRY_LISTENER_QUEUE
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$RecycleListView val$listView
androidx.core.R$styleable: int FontFamilyFont_fontVariationSettings
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: java.util.concurrent.PriorityBlockingQueue queue
io.reactivex.subjects.BehaviorSubject: java.util.concurrent.atomic.AtomicReference value
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: java.util.Iterator iterator
com.zhy.http.okhttp.request.PostStringRequest: java.lang.String content
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany: io.reactivex.functions.Function combiner
com.appspa.update.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.xuexiang.xhttp2.R$styleable: int[] SearchView
androidx.activity.R$id: int title
androidx.vectordrawable.R$dimen: int compat_button_inset_vertical_material
androidx.viewpager.widget.ViewPager$ItemInfo: boolean scrolling
io.reactivex.internal.operators.flowable.FlowableCache: int tailOffset
androidx.fragment.app.FragmentTransitionCompat21$2: java.util.ArrayList val$exitingViews
androidx.appcompat.R$styleable: int AppCompatTheme_actionDropDownStyle
com.zhy.http.okhttp.builder.OkHttpRequestBuilder: java.util.Map headers
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
androidx.appcompat.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.vectordrawable.R$id: int accessibility_custom_action_20
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Title
okhttp3.MultipartBody: java.util.List parts
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: java.util.concurrent.atomic.AtomicInteger wip
com.appspa.update.entity.PromptEntity: int mButtonTextColor
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
com.appspa.demo.R$color: int abc_tint_default
androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView
com.appspa.update.R$styleable: int AppCompatTheme_actionModePasteDrawable
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.appspa.demo.entity.CustomResult$PatchInfo: java.lang.String sMd5
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: long serialVersionUID
com.appspa.update.R$style: int Base_Animation_AppCompat_Dialog
com.appspa.demo.R$id: int message
io.reactivex.internal.operators.flowable.BlockingFlowableIterable: int bufferSize
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle: boolean delayErrors
com.appspa.demo.R$styleable: int GradientColor_android_startX
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeTask: io.reactivex.MaybeObserver observer
okhttp3.internal.http1.Http1Codec$ChunkedSource: long bytesRemainingInChunk
com.appspa.update.R$attr: int autoSizeMaxTextSize
com.appspa.update.R$style: int TextAppearance_Compat_Notification_Time
com.appspa.demo.R$id: int accessibility_custom_action_16
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowEnd
com.appspa.demo.R$attr: int buttonBarNeutralButtonStyle
androidx.core.app.NotificationCompat$Builder: int mPriority
com.xuexiang.xhttp2.R$id: int text2
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: io.reactivex.internal.disposables.ListCompositeDisposable serial
okhttp3.internal.cache.CacheInterceptor$1: okio.BufferedSource val$source
androidx.fragment.app.FragmentTransaction: int mPopExitAnim
okhttp3.internal.http2.Http2Reader$ContinuationSource: byte flags
com.appspa.demo.R$styleable: int LinearLayoutCompat_showDividers
io.reactivex.internal.operators.observable.ObservableLastSingle: io.reactivex.ObservableSource source
io.reactivex.internal.operators.maybe.MaybeTimer: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: io.reactivex.functions.Function resumeFunction
androidx.appcompat.R$style: int Theme_AppCompat_Dialog_Alert
androidx.appcompat.R$drawable: int abc_dialog_material_background
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: java.util.concurrent.TimeUnit unit
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mRetreatKey
com.xuexiang.xhttp2.R$color: int bright_foreground_material_dark
androidx.appcompat.app.AlertController$AlertParams: android.view.View mCustomTitleView
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_drawableRightCompat
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: io.reactivex.disposables.CompositeDisposable tasks
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle: boolean delayErrors
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: int otherState
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: boolean delayError
com.appspa.demo.R$id: int search_edit_frame
androidx.core.text.util.FindAddress: java.lang.String HOUSE_END
io.reactivex.internal.util.AppendOnlyLinkedArrayList: java.lang.Object[] tail
com.appspa.demo.R$id: int accessibility_custom_action_5
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: int index
com.appspa.demo.R$color: int bright_foreground_disabled_material_dark
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ListView_DropDown
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions
androidx.fragment.app.BackStackState: java.util.ArrayList mFragmentWhos
androidx.core.R$id: int accessibility_custom_action_25
androidx.appcompat.widget.SwitchCompat: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Light_Dialog_Alert
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: long consumed
com.xuexiang.xhttp2.R$styleable: int DrawerArrowToggle_spinBars
com.appspa.update.R$string: int space_lab_downloading
androidx.appcompat.R$styleable: int StateListDrawable_android_constantSize
io.reactivex.internal.subscriptions.SubscriptionArbiter: long requested
androidx.vectordrawable.R$id: int accessibility_custom_action_16
androidx.viewpager.widget.PagerTabStrip: int INDICATOR_HEIGHT
com.xuexiang.xhttp2.R$styleable: int Spinner_android_popupBackground
com.appspa.update.R$style: int Theme_AppCompat_Light_DarkActionBar
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ListMenuView
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$style: int ThemeOverlay_AppCompat_DayNight
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: androidx.core.app.JobIntentService$JobServiceEngineImpl this$0
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap this$0
io.reactivex.subscribers.SerializedSubscriber: boolean delayError
com.appspa.update.UpdateManager: com.appspa.update.proxy.IUpdateDownloader mIUpdateDownloader
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: int sourceMode
okhttp3.internal.http2.Http2Connection: java.lang.String hostname
io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable: long serialVersionUID
com.appspa.update.R$attr: int ratingBarStyle
com.xuexiang.xhttp2.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: java.lang.Throwable error
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction$WorkerCompletable: io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction this$0
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: java.util.concurrent.TimeUnit unit
androidx.core.text.BidiFormatter: int FLAG_STEREO_RESET
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BOOLEAN
androidx.appcompat.view.menu.SubMenuWrapperICS: androidx.core.internal.view.SupportSubMenu mSubMenu
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: int consumed
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
okhttp3.Dispatcher: int maxRequestsPerHost
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
androidx.vectordrawable.R$layout: int notification_template_custom_big
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_font
androidx.appcompat.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okio.ForwardingTimeout timeout
androidx.drawerlayout.R$styleable: int ColorStateListItem_android_color
androidx.appcompat.R$attr: int listPopupWindowStyle
com.appspa.update.R$styleable: int[] RecycleListView
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: long serialVersionUID
com.appspa.update.R$style: int Theme_AppCompat_DialogWhenLarge
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: long index
androidx.core.app.NotificationCompat: int VISIBILITY_PUBLIC
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesTouch
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
io.reactivex.internal.operators.observable.ObservableBufferBoundary: io.reactivex.functions.Function bufferClose
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: long serialVersionUID
com.appspa.update.R$styleable: int[] AppCompatImageView
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableSingleMaybe: io.reactivex.Flowable source
okhttp3.internal.platform.OptionalMethod: java.lang.String methodName
androidx.loader.R$id: int line3
com.appspa.update.R$attr: int dialogTheme
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: io.reactivex.internal.disposables.SequentialDisposable serial
androidx.appcompat.R$styleable: int Toolbar_titleMarginTop
io.reactivex.internal.operators.flowable.FlowableWindow: int bufferSize
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: org.reactivestreams.Subscriber downstream
androidx.vectordrawable.animated.R$id: int tag_accessibility_heading
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY
androidx.core.provider.FontsContractCompat$4$6: androidx.core.provider.FontsContractCompat$4 this$0
okhttp3.OkHttpClient$Builder: int pingInterval
androidx.vectordrawable.animated.R$layout: int notification_template_part_time
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: io.reactivex.internal.queue.SpscLinkedArrayQueue subscribers
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: java.lang.Throwable error
com.appspa.demo.R$attr: int paddingTopNoTitle
androidx.appcompat.view.StandaloneActionMode: boolean mFinished
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.appspa.demo.entity.CustomResult$VersionInfo: java.lang.String downloadUrl
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: android.view.ViewGroup mParent
com.xuexiang.xhttp2.R$dimen: int abc_button_padding_horizontal_material
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request: long n
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber: io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber parent
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: io.reactivex.functions.Function zipper
io.reactivex.internal.schedulers.SingleScheduler: java.util.concurrent.ScheduledExecutorService SHUTDOWN
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String userAgent
okhttp3.CertificatePinner$Pin: java.lang.String canonicalHostname
io.reactivex.internal.operators.completable.CompletableDoOnEvent: io.reactivex.CompletableSource source
androidx.appcompat.R$drawable: int abc_btn_check_material
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_showDividers
okhttp3.Response$Builder: okhttp3.Response cacheResponse
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_ACCEPT_ENCODING
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: io.reactivex.internal.fuseable.SimpleQueue queue
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: java.util.ArrayDeque windows
androidx.drawerlayout.R$dimen: int notification_subtext_size
com.appspa.demo.R$styleable: int AppCompatTheme_colorControlHighlight
okhttp3.Request: okhttp3.Headers headers
androidx.appcompat.view.SupportMenuInflater$MenuState: int defaultItemOrder
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Medium
androidx.core.os.LocaleListCompatWrapper: java.util.Locale LOCALE_AR_XB
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: java.util.concurrent.atomic.AtomicReference upstream
retrofit2.adapter.rxjava2.ResultObservable: io.reactivex.Observable upstream
com.xuexiang.xhttp2.R$layout: int abc_popup_menu_item_layout
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: io.reactivex.internal.subscribers.InnerQueuedSubscriber current
com.xuexiang.xhttp2.R$dimen: int abc_select_dialog_padding_start_material
androidx.fragment.R$id: int tag_transition_group
com.appspa.update.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mResourceId
io.reactivex.internal.operators.completable.CompletableEmpty: io.reactivex.Completable INSTANCE
androidx.appcompat.R$drawable: int abc_switch_thumb_material
androidx.core.view.MotionEventCompat: int AXIS_WHEEL
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP_PREFIX
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: retrofit2.OkHttpCall$ExceptionCatchingResponseBody this$0
com.xuexiang.xhttp2.R$dimen: int notification_top_pad_large_text
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: boolean disposed
com.xuexiang.xhttp2.R$attr: int colorPrimary
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
androidx.core.app.NotificationCompat: int FLAG_GROUP_SUMMARY
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver observer
androidx.appcompat.R$color: int dim_foreground_material_light
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: long serialVersionUID
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
io.reactivex.internal.operators.single.SingleTimeout: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: boolean delayErrors
okhttp3.internal.Util: java.nio.charset.Charset UTF_32_LE
androidx.appcompat.R$layout: int notification_action
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: io.reactivex.functions.BiPredicate comparer
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: int size
androidx.loader.R$dimen: int notification_big_circle_margin
androidx.appcompat.app.AlertController: int mViewSpacingLeft
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int popupTheme
androidx.activity.R$dimen: int compat_notification_large_icon_max_height
com.xuexiang.xhttp2.R$dimen: int compat_control_corner_material
com.xuexiang.xhttp2.R$styleable: int Toolbar_navigationContentDescription
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.google.gson.internal.Excluder: java.util.List serializationStrategies
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
androidx.appcompat.R$styleable: int MenuView_android_itemIconDisabledAlpha
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
com.appspa.demo.R$dimen: int notification_small_icon_size_as_large
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState
androidx.fragment.app.FragmentManagerImpl: java.lang.String TARGET_REQUEST_CODE_STATE_TAG
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
androidx.appcompat.R$dimen: int abc_progress_bar_height_material
androidx.appcompat.R$attr: int initialActivityCount
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$attr: int selectableItemBackground
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES
androidx.appcompat.resources.R$id: int accessibility_custom_action_4
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: boolean done
com.appspa.demo.R$dimen: int abc_action_bar_default_padding_end_material
io.reactivex.internal.operators.flowable.FlowableCreate: io.reactivex.FlowableOnSubscribe source
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.zhy.http.okhttp.utils.Platform: com.zhy.http.okhttp.utils.Platform PLATFORM
androidx.appcompat.app.AlertController$AlertParams: boolean mCancelable
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter mGeneratedAdapter
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_ratingBarStyle
com.xuexiang.xhttp2.R$dimen: int abc_seekbar_track_progress_height_material
io.reactivex.internal.operators.single.SingleOnErrorReturn: io.reactivex.functions.Function valueSupplier
io.reactivex.internal.operators.observable.ObservableAnySingle: io.reactivex.functions.Predicate predicate
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$color: int bright_foreground_inverse_material_dark
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String LOG_TAG
androidx.core.R$color: int ripple_material_light
com.appspa.update.R$attr: int textAppearanceSearchResultTitle
com.google.gson.Gson: boolean serializeSpecialFloatingPointValues
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_SearchResult
androidx.vectordrawable.animated.R$id: int icon
com.google.gson.stream.JsonScope: int DANGLING_NAME
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: io.reactivex.SingleObserver downstream
com.appspa.update.widget.UpdateDialog: android.widget.TextView mTvIgnore
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_5
com.appspa.update.R$styleable: int ActionBar_contentInsetRight
com.appspa.demo.R$id: int icon
com.appspa.demo.R$attr: int textAppearanceSearchResultSubtitle
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: io.reactivex.Observer downstream
androidx.core.graphics.TypefaceCompatApi28Impl: int RESOLVE_BY_FONT_TABLE
androidx.drawerlayout.R$styleable: int GradientColor_android_endX
com.appspa.update.R$string: int abc_menu_delete_shortcut_label
io.reactivex.exceptions.OnErrorNotImplementedException: long serialVersionUID
okio.SegmentedByteString: byte[][] segments
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$styleable: int StateListDrawable_android_exitFadeDuration
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: io.reactivex.internal.disposables.SequentialDisposable sd
com.xuexiang.xhttp2.R$styleable: int SearchView_defaultQueryHint
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: int consumed
androidx.appcompat.widget.ListPopupWindow: android.database.DataSetObserver mObserver
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: io.reactivex.internal.operators.flowable.FlowableGroupJoin$JoinSupport parent
androidx.core.text.BidiFormatter$DirectionalityEstimator: char lastChar
com.appspa.update.R$style: int Base_Widget_AppCompat_Button_Borderless
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
io.reactivex.internal.operators.flowable.FlowableZip: boolean delayError
com.xuexiang.xhttp2.R$layout: int abc_screen_toolbar
androidx.appcompat.R$styleable: int Spinner_popupTheme
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: io.reactivex.internal.disposables.SequentialDisposable task
androidx.fragment.app.FragmentManagerImpl$FragmentTag: int Fragment_tag
androidx.appcompat.R$dimen: int abc_list_item_height_small_material
com.appspa.demo.R$attr: int splitTrack
androidx.viewpager.R$color: int notification_action_color_filter
androidx.appcompat.R$styleable: int AlertDialog_multiChoiceItemLayout
io.reactivex.internal.operators.flowable.FlowableWindow: long size
com.xuexiang.xhttp2.R$attr: int colorControlActivated
androidx.fragment.app.FragmentTransition$4: boolean val$inIsPop
okhttp3.Address: java.net.ProxySelector proxySelector
androidx.core.view.MotionEventCompat: int AXIS_TOUCH_MAJOR
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: long count
androidx.appcompat.widget.ActivityChooserModel: androidx.appcompat.widget.ActivityChooserModel$ActivitySorter mActivitySorter
androidx.vectordrawable.R$id: int accessibility_action_clickable_span
com.xuexiang.xhttp2.R$id: int search_src_text
com.google.gson.internal.ConstructorConstructor$1: java.lang.reflect.Type val$type
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node root
androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: java.lang.Runnable delegate
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean done
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed: long timeout
io.reactivex.internal.operators.observable.ObservableElementAtSingle: io.reactivex.ObservableSource source
androidx.fragment.R$layout: int custom_dialog
androidx.core.content.FileProvider: java.util.HashMap sCache
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: java.util.Collection buffer
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableItem_android_drawable
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: long remaining
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
com.appspa.update.R$attr: int listPreferredItemHeightSmall
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$color: int material_grey_800
com.appspa.demo.R$styleable: int ActionBar_subtitleTextStyle
com.appspa.update.R$styleable: int AppCompatTheme_actionBarDivider
androidx.core.util.Pair: java.lang.Object second
com.xuexiang.xhttp2.R$dimen: int tooltip_margin
io.reactivex.internal.schedulers.SchedulerWhen: io.reactivex.disposables.Disposable SUBSCRIBED
androidx.appcompat.app.ActionBarDrawerToggle: boolean mWarnedForDisplayHomeAsUp
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
io.reactivex.internal.operators.single.SingleCache$CacheDisposable: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.observable.ObservableOnErrorNext: boolean allowFatal
io.reactivex.internal.functions.Functions$ToMultimapKeyValueSelector: io.reactivex.functions.Function valueSelector
com.appspa.demo.R$string: int search_menu_title
androidx.vectordrawable.animated.R$dimen: int compat_control_corner_material
androidx.appcompat.R$color: int abc_btn_colored_borderless_text_material
com.xuexiang.xhttp2.R$color: int abc_hint_foreground_material_dark
androidx.appcompat.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
retrofit2.RequestFactory: okhttp3.Headers headers
com.appspa.demo.R$style: int Widget_Compat_NotificationActionContainer
okhttp3.internal.ws.WebSocketWriter: boolean activeWriter
io.reactivex.schedulers.TestScheduler$TestWorker: io.reactivex.schedulers.TestScheduler this$0
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: boolean done
com.appspa.demo.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
io.reactivex.internal.operators.maybe.MaybePeek: io.reactivex.functions.Action onDisposeCall
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver parent
io.reactivex.internal.operators.parallel.ParallelRunOn$MultiWorkerCallback: org.reactivestreams.Subscriber[] parents
com.appspa.update.widget.UpdateDialogFragment: com.appspa.update.entity.PromptEntity mPromptEntity
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStopQueued
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: java.lang.Object value
com.appspa.update.R$style: int Base_Animation_AppCompat_Tooltip
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: int prefetch
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mEnterTransitionCallback
io.reactivex.processors.BehaviorProcessor: java.util.concurrent.locks.Lock readLock
com.appspa.update.widget.NumberProgressBar: float mDrawTextEnd
androidx.appcompat.R$styleable: int[] AppCompatImageView
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: java.lang.Object v1
androidx.appcompat.resources.R$styleable: int GradientColor_android_type
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable: int count
com.appspa.update.R$styleable: int ActionBar_contentInsetEnd
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap
androidx.appcompat.widget.ActivityChooserModel: androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy
androidx.appcompat.R$dimen: int abc_dialog_fixed_height_minor
com.xuexiang.xhttp2.R$id: int custom
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: io.reactivex.internal.util.AtomicThrowable error
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: int ON_COMPLETE
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: int START
com.xuexiang.xhttp2.R$styleable: int TextAppearance_textAllCaps
com.appspa.demo.R$attr: int controlBackground
androidx.core.view.LayoutInflaterCompat: java.lang.String TAG
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: io.reactivex.Observer downstream
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy DROP_OLDEST
androidx.appcompat.R$id: int italic
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.String TAG
androidx.appcompat.widget.ThemeUtils: int[] SELECTED_STATE_SET
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int VALUE_TYPE_FLOAT
androidx.appcompat.widget.VectorEnabledTintResources: java.lang.ref.WeakReference mContextRef
io.reactivex.internal.operators.maybe.MaybeFilterSingle: io.reactivex.SingleSource source
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity
androidx.core.app.ActivityRecreator$3: java.lang.Object val$activityThread
com.appspa.demo.entity.CustomResult: com.appspa.demo.entity.CustomResult$VersionInfo data
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Path mPath
androidx.core.widget.AutoScrollHelper: int DEFAULT_RAMP_UP_DURATION
androidx.activity.R$dimen: int compat_button_padding_vertical_material
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.core.R$dimen: int notification_small_icon_background_padding
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: io.reactivex.subscribers.TestSubscriber$EmptySubscriber[] $VALUES
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: io.reactivex.functions.Function mapper
androidx.appcompat.view.menu.CascadingMenuPopup: int mYOffset
com.xuexiang.xhttp2.R$attr: int tickMarkTint
androidx.appcompat.widget.SearchView$5: androidx.appcompat.widget.SearchView this$0
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: boolean syncFused
androidx.core.util.Pair: java.lang.Object first
com.xuexiang.xhttp2.R$string: int abc_activity_chooser_view_see_all
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: long timeout
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy DROP_LATEST
com.appspa.update.AppSpace: boolean mIsGet
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: io.reactivex.internal.schedulers.IoScheduler$ThreadWorker threadWorker
com.xuexiang.xhttp2.cache.model.CacheResult: java.lang.Object data
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$style: int Base_Theme_AppCompat
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature mSignature
androidx.appcompat.R$attr: int lastBaselineToBottomHeight
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: io.reactivex.internal.disposables.SequentialDisposable disposables
com.appspa.demo.R$interpolator: int fast_out_slow_in
androidx.customview.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.operators.observable.ObservableBufferTimed: long timespan
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable: java.lang.Runnable actual
androidx.fragment.R$attr: int fontStyle
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: boolean delayErrors
androidx.core.R$style: int TextAppearance_Compat_Notification
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: io.reactivex.internal.util.AppendOnlyLinkedArrayList queue
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: io.reactivex.processors.UnicastProcessor window
io.reactivex.internal.operators.maybe.MaybePeek: io.reactivex.functions.Action onCompleteCall
com.appspa.update.R$styleable: int TextAppearance_textLocale
com.appspa.demo.R$dimen: int abc_list_item_height_large_material
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SELF_DISPLAY_NAME
androidx.versionedparcelable.VersionedParcel: int TYPE_INTEGER
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_TRACKBALL
io.reactivex.internal.operators.flowable.FlowableDebounceTimed: long timeout
androidx.loader.content.ModernAsyncTask$WorkerRunnable: java.lang.Object[] mParams
com.xuexiang.xhttp2.R$attr: int editTextBackground
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: java.util.concurrent.TimeUnit unit
androidx.appcompat.widget.LinearLayoutCompat: int INDEX_BOTTOM
com.appspa.demo.R$attr: int alertDialogTheme
com.xuexiang.xhttp2.model.ApiResult: int Code
androidx.appcompat.R$dimen: int tooltip_y_offset_touch
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: boolean cancelled
com.zhy.http.okhttp.OkHttpUtils$3: com.zhy.http.okhttp.callback.Callback val$callback
retrofit2.ParameterHandler$RelativeUrl: java.lang.reflect.Method method
androidx.core.app.NotificationCompat$Builder: boolean mUseChronometer
io.reactivex.observers.SafeObserver: boolean done
io.reactivex.internal.operators.observable.ObservableElementAt: java.lang.Object defaultValue
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: java.util.Collection buffer
com.appspa.demo.R$id: int checkbox
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: int limit
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: long serialVersionUID
androidx.core.app.NotificationCompat: int FLAG_AUTO_CANCEL
com.google.gson.JsonObject: com.google.gson.internal.LinkedTreeMap members
okhttp3.internal.http2.Http2Reader$ContinuationSource: short padding
com.appspa.update.R$styleable: int AlertDialog_showTitle
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: boolean delayError
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: boolean delayError
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_START_KEY
com.google.gson.Gson: boolean DEFAULT_SPECIALIZE_FLOAT_VALUES
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled
com.appspa.update.R$attr: int trackTint
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_15
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleRes
androidx.loader.content.Loader: boolean mContentChanged
androidx.appcompat.R$dimen: int abc_text_size_display_4_material
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener
com.appspa.update.AppSpace: boolean mIsWifiOnly
androidx.appcompat.R$drawable: int btn_checkbox_unchecked_mtrl
okhttp3.internal.http2.Http2Stream: long unacknowledgedBytesRead
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
androidx.core.widget.PopupWindowCompat: boolean sSetWindowLayoutTypeMethodAttempted
androidx.appcompat.R$id: int actions
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator
com.xuexiang.xhttp2.R$styleable: int ActionMode_height
androidx.appcompat.widget.SuggestionsAdapter: int mText2UrlCol
androidx.fragment.app.Fragment: float mPostponedAlpha
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableEnd
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: io.reactivex.functions.Action onFinally
androidx.appcompat.R$string: int abc_capital_off
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: int consumerIndex
androidx.appcompat.R$string: int abc_menu_alt_shortcut_label
androidx.core.app.FrameMetricsAggregator: int TOTAL_DURATION
androidx.viewpager.widget.PagerTabStrip: int mMinTextSpacing
androidx.vectordrawable.animated.R$id: int blocking
androidx.loader.R$styleable: int FontFamily_fontProviderCerts
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver parent
com.appspa.update.R$attr: int xnpb_text_size
androidx.drawerlayout.R$layout: int notification_template_part_time
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_android_windowIsFloating
com.appspa.demo.R$style: int Widget_AppCompat_ActionMode
androidx.appcompat.R$anim: int abc_fade_in
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_BRIDGE_TAG
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowFixedHeightMajor
com.appspa.update.R$dimen: int abc_dropdownitem_text_padding_right
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.appspa.demo.R$color: int abc_btn_colored_borderless_text_material
androidx.activity.R$drawable: int notification_template_icon_low_bg
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: org.reactivestreams.Publisher bufferOpen
com.appspa.update.R$color: int abc_primary_text_material_dark
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: java.util.concurrent.Callable bufferSupplier
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
com.appspa.update.R$attr: int imageButtonStyle
com.xuexiang.xhttp2.R$attr: int drawableTintMode
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: long remaining
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET
io.reactivex.internal.operators.flowable.FlowableRangeLong: long end
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.ObservableSource source
androidx.fragment.app.ListFragment: java.lang.CharSequence mEmptyText
com.appspa.demo.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
androidx.appcompat.widget.SearchView: java.util.WeakHashMap mOutsideDrawablesCache
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: int leftIndex
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany: org.reactivestreams.Publisher[] otherArray
com.appspa.update.R$attr: int tintMode
androidx.appcompat.R$styleable: int SearchView_voiceIcon
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node next
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level BODY
com.xuexiang.xhttp2.R$attr: int barLength
com.xuexiang.xhttp2.R$styleable: int ActionBar_displayOptions
okhttp3.internal.Util: java.util.Comparator NATURAL_ORDER
androidx.vectordrawable.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: io.reactivex.Scheduler scheduler
androidx.appcompat.R$attr: int windowActionModeOverlay
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int TOGETHER
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany: io.reactivex.ObservableSource[] otherArray
androidx.appcompat.R$attr: int searchIcon
com.appspa.update.UpdateManager$1: com.appspa.update.listener.IUpdateParseCallback val$callback
androidx.fragment.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.R$styleable: int SearchView_iconifiedByDefault
androidx.versionedparcelable.VersionedParcel: int EX_NETWORK_MAIN_THREAD
androidx.collection.CircularIntArray: int mHead
com.appspa.update.R$styleable: int GradientColor_android_endColor
com.appspa.update.entity.UpdateError$ERROR: int DOWNLOAD_PERMISSION_DENIED
com.appspa.update.R$style: int Platform_Widget_AppCompat_Spinner
com.appspa.demo.R$attr: int barLength
androidx.appcompat.R$color: int abc_background_cache_hint_selector_material_dark
androidx.drawerlayout.widget.DrawerLayout: int mLockModeLeft
com.appspa.update.UpdateManager$2: com.appspa.update.listener.IUpdateParseCallback val$callback
com.appspa.update.R$attr: int thickness
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_CACHE
androidx.appcompat.view.menu.MenuItemImpl: int HIDDEN
androidx.appcompat.R$color: int switch_thumb_normal_material_light
com.google.gson.internal.bind.TypeAdapters$35$1: com.google.gson.internal.bind.TypeAdapters$35 this$0
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedReplayCallable: io.reactivex.Observable parent
io.reactivex.subjects.PublishSubject: io.reactivex.subjects.PublishSubject$PublishDisposable[] TERMINATED
androidx.appcompat.R$attr: int listChoiceIndicatorMultipleAnimated
okhttp3.RequestBody$2: int val$offset
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries
androidx.core.app.ActivityRecreator: java.lang.Class activityThreadClass
androidx.loader.R$id: int info
com.xuexiang.xhttp2.R$attr: int fontProviderQuery
com.appspa.update.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Field sDialogKeyListenerField
androidx.appcompat.R$attr: int fontProviderFetchTimeout
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTint
io.reactivex.internal.operators.single.SingleDoOnError: io.reactivex.SingleSource source
retrofit2.Retrofit: okhttp3.HttpUrl baseUrl
com.xuexiang.xhttp2.request.BaseRequest: java.util.List mInterceptors
io.reactivex.observers.ResourceMaybeObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent[] $VALUES
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver inner
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
com.xuexiang.xhttp2.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.xuexiang.xhttp2.R$attr: int alphabeticModifiers
androidx.activity.R$styleable: int GradientColor_android_centerColor
com.appspa.update.service.DownloadService$FileDownloadCallBack: com.appspa.update.service.OnFileDownloadListener mOnFileDownloadListener
com.appspa.demo.R$id: int buttonPanel
io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription: org.reactivestreams.Subscriber downstream
androidx.lifecycle.ComputableLiveData: java.util.concurrent.Executor mExecutor
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable[] $VALUES
androidx.appcompat.R$color: int secondary_text_default_material_light
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE
com.appspa.demo.R$attr: int actionModeWebSearchDrawable
com.xuexiang.xhttp2.request.BaseBodyRequest: okhttp3.MediaType mMediaType
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Headline
androidx.appcompat.widget.SearchView: android.widget.ImageView mGoButton
com.appspa.demo.R$id: int showCustom
androidx.fragment.app.FragmentActivity: boolean mCreated
com.xuexiang.xhttp2.R$attr: int tintMode
com.appspa.demo.R$id: int beginning
com.xuexiang.xhttp2.R$styleable: int View_paddingEnd
com.appspa.update.R$attr: int listChoiceIndicatorSingleAnimated
com.appspa.demo.R$attr: int elevation
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: io.reactivex.Scheduler scheduler
com.appspa.demo.R$attr: int fontProviderPackage
com.xuexiang.xhttp2.model.SchedulerType: com.xuexiang.xhttp2.model.SchedulerType _io
androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_CLOSE_ENTER
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: boolean outputFused
androidx.appcompat.app.TwilightManager$TwilightState: long nextUpdate
com.appspa.update.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
com.appspa.update.R$attr: int subtitleTextStyle
androidx.appcompat.app.ActionBar: int DISPLAY_HOME_AS_UP
androidx.appcompat.widget.ActivityChooserModel: float DEFAULT_HISTORICAL_RECORD_WEIGHT
com.xuexiang.xhttp2.R$dimen: int abc_list_item_height_large_material
androidx.core.view.ViewCompat: boolean sTempDetachBound
com.appspa.update.R$attr: int seekBarStyle
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.disposables.Disposable upstream
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: org.reactivestreams.Subscription upstream
androidx.core.graphics.PathParser$PathDataNode: char mType
io.reactivex.processors.SerializedProcessor: boolean done
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowFixedWidthMinor
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: io.reactivex.functions.Action onAfterTerminate
io.reactivex.internal.operators.flowable.FlowablePublish$FlowablePublisher: java.util.concurrent.atomic.AtomicReference curr
com.appspa.update.R$attr: int actionMenuTextColor
androidx.viewpager.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.resources.R$id: int forever
androidx.core.graphics.drawable.IconCompat: byte[] mData
androidx.appcompat.widget.ActivityChooserView$InnerLayout: int[] TINT_ATTRS
androidx.appcompat.R$attr: int textAppearanceListItemSmall
com.jakewharton.disklrucache.DiskLruCache$Snapshot: long[] lengths
com.appspa.update.R$attr: int thumbTextPadding
androidx.fragment.app.ListFragment: int INTERNAL_PROGRESS_CONTAINER_ID
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableLeftTint
androidx.fragment.R$dimen: int notification_media_narrow_margin
androidx.core.app.ActivityRecreator$2: android.app.Application val$application
io.reactivex.internal.functions.ObjectHelper: io.reactivex.functions.BiPredicate EQUALS
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: boolean cancelled
androidx.appcompat.view.menu.ActionMenuItem: int EXCLUSIVE
com.xuexiang.xhttp2.request.DownloadRequest$1: com.xuexiang.xhttp2.request.DownloadRequest this$0
com.appspa.demo.R$style: int Base_Widget_AppCompat_ListView
androidx.appcompat.resources.R$id: int accessibility_custom_action_21
androidx.appcompat.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.drawerlayout.R$dimen: int notification_main_column_padding_top
androidx.core.app.NotificationCompat: int PRIORITY_LOW
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String KEY_NOTIFICATION_PERSON
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: io.reactivex.internal.util.AtomicThrowable errors
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: io.reactivex.disposables.Disposable other
io.reactivex.internal.operators.observable.ObservableDoOnEach: io.reactivex.functions.Action onComplete
androidx.core.widget.NestedScrollView: float MAX_SCROLL_FACTOR
okio.Timeout: long deadlineNanoTime
androidx.appcompat.R$color: int primary_text_disabled_material_light
androidx.arch.core.internal.SafeIterableMap: int mSize
androidx.appcompat.resources.R$id: int accessibility_custom_action_31
com.google.gson.reflect.TypeToken: int hashCode
io.reactivex.subjects.CompletableSubject: io.reactivex.subjects.CompletableSubject$CompletableDisposable[] EMPTY
androidx.appcompat.R$attr: int showText
androidx.appcompat.R$dimen: int abc_button_padding_vertical_material
com.appspa.demo.R$color: int primary_text_disabled_material_light
androidx.loader.R$attr: int fontProviderPackage
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
androidx.appcompat.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
com.appspa.update.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.appspa.demo.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_DIGIT
com.appspa.update.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
androidx.versionedparcelable.VersionedParcel: int EX_NULL_POINTER
com.google.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type
com.appspa.update.R$styleable: int ActionBar_contentInsetEndWithActions
androidx.vectordrawable.R$drawable: int notification_bg_low
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_CONTENT_RANGE
com.appspa.demo.R$dimen: int abc_list_item_height_small_material
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutTask: long idx
androidx.core.util.PatternsCompat: java.lang.String USER_INFO
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle
androidx.appcompat.R$id: int alertTitle
io.reactivex.internal.operators.observable.ObservableWindowBoundary: int capacityHint
com.appspa.demo.R$styleable: int SwitchCompat_thumbTextPadding
androidx.appcompat.widget.ActionBarOverlayLayout: int ACTION_BAR_ANIMATE_DELAY
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: long serialVersionUID
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MEDIA_SESSION
androidx.appcompat.widget.ActionBarContainer: int mHeight
com.appspa.demo.R$style: int Base_Widget_AppCompat_ButtonBar
com.xuexiang.xhttp2.R$styleable: int Toolbar_titleMarginBottom
androidx.fragment.R$id: int text
androidx.appcompat.resources.R$id: int tag_accessibility_clickable_spans
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: org.reactivestreams.Subscriber downstream
androidx.customview.R$styleable: int ColorStateListItem_alpha
com.appspa.update.R$attr: int switchMinWidth
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.widget.TextView mTextView
androidx.appcompat.R$style: int Base_V22_Theme_AppCompat
com.appspa.update.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.core.widget.TextViewCompat: java.lang.reflect.Field sMinModeField
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleX
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.activity.R$styleable: int FontFamily_fontProviderPackage
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityX
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: io.reactivex.disposables.CompositeDisposable set
androidx.customview.R$styleable: int ColorStateListItem_android_color
com.appspa.demo.R$styleable: int SearchView_queryHint
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.fragment.R$styleable: int GradientColor_android_centerX
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver: java.util.concurrent.atomic.AtomicReference parent
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: int prefetch
okhttp3.ConnectionPool: boolean cleanupRunning
com.appspa.update.R$styleable: int AppCompatTheme_actionBarItemBackground
com.appspa.demo.entity.CustomResult$VersionInfo: java.lang.String versionName
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$dimen: int notification_small_icon_background_padding
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification_Title
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.appcompat.widget.ShareActionProvider: int DEFAULT_INITIAL_ACTIVITY_COUNT
androidx.appcompat.app.AlertDialog$Builder: int mTheme
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber[] subscribers
io.reactivex.processors.SerializedProcessor: boolean emitting
androidx.activity.R$id: int notification_main_column_container
androidx.core.app.FrameMetricsAggregator: int SWAP_DURATION
androidx.fragment.app.FragmentTransaction: int mExitAnim
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: java.util.concurrent.atomic.AtomicReference timer
okhttp3.CacheControl: boolean immutable
androidx.appcompat.resources.R$dimen: int notification_small_icon_size_as_large
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$dimen: int abc_dialog_fixed_height_major
androidx.appcompat.R$attr: int drawableTintMode
androidx.core.app.ShareCompat$IntentReader: android.app.Activity mActivity
androidx.appcompat.view.menu.MenuBuilder: java.lang.String EXPANDED_ACTION_VIEW_ID
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: boolean done
com.xuexiang.xhttp2.R$attr: int switchMinWidth
androidx.core.app.RemoteInput: java.lang.String mResultKey
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription: org.reactivestreams.Subscriber downstream
androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: androidx.core.view.ViewPropertyAnimatorCompat mVpa
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: boolean done
androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference
com.appspa.update.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
androidx.collection.ArraySet: int sBaseCacheSize
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: io.reactivex.internal.util.ErrorMode errorMode
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: java.util.Collection buffer
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_lineHeight
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: long serialVersionUID
androidx.appcompat.R$id: int progress_horizontal
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCHPAD
androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren
com.appspa.update.R$dimen: int abc_text_size_medium_material
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR_SET
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: io.reactivex.SingleObserver downstream
com.appspa.update.R$attr: int popupTheme
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable: int bufferSize
androidx.appcompat.view.menu.MenuItemWrapperICS: androidx.core.internal.view.SupportMenuItem mWrappedObject
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterSubscriber: io.reactivex.functions.Consumer onAfterNext
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.util.Map constantToName
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: java.util.concurrent.atomic.AtomicBoolean connect
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: boolean cancelled
com.google.gson.Gson: boolean DEFAULT_SERIALIZE_NULLS
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: org.reactivestreams.Subscriber downstream
com.appspa.update.R$dimen: int notification_action_icon_size
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$inFragment
okhttp3.OkHttpClient$Builder: java.util.List protocols
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable: boolean delayErrors
androidx.core.view.MotionEventCompat: int ACTION_POINTER_DOWN
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber: boolean done
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mOnClickListener
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
androidx.vectordrawable.R$id: int accessibility_custom_action_8
com.appspa.update.R$style: int Theme_AppCompat_Dialog_MinWidth
com.xuexiang.xhttp2.R$id: int tag_transition_group
androidx.core.app.JobIntentService: java.util.HashMap sClassWorkEnqueuer
androidx.fragment.app.FragmentTransition$4: android.view.View val$nonExistentView
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: boolean cancelled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String mGroupName
androidx.appcompat.R$dimen: int abc_action_bar_overflow_padding_start_material
androidx.loader.R$style: int Widget_Compat_NotificationActionText
io.reactivex.internal.operators.flowable.FlowableSamplePublisher: boolean emitLast
androidx.activity.R$id: int accessibility_custom_action_6
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapIntoIterable: io.reactivex.functions.Function mapper
com.appspa.demo.R$dimen: int space_common_padding
androidx.appcompat.widget.ListPopupWindow: boolean mModal
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$Callback mCallback
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: long serialVersionUID
com.appspa.update.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.xuexiang.xhttp2.R$drawable: int btn_checkbox_checked_mtrl
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.functions.Action onAfterTerminated
io.reactivex.internal.schedulers.IoScheduler: io.reactivex.internal.schedulers.RxThreadFactory EVICTOR_THREAD_FACTORY
com.xuexiang.xhttp2.R$layout: int abc_dialog_title_material
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory CLASS_FACTORY
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: io.reactivex.SingleObserver downstream
androidx.core.R$styleable: int FontFamily_fontProviderQuery
androidx.appcompat.R$styleable: int AppCompatTheme_colorError
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.String FREEZE_METHOD
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver: io.reactivex.MaybeObserver downstream
okhttp3.internal.cache.DiskLruCache$Entry: java.io.File[] dirtyFiles
com.appspa.update.service.DownloadService$DownloadBinder: com.appspa.update.entity.UpdateEntity mUpdateEntity
retrofit2.ParameterHandler$Query: java.lang.String name
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: io.reactivex.internal.disposables.SequentialDisposable sd
com.zhy.http.okhttp.request.RequestCall: long connTimeOut
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp
com.xuexiang.xhttp2.R$dimen: int notification_subtext_size
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.appspa.update.R$dimen: int abc_control_inset_material
io.reactivex.internal.operators.parallel.ParallelReduceFull: io.reactivex.functions.BiFunction reducer
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper
androidx.appcompat.resources.R$id: int accessibility_custom_action_14
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
com.xuexiang.xhttp2.R$styleable: int[] StateListDrawable
androidx.core.R$id: int tag_transition_group
com.appspa.update.R$dimen: int abc_text_size_headline_material
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$id: int search_plate
androidx.viewpager.R$styleable: int[] GradientColor
androidx.viewpager.R$id: int notification_main_column_container
io.reactivex.internal.operators.observable.ObservableGroupBy$State: long serialVersionUID
com.appspa.demo.R$style: int Platform_V25_AppCompat
com.xuexiang.xhttp2.reflect.TypeBuilder: boolean $assertionsDisabled
io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleBiGenerator: io.reactivex.functions.BiConsumer consumer
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.appcompat.widget.ActionBarOverlayLayout$2: androidx.appcompat.widget.ActionBarOverlayLayout this$0
okio.Segment: boolean owner
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: long count
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable: io.reactivex.MaybeObserver downstream
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnSearchClickListener
com.appspa.update.R$style: int TextAppearance_AppCompat_Button
com.google.gson.stream.JsonReader: int lineNumber
io.reactivex.subjects.MaybeSubject$MaybeDisposable: io.reactivex.MaybeObserver downstream
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
com.xuexiang.xhttp2.R$id: int scrollIndicatorDown
com.appspa.demo.R$styleable: int[] AppCompatTextHelper
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_SEMANTIC_ACTION
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: io.reactivex.MaybeObserver downstream
androidx.vectordrawable.animated.R$dimen: int compat_button_padding_vertical_material
androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView
androidx.appcompat.resources.R$styleable: int GradientColor_android_centerY
androidx.viewpager.widget.PagerTitleStrip: int[] TEXT_ATTRS
com.appspa.demo.R$styleable: int[] Spinner
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector: io.reactivex.functions.BiFunction resultSelector
androidx.loader.content.ModernAsyncTask: java.util.concurrent.BlockingQueue sPoolWorkQueue
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: int consumed
io.reactivex.internal.schedulers.SchedulerWhen$OnCompletedAction: java.lang.Runnable action
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber: java.lang.Object value
com.appspa.update.widget.UpdateDialogActivity: android.widget.TextView mTvTitle
androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha
okhttp3.internal.http2.Http2Reader: boolean client
androidx.fragment.app.BackStackState: int mBreadCrumbShortTitleRes
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: int lastIndex
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_CompoundButton_RadioButton
io.reactivex.internal.subscribers.StrictSubscriber: java.util.concurrent.atomic.AtomicBoolean once
com.xuexiang.xhttp2.R$drawable: int abc_list_selector_background_transition_holo_light
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
com.appspa.update.R$styleable: int Toolbar_buttonGravity
com.appspa.demo.R$styleable: int FontFamilyFont_fontWeight
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform PLATFORM
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: io.reactivex.functions.Action onComplete
androidx.appcompat.R$styleable: int FontFamilyFont_font
androidx.appcompat.view.menu.MenuPopupHelper: int mDropDownGravity
androidx.fragment.app.Fragment: android.view.View mView
com.appspa.demo.R$drawable: int abc_popup_background_mtrl_mult
com.appspa.update.R$color: int ripple_material_light
io.reactivex.internal.operators.flowable.FlowableFromIterable: java.lang.Iterable source
com.appspa.demo.R$attr: int drawableStartCompat
com.xuexiang.xhttp2.R$style: int ThemeOverlay_AppCompat_Dialog
com.appspa.update.R$dimen: int abc_text_size_small_material
com.xuexiang.xhttp2.R$styleable: int[] AnimatedStateListDrawableItem
io.reactivex.internal.operators.flowable.FlowableSubscribeOn: io.reactivex.Scheduler scheduler
androidx.loader.content.ModernAsyncTask$3: androidx.loader.content.ModernAsyncTask this$0
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver otherObserver
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: boolean cancelled
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: io.reactivex.functions.Function leftEnd
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.appcompat.R$attr: int tickMarkTint
okhttp3.internal.http2.Http2Connection$7: okhttp3.internal.http2.Http2Connection this$0
androidx.core.app.RemoteInput: java.lang.CharSequence[] mChoices
com.xuexiang.xhttp2.R$styleable: int[] LinearLayoutCompat_Layout
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Display4
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onInitNewThreadHandler
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
androidx.appcompat.R$id: int textSpacerNoTitle
androidx.core.view.animation.PathInterpolatorApi14: float[] mX
androidx.appcompat.app.TwilightCalculator: float J0
androidx.appcompat.widget.SwitchCompat: android.text.Layout mOnLayout
okhttp3.internal.Util: okio.ByteString UTF_16_BE_BOM
androidx.drawerlayout.R$dimen: int notification_right_icon_size
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber BOUNDARY_DISPOSED
io.reactivex.internal.observers.BlockingMultiObserver: java.lang.Throwable error
io.reactivex.internal.operators.single.SingleDoOnSuccess$DoOnSuccess: io.reactivex.SingleObserver downstream
com.appspa.update.R$attr: int viewInflaterClass
com.appspa.update.R$color: int secondary_text_default_material_dark
androidx.appcompat.R$id: int expanded_menu
com.xuexiang.xhttp2.R$attr: int searchIcon
androidx.collection.LruCache: int missCount
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
com.xuexiang.xhttp2.R$styleable: int ActionBar_backgroundStacked
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
androidx.core.view.ViewParentCompat: java.lang.String TAG
androidx.appcompat.R$color: int abc_tint_default
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method putMethod
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
androidx.drawerlayout.widget.DrawerLayout: java.lang.Object mLastInsets
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mActionItems
com.zhy.http.okhttp.callback.FileCallBack: java.lang.String destFileName
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemAdded
androidx.appcompat.R$dimen: int abc_action_button_min_height_material
androidx.vectordrawable.animated.R$dimen: int notification_right_icon_size
okhttp3.OkHttpClient$Builder: java.util.List interceptors
com.google.gson.internal.bind.CollectionTypeAdapterFactory: com.google.gson.internal.ConstructorConstructor constructorConstructor
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe: long index
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_NONE
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind UNBOUNDED_IN
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.appcompat.widget.ToolbarWidgetWrapper$2: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: androidx.appcompat.widget.Toolbar mToolbar
androidx.appcompat.R$styleable: int SwitchCompat_switchMinWidth
androidx.activity.R$id: int accessibility_custom_action_29
com.appspa.update.R$styleable: int[] DrawerArrowToggle
androidx.core.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: boolean cancelled
com.google.gson.internal.bind.ObjectTypeAdapter: com.google.gson.Gson gson
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType[] $VALUES
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: long skip
androidx.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.reactivex.internal.schedulers.AbstractDirectTask: java.util.concurrent.FutureTask FINISHED
com.appspa.demo.R$styleable: int PopupWindow_android_popupBackground
io.reactivex.internal.schedulers.IoScheduler: io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool NONE
io.reactivex.internal.disposables.ArrayCompositeDisposable: long serialVersionUID
com.google.gson.Gson: boolean complexMapKeySerialization
androidx.appcompat.view.menu.MenuAdapter: android.view.LayoutInflater mInflater
com.xuexiang.xhttp2.R$layout: int abc_cascading_menu_item_layout
androidx.core.widget.AutoScrollHelper: boolean mExclusive
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: long[] emissions
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: boolean done
androidx.appcompat.R$drawable: int abc_tab_indicator_mtrl_alpha
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: io.reactivex.functions.Function mapper
androidx.appcompat.R$attr: int iconifiedByDefault
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$styleable: int SearchView_searchHintIcon
androidx.vectordrawable.animated.R$dimen: int notification_large_icon_height
com.zhy.http.okhttp.request.PostFormRequest$1: com.zhy.http.okhttp.callback.Callback val$callback
io.reactivex.subjects.PublishSubject: java.lang.Throwable error
okio.Buffer$UnsafeCursor: boolean readWrite
androidx.customview.widget.ViewDragHelper: float mMinVelocity
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
androidx.fragment.app.DialogFragment: java.lang.String SAVED_THEME
com.google.gson.internal.LinkedTreeMap$Node: int height
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogTheme
com.xuexiang.xhttp2.R$dimen: int abc_cascading_menus_min_smallest_width
io.reactivex.internal.operators.flowable.FlowableDelay: long delay
androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: boolean hasValue
androidx.core.app.NotificationCompat$WearableExtender: java.util.ArrayList mActions
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.appcompat.R$attr: int actionModeWebSearchDrawable
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: io.reactivex.functions.Consumer onNext
io.reactivex.internal.operators.maybe.MaybeZipIterable: java.lang.Iterable sources
androidx.appcompat.R$layout: int abc_list_menu_item_radio
com.appspa.update.R$attr: int fontProviderPackage
com.appspa.demo.R$dimen: int abc_dialog_fixed_width_minor
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$styleable: int MenuView_android_verticalDivider
androidx.viewpager.R$attr: int ttcIndex
com.xuexiang.xhttp2.R$styleable: int[] ActionBarLayout
androidx.fragment.R$styleable: int FontFamily_fontProviderAuthority
com.appspa.update.R$attr: int fontProviderCerts
androidx.appcompat.app.AlertController$2: android.view.View val$bottom
com.appspa.demo.R$style: int Widget_AppCompat_Button_Borderless
com.google.gson.internal.Excluder$1: boolean val$skipDeserialize
io.reactivex.observers.ResourceSingleObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.Scheduler$Worker$PeriodicTask: long periodInNanoseconds
io.reactivex.internal.operators.single.SingleDoOnSubscribe: io.reactivex.SingleSource source
retrofit2.converter.gson.GsonRequestBodyConverter: com.google.gson.TypeAdapter adapter
io.reactivex.internal.operators.single.SingleTimeout: long timeout
com.appspa.update.R$id: int iv_close
androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET
com.appspa.update.R$styleable: int AppCompatTheme_searchViewStyle
androidx.fragment.app.FragmentTransaction: int OP_SHOW
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: io.reactivex.internal.operators.observable.ObservableRefCount parent
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.FragmentTransitionImpl val$impl
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
com.xuexiang.xhttp2.R$styleable: int AppCompatImageView_srcCompat
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnError: java.lang.Throwable t
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
com.appspa.update.R$string: int space_tip_download_url_error
androidx.appcompat.widget.AppCompatCheckedTextView: int[] TINT_ATTRS
com.appspa.update.R$style: int TextAppearance_AppCompat_Large
okhttp3.internal.http2.Http2Connection$5: int val$streamId
io.reactivex.internal.operators.observable.ObservableMapNotification: java.util.concurrent.Callable onCompleteSupplier
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain: java.lang.String MESSAGE
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Method sActionBarOnMenuKeyMethod
androidx.appcompat.R$attr: int actionModeBackground
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_RECOMMENDATION
androidx.loader.R$dimen: int notification_media_narrow_margin
com.appspa.update.R$styleable: int Spinner_android_dropDownWidth
com.appspa.update.R$drawable: int notify_panel_notification_icon_bg
androidx.collection.ArraySet: java.lang.String TAG
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$drawable: int abc_scrubber_control_off_mtrl_alpha
io.reactivex.internal.operators.flowable.FlowableInternalHelper$TimedReplay: java.util.concurrent.TimeUnit unit
com.appspa.update.R$interpolator: int fast_out_slow_in
androidx.appcompat.R$styleable: int MenuGroup_android_menuCategory
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn: io.reactivex.functions.Function valueSupplier
com.appspa.demo.R$styleable: int AppCompatTheme_editTextStyle
androidx.core.app.NotificationCompat$WearableExtender: int FLAG_START_SCROLL_BOTTOM
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: java.util.concurrent.atomic.AtomicInteger active
okhttp3.Authenticator: okhttp3.Authenticator NONE
androidx.core.app.NotificationManagerCompat: android.app.NotificationManager mNotificationManager
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_CONTENT_ICON_GRAVITY
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SYSTEM
com.xuexiang.xhttp2.request.BaseRequest: okhttp3.Cache mCache
com.xuexiang.xhttp2.R$attr: int dividerVertical
com.appspa.demo.R$drawable: int abc_cab_background_top_material
okhttp3.ConnectionPool: boolean $assertionsDisabled
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: io.reactivex.Scheduler scheduler
io.reactivex.observers.SerializedObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.observable.ObservableMapNotification: io.reactivex.functions.Function onNextMapper
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode FIRST_CACHE
androidx.collection.LruCache: int createCount
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView
androidx.core.R$id: int accessibility_custom_action_14
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
com.xuexiang.xhttp2.R$color: int dim_foreground_disabled_material_dark
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PAGE
androidx.appcompat.R$layout: int notification_template_icon_group
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: long serialVersionUID
com.appspa.demo.R$dimen: int abc_action_bar_icon_vertical_padding_material
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.WebSocketWriter$FrameSink frameSink
androidx.vectordrawable.animated.R$styleable: int ColorStateListItem_android_color
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPeople
androidx.appcompat.view.menu.MenuItemImpl: int mOrdering
androidx.appcompat.widget.ActivityChooserView: android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener
com.appspa.demo.R$attr: int titleTextColor
io.reactivex.internal.operators.flowable.FlowableWindowTimed: boolean restartTimerOnMaxSize
androidx.appcompat.R$layout: int abc_action_bar_title_item
androidx.activity.R$styleable: int GradientColor_android_tileMode
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: java.util.concurrent.atomic.AtomicInteger active
androidx.appcompat.R$dimen: int abc_action_button_min_width_overflow_material
androidx.appcompat.app.AlertController: android.content.Context mContext
io.reactivex.internal.operators.flowable.FlowableElementAtSingle: long index
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: java.lang.Throwable error
com.xuexiang.xhttp2.R$attr: int listPreferredItemHeightLarge
androidx.appcompat.R$attr: int viewInflaterClass
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.appspa.update.R$id: int scrollIndicatorUp
com.appspa.demo.R$styleable: int AppCompatTextView_drawableLeftCompat
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.viewpager.widget.PagerTabStrip: int mFullUnderlineHeight
com.appspa.demo.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
retrofit2.Retrofit: java.util.List converterFactories
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: long index
com.appspa.update.R$style: int TextAppearance_AppCompat_Medium_Inverse
androidx.activity.R$attr: int fontProviderQuery
androidx.customview.R$dimen: int compat_button_inset_horizontal_material
io.reactivex.internal.operators.observable.ObservablePublishAlt: java.util.concurrent.atomic.AtomicReference current
com.appspa.update.R$styleable: int ActivityChooserView_initialActivityCount
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: int prefetch
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY
com.zhy.http.okhttp.request.PostFileRequest$1$1: long val$contentLength
androidx.appcompat.R$attr: int titleMarginEnd
androidx.activity.R$styleable: int FontFamilyFont_fontWeight
androidx.core.provider.FontsContractCompat$Columns: java.lang.String RESULT_CODE
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.reflect.Method openMethod
com.appspa.update.R$layout: int abc_search_dropdown_item_icons_2line
androidx.core.provider.FontsContractCompat: int RESULT_CODE_PROVIDER_NOT_FOUND
androidx.core.app.ShareCompat: java.lang.String HISTORY_FILENAME_PREFIX
androidx.fragment.app.DialogFragment: int mStyle
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: long period
androidx.appcompat.R$id: int accessibility_custom_action_9
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle: io.reactivex.functions.BiFunction reducer
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter valueTypeAdapter
okhttp3.internal.http1.Http1Codec$FixedLengthSink: long bytesRemaining
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String acceptLanguage
com.appspa.update.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: long serialVersionUID
com.xuexiang.xhttp2.R$id: int textSpacerNoTitle
com.appspa.update.R$style: int Base_Widget_AppCompat_ImageButton
androidx.vectordrawable.animated.R$id: int actions
androidx.loader.R$styleable: int GradientColor_android_endY
androidx.appcompat.R$attr: int height
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: org.reactivestreams.Subscription upstream
androidx.core.content.IntentCompat: java.lang.String CATEGORY_LEANBACK_LAUNCHER
androidx.appcompat.R$styleable: int AppCompatTheme_dividerVertical
androidx.viewpager.R$id: int tag_transition_group
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COLLAPSE
com.google.gson.internal.ConstructorConstructor$14: java.lang.reflect.Type val$type
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: io.reactivex.functions.Action onFinally
com.appspa.demo.R$styleable: int FontFamilyFont_fontStyle
androidx.core.content.ContextCompat: java.lang.String TAG
com.appspa.update.R$dimen: int abc_dialog_padding_material
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.appspa.demo.R$layout: int spa_layout_update_prompter
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: io.reactivex.internal.operators.observable.ObservableReplay$Node tail
androidx.appcompat.R$styleable: int AppCompatTheme_listMenuViewStyle
retrofit2.KotlinExtensions$awaitResponse$2$2: kotlinx.coroutines.CancellableContinuation $continuation
androidx.appcompat.R$id: int buttonPanel
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: long emitted
com.appspa.demo.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
io.reactivex.internal.operators.observable.ObservableIntervalRange: java.util.concurrent.TimeUnit unit
com.appspa.update.R$attr: int icon
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: io.reactivex.disposables.Disposable upstream
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
androidx.appcompat.R$styleable: int AppCompatTheme_editTextStyle
com.appspa.update.R$style: int Base_Widget_AppCompat_SearchView
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$attr: int textAppearancePopupMenuHeader
com.appspa.update.R$dimen: int abc_button_inset_vertical_material
com.appspa.update.R$style: int AlertDialog_AppCompat_Light
androidx.appcompat.R$attr: int contentInsetLeft
com.appspa.demo.R$dimen: int abc_select_dialog_padding_start_material
androidx.customview.R$styleable: int GradientColor_android_startColor
com.appspa.update.R$styleable: int ActionBar_progressBarPadding
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable: long execTime
androidx.customview.widget.ViewDragHelper: android.view.ViewGroup mParentView
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: long serialVersionUID
com.appspa.demo.R$id: int on
androidx.appcompat.app.AlertController$AlertParams: boolean mViewSpacingSpecified
com.appspa.demo.R$id: int expanded_menu
androidx.appcompat.R$color: int abc_tint_switch_track
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_VALUE_CONNECTION_CLOSE
androidx.fragment.R$dimen: int notification_right_side_padding_top
com.xuexiang.xhttp2.R$styleable: int AppCompatTextHelper_android_drawableTop
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.lang.Integer LEFT_CLOSE
okhttp3.internal.ws.WebSocketReader: boolean isClient
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_PROMO
com.appspa.update.widget.UpdateDialog: android.widget.ImageView mIvClose
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.BitmapShader mBitmapShader
androidx.appcompat.R$attr: int navigationIcon
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: long produced
androidx.customview.R$id: int blocking
okhttp3.internal.http2.Http2Writer: boolean closed
androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableJoin: io.reactivex.functions.BiFunction resultSelector
androidx.viewpager.widget.PagerTabStrip$2: androidx.viewpager.widget.PagerTabStrip this$0
okio.Pipe$PipeSource: okio.Pipe this$0
androidx.core.view.MotionEventCompat: int ACTION_POINTER_INDEX_SHIFT
androidx.appcompat.R$attr: int textColorAlertDialogListItem
androidx.appcompat.R$id: int action_bar_spinner
androidx.vectordrawable.animated.R$drawable: int notification_template_icon_low_bg
androidx.core.R$id: int accessibility_custom_action_16
io.reactivex.internal.observers.CallbackCompletableObserver: long serialVersionUID
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: java.lang.Object value
retrofit2.RequestFactory$Builder: boolean gotPart
androidx.fragment.app.FragmentManagerImpl$3: androidx.fragment.app.FragmentManagerImpl this$0
androidx.loader.R$dimen: int notification_top_pad
com.appspa.demo.R$styleable: int Toolbar_titleMarginEnd
com.appspa.demo.R$attr: int actionMenuTextColor
com.google.gson.GsonBuilder: java.util.Map instanceCreators
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.core.app.NotificationCompat$Action: android.os.Bundle mExtras
com.appspa.update.R$attr: int arrowHeadLength
androidx.customview.widget.ViewDragHelper: boolean mReleaseInProgress
okhttp3.MultipartBody: okhttp3.MediaType MIXED
androidx.loader.content.ModernAsyncTask$AsyncTaskResult: java.lang.Object[] mData
com.google.gson.stream.JsonReader: int PEEKED_BUFFERED
com.xuexiang.xhttp2.R$attr: int actionModeSelectAllDrawable
androidx.appcompat.R$id: int tag_unhandled_key_listeners
androidx.appcompat.R$attr: int colorBackgroundFloating
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: androidx.drawerlayout.widget.DrawerLayout this$0
com.xuexiang.xhttp2.R$styleable: int Toolbar_contentInsetRight
androidx.appcompat.R$attr: int actionModeShareDrawable
androidx.fragment.app.FragmentHostCallback: android.app.Activity mActivity
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$styleable: int AppCompatTextView_fontVariationSettings
okhttp3.internal.ws.RealWebSocket$2: okhttp3.Request val$request
io.reactivex.processors.ReplayProcessor$TimedNode: long time
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: long serialVersionUID
androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed
androidx.versionedparcelable.VersionedParcel$1: androidx.versionedparcelable.VersionedParcel this$0
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.appspa.demo.R$styleable: int MenuGroup_android_id
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver: java.util.concurrent.atomic.AtomicReference parent
com.appspa.update.R$styleable: int[] ViewStubCompat
io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt: io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt[] $VALUES
com.appspa.demo.R$color: int colorAccent
androidx.appcompat.R$style: int Theme_AppCompat_DayNight
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mAnimatingAway
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: boolean done
io.reactivex.subjects.CompletableSubject: io.reactivex.subjects.CompletableSubject$CompletableDisposable[] TERMINATED
com.appspa.demo.R$id: int accessibility_custom_action_30
com.appspa.update.R$attr: int actionBarTheme
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit: io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver this$0
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mFrameworkMinimumSdk
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: long end
androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_OPEN_EXIT
androidx.appcompat.R$style: int Theme_AppCompat_Light
io.reactivex.internal.operators.observable.ObservableWindow: int capacityHint
com.appspa.update.widget.UpdateDialogFragment: android.widget.ImageView mIvClose
com.appspa.demo.R$styleable: int MenuItem_android_id
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: io.reactivex.subjects.UnicastSubject window
androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_UNIFORM
androidx.core.R$dimen: int compat_control_corner_material
androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable
retrofit2.OkHttpCall: boolean canceled
io.reactivex.internal.operators.observable.ObservableIntervalRange: long end
com.appspa.demo.R$id: int invisible
com.appspa.update.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.jakewharton.disklrucache.DiskLruCache$Editor: boolean[] written
androidx.appcompat.R$dimen: int abc_disabled_alpha_material_light
androidx.appcompat.R$id: int tag_unhandled_key_event_manager
androidx.lifecycle.AndroidViewModel: android.app.Application mApplication
com.appspa.update.R$id: int accessibility_custom_action_13
com.appspa.demo.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Light
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: int index
okhttp3.OkHttpClient: int pingInterval
androidx.core.app.NotificationManagerCompat$CancelTask: int id
com.xuexiang.xhttp2.R$styleable: int ActionBar_backgroundSplit
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: long serialVersionUID
com.xuexiang.xhttp2.R$anim: int abc_popup_enter
androidx.appcompat.R$attr: int drawableLeftCompat
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.ArgbEvaluator mArgbEvaluator
com.appspa.update.R$styleable: int SearchView_android_inputType
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.flowable.FlowableWindowBoundary: org.reactivestreams.Publisher other
com.appspa.demo.R$styleable: int AppCompatTheme_textAppearanceListItem
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_BACKGROUND
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: io.reactivex.functions.Function bufferClose
androidx.appcompat.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: int bufferSize
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache: long serialVersionUID
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.xuexiang.xhttp2.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
androidx.fragment.R$id: int info
io.reactivex.disposables.SubscriptionDisposable: long serialVersionUID
retrofit2.Platform: java.lang.reflect.Constructor lookupConstructor
com.appspa.update.R$styleable: int MenuItem_android_title
androidx.appcompat.view.menu.ActionMenuItem: int mId
org.aspectj.runtime.reflect.StringMaker: boolean shortTypeNames
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeBackground
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: java.lang.Object terminalEvent
com.appspa.demo.R$styleable: int MenuGroup_android_menuCategory
org.aspectj.lang.NoAspectBoundException: java.lang.Throwable cause
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry: io.reactivex.functions.Consumer onNext
androidx.viewpager.R$styleable: int GradientColor_android_type
com.xuexiang.xhttp2.R$style: int Base_V23_Theme_AppCompat
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTintMode
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: java.util.concurrent.Callable bufferSupplier
com.appspa.update.R$attr: int listPreferredItemPaddingLeft
io.reactivex.Notification: java.lang.Object value
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: boolean gate
androidx.core.app.NotificationCompat$Action: java.lang.String EXTRA_SEMANTIC_ACTION
io.reactivex.internal.subscriptions.SubscriptionArbiter: java.util.concurrent.atomic.AtomicReference missedSubscription
com.appspa.update.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.appspa.update.widget.UpdateDialogFragment: android.widget.TextView mTvTitle
com.appspa.update.logs.UpdateLog: boolean sIsDebug
io.reactivex.internal.operators.single.SingleSubscribeOn: io.reactivex.SingleSource source
com.appspa.demo.R$dimen: int abc_text_size_menu_material
com.appspa.demo.R$style: int Widget_AppCompat_ListPopupWindow
com.xuexiang.xhttp2.R$styleable: int ActionBar_homeAsUpIndicator
androidx.appcompat.widget.SearchView: android.view.View$OnKeyListener mTextKeyListener
io.reactivex.internal.subscribers.ForEachWhileSubscriber: io.reactivex.functions.Predicate onNext
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean mHasReversibleFlag
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: int limit
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: io.reactivex.functions.BiFunction reducer
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody$CountingSink: long bytesWritten
androidx.core.os.LocaleListCompatWrapper: java.lang.String mStringRepresentation
androidx.appcompat.R$styleable: int AppCompatImageView_android_src
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_LINK_URI_INTEROP_KEY
com.appspa.demo.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: long serialVersionUID
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: io.reactivex.Scheduler scheduler
okhttp3.Cache: okhttp3.internal.cache.InternalCache internalCache
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
okhttp3.internal.http2.Http2Codec: okhttp3.internal.http2.Http2Stream stream
com.appspa.update.R$styleable: int[] TextAppearance
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
com.appspa.demo.R$attr: int dividerVertical
androidx.appcompat.R$style: int TextAppearance_AppCompat_Large_Inverse
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: io.reactivex.MaybeSource source
com.appspa.demo.R$dimen: int abc_button_padding_horizontal_material
androidx.fragment.app.FragmentActivity: int mNextCandidateRequestIndex
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_switchMinWidth
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$enteringViews
com.appspa.demo.R$id: int accessibility_custom_action_1
androidx.appcompat.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod
com.xuexiang.xhttp2.R$attr: int checkedTextViewStyle
io.reactivex.internal.functions.Functions$EqualsPredicate: java.lang.Object value
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mPendingMenus
androidx.appcompat.widget.ActivityChooserModel: java.lang.Object mInstanceLock
com.appspa.update.R$attr: int actionBarTabStyle
com.appspa.update.R$string: int abc_menu_function_shortcut_label
io.reactivex.internal.subscribers.ForEachWhileSubscriber: io.reactivex.functions.Action onComplete
com.xuexiang.xhttp2.R$dimen: int highlight_alpha_material_dark
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.parallel.ParallelReduce: io.reactivex.functions.BiFunction reducer
androidx.core.content.res.FontResourcesParserCompat: int ITALIC
androidx.appcompat.widget.ActivityChooserView: int mListPopupMaxWidth
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: boolean active
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener
androidx.appcompat.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: java.lang.CharSequence mDefaultContentDescription
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_FOCUS
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mPositiveButtonText
io.reactivex.internal.operators.observable.ObservableCombineLatest: boolean delayError
com.appspa.demo.R$style: int Theme_AppCompat_Light_Dialog_Alert
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary: java.util.concurrent.Callable bufferSupplier
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.google.gson.internal.bind.TypeAdapters$33: java.lang.Class val$unboxed
androidx.core.R$layout: int custom_dialog
com.xuexiang.xhttp2.R$color: int secondary_text_default_material_light
com.appspa.update.widget.BaseDialog: android.view.View mContentView
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Subhead
com.appspa.update.R$styleable: int AppCompatTheme_popupWindowStyle
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionProviderConstructorArguments
com.appspa.update.UpdateManager: boolean mIsAutoMode
com.appspa.demo.R$id: int SHIFT
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutAlphabeticModifiers
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME
androidx.core.app.NotificationCompat$Builder: boolean mGroupSummary
androidx.viewpager.R$styleable: int FontFamily_fontProviderPackage
com.appspa.demo.R$attr: int actionModeCutDrawable
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_SeekBar
com.appspa.demo.R$attr: int titleMarginStart
com.xuexiang.xhttp2.R$string: int abc_activitychooserview_choose_application
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: int sourceMode
androidx.appcompat.view.menu.ListMenuItemView: int mMenuType
com.appspa.update.widget.UpdateDialogFragment: int mCurrentOrientation
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: java.lang.Class hierarchyType
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_ALLOWED_DATA_TYPES
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: io.reactivex.processors.BehaviorProcessor state
com.appspa.update.R$drawable: int abc_btn_check_material_anim
io.reactivex.internal.operators.flowable.FlowableInternalHelper$TimedReplay: io.reactivex.Flowable parent
com.appspa.update.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.appspa.demo.R$styleable: int[] StateListDrawable
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: io.reactivex.functions.Function mapper
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName
com.appspa.demo.R$string: int space_tip_download_url_error
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: io.reactivex.Observer downstream
com.appspa.update.R$dimen: int abc_floating_window_z
androidx.core.R$drawable: int notify_panel_notification_icon_bg
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition
com.appspa.demo.R$attr: int selectableItemBackgroundBorderless
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Small
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: java.util.concurrent.atomic.AtomicBoolean once
io.reactivex.internal.operators.observable.ObservableAutoConnect: int numberOfObservers
androidx.core.widget.AutoScrollHelper: float NO_MAX
io.reactivex.internal.operators.observable.ObservableRepeatWhen: io.reactivex.functions.Function handler
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Caption
com.appspa.update.R$attr: int actionBarDivider
com.xuexiang.xhttp2.R$drawable: int abc_popup_background_mtrl_mult
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: java.util.concurrent.locks.Condition condition
androidx.appcompat.R$attr: int panelMenuListWidth
androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved
com.xuexiang.xhttp2.R$drawable: int abc_btn_radio_material_anim
androidx.appcompat.widget.ActionMenuPresenter: java.lang.String TAG
com.google.gson.internal.ConstructorConstructor$11: com.google.gson.internal.ConstructorConstructor this$0
com.appspa.update.service.DownloadService$FileDownloadCallBack$4: com.appspa.update.service.DownloadService$FileDownloadCallBack this$1
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: boolean cancelled
androidx.appcompat.widget.ActionMenuPresenter: android.util.SparseBooleanArray mActionButtonGroups
androidx.appcompat.widget.TintTypedArray: android.content.Context mContext
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.customview.widget.ViewDragHelper: int mEdgeSize
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat
io.reactivex.subscribers.TestSubscriber: java.util.concurrent.atomic.AtomicReference upstream
com.appspa.update.R$id: int topPanel
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_10
androidx.loader.R$id: int async
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarSplitStyle
okhttp3.RequestBody$2: byte[] val$content
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable mDropDownListHighlight
org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: java.lang.String msg
okhttp3.internal.http2.Settings: int set
com.appspa.update.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
okhttp3.internal.http2.Http2Connection$6: int val$streamId
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: java.lang.Object defaultValue
com.appspa.update.R$styleable: int PopupWindow_android_popupBackground
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ActionBar_Solid
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: long CANCELLED
retrofit2.ParameterHandler$RelativeUrl: int p
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_21
androidx.appcompat.R$attr: int barLength
com.xuexiang.xhttp2.R$id: int parentPanel
androidx.fragment.app.FragmentTransitionCompat21$1: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable mHomeAsUpIndicator
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs
androidx.fragment.R$id: int tag_unhandled_key_listeners
io.reactivex.processors.MulticastProcessor: int fusionMode
com.xuexiang.xhttp2.R$drawable: int abc_switch_thumb_material
androidx.activity.R$layout: int notification_template_icon_group
com.appspa.update.UpdateManager$Builder: com.appspa.update.proxy.IUpdateDownloader updateDownLoader
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: io.reactivex.SingleObserver downstream
androidx.appcompat.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.appspa.demo.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
io.reactivex.internal.operators.flowable.FlowableAutoConnect: java.util.concurrent.atomic.AtomicInteger clients
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable
okhttp3.internal.cache2.Relay: long bufferMaxSize
com.google.gson.Gson: java.util.List builderFactories
com.appspa.update.R$styleable: int AppCompatTheme_actionBarSize
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
io.reactivex.internal.observers.QueueDrainObserver: boolean done
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
com.xuexiang.xhttp2.cache.RxCache$Builder: long cacheTime
io.reactivex.internal.operators.observable.ObservableRetryPredicate: io.reactivex.functions.Predicate predicate
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: java.lang.Object value
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.observable.ObservableBufferTimed: boolean restartTimerOnMaxSize
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: boolean done
androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext
androidx.appcompat.view.menu.ListMenuItemView: android.widget.CheckBox mCheckBox
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: boolean delayErrors
com.appspa.update.entity.DownloadEntity: java.lang.String mMd5
androidx.appcompat.view.menu.MenuItemImpl: int SHOW_AS_ACTION_MASK
retrofit2.ParameterHandler$Path: boolean encoded
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: float onScreen
com.appspa.demo.R$styleable: int Spinner_android_popupBackground
com.appspa.update.R$drawable: int abc_popup_background_mtrl_mult
com.appspa.demo.R$dimen: int abc_action_button_min_width_material
androidx.core.app.Person$Builder: java.lang.String mKey
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.completable.CompletableOnErrorComplete: io.reactivex.functions.Predicate predicate
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: long serialVersionUID
com.appspa.update.R$style: int Base_AlertDialog_AppCompat
androidx.lifecycle.Lifecycling$1: androidx.lifecycle.LifecycleEventObserver val$observer
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String TAG
androidx.vectordrawable.R$dimen: int notification_large_icon_height
androidx.cursoradapter.widget.SimpleCursorAdapter: androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: java.lang.Object defaultItem
androidx.drawerlayout.R$dimen: int compat_button_inset_horizontal_material
com.appspa.demo.R$style: int Base_Animation_AppCompat_Tooltip
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
androidx.core.text.PrecomputedTextCompat: char LINE_FEED
androidx.fragment.app.FragmentTransition$2: java.lang.Object val$exitTransition
com.appspa.update.R$dimen: int abc_seekbar_track_progress_height_material
com.appspa.demo.R$styleable: int XNumberProgressBar_xnpb_unreached_bar_height
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$attr: int dropdownListPreferredItemHeight
androidx.core.app.BundleCompat$BundleCompatBaseImpl: java.lang.reflect.Method sGetIBinderMethod
androidx.loader.R$drawable: int notification_bg_low_pressed
com.appspa.update.R$drawable: int abc_textfield_search_material
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: io.reactivex.SingleObserver downstream
androidx.appcompat.R$id: int accessibility_custom_action_11
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection connection
androidx.appcompat.R$attr: int goIcon
androidx.appcompat.widget.SuggestionsAdapter: android.content.res.ColorStateList mUrlColor
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_DIRTY
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: int limit
androidx.appcompat.R$style: int Widget_AppCompat_Button_Borderless
androidx.appcompat.widget.ListPopupWindow: boolean DEBUG
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver INNER_DISPOSED
androidx.activity.R$styleable: int FontFamilyFont_font
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: io.reactivex.functions.Function keySelector
com.appspa.update.R$string: int space_error_download_permission_denied
io.reactivex.internal.observers.BlockingBaseObserver: java.lang.Throwable error
com.xuexiang.xhttp2.R$styleable: int[] AppCompatTheme
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
com.appspa.update.UpdateManager$2: com.appspa.update.UpdateManager this$0
com.appspa.demo.R$styleable: int Toolbar_titleTextAppearance
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonPositiveText
androidx.appcompat.resources.R$attr: int fontVariationSettings
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_11
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_FROM_FOCUSABLE
com.appspa.update.R$id: int action_image
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Title
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.widget.LinearLayoutCompat: boolean mBaselineAligned
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Body2
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver parent
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
androidx.appcompat.widget.ActivityChooserView$Callbacks: androidx.appcompat.widget.ActivityChooserView this$0
androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment
com.appspa.demo.R$attr: int titleMargin
com.appspa.demo.R$styleable: int ActionMode_backgroundSplit
androidx.drawerlayout.R$styleable: int GradientColor_android_centerY
androidx.activity.R$styleable: int ColorStateListItem_android_color
com.xuexiang.xhttp2.R$attr: int buttonCompat
androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassMap
androidx.appcompat.R$styleable: int[] ListPopupWindow
io.reactivex.internal.functions.Functions$HashSetCallable: io.reactivex.internal.functions.Functions$HashSetCallable[] $VALUES
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: java.util.concurrent.atomic.AtomicReference active
androidx.vectordrawable.animated.R$id: int tag_accessibility_pane_title
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated
com.appspa.demo.R$color: int switch_thumb_material_dark
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator
androidx.activity.R$styleable: int FontFamily_fontProviderCerts
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind SINGLETON
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: io.reactivex.functions.Function onNextMapper
com.appspa.update.R$id: int decor_content_parent
androidx.appcompat.R$id: int notification_background
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_16
androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer
io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: java.lang.Runnable run
io.reactivex.internal.operators.flowable.FlowableSampleTimed: java.util.concurrent.TimeUnit unit
com.appspa.demo.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNLOCKED
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.lang.Integer LEFT_VALUE
androidx.appcompat.R$id: int accessibility_custom_action_10
com.xuexiang.xhttp2.R$styleable: int[] GradientColor
com.xuexiang.xhttp2.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarItemBackground
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: io.reactivex.Observer downstream
okio.HashingSink: java.security.MessageDigest messageDigest
com.appspa.update.R$color: int tooltip_background_light
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: boolean errorOnFewer
io.reactivex.internal.operators.flowable.FlowableCombineLatest: org.reactivestreams.Publisher[] array
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowOperation: io.reactivex.processors.UnicastProcessor w
io.reactivex.internal.operators.parallel.ParallelPeek: io.reactivex.functions.Action onCancel
com.appspa.update.entity.PromptEntity: float mHeightRatio
com.appspa.demo.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.core.R$id: int text2
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: io.reactivex.functions.Function bufferClose
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView
com.appspa.update.R$id: int accessibility_custom_action_2
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
io.reactivex.internal.schedulers.SchedulerPoolFactory: java.util.Map POOLS
com.appspa.update.R$id: int tabMode
com.appspa.update.R$attr: int colorControlNormal
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
androidx.appcompat.R$dimen: int abc_button_padding_horizontal_material
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_XSMALL
androidx.core.app.JobIntentService$CompatWorkEnqueuer: boolean mLaunchingService
androidx.vectordrawable.R$id: int accessibility_custom_action_14
com.appspa.update.R$layout: int abc_popup_menu_header_item_layout
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations
androidx.core.view.GravityCompat: int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.appcompat.widget.ActivityChooserModel: boolean mCanReadHistoricalData
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode mThumbTintMode
io.reactivex.internal.operators.flowable.FlowableCreate$1: int[] $SwitchMap$io$reactivex$BackpressureStrategy
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: java.util.concurrent.atomic.AtomicInteger wip
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: int[] indexes
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL
com.xuexiang.xhttp2.R$styleable: int[] View
androidx.appcompat.view.menu.MenuBuilder: android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Body2
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: io.reactivex.functions.Consumer disposer
okhttp3.internal.http2.Header: okio.ByteString name
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: java.util.concurrent.Callable onCompleteSupplier
com.appspa.demo.R$drawable: int notification_bg
okhttp3.Dispatcher: boolean $assertionsDisabled
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: org.reactivestreams.Subscription upstream
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: int mFlags
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupOrder
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber[] subscribers
com.appspa.update.R$dimen: int highlight_alpha_material_dark
androidx.vectordrawable.R$id: int notification_background
androidx.viewpager.widget.PagerTabStrip: boolean mIgnoreTap
com.appspa.demo.R$styleable: int AppCompatImageView_android_src
com.appspa.demo.R$id: int tag_accessibility_clickable_spans
com.appspa.update.R$styleable: int AppCompatTextView_lineHeight
com.xuexiang.xhttp2.R$id: int tag_unhandled_key_event_manager
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: java.util.Collection buffer
androidx.core.app.NotificationCompat$Style: boolean mSummaryTextSet
androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore
androidx.core.R$color: int secondary_text_default_material_light
com.xuexiang.xhttp2.R$drawable: int abc_ic_star_black_36dp
okhttp3.internal.http2.Http2Connection$6: int val$byteCount
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: boolean delayErrors
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: io.reactivex.functions.Consumer disposer
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$2: com.xuexiang.xhttp2.cache.stategy.BaseStrategy this$0
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
io.reactivex.subjects.ReplaySubject: boolean done
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: int index
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Inverse
androidx.appcompat.R$styleable: int ActionBar_homeLayout
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INFERRED
androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle
com.appspa.update.R$attr: int switchStyle
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundaryObserver: io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver parent
androidx.vectordrawable.animated.R$drawable: int notification_tile_bg
com.appspa.demo.R$styleable: int AppCompatTheme_homeAsUpIndicator
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed: org.reactivestreams.Publisher other
androidx.fragment.R$color: int ripple_material_light
androidx.appcompat.R$dimen: int abc_text_size_display_1_material
androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: java.lang.Object next
androidx.core.app.NotificationCompat$Action$Builder: boolean mAllowGeneratedReplies
androidx.appcompat.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable: java.util.concurrent.TimeUnit unit
com.xuexiang.xhttp2.annotation.NetMethod: int JSON_OBJECT
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: long serialVersionUID
com.google.gson.GsonBuilder: boolean escapeHtmlChars
androidx.fragment.app.FragmentTabHost$DummyTabFactory: android.content.Context mContext
com.appspa.demo.R$dimen: int abc_action_bar_overflow_padding_start_material
com.xuexiang.xhttp2.request.BaseRequest: java.net.Proxy mProxy
androidx.appcompat.R$color: int primary_dark_material_light
com.appspa.update.R$id: int visible
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
com.appspa.update.R$attr: int drawableSize
com.appspa.demo.R$attr: int windowFixedWidthMajor
com.appspa.demo.R$styleable: int ActionBar_contentInsetStart
com.appspa.demo.R$styleable: int ActionBar_subtitle
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther: io.reactivex.ObservableSource other
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: java.lang.Object singleItem
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.ColorStateList value
io.reactivex.internal.operators.completable.CompletableHide: io.reactivex.CompletableSource source
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: java.lang.Object index
com.appspa.update.R$color: int space_button_text_color
androidx.customview.R$styleable: int FontFamilyFont_ttcIndex
com.appspa.demo.R$styleable: int[] FontFamilyFont
com.appspa.demo.R$attr: int actionBarDivider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.cache.RxCache$Builder mRxCacheBuilder
androidx.appcompat.R$layout: int abc_screen_simple
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: io.reactivex.internal.disposables.ArrayCompositeDisposable resources
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: int maxSize
com.appspa.update.R$id: int accessibility_custom_action_9
com.xuexiang.xhttp2.XHttp: okhttp3.OkHttpClient$Builder mOkHttpClientBuilder
io.reactivex.internal.util.MergerBiFunction: java.util.Comparator comparator
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: boolean delayError
io.reactivex.subjects.BehaviorSubject: io.reactivex.subjects.BehaviorSubject$BehaviorDisposable[] TERMINATED
com.appspa.update.R$drawable: int abc_ab_share_pack_mtrl_alpha
okhttp3.internal.http2.Settings: int[] values
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.content.Context mResolvedContext
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver parent
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController val$dialog
androidx.activity.R$styleable: int FontFamilyFont_android_fontStyle
com.appspa.demo.R$styleable: int ActionBar_navigationMode
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.String SHAPE_VECTOR
okhttp3.internal.http1.Http1Codec$ChunkedSink: okio.ForwardingTimeout timeout
androidx.appcompat.view.menu.BaseMenuPresenter: int mId
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: long serialVersionUID
com.appspa.demo.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
io.reactivex.processors.AsyncProcessor: java.lang.Throwable error
com.appspa.demo.R$style: int Widget_AppCompat_ActionButton_Overflow
androidx.vectordrawable.animated.R$drawable: int notification_icon_background
androidx.fragment.app.DialogFragment: int STYLE_NO_FRAME
androidx.appcompat.R$color: int dim_foreground_disabled_material_light
io.reactivex.processors.MulticastProcessor$MulticastSubscription: long serialVersionUID
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
androidx.appcompat.resources.R$styleable: int GradientColor_android_tileMode
com.appspa.demo.R$layout: int abc_action_bar_title_item
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
androidx.appcompat.widget.ActivityChooserView: int mInitialActivityCount
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber parent
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1
com.appspa.update.R$attr: int listPopupWindowStyle
com.xuexiang.xhttp2.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.xuexiang.xhttp2.request.BaseBodyRequest: java.lang.String mJson
androidx.drawerlayout.R$dimen: int notification_action_icon_size
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: io.reactivex.disposables.Disposable upstream
androidx.activity.ImmLeaksCleaner: int NOT_INITIALIAZED
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicReference boundary
androidx.appcompat.resources.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mShownAnchorView
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: java.util.concurrent.atomic.AtomicBoolean shouldConnect
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: long serialVersionUID
com.appspa.demo.R$dimen: int abc_button_padding_vertical_material
androidx.appcompat.view.menu.StandardMenuPopup: android.content.Context mContext
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.app.AlertDialog mPopup
androidx.core.text.BidiFormatter: java.lang.String EMPTY_STRING
io.reactivex.internal.operators.observable.ObservableReduceWithSingle: java.util.concurrent.Callable seedSupplier
com.xuexiang.xhttp2.R$id: int accessibility_action_clickable_span
com.appspa.update.R$id: int none
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.R$styleable: int ViewStubCompat_android_layout
io.reactivex.internal.operators.completable.CompletableErrorSupplier: java.util.concurrent.Callable errorSupplier
androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: long serialVersionUID
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks
androidx.appcompat.R$styleable: int ActionBar_popupTheme
androidx.drawerlayout.R$styleable: int[] GradientColor
com.appspa.demo.R$string: int space_lab_new_version_size
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_divider
androidx.drawerlayout.R$dimen: int compat_notification_large_icon_max_height
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowActionBarOverlay
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber[] subscribers
io.reactivex.internal.operators.single.SingleTimer: long delay
io.reactivex.internal.functions.Functions$Array2Func: io.reactivex.functions.BiFunction f
androidx.collection.ArraySet: int[] INT
com.zhy.http.okhttp.cookie.store.SerializableHttpCookie: okhttp3.Cookie cookie
com.appspa.update.widget.NumberProgressBar: android.graphics.RectF mUnreachedRectF
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableIntervalRange: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.maybe.MaybeErrorCallable: java.util.concurrent.Callable errorSupplier
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: long timeout
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: java.lang.Object mInfo
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: long timeskip
okhttp3.internal.http2.Http2Connection$1: okhttp3.internal.http2.Http2Connection this$0
androidx.viewpager.widget.ViewPager: int mDecorChildCount
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: boolean done
androidx.appcompat.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMajor
com.xuexiang.xhttp2.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.appcompat.widget.TooltipPopup: android.view.View mContentView
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowActionBar
com.xuexiang.xhttp2.model.ApiResult: java.lang.String MSG
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
androidx.activity.R$styleable: int ColorStateListItem_alpha
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: int STATE_RESULT_VALUE
androidx.collection.MapCollections$ArrayIterator: int mOffset
com.appspa.update.widget.NumberProgressBar: int mReachedBarColor
com.appspa.update.R$drawable: int abc_ratingbar_material
androidx.appcompat.R$id: int shortcut
com.xuexiang.xhttp2.R$dimen: int notification_big_circle_margin
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.loader.R$drawable: int notification_bg
com.appspa.update.R$attr: int contentInsetStart
io.reactivex.internal.schedulers.IoScheduler: io.reactivex.internal.schedulers.RxThreadFactory WORKER_THREAD_FACTORY
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.UpdateManager$Builder: java.lang.String apkCacheDir
com.appspa.demo.R$attr: int actionModeCopyDrawable
androidx.fragment.R$id: int right_icon
androidx.vectordrawable.animated.R$styleable: int ColorStateListItem_alpha
androidx.core.util.TimeUtils: char[] sFormatStr
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: io.reactivex.functions.Function mapper
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.AppSpace: com.appspa.update.AppSpace sInstance
io.reactivex.observers.DisposableMaybeObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.util.Map lefts
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: java.util.concurrent.atomic.AtomicReference observers
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.appspa.update.R$attr: int isLightTheme
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: java.util.concurrent.atomic.AtomicReference mainSubscription
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: int bufferSize
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
com.appspa.update.R$id: int search_mag_icon
androidx.customview.R$styleable: int GradientColor_android_endY
androidx.appcompat.app.AlertController$AlertParams: boolean mIsSingleChoice
com.appspa.demo.R$id: int search_badge
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: java.util.Map buffers
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.reflect.ReflectionAccessor accessor
com.google.gson.stream.JsonReader: int limit
androidx.fragment.app.FragmentManagerImpl: int ANIM_STYLE_FADE_ENTER
com.appspa.demo.R$drawable: int btn_checkbox_unchecked_mtrl
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter DOUBLE
androidx.viewpager.widget.PagerTitleStrip: boolean mUpdatingText
androidx.appcompat.R$id: int icon
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: boolean mAccessToken
com.xuexiang.xhttp2.R$drawable: int notification_bg_low
io.reactivex.internal.functions.Functions: io.reactivex.functions.LongConsumer EMPTY_LONG_CONSUMER
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
androidx.appcompat.R$styleable: int SwitchCompat_trackTint
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification: io.reactivex.functions.Function onSuccessMapper
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver: io.reactivex.internal.operators.observable.ObservableWithLatestFrom this$0
androidx.appcompat.R$id: int image
com.appspa.demo.R$style: int AlertDialog_AppCompat_Light
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_STATUS
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.core.provider.FontsContractCompat$Columns: java.lang.String TTC_INDEX
androidx.appcompat.R$layout: int abc_list_menu_item_icon
io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber: io.reactivex.functions.Predicate filter
com.appspa.demo.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.appspa.demo.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
androidx.loader.content.ModernAsyncTask: java.lang.String LOG_TAG
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlNormal
io.reactivex.internal.operators.observable.ObservableRefCount: long timeout
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_UNSPECIFIED
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
okhttp3.Cookie$Builder: java.lang.String value
androidx.fragment.R$dimen: int notification_right_icon_size
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
androidx.appcompat.R$color: int switch_thumb_normal_material_dark
com.appspa.update.R$dimen: int abc_text_size_subtitle_material_toolbar
androidx.loader.content.ModernAsyncTask: int MESSAGE_POST_PROGRESS
com.appspa.demo.R$attr: int gapBetweenBars
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActivityChooserView
com.appspa.update.R$attr: int navigationIcon
androidx.activity.R$id: int info
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.bind.MapTypeAdapterFactory this$0
androidx.appcompat.R$drawable: int abc_cab_background_top_material
com.appspa.update.R$id: int expanded_menu
androidx.core.view.PointerIconCompat: int TYPE_CROSSHAIR
com.google.gson.stream.JsonReader: java.lang.String[] pathNames
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionMode
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner val$this$0
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat sEmptyLocaleList
com.jakewharton.disklrucache.DiskLruCache: java.io.Writer journalWriter
retrofit2.Retrofit: okhttp3.Call$Factory callFactory
io.reactivex.internal.operators.flowable.FlowableCache: io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription[] EMPTY
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listPopupWindowStyle
retrofit2.ParameterHandler$PartMap: java.lang.reflect.Method method
io.reactivex.observers.DisposableCompletableObserver: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: long serialVersionUID
io.reactivex.subjects.CompletableSubject$CompletableDisposable: long serialVersionUID
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_type
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor
com.appspa.update.R$style: int Widget_AppCompat_CompoundButton_CheckBox
okhttp3.CertificatePinner$Pin: java.lang.String pattern
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: org.reactivestreams.Publisher open
com.appspa.demo.R$styleable: int Toolbar_contentInsetEnd
androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth
androidx.appcompat.view.menu.ListMenuItemView: boolean mPreserveIconSpacing
io.reactivex.internal.schedulers.SchedulerWhen: io.reactivex.disposables.Disposable disposable
androidx.appcompat.graphics.drawable.DrawableContainer: boolean DEFAULT_DITHER
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
androidx.viewpager.widget.ViewPager: boolean mCalledSuper
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_DrawerArrowToggle
androidx.appcompat.R$dimen: int notification_right_side_padding_top
com.appspa.update.R$styleable: int DrawerArrowToggle_arrowShaftLength
io.reactivex.internal.schedulers.AbstractDirectTask: java.lang.Thread runner
androidx.viewpager.R$styleable: int[] FontFamily
com.appspa.demo.R$dimen: int abc_edit_text_inset_bottom_material
io.reactivex.internal.operators.maybe.MaybeObserveOn: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$styleable: int Spinner_popupTheme
com.appspa.update.AppSpace: com.appspa.update.proxy.IUpdatePrompter mUpdatePrompter
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
com.appspa.update.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: io.reactivex.internal.disposables.ArrayCompositeDisposable resources
androidx.appcompat.R$attr: int actionBarTheme
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber: io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber parent
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.WeakHashMap mViewsContainingListeners
androidx.appcompat.R$attr: int showDividers
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind SPECIAL
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_ALL_MASK
com.xuexiang.xhttp2.model.HttpParams: java.util.LinkedHashMap fileParamsMap
com.appspa.demo.R$styleable: int[] ActionMenuView
androidx.fragment.R$id: int line1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver parent
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Headline
androidx.versionedparcelable.VersionedParcelStream: int TYPE_STRING_ARRAY
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: android.view.GestureDetector mDetector
com.appspa.update.R$string: int space_error_prompt_activity_destroy
io.reactivex.internal.operators.observable.ObservableSampleTimed: java.util.concurrent.TimeUnit unit
androidx.appcompat.widget.ActivityChooserView: android.widget.FrameLayout mExpandActivityOverflowButton
com.appspa.demo.R$id: int btn_auto_update
io.reactivex.internal.observers.EmptyCompletableObserver: long serialVersionUID
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable: long serialVersionUID
com.appspa.demo.R$styleable: int TextAppearance_android_typeface
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SUB_TEXT
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: io.reactivex.internal.util.AtomicThrowable error
io.reactivex.internal.subscribers.QueueDrainSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$attr: int buttonStyleSmall
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: io.reactivex.functions.Function mapper
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_5
com.xuexiang.xhttp2.R$styleable: int Toolbar_android_gravity
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.parallel.ParallelFromArray: org.reactivestreams.Publisher[] sources
com.appspa.demo.R$style: int Widget_AppCompat_Light_ActionButton
com.appspa.update.proxy.impl.DefaultUpdateDownloader: boolean mIsBound
com.appspa.demo.R$id: int add
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.appspa.update.R$color: int abc_secondary_text_material_light
androidx.appcompat.R$styleable: int AppCompatTheme_panelMenuListTheme
androidx.core.text.util.FindAddress: java.lang.String WS
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: boolean done
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver[] observers
io.reactivex.internal.operators.observable.ObservableSampleTimed: io.reactivex.Scheduler scheduler
androidx.appcompat.app.ActionBarDrawerToggle: androidx.drawerlayout.widget.DrawerLayout mDrawerLayout
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: java.util.concurrent.atomic.AtomicReference queue
com.google.gson.stream.JsonReader: int PEEKED_BEGIN_ARRAY
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemNumericModifiers
com.appspa.demo.R$dimen: int abc_dialog_list_padding_top_no_title
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.R$layout: int abc_activity_chooser_view
androidx.appcompat.R$attr: int backgroundTintMode
okhttp3.internal.http2.Http2Codec: okhttp3.internal.http2.Http2Connection connection
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog
com.appspa.update.R$styleable: int AppCompatTheme_switchStyle
androidx.collection.LruCache: java.util.LinkedHashMap map
com.xuexiang.xhttp2.R$dimen: int abc_text_size_large_material
com.xuexiang.xhttp2.R$attr: int tooltipText
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.lang.String selected
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.lang.Object NULL_KEY
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicInteger windows
com.appspa.demo.R$string: int abc_toolbar_collapse_description
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher: org.reactivestreams.Publisher source
com.appspa.update.UpdateManager: com.appspa.update.proxy.IUpdateProxy mUpdateProxy
androidx.fragment.app.FragmentTabHost$TabInfo: java.lang.String tag
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean done
com.google.gson.internal.Excluder$1: com.google.gson.reflect.TypeToken val$type
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: java.lang.Throwable error
androidx.appcompat.R$string: int abc_activitychooserview_choose_application
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence mDisabledMessage
io.reactivex.internal.operators.flowable.FlowableInternalHelper$TimedReplay: long time
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: androidx.core.app.ActivityCompat$SharedElementCallback21Impl this$0
com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.lang.String key
androidx.appcompat.R$attr: int actionBarDivider
io.reactivex.internal.functions.Functions$Array7Func: io.reactivex.functions.Function7 f
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mLocalMatrix
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: org.reactivestreams.Subscription upstream
okio.ForwardingSource: okio.Source delegate
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: java.util.concurrent.TimeUnit unit
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.lang.Integer RIGHT_CLOSE
com.appspa.demo.R$drawable: int notification_template_icon_low_bg
io.reactivex.internal.operators.observable.ObservableCache: int tailOffset
androidx.appcompat.app.WindowDecorActionBar: boolean mHideOnContentScroll
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle
com.appspa.update.R$id: int async
androidx.appcompat.app.AppCompatDelegateImpl: boolean DEBUG
io.reactivex.internal.operators.maybe.MaybeFromCompletable: io.reactivex.CompletableSource source
com.appspa.demo.R$styleable: int AppCompatTheme_windowMinWidthMajor
io.reactivex.internal.subscriptions.ScalarSubscription: org.reactivestreams.Subscriber subscriber
androidx.appcompat.R$color: int abc_primary_text_material_dark
com.appspa.update.R$drawable: int notification_bg_normal
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: boolean outputFused
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
io.reactivex.internal.operators.completable.CompletableAmb$Amb: io.reactivex.CompletableObserver downstream
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase parent
androidx.lifecycle.Transformations$2: androidx.lifecycle.LiveData mSource
com.xuexiang.xhttp2.R$styleable: int StateListDrawable_android_variablePadding
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: boolean done
androidx.appcompat.resources.R$drawable: int notification_bg_low_pressed
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: boolean allowFatal
okhttp3.internal.http2.Http2Connection$1: int val$streamId
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
com.appspa.update.R$styleable: int MenuItem_android_id
com.appspa.demo.R$attr: int buttonPanelSideLayout
com.appspa.update.R$attr: int colorError
com.appspa.update.R$styleable: int FontFamilyFont_fontVariationSettings
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: io.reactivex.functions.Function leftEnd
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: android.os.Handler handler
io.reactivex.internal.operators.observable.ObservableSequenceEqual: io.reactivex.functions.BiPredicate comparer
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_selectableItemBackground
io.reactivex.internal.operators.maybe.MaybeEqualSingle: io.reactivex.MaybeSource source1
io.reactivex.internal.operators.single.SingleContains$ContainsSingleObserver: io.reactivex.internal.operators.single.SingleContains this$0
com.appspa.update.R$styleable: int Toolbar_titleMarginStart
com.xuexiang.xhttp2.R$style: int Base_ThemeOverlay_AppCompat
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
androidx.appcompat.view.menu.MenuAdapter: int mExpandedIndex
androidx.loader.R$id: int line1
androidx.loader.R$id: int time
com.xuexiang.xhttp2.R$color: int abc_tint_switch_track
io.reactivex.internal.operators.maybe.MaybeZipIterable: io.reactivex.functions.Function zipper
androidx.customview.R$style: int TextAppearance_Compat_Notification_Info
com.xuexiang.xhttp2.R$styleable: int MenuView_android_horizontalDivider
com.appspa.demo.R$color: int abc_color_highlight_material
androidx.core.R$id: int accessibility_custom_action_13
androidx.core.text.BidiFormatter: int mFlags
io.reactivex.internal.operators.observable.ObservableIntervalRange: long period
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher: int prefetch
com.xuexiang.xhttp2.https.HttpsUtils$SSLParams: javax.net.ssl.SSLSocketFactory sSLSocketFactory
androidx.drawerlayout.R$dimen: int notification_media_narrow_margin
okhttp3.internal.cache.CacheInterceptor$1: okhttp3.internal.cache.CacheInterceptor this$0
com.appspa.demo.R$color: int colorPrimaryDark
com.xuexiang.xhttp2.R$id: int content
com.appspa.update.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint mPaint
androidx.fragment.R$id: int accessibility_custom_action_1
com.appspa.update.R$styleable: int AppCompatTextView_autoSizeTextType
com.appspa.update.R$drawable: int abc_ic_star_black_36dp
androidx.core.provider.SelfDestructiveThread$1: androidx.core.provider.SelfDestructiveThread this$0
com.appspa.demo.R$color: int abc_tint_btn_checkable
com.appspa.demo.R$id: int list_item
androidx.core.app.NotificationCompat$WearableExtender: android.app.PendingIntent mDisplayIntent
com.appspa.demo.R$id: int parentPanel
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: java.util.concurrent.atomic.AtomicBoolean stopWindows
androidx.viewpager.widget.PagerTitleStrip: int mTextColor
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: int state
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: boolean cancelled
androidx.fragment.app.FragmentTabHost: int mContainerId
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair: long serialVersionUID
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver INNER_DISPOSED
androidx.appcompat.R$styleable: int SwitchCompat_switchPadding
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped
androidx.core.graphics.drawable.IconCompat: int mInt2
com.appspa.update.widget.UpdateDialog: com.appspa.update.entity.UpdateEntity mUpdateEntity
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent INSTANCE
com.appspa.demo.R$styleable: int TextAppearance_fontVariationSettings
androidx.core.text.BidiFormatter: char LRE
com.appspa.update.R$style: int TextAppearance_AppCompat_Headline
com.xuexiang.xhttp2.R$id: int progress_horizontal
com.appspa.demo.R$color: int space_default_theme_color
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int ActionBar_title
com.appspa.update.R$styleable: int AppCompatTheme_dialogCornerRadius
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mChangingConfigurations
io.reactivex.internal.operators.observable.ObservableFromArray: java.lang.Object[] array
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionBar
androidx.appcompat.R$styleable: int ActionMode_closeItemLayout
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.update.widget.UpdateDialog: com.appspa.update.widget.NumberProgressBar mNumberProgressBar
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer: java.util.Collection b
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
com.appspa.update.R$attr: int windowFixedWidthMajor
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$exitingViews
com.xuexiang.xhttp2.R$drawable: int abc_textfield_search_material
com.appspa.update.R$dimen: int abc_action_bar_elevation_material
androidx.appcompat.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mMessage
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.model.HttpHeaders mCommonHeaders
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
com.xuexiang.xhttp2.R$attr: int alertDialogButtonGroupStyle
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_android_gravity
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_CALL
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: io.reactivex.internal.util.AtomicThrowable errs
com.xuexiang.xhttp2.R$styleable: int CompoundButton_android_button
androidx.viewpager.R$id: int action_image
androidx.core.text.BidiFormatter: char LRM
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: io.reactivex.Observer downstream
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionBar_TabText
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: boolean cancelled
androidx.loader.content.AsyncTaskLoader: android.os.Handler mHandler
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetEpicenterBoundsMethod
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$attr: int arrowShaftLength
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: java.lang.Object resource
com.appspa.update.R$dimen: int abc_text_size_display_3_material
io.reactivex.internal.operators.flowable.FlowableInterval: java.util.concurrent.TimeUnit unit
okhttp3.Response: okhttp3.Response priorResponse
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: long serialVersionUID
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int mOriginalHorizontalOffset
androidx.appcompat.R$styleable: int SwitchCompat_android_textOn
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver fallback
androidx.appcompat.resources.R$drawable: int notification_bg_low
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_13
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber other
com.appspa.demo.R$attr: int collapseIcon
androidx.viewpager.widget.ViewPager: int mMinimumVelocity
androidx.appcompat.R$attr: int logoDescription
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mExpandedItem
androidx.appcompat.R$styleable: int SwitchCompat_thumbTint
androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState
retrofit2.ParameterHandler$QueryName: retrofit2.Converter nameConverter
com.appspa.demo.R$string: int space_error_prompt_unknown
com.xuexiang.xhttp2.R$styleable: int[] PopupWindowBackgroundState
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
retrofit2.RequestFactory$Builder: boolean gotUrl
com.appspa.update.UpdateManager: java.lang.String mUpdateUrl
androidx.appcompat.widget.DropDownListView: int NO_POSITION
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: long serialVersionUID
androidx.core.R$id: int accessibility_custom_action_1
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: boolean mAnimEndCalled
androidx.fragment.app.FragmentTabHost$TabInfo: androidx.fragment.app.Fragment fragment
androidx.viewpager.R$styleable: int ColorStateListItem_android_color
androidx.viewpager.R$dimen: int notification_large_icon_height
okhttp3.Cookie: java.lang.String name
com.appspa.update.R$id: int unchecked
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.appcompat.R$attr: int multiChoiceItemLayout
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDisplayOpts
androidx.collection.LongSparseArray: java.lang.Object[] mValues
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_VALUES_HOLDER
io.reactivex.subjects.AsyncSubject$AsyncDisposable: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.appcompat.widget.ListPopupWindow: int WRAP_CONTENT
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: io.reactivex.functions.BiFunction resultSelector
androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
io.reactivex.internal.operators.observable.ObservableSingleSingle: java.lang.Object defaultValue
androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha
androidx.appcompat.R$string: int abc_menu_shift_shortcut_label
androidx.appcompat.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: java.util.concurrent.atomic.AtomicInteger active
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: io.reactivex.Observer downstream
com.google.gson.Gson: boolean DEFAULT_COMPLEX_MAP_KEYS
okhttp3.CacheControl: boolean onlyIfCached
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody: com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack progressCallBack
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityY
androidx.viewpager.R$id: int actions
androidx.core.view.ViewCompat$2: androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat val$listener
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker: io.reactivex.Scheduler$Worker actualWorker
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
com.appspa.demo.R$id: int scrollIndicatorUp
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber subscriber
androidx.core.graphics.TypefaceCompatUtil: java.lang.String CACHE_FILE_PREFIX
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: long serialVersionUID
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.google.gson.GsonBuilder: boolean complexMapKeySerialization
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: java.lang.Integer RIGHT_VALUE
androidx.appcompat.R$anim: int abc_slide_in_bottom
com.xuexiang.xhttp2.XHttp: int mRetryCount
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter this$0
io.reactivex.internal.subscribers.FutureSubscriber: java.lang.Throwable error
androidx.core.view.ViewCompat: int OVER_SCROLL_NEVER
com.xuexiang.xhttp2.R$styleable: int Toolbar_navigationIcon
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String stringRep
io.reactivex.internal.operators.single.SingleLift: io.reactivex.SingleSource source
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: java.util.Collection value
io.reactivex.internal.subscribers.DeferredScalarSubscriber: long serialVersionUID
com.appspa.demo.R$styleable: int MenuView_android_itemIconDisabledAlpha
androidx.drawerlayout.R$dimen: int notification_large_icon_height
io.reactivex.internal.operators.flowable.FlowableReplay: java.util.concurrent.atomic.AtomicReference current
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.resources.R$string: int status_bar_notification_info_overflow
com.xuexiang.xhttp2.R$attr: int editTextStyle
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.update.R$color: int abc_background_cache_hint_selector_material_light
io.reactivex.internal.subscribers.BoundedSubscriber: io.reactivex.functions.Consumer onNext
io.reactivex.internal.schedulers.SchedulerPoolFactory: java.util.concurrent.atomic.AtomicReference PURGE_THREAD
okhttp3.OkHttpClient: java.util.List protocols
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: java.lang.Integer LEFT_VALUE
com.xuexiang.xhttp2.R$attr: int dialogCornerRadius
com.appspa.demo.R$styleable: int Toolbar_titleMargins
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: int otherState
com.appspa.update.R$style: int Widget_AppCompat_ListPopupWindow
androidx.appcompat.R$layout: int select_dialog_multichoice_material
com.jakewharton.disklrucache.StrictLineReader: java.io.InputStream in
com.appspa.update.R$id: int btn_background_update
com.appspa.demo.R$style: int Base_ThemeOverlay_AppCompat_Dialog
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer: io.reactivex.internal.subscribers.SubscriberResourceWrapper srw
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: io.reactivex.Scheduler scheduler
androidx.appcompat.R$styleable: int ButtonBarLayout_allowStacking
com.appspa.demo.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.core.app.FrameMetricsAggregator: int DRAW_DURATION
androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext
com.appspa.demo.R$style: int Base_Theme_AppCompat_Dialog
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: java.util.List mMessages
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.flowable.FlowableTakeUntil: org.reactivestreams.Publisher other
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: java.lang.ref.WeakReference mParent
com.appspa.update.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: java.lang.Object NEXT_WINDOW
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: boolean outputFused
androidx.appcompat.widget.LinearLayoutCompat: int mTotalLength
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
androidx.appcompat.resources.R$layout: int notification_action
androidx.core.view.DisplayCutoutCompat: java.lang.Object mDisplayCutout
com.appspa.update.widget.NumberProgressBar: android.graphics.Paint mTextPaint
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
androidx.customview.R$styleable: int GradientColor_android_startX
com.appspa.demo.R$color: int material_deep_teal_500
com.appspa.update.R$style: int Theme_AppCompat
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: io.reactivex.SingleSource other
io.reactivex.processors.PublishProcessor$PublishSubscription: long serialVersionUID
com.appspa.update.R$styleable: int[] ButtonBarLayout
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Caption
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: java.util.List windows
retrofit2.adapter.rxjava2.RxJava2CallAdapter: boolean isSingle
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: long maxAge
androidx.fragment.R$id: int accessibility_custom_action_21
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$2: java.lang.Object val$t
androidx.appcompat.app.ToolbarActionBar: java.lang.Runnable mMenuInvalidator
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean delayErrors
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: io.reactivex.functions.Predicate predicate
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$2: com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3 this$1
com.xuexiang.xhttp2.R$id: int scrollView
androidx.appcompat.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.appcompat.R$styleable: int RecycleListView_paddingBottomNoButtons
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: java.lang.Object defaultValue
org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.Class parameterType
io.reactivex.internal.operators.single.SingleDoOnDispose: io.reactivex.SingleSource source
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PEOPLE
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: org.reactivestreams.Subscription upstream
androidx.collection.ArraySet: java.lang.Object[] sTwiceBaseCache
androidx.drawerlayout.widget.DrawerLayout: boolean mDisallowInterceptRequested
com.zhy.http.okhttp.request.CountingRequestBody$CountingSink: com.zhy.http.okhttp.request.CountingRequestBody this$0
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: io.reactivex.disposables.Disposable upstream
androidx.fragment.R$styleable: int GradientColor_android_startX
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeCutDrawable
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_CLEAN
io.reactivex.internal.operators.completable.CompletablePeek: io.reactivex.functions.Action onDispose
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence mPrompt
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: io.reactivex.internal.fuseable.SimplePlainQueue queue
okhttp3.MultipartBody: byte[] CRLF
com.appspa.demo.R$styleable: int RecycleListView_paddingTopNoTitle
com.appspa.demo.R$drawable: int notify_panel_notification_icon_bg
com.appspa.demo.R$styleable: int Toolbar_contentInsetRight
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: java.util.concurrent.atomic.AtomicInteger management
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: org.reactivestreams.Subscriber downstream
com.appspa.update.R$style: int Base_Widget_AppCompat_PopupWindow
com.appspa.update.R$style: int Widget_AppCompat_Light_ListView_DropDown
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver: io.reactivex.subjects.UnicastSubject w
androidx.appcompat.R$dimen: int compat_control_corner_material
com.xuexiang.xhttp2.R$styleable: int View_android_focusable
io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver: io.reactivex.functions.Consumer onSubscribe
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors
org.aspectj.internal.lang.reflect.DeclareParentsImpl: boolean isExtends
com.xuexiang.xhttp2.cache.RxCache$1: java.lang.reflect.Type val$type
com.appspa.update.R$drawable: int abc_ic_search_api_material
androidx.appcompat.R$layout: int support_simple_spinner_dropdown_item
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener
com.appspa.update.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INT_ENUM
androidx.customview.widget.ExploreByTouchHelper: int HOST_ID
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: java.lang.Object value
okhttp3.internal.cache.CacheInterceptor$1: okio.BufferedSink val$cacheBody
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: java.util.Iterator it
androidx.loader.app.LoaderManagerImpl: java.lang.String TAG
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.core.R$layout: int notification_template_icon_group
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
io.reactivex.internal.operators.flowable.FlowableUsing: boolean eager
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction$WorkerCompletable: io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction action
androidx.appcompat.R$attr: int colorControlActivated
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: org.reactivestreams.Subscriber downstream
com.appspa.update.R$attr: int initialActivityCount
androidx.fragment.app.FragmentHostCallback: int mWindowAnimations
io.reactivex.internal.operators.flowable.FlowableTimeout: org.reactivestreams.Publisher other
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int listPreferredItemPaddingEnd
com.appspa.update.R$styleable: int GradientColor_android_centerY
com.appspa.demo.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.appspa.update.R$anim: int spa_app_window_in
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.flowable.FlowableElementAt: boolean errorOnFewer
androidx.appcompat.widget.RtlSpacingHelper: int mLeft
androidx.fragment.app.FragmentManagerImpl: java.lang.String TARGET_STATE_TAG
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: java.lang.Throwable error
androidx.appcompat.widget.ActionBarContextView: android.view.View mClose
androidx.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.xuexiang.xhttp2.R$string: int abc_capital_off
androidx.appcompat.R$id: int search_go_btn
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
androidx.appcompat.R$attr: int autoSizeTextType
okhttp3.Protocol: java.lang.String protocol
androidx.appcompat.view.menu.MenuItemImpl: int mId
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher$RailSubscription: int j
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier[] $VALUES
androidx.customview.R$drawable: int notification_action_background
com.xuexiang.xhttp2.R$style: int Animation_AppCompat_Dialog
com.appspa.demo.R$id: int FUNCTION
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.app.job.JobWorkItem mJobWork
io.reactivex.internal.operators.single.SingleUnsubscribeOn: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_thumbTintMode
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: long serialVersionUID
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer ON_ERROR_MISSING
androidx.appcompat.R$id: int notification_main_column
com.appspa.update.R$color: int material_grey_900
com.appspa.demo.R$attr: int listPreferredItemHeightLarge
com.appspa.demo.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
androidx.loader.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.R$attr: int paddingStart
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.subjects.CompletableSubject: java.util.concurrent.atomic.AtomicBoolean once
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: java.io.IOException thrownException
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Display3
io.reactivex.internal.operators.flowable.FlowableAllSingle: io.reactivex.Flowable source
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME
com.appspa.demo.R$drawable: int abc_seekbar_thumb_material
androidx.loader.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.appspa.demo.R$style: int TextAppearance_AppCompat_Display1
com.appspa.update.R$style: int Base_Widget_AppCompat_ButtonBar
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
com.appspa.update.R$dimen: int abc_disabled_alpha_material_dark
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_tileMode
com.appspa.demo.R$color: int button_material_dark
io.reactivex.processors.ReplayProcessor$Node: long serialVersionUID
io.reactivex.internal.schedulers.ComputationScheduler: int MAX_THREADS
com.appspa.demo.R$styleable: int AppCompatTheme_colorAccent
com.appspa.update.R$id: int accessibility_custom_action_28
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: boolean delayError
org.aspectj.runtime.reflect.Factory: java.lang.Class class$java$lang$ClassNotFoundException
com.xuexiang.xhttp2.R$styleable: int[] ActionMenuView
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.R$styleable: int SearchView_layout
androidx.appcompat.R$color: int background_floating_material_dark
androidx.appcompat.R$styleable: int SearchView_closeIcon
com.xuexiang.xhttp2.R$attr: int ratingBarStyle
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String KEY_FLAGS
com.appspa.update.R$drawable: int abc_btn_default_mtrl_shape
androidx.appcompat.R$styleable: int MenuItem_android_alphabeticShortcut
androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray mWrapped
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset
com.appspa.update.R$styleable: int Toolbar_navigationIcon
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: int state
androidx.core.app.FrameMetricsAggregator: int DELAY_DURATION
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: boolean done
com.appspa.demo.R$styleable: int MenuView_preserveIconSpacing
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: java.lang.Object item
io.reactivex.internal.operators.single.SingleTimer: io.reactivex.Scheduler scheduler
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabView
com.xuexiang.xhttp2.R$color: int bright_foreground_inverse_material_dark
io.reactivex.internal.subscribers.LambdaSubscriber: io.reactivex.functions.Consumer onSubscribe
com.xuexiang.xhttp2.R$styleable: int[] AlertDialog
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.CharSequence mBigText
androidx.core.graphics.PathSegment: android.graphics.PointF mStart
androidx.core.widget.TextViewCompat$OreoCallback: android.view.ActionMode$Callback mCallback
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupMenu
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node stack
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: int STATE_RESULT_VALUE
retrofit2.ParameterHandler$HeaderMap: int p
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
com.appspa.demo.R$layout: int abc_action_bar_up_container
com.appspa.update.R$anim: int spa_app_window_out
androidx.core.provider.FontsContractCompat: int RESULT_CODE_WRONG_CERTIFICATES
androidx.appcompat.R$attr: int arrowHeadLength
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver$OnComplete: io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver this$1
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.widget.AppCompatSpinner this$0
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: int size
retrofit2.ParameterHandler$Field: boolean encoded
androidx.appcompat.app.TwilightCalculator: int NIGHT
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteSelector routeSelector
io.reactivex.internal.functions.Functions$ToMultimapKeyValueSelector: io.reactivex.functions.Function collectionFactory
androidx.loader.content.AsyncTaskLoader: java.util.concurrent.Executor mExecutor
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemActionViewLayout
androidx.appcompat.app.TwilightCalculator: long sunset
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: int NANOS_PER_MS
androidx.core.view.PointerIconCompat: int TYPE_NULL
com.xuexiang.xhttp2.R$dimen: int abc_dialog_title_divider_material
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: io.reactivex.internal.fuseable.SimpleQueue queue
com.appspa.update.R$id: int accessibility_custom_action_20
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_REPEAT_MODE
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: io.reactivex.disposables.CompositeDisposable set
androidx.fragment.R$id: int action_image
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] mMetrics
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.content.Context mContext
com.appspa.demo.R$layout: int abc_expanded_menu_layout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
okhttp3.CacheControl$Builder: boolean onlyIfCached
androidx.vectordrawable.R$styleable: int ColorStateListItem_android_color
androidx.appcompat.R$color: int switch_thumb_disabled_material_dark
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe: io.reactivex.MaybeSource other
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.InterTypeMethodDeclaration[] itdMethods
androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator: java.lang.Object buf
com.appspa.demo.R$drawable: int abc_text_select_handle_left_mtrl_light
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE
androidx.core.view.ViewCompat: java.lang.reflect.Method sDispatchFinishTemporaryDetach
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector: int bufferSize
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable: io.reactivex.MaybeSource source
androidx.core.app.TaskStackBuilder: android.content.Context mSourceContext
com.xuexiang.xhttp2.R$id: int src_over
com.xuexiang.xhttp2.exception.ApiException: int mCode
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mTitle
androidx.drawerlayout.widget.DrawerLayout: int PEEK_DELAY
androidx.core.R$dimen: int notification_media_narrow_margin
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapter delegate
retrofit2.HttpServiceMethod: retrofit2.RequestFactory requestFactory
com.appspa.demo.R$string: int space_error_check_ignored_version
com.appspa.demo.R$styleable: int AppCompatImageView_srcCompat
retrofit2.HttpServiceMethod: okhttp3.Call$Factory callFactory
com.xuexiang.xhttp2.R$styleable: int Toolbar_maxButtonHeight
androidx.drawerlayout.R$attr: int fontStyle
com.appspa.update.R$id: int tag_accessibility_clickable_spans
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActionBar_TabText
androidx.appcompat.R$attr: int thumbTint
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: boolean delayError
com.xuexiang.xhttp2.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
androidx.collection.LruCache: int evictionCount
com.xuexiang.xhttp2.R$styleable: int ActionBar_progressBarPadding
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: java.util.concurrent.atomic.AtomicLong requested
androidx.core.view.MotionEventCompat: int AXIS_Y
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayFunction: io.reactivex.functions.Function selector
okhttp3.internal.http2.Http2Connection: long degradedPongDeadlineNs
com.appspa.demo.R$styleable: int DrawerArrowToggle_thickness
androidx.core.R$dimen: int notification_big_circle_margin
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: io.reactivex.Observer observer
com.appspa.update.service.DownloadService$FileDownloadCallBack: int mOldRate
io.reactivex.observers.BaseTestConsumer: java.util.concurrent.CountDownLatch done
okhttp3.Response: okhttp3.CacheControl cacheControl
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_FOCUS
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_colorControlHighlight
androidx.core.app.NotificationCompat: int BADGE_ICON_SMALL
com.appspa.update.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
org.aspectj.internal.lang.reflect.DeclareParentsImpl: org.aspectj.lang.reflect.TypePattern targetTypesPattern
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.LayoutInflater mInflater
com.appspa.demo.R$drawable: int abc_btn_radio_to_on_mtrl_000
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.widget.CompoundButton mView
androidx.viewpager.R$dimen: int notification_right_side_padding_top
okhttp3.internal.http1.Http1Codec$FixedLengthSource: okhttp3.internal.http1.Http1Codec this$0
androidx.fragment.app.BackStackRecord: java.lang.String TAG
androidx.core.app.NotificationCompat: int FLAG_ONGOING_EVENT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEXT
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$attr: int selectableItemBackgroundBorderless
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: io.reactivex.functions.BiPredicate isEqual
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int[] mThemeAttrs
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Bundle menuState
androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility
com.xuexiang.xhttp2.cookie.CookieManager: com.xuexiang.xhttp2.cookie.PersistentCookieStore mCookieStore
com.appspa.demo.R$dimen: int notification_subtext_size
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: long serialVersionUID
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: int size
androidx.activity.R$id: int accessibility_custom_action_30
com.appspa.update.R$styleable: int ActionBar_popupTheme
com.google.gson.stream.JsonReader: int NUMBER_CHAR_DIGIT
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int VALUE_TYPE_PATH
com.google.gson.internal.bind.JsonTreeReader: java.lang.String[] pathNames
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter BIG_DECIMAL
com.appspa.update.R$attr: int searchViewStyle
com.zhy.http.okhttp.request.PostFormRequest$1: com.zhy.http.okhttp.request.PostFormRequest this$0
androidx.core.app.NotificationCompatJellybean: boolean sExtrasFieldAccessFailed
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText1
androidx.fragment.R$id: int time
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node header
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: boolean won
androidx.drawerlayout.R$styleable: int GradientColor_android_endY
androidx.viewpager.widget.ViewPager: int mFlingDistance
com.appspa.demo.entity.CustomResult$PatchInfo: java.lang.String md5
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: java.lang.Object v1
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver: long serialVersionUID
io.reactivex.internal.functions.Functions$HashSetCallable: io.reactivex.internal.functions.Functions$HashSetCallable INSTANCE
androidx.core.provider.FontsContractCompat$4$7: androidx.core.provider.FontsContractCompat$4 this$0
com.appspa.update.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
okio.GzipSink: java.util.zip.CRC32 crc
androidx.viewpager.widget.PagerAdapter: android.database.DataSetObservable mObservable
okhttp3.internal.http2.Http2Connection$2: int val$streamId
androidx.vectordrawable.R$id: int tag_accessibility_pane_title
okhttp3.internal.http1.Http1Codec$ChunkedSource: okhttp3.HttpUrl url
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar
androidx.appcompat.widget.SuggestionsAdapter: androidx.appcompat.widget.SearchView mSearchView
androidx.appcompat.R$anim: int abc_popup_enter
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: io.reactivex.internal.disposables.SequentialDisposable task
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String ACTION_INSTALL_SHORTCUT
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Body2
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory STRING_FACTORY
com.xuexiang.xhttp2.request.BaseRequest: long mReadTimeOut
androidx.core.view.WindowCompat: int FEATURE_ACTION_MODE_OVERLAY
org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind[] $VALUES
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: long index
androidx.appcompat.R$id: int icon_group
com.xuexiang.xhttp2.R$color: int abc_hint_foreground_material_light
androidx.core.text.util.FindAddress: int MIN_ADDRESS_WORDS
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: io.reactivex.internal.fuseable.SimpleQueue queue
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher: boolean delayErrors
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
com.appspa.update.R$id: int action_mode_bar_stub
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: org.reactivestreams.Publisher fallback
com.appspa.update.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
androidx.core.provider.FontsContractCompat$4$3: androidx.core.provider.FontsContractCompat$4 this$0
androidx.core.provider.SelfDestructiveThread$3: androidx.core.provider.SelfDestructiveThread this$0
io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite[] $VALUES
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnComplete: io.reactivex.Observer observer
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR
androidx.appcompat.R$id: int submenuarrow
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: org.reactivestreams.Publisher source
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mTargetBounds
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig
io.reactivex.internal.subscribers.LambdaSubscriber: io.reactivex.functions.Consumer onNext
org.aspectj.lang.reflect.NoSuchPointcutException: java.lang.String name
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_PROVIDER_NOT_FOUND
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary: org.reactivestreams.Publisher boundary
com.xuexiang.xhttp2.annotation.NetMethod: int URL_GET
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: boolean done
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: boolean fusionMode
com.appspa.demo.R$style: int Widget_AppCompat_AutoCompleteTextView
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_26
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean mIsLongpressEnabled
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: long index
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor
io.reactivex.internal.functions.Functions$JustValue: java.lang.Object value
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2
com.xuexiang.xhttp2.R$attr: int trackTint
androidx.collection.SimpleArrayMap: int CACHE_SIZE
com.appspa.update.R$attr: int textAppearanceLargePopupMenu
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_SearchView_ActionBar
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_SeekBar
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
androidx.viewpager.R$color: int ripple_material_light
com.appspa.demo.R$styleable: int Toolbar_subtitle
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: java.util.concurrent.atomic.AtomicInteger waiting
io.reactivex.internal.operators.observable.ObservableWindowTimed: long timeskip
com.appspa.demo.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.xuexiang.xhttp2.cache.RxCache$Builder: java.io.File diskDir
com.appspa.demo.R$layout: int abc_activity_chooser_view
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: boolean done
com.xuexiang.xhttp2.R$id: int normal
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransitionImpl val$impl
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int RecycleListView_paddingBottomNoButtons
okhttp3.MultipartBody: byte[] COLONSPACE
io.reactivex.internal.util.ConnectConsumer: io.reactivex.disposables.Disposable disposable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_CHARACTER
androidx.appcompat.widget.AppCompatProgressBarHelper: android.widget.ProgressBar mView
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: boolean nonScheduledRequests
com.appspa.demo.R$styleable: int DrawerArrowToggle_spinBars
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName
com.appspa.update.R$attr: int showTitle
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: int limit
androidx.core.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots
com.appspa.update.entity.UpdateEntity: java.lang.String mCacheDir
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: boolean cancelled
com.google.gson.stream.JsonScope: int EMPTY_DOCUMENT
androidx.collection.CircularArray: int mTail
com.appspa.demo.R$id: int tag_unhandled_key_listeners
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable NEVER
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_alertDialogCenterButtons
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] $VALUES
androidx.appcompat.R$string: int abc_menu_delete_shortcut_label
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
com.appspa.demo.R$attr: int alphabeticModifiers
androidx.vectordrawable.R$id: int accessibility_custom_action_3
okhttp3.internal.cache.DiskLruCache$2: boolean $assertionsDisabled
okhttp3.internal.ws.RealWebSocket: java.util.Random random
com.appspa.update.R$drawable: int abc_btn_colored_material
androidx.appcompat.R$styleable: int GradientColor_android_endColor
com.appspa.demo.R$drawable: int abc_textfield_default_mtrl_alpha
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: io.reactivex.Scheduler$Worker worker
io.reactivex.internal.operators.observable.ObservableCombineLatest: java.lang.Iterable sourcesIterable
androidx.appcompat.widget.SearchView: int mSuggestionCommitIconResId
com.xuexiang.xhttp2.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.xuexiang.xhttp2.R$id: int listMode
androidx.activity.R$color: int notification_icon_bg_color
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onSingleHandler
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: boolean eager
androidx.appcompat.R$attr: int textAppearanceSmallPopupMenu
com.xuexiang.xhttp2.R$layout: int abc_screen_simple
androidx.vectordrawable.R$id: int dialog_button
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnNext: org.reactivestreams.Subscriber subscriber
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
com.appspa.demo.R$drawable: int abc_ic_star_black_16dp
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity2ParamsMethod
android.support.v4.os.ResultReceiver$MyRunnable: android.os.Bundle mResultData
com.appspa.update.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.xuexiang.xhttp2.R$drawable: int abc_list_selector_background_transition_holo_dark
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_DEFAULT
androidx.core.view.PointerIconCompat: int TYPE_ALL_SCROLL
com.appspa.demo.R$color: int abc_search_url_text
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: long timespan
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: java.util.concurrent.atomic.AtomicReference latest
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
io.reactivex.internal.operators.observable.ObservableGroupBy: int bufferSize
com.appspa.demo.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.appspa.update.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_menuCategory
com.appspa.demo.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.zhy.http.okhttp.builder.PostFormBuilder: java.util.List files
com.appspa.update.entity.UpdateEntity: boolean mIsIgnorable
com.google.gson.internal.Streams$AppendableWriter: java.lang.Appendable appendable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: long serialVersionUID
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: boolean disposed
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
androidx.appcompat.R$style: int TextAppearance_AppCompat_Large
androidx.appcompat.R$style: int Widget_AppCompat_DrawerArrowToggle
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
androidx.fragment.R$id: int accessibility_custom_action_19
com.xuexiang.xhttp2.R$color: int abc_btn_colored_text_material
com.appspa.demo.R$dimen: int space_close_line_height
androidx.appcompat.R$dimen: int abc_cascading_menus_min_smallest_width
com.appspa.demo.R$style: int Widget_AppCompat_CompoundButton_Switch
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: long serialVersionUID
com.appspa.update.R$styleable: int AppCompatTheme_actionModeBackground
com.xuexiang.xhttp2.cache.RxCache$Builder: android.content.Context context
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementReturnTransition
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets
com.appspa.update.R$color: int error_color_material_light
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: io.reactivex.functions.BiConsumer collector
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
androidx.loader.R$styleable: int GradientColor_android_centerY
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MESSAGES
androidx.fragment.R$id: int icon_group
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: long mLatestTimestamp
androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY
com.appspa.update.R$style: int TextAppearance_AppCompat_Display4
com.xuexiang.xhttp2.R$dimen: int abc_dialog_padding_material
androidx.appcompat.app.TwilightCalculator: float C1
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mContentIntent
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
com.xuexiang.xhttp2.cache.RxCache: int appVersion
com.google.gson.internal.ConstructorConstructor$10: com.google.gson.internal.ConstructorConstructor this$0
androidx.appcompat.R$attr: int drawableTint
io.reactivex.internal.operators.observable.ObservableDoOnEach: io.reactivex.functions.Consumer onNext
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: io.reactivex.Scheduler$Worker worker
com.appspa.demo.R$drawable: int spa_icon_app_update
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle: io.reactivex.SingleObserver observer
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
io.reactivex.Scheduler$DisposeTask: java.lang.Thread runner
io.reactivex.internal.schedulers.AbstractDirectTask: java.lang.Runnable runnable
com.appspa.update.R$color: int material_grey_600
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingLeft
com.appspa.update.R$attr: int actionOverflowMenuStyle
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: io.reactivex.functions.BiFunction zipper
io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver: java.util.concurrent.atomic.AtomicReference target
com.appspa.demo.R$attr: int multiChoiceItemLayout
com.appspa.update.R$attr: int activityChooserViewStyle
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: long serialVersionUID
okhttp3.internal.connection.RealConnection: boolean noNewStreams
okio.Okio$2: java.io.InputStream val$in
com.xuexiang.xhttp2.XHttp: java.io.File mCacheDirectory
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCacheClazzFetched
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: io.reactivex.internal.util.AtomicThrowable errors
androidx.appcompat.R$styleable: int FontFamily_fontProviderCerts
androidx.core.graphics.ColorUtils: double XYZ_KAPPA
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence mLongLabel
androidx.loader.content.ModernAsyncTask: java.util.concurrent.atomic.AtomicBoolean mTaskInvoked
io.reactivex.internal.schedulers.SchedulerWhen: io.reactivex.disposables.Disposable DISPOSED
io.reactivex.internal.operators.single.SingleFlatMapPublisher: io.reactivex.functions.Function mapper
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
com.appspa.demo.R$drawable: int abc_list_pressed_holo_light
androidx.appcompat.widget.SwitchCompat: int mSwitchPadding
com.xuexiang.xhttp2.R$attr: int alertDialogCenterButtons
androidx.appcompat.R$styleable: int AppCompatTheme_listDividerAlertDialog
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.ArrayMap mDelegates
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_INTERACTION_END
com.appspa.demo.R$id: int src_in
retrofit2.OkHttpCall$1: retrofit2.OkHttpCall this$0
com.appspa.update.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.xuexiang.xhttp2.R$color: int material_deep_teal_200
com.appspa.demo.R$attr: int iconTint
com.appspa.update.R$style: int Widget_AppCompat_ListView_Menu
androidx.appcompat.R$layout: int select_dialog_singlechoice_material
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe: int maxConcurrency
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog
androidx.appcompat.resources.R$dimen: int notification_large_icon_height
androidx.core.graphics.drawable.IconCompat: java.lang.String EXTRA_TINT_MODE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$id: int tag_screen_reader_focusable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String TRANSITION_MISSING_FROM_TO_ID
androidx.core.R$drawable: int notification_template_icon_low_bg
androidx.fragment.R$styleable: int GradientColor_android_gradientRadius
androidx.viewpager.R$id: int title
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_30
com.appspa.demo.R$attr: int navigationContentDescription
com.google.gson.Gson: java.util.List factories
androidx.viewpager.R$drawable: int notification_bg_normal
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle: io.reactivex.functions.LongConsumer onRequest
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: boolean done
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$attr: int listChoiceIndicatorMultipleAnimated
androidx.activity.R$id: int tag_transition_group
androidx.appcompat.widget.ListPopupWindow: int mDropDownHeight
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: long serialVersionUID
androidx.vectordrawable.R$dimen: int notification_action_text_size
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: boolean once
io.reactivex.internal.operators.completable.CompletableUsing: io.reactivex.functions.Function completableFunction
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: io.reactivex.disposables.Disposable upstream
androidx.core.view.PointerIconCompat: int TYPE_DEFAULT
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_WHITELISTED
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_DESCRIPTION_KEY
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: io.reactivex.CompletableObserver downstream
androidx.core.app.NotificationCompat$BigPictureStyle: boolean mBigLargeIconSet
com.appspa.demo.R$styleable: int AppCompatTheme_panelBackground
androidx.core.app.JobIntentService$CompatWorkItem: android.content.Intent mIntent
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_2
androidx.appcompat.R$id: int action_bar_activity_content
com.appspa.update.R$color: int highlighted_text_material_dark
androidx.appcompat.R$styleable: int Toolbar_title
com.appspa.demo.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayFunction: io.reactivex.Scheduler scheduler
androidx.appcompat.R$dimen: int abc_select_dialog_padding_start_material
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode
androidx.appcompat.widget.LinearLayoutCompat: int VERTICAL
androidx.appcompat.R$attr: int fontProviderAuthority
com.appspa.demo.R$attr: int textLocale
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: int position
com.appspa.demo.R$style: int Base_Widget_AppCompat_ImageButton
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: io.reactivex.functions.Action onFinally
io.reactivex.internal.operators.flowable.FlowableSampleTimed: long period
com.appspa.update.R$attr: int fontVariationSettings
io.reactivex.subjects.ReplaySubject$TimedNode: long serialVersionUID
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mTagKey
io.reactivex.processors.MulticastProcessor$MulticastSubscription: io.reactivex.processors.MulticastProcessor parent
com.xuexiang.xhttp2.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.appspa.demo.R$color: int background_floating_material_dark
androidx.customview.widget.ViewDragHelper: float mMaxVelocity
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: java.util.List ws
androidx.appcompat.R$color: int primary_material_light
com.appspa.demo.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.widget.ActivityChooserModel: int DEFAULT_HISTORY_MAX_LENGTH
androidx.viewpager.widget.ViewPager: int mDrawingOrder
androidx.loader.R$layout: int notification_template_icon_group
androidx.core.provider.FontsContractCompat$4: android.content.Context val$appContext
com.appspa.demo.R$id: int action_mode_bar_stub
androidx.fragment.app.FragmentState: boolean mRemoving
androidx.vectordrawable.R$drawable: int notification_bg_normal
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.versionedparcelable.VersionedParcelStream: int TYPE_BOOLEAN_ARRAY
com.xuexiang.xhttp2.R$drawable: int abc_tab_indicator_mtrl_alpha
com.xuexiang.xhttp2.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.appspa.demo.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.appspa.demo.R$layout: int abc_popup_menu_header_item_layout
androidx.appcompat.R$layout: int abc_action_mode_close_item_material
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Medium_Inverse
androidx.fragment.R$id: int action_divider
io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.observable.ObservableCache: long size
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
io.reactivex.internal.operators.observable.ObservableTimeInterval: java.util.concurrent.TimeUnit unit
androidx.loader.R$styleable: int FontFamilyFont_fontStyle
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber[] TERMINATED
androidx.core.app.NotificationCompat: java.lang.String EXTRA_HIDDEN_CONVERSATION_TITLE
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuView mMenuView
androidx.fragment.app.Fragment: boolean mDeferStart
androidx.annotation.Dimension: int PX
com.appspa.demo.R$color: int primary_text_default_material_dark
androidx.core.util.Pools$SimplePool: int mPoolSize
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: boolean restartTimerOnMaxSize
com.appspa.demo.R$styleable: int MenuItem_tooltipText
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver: java.lang.Object last
com.appspa.demo.R$color: int material_blue_grey_900
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: long serialVersionUID
com.appspa.update.R$attr: int layout
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Title
androidx.drawerlayout.widget.DrawerLayout: boolean mChildrenCanceledTouch
androidx.appcompat.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.appspa.demo.R$attr: int subtitleTextAppearance
retrofit2.ParameterHandler$QueryMap: java.lang.reflect.Method method
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: io.reactivex.functions.Consumer onDrop
androidx.appcompat.widget.SwitchCompat: int THUMB_ANIMATION_DURATION
com.appspa.update.proxy.impl.DefaultUpdateChecker$2: java.lang.String val$url
androidx.core.app.FrameMetricsAggregator: int ANIMATION_INDEX
com.appspa.update.R$styleable: int ViewBackgroundHelper_android_background
androidx.vectordrawable.R$dimen: int compat_notification_large_icon_max_height
com.appspa.demo.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: io.reactivex.functions.Function rightEnd
io.reactivex.internal.operators.flowable.FlowableCreate$ErrorAsyncEmitter: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: io.reactivex.internal.util.AtomicThrowable errors
androidx.core.app.NotificationCompatBuilder: androidx.core.app.NotificationCompat$Builder mBuilderCompat
androidx.vectordrawable.animated.R$layout: int notification_template_part_chronometer
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: io.reactivex.internal.util.AtomicThrowable error
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
org.aspectj.lang.reflect.NoSuchAdviceException: java.lang.String name
io.reactivex.internal.operators.observable.ObservableBufferTimed: long timeskip
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnError: io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber this$0
androidx.core.app.JobIntentService$CompatWorkEnqueuer: android.content.Context mContext
androidx.core.app.RemoteInput: java.lang.String EXTRA_RESULTS_SOURCE
com.xuexiang.xhttp2.R$attr: int iconifiedByDefault
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.observable.ObservableAnySingle: io.reactivex.ObservableSource source
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold
android.support.v4.os.ResultReceiver: boolean mLocal
io.reactivex.internal.observers.FutureObserver: java.lang.Object value
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast: long serialVersionUID
com.appspa.update.R$color: int abc_search_url_text_pressed
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
androidx.appcompat.R$attr: int arrowShaftLength
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: java.util.ArrayList mActivities
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mCommitRunnables
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence mHintText
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: java.util.concurrent.atomic.AtomicReference queue
com.xuexiang.xhttp2.request.BaseRequest: java.lang.String mUrl
com.appspa.update.R$dimen: int notification_large_icon_height
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView this$0
io.reactivex.internal.schedulers.RxThreadFactory: long serialVersionUID
com.xuexiang.xhttp2.R$attr: int windowFixedHeightMinor
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: int retries
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: boolean isAsync
com.appspa.update.R$style: int Widget_AppCompat_ProgressBar_Horizontal
androidx.appcompat.R$attr: int firstBaselineToTopHeight
androidx.drawerlayout.R$drawable: int notify_panel_notification_icon_bg
com.appspa.demo.R$style: int Widget_Compat_NotificationActionText
androidx.appcompat.R$attr: int elevation
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: int index
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.InterTypeFieldDeclaration[] itdFields
io.reactivex.observers.ResourceMaybeObserver: io.reactivex.internal.disposables.ListCompositeDisposable resources
io.reactivex.internal.operators.single.SingleAmb: io.reactivex.SingleSource[] sources
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful
com.appspa.demo.R$style: int Theme_AppCompat_Light_NoActionBar
androidx.appcompat.R$dimen: int tooltip_vertical_padding
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_BOOLEAN
androidx.fragment.app.Fragment$AnimationInfo: boolean mEnterTransitionPostponed
androidx.appcompat.widget.ActionMenuPresenter$SavedState: android.os.Parcelable$Creator CREATOR
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SMALL_ICON
androidx.core.provider.FontsContractCompat$TypefaceResult: int mResult
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: io.reactivex.subjects.UnicastSubject window
com.google.gson.stream.JsonReader: int[] pathIndices
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable: io.reactivex.Flowable source
com.xuexiang.xhttp2.XHttp: java.lang.String mBaseUrl
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.appcompat.R$drawable: int abc_edit_text_material
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: io.reactivex.functions.BiFunction combiner
androidx.appcompat.resources.R$id: int text2
androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback
io.reactivex.internal.operators.observable.ObservableWindowTimed: int bufferSize
retrofit2.RequestFactory$Builder: boolean isKotlinSuspendFunction
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterConditionalSubscriber: io.reactivex.functions.Consumer onAfterNext
com.xuexiang.xhttp2.https.HttpsUtils$SSLParams: javax.net.ssl.X509TrustManager trustManager
io.reactivex.android.schedulers.AndroidSchedulers$MainHolder: io.reactivex.Scheduler DEFAULT
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState
androidx.appcompat.widget.SuggestionsAdapter: android.content.Context mProviderContext
androidx.vectordrawable.R$attr: int font
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight
io.reactivex.internal.operators.maybe.MaybeCache: io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable[] TERMINATED
io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor$ReplaySubscription[] TERMINATED
okhttp3.Address: okhttp3.HttpUrl url
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: long serialVersionUID
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarItemBackground
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_TABS
com.appspa.update.entity.UpdateError$ERROR: int FAIL_PATCH
androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: io.reactivex.internal.fuseable.ConditionalSubscriber downstream
retrofit2.RequestFactory: boolean isMultipart
androidx.appcompat.R$styleable: int CompoundButton_android_button
com.appspa.update.R$style: int Theme_AppCompat_Light_DialogWhenLarge
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$styleable: int AppCompatTheme_listPopupWindowStyle
io.reactivex.internal.operators.observable.ObservableInterval: long initialDelay
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String TAG
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: io.reactivex.Observer downstream
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: io.reactivex.functions.Consumer disposer
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: long serialVersionUID
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_OPTS_KEY
com.xuexiang.xhttp2.R$drawable: int abc_btn_check_material_anim
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mTransitionEnded
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Rect mDstRect
androidx.fragment.app.FragmentTransaction: int OP_DETACH
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.graphics.Rect mVisibleRect
androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled
com.appspa.demo.R$dimen: int compat_notification_large_icon_max_width
com.xuexiang.xhttp2.R$id: int tabMode
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$styleable: int SearchView_closeIcon
com.appspa.demo.R$style: int TextAppearance_AppCompat_Headline
com.appspa.demo.R$id: int decor_content_parent
okhttp3.internal.http2.Http2Codec: okhttp3.Interceptor$Chain chain
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION
androidx.appcompat.widget.LinearLayoutCompat: int INDEX_FILL
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type lowerBound
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling
org.reactivestreams.FlowAdapters$FlowToReactiveSubscription: org.reactivestreams.Subscription reactiveStreams
io.reactivex.internal.operators.flowable.FlowableCombineLatest: io.reactivex.functions.Function combiner
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: java.util.Iterator iterator
io.reactivex.internal.subscriptions.SubscriptionArbiter: java.util.concurrent.atomic.AtomicLong missedRequested
androidx.drawerlayout.R$dimen: int compat_button_padding_horizontal_material
androidx.core.app.NotificationCompat$CarExtender: java.lang.String KEY_TEXT
okhttp3.CacheControl: boolean mustRevalidate
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: long emitted
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderFetchStrategy
com.appspa.demo.R$styleable: int StateListDrawable_android_constantSize
com.appspa.update.R$styleable: int AppCompatTextView_drawableTopCompat
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: boolean cancelled
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
com.appspa.update.R$dimen: int notification_big_circle_margin
androidx.appcompat.widget.ActivityChooserModel: android.content.Context mContext
androidx.appcompat.R$style: int TextAppearance_AppCompat_Button
androidx.appcompat.widget.SwitchCompat: int SERIF
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: io.reactivex.internal.util.AtomicThrowable errors
com.zhy.http.okhttp.OkHttpUtils$1: com.zhy.http.okhttp.callback.Callback val$finalCallback
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: io.reactivex.functions.Function mapper
androidx.lifecycle.ComputableLiveData: java.util.concurrent.atomic.AtomicBoolean mInvalid
androidx.vectordrawable.animated.R$attr: int fontProviderCerts
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: java.lang.Object value
com.appspa.demo.R$attr: int maxButtonHeight
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: io.reactivex.functions.BiFunction reducer
com.xuexiang.xhttp2.interceptor.CacheInterceptor: java.lang.String cacheControlValue_Offline
com.xuexiang.xhttp2.R$attr: int dialogPreferredPadding
androidx.appcompat.R$id: int time
com.appspa.update.R$drawable: int abc_ic_arrow_drop_right_black_24dp
com.xuexiang.xhttp2.R$attr: int drawableEndCompat
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT
androidx.appcompat.R$layout: int abc_action_bar_up_container
androidx.core.widget.AutoScrollHelper: int DEFAULT_MAXIMUM_VELOCITY_DIPS
androidx.appcompat.widget.ActivityChooserModel: java.lang.String HISTORY_FILE_EXTENSION
com.appspa.update.proxy.impl.DefaultUpdateDownloader$1: com.appspa.update.service.OnFileDownloadListener val$downloadListener
androidx.appcompat.R$attr: int actionModePasteDrawable
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: java.util.concurrent.atomic.AtomicBoolean once
com.xuexiang.xhttp2.R$attr: int dividerPadding
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.core.view.MotionEventCompat: int BUTTON_PRIMARY
androidx.core.view.PointerIconCompat: int TYPE_ALIAS
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Display3
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription: long serialVersionUID
androidx.fragment.app.Fragment: boolean mPerformedCreateView
org.aspectj.runtime.reflect.JoinPointImpl$StaticPartImpl: org.aspectj.lang.Signature signature
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: long serialVersionUID
androidx.appcompat.R$attr: int contentInsetStart
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater
androidx.loader.R$attr: int font
androidx.core.provider.FontsContractCompat$Columns: java.lang.String VARIATION_SETTINGS
com.xuexiang.xhttp2.R$dimen: int abc_button_padding_vertical_material
io.reactivex.internal.operators.observable.BlockingObservableLatest: io.reactivex.ObservableSource source
com.appspa.update.R$style: int Platform_V25_AppCompat
com.appspa.update.R$styleable: int MenuItem_android_alphabeticShortcut
androidx.drawerlayout.widget.DrawerLayout$SavedState: int lockModeRight
io.reactivex.internal.observers.BlockingBaseObserver: java.lang.Object value
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: boolean done
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle: io.reactivex.Observable source
io.reactivex.internal.operators.observable.ObservableCollect: java.util.concurrent.Callable initialSupplier
androidx.core.widget.AutoScrollHelper: boolean mAnimating
okhttp3.MultipartBody: okhttp3.MediaType originalType
io.reactivex.internal.operators.completable.CompletableObserveOn: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeConcatIterable: java.lang.Iterable sources
io.reactivex.internal.operators.flowable.FlowableThrottleLatest: boolean emitLast
com.xuexiang.xhttp2.R$color: int primary_dark_material_light
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$SubjectWork: io.reactivex.subjects.UnicastSubject w
androidx.appcompat.R$styleable: int MenuItem_android_icon
androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim
com.appspa.demo.R$styleable: int[] AlertDialog
io.reactivex.internal.operators.observable.ObservableAllSingle: io.reactivex.functions.Predicate predicate
androidx.fragment.R$drawable: int notify_panel_notification_icon_bg
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest mRequest
com.appspa.update.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.widget.ListPopupWindow: boolean mIsAnimatedFromAnchor
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: java.lang.Runnable run
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.widget.Toolbar$LayoutParams: int SYSTEM
io.reactivex.internal.operators.single.SingleToObservable: io.reactivex.SingleSource source
com.appspa.demo.R$attr: int xnpb_text_color
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_switchStyle
com.appspa.update.R$styleable: int AppCompatTheme_windowFixedHeightMinor
io.reactivex.internal.operators.single.SingleFlatMap: io.reactivex.functions.Function mapper
io.reactivex.internal.subscribers.BoundedSubscriber: int bufferSize
com.appspa.update.R$attr: int listDividerAlertDialog
com.google.gson.internal.bind.TypeAdapters$27: java.lang.String MONTH
androidx.customview.R$id: int info
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShouldCloseImmediately
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: org.reactivestreams.Subscription upstream
com.appspa.demo.R$id: int src_atop
com.jakewharton.disklrucache.DiskLruCache: java.util.LinkedHashMap lruEntries
androidx.core.view.animation.PathInterpolatorApi14: float[] mY
androidx.appcompat.R$styleable: int AppCompatTheme_activityChooserViewStyle
io.reactivex.internal.operators.maybe.MaybeCache: io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable[] EMPTY
okhttp3.internal.http2.Http2Connection$4: int val$streamId
com.xuexiang.xhttp2.R$attr: int actionOverflowMenuStyle
com.xuexiang.xhttp2.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.R$styleable: int AppCompatTheme_spinnerStyle
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sGetMaxAvailableHeightMethod
androidx.viewpager.widget.ViewPager$LayoutParams: int childIndex
androidx.fragment.app.FragmentTransitionImpl$1: int val$numSharedElements
okhttp3.Response$Builder: okhttp3.ResponseBody body
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy: io.reactivex.functions.Action onOverflow
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: long serialVersionUID
com.xuexiang.xhttp2.utils.HttpUtils: com.google.gson.Gson sGson
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: int produced
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver observer
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: java.lang.Object[] array
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: int consumerIndex
com.appspa.demo.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.viewpager.widget.ViewPager: android.view.animation.Interpolator sInterpolator
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: io.reactivex.MaybeObserver downstream
com.appspa.update.R$styleable: int AlertDialog_listItemLayout
io.reactivex.internal.operators.observable.ObservableSampleTimed: long period
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_SETTLING
com.xuexiang.xhttp2.request.BaseRequest: java.util.List mNetworkInterceptors
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsOut
androidx.appcompat.R$attr: int colorError
io.reactivex.internal.subscribers.BoundedSubscriber: long serialVersionUID
com.appspa.update.utils.ShellUtils: java.lang.String COMMAND_SH
androidx.appcompat.resources.R$styleable: int[] GradientColor
com.appspa.update.R$styleable: int Toolbar_contentInsetStart
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: long serialVersionUID
io.reactivex.internal.operators.parallel.ParallelFromPublisher: int prefetch
com.xuexiang.xhttp2.R$attr: int layout
com.xuexiang.xhttp2.R$attr: int autoSizePresetSizes
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: long serialVersionUID
com.xuexiang.xhttp2.R$styleable: int CompoundButton_buttonCompat
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: long produced
androidx.viewpager.widget.PagerTabStrip: int mMinStripHeight
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
io.reactivex.internal.operators.observable.ObservableDoOnLifecycle: io.reactivex.functions.Consumer onSubscribe
androidx.appcompat.widget.SuggestionsAdapter: boolean mClosed
io.reactivex.internal.operators.single.SingleDelayWithCompletable: io.reactivex.CompletableSource other
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Class[] PARAM_TYPES
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_fontFamily
com.appspa.update.R$color: int material_deep_teal_500
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$attr: int backgroundStacked
androidx.core.widget.AutoScrollHelper: int VERTICAL
androidx.appcompat.app.TwilightManager$TwilightState: long yesterdaySunset
androidx.fragment.app.FragmentManagerImpl$4: android.view.ViewGroup val$container
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_ACCEPT
androidx.core.app.NotificationCompat$Action$Builder: boolean mShowsUserInterface
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Title
okhttp3.CacheControl$Builder: boolean immutable
androidx.appcompat.widget.ToolbarWidgetWrapper$2: boolean mCanceled
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mStartAction
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
androidx.appcompat.R$attr: int popupWindowStyle
io.reactivex.Scheduler$Worker$PeriodicTask: long startInNanoseconds
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: long serialVersionUID
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: boolean done
com.appspa.update.R$layout: int abc_action_mode_close_item_material
io.reactivex.internal.operators.single.SingleFlatMapMaybe: io.reactivex.SingleSource source
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleBiGenerator: io.reactivex.functions.BiConsumer consumer
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: java.util.concurrent.atomic.AtomicReference timer
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: java.util.Iterator it
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: io.reactivex.CompletableObserver actualObserver
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0
io.reactivex.internal.operators.observable.ObservableReplay$ReplaySource: io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier bufferFactory
io.reactivex.internal.operators.observable.BlockingObservableNext: io.reactivex.ObservableSource source
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.String TAG
io.reactivex.subjects.AsyncSubject: java.lang.Object value
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.resources.R$drawable: int notification_bg_normal
androidx.collection.CircularIntArray: int mCapacityBitmask
androidx.customview.R$id: int normal
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent[] mIntents
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: long timeout
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable: java.util.concurrent.Callable connectableFactory
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL
io.reactivex.internal.operators.single.SingleDelayWithCompletable: io.reactivex.SingleSource source
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver: boolean hasValue
androidx.appcompat.R$dimen: int abc_text_size_title_material_toolbar
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_VALUE_TO
io.reactivex.internal.observers.ResumeSingleObserver: java.util.concurrent.atomic.AtomicReference parent
io.reactivex.internal.operators.flowable.FlowableTimer: java.util.concurrent.TimeUnit unit
com.appspa.demo.R$dimen: int space_content_text_size
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemId
androidx.fragment.R$attr: int fontProviderAuthority
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: int maxConcurrency
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter: java.util.Map mPackageNameToActivityMap
androidx.core.app.NotificationCompat: java.lang.String EXTRA_REMOTE_INPUT_HISTORY
androidx.appcompat.app.AlertController: int mListLayout
com.xuexiang.xhttp2.R$attr: int actionBarItemBackground
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable: int prefetch
androidx.vectordrawable.R$style: int Widget_Compat_NotificationActionText
com.appspa.demo.R$styleable: int[] AppCompatSeekBar
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber parent
androidx.customview.R$layout: int notification_template_custom_big
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
okhttp3.Route: java.net.Proxy proxy
com.appspa.update.R$styleable: int RecycleListView_paddingTopNoTitle
com.xuexiang.xhttp2.R$attr: int indeterminateProgressStyle
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: io.reactivex.functions.BiFunction errorHandler
com.appspa.update.R$layout: int abc_alert_dialog_title_material
com.appspa.demo.R$attr: int viewInflaterClass
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int FUSED_EMPTY
androidx.drawerlayout.R$drawable: int notification_bg_low_pressed
androidx.customview.widget.ViewDragHelper: int mTouchSlop
com.appspa.update.R$id: int add
androidx.vectordrawable.R$id: int accessibility_custom_action_10
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_16
androidx.loader.content.AsyncTaskLoader: androidx.loader.content.AsyncTaskLoader$LoadTask mTask
io.reactivex.internal.operators.maybe.MaybeUsing: boolean eager
androidx.fragment.app.FragmentTabHost: android.widget.FrameLayout mRealTabContent
androidx.appcompat.R$integer: int abc_config_activityShortDur
com.appspa.update.R$attr: int controlBackground
androidx.core.widget.ContentLoadingProgressBar: boolean mPostedShow
io.reactivex.internal.observers.LambdaObserver: io.reactivex.functions.Consumer onSubscribe
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: io.reactivex.Observer downstream
androidx.appcompat.R$styleable: int TextAppearance_android_shadowRadius
com.appspa.demo.R$attr: int actionViewClass
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int BOOLEAN_PROPERTY_IS_HEADING
com.appspa.update.R$style: int Base_Widget_AppCompat_ListView_Menu
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver parent
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: io.reactivex.Scheduler$Worker worker
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver other
okio.AsyncTimeout: okio.AsyncTimeout next
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: io.reactivex.internal.subscriptions.SubscriptionArbiter sa
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: long emitted
com.appspa.demo.R$attr: int switchTextAppearance
io.reactivex.subjects.SingleSubject: io.reactivex.subjects.SingleSubject$SingleDisposable[] TERMINATED
retrofit2.HttpException: int code
androidx.appcompat.widget.TooltipCompatHandler$1: androidx.appcompat.widget.TooltipCompatHandler this$0
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber parent
com.appspa.update.R$attr: int buttonGravity
androidx.drawerlayout.widget.DrawerLayout$1: androidx.drawerlayout.widget.DrawerLayout this$0
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: java.util.concurrent.Callable bufferSupplier
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription[] $VALUES
com.xuexiang.xhttp2.R$attr: int panelMenuListWidth
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: long serialVersionUID
okio.InflaterSource: boolean closed
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
androidx.appcompat.resources.R$id: int notification_main_column_container
com.xuexiang.xhttp2.R$attr: int actionViewClass
androidx.core.R$layout: int notification_action
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver: java.util.concurrent.atomic.AtomicReference arbiter
androidx.vectordrawable.animated.R$attr: int alpha
androidx.viewpager.R$id: int italic
com.xuexiang.xhttp2.R$style: int TextAppearance_Compat_Notification_Info
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: long serialVersionUID
com.appspa.update.R$dimen: int abc_edit_text_inset_top_material
androidx.cursoradapter.widget.ResourceCursorAdapter: int mLayout
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: org.reactivestreams.Publisher[] sources
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
okhttp3.internal.http2.Http2Connection: long awaitPongsReceived
androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp
com.appspa.update.R$attr: int buttonStyle
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: io.reactivex.functions.Function mapper
com.appspa.demo.R$dimen: int abc_text_size_large_material
androidx.appcompat.R$drawable: int abc_ic_star_half_black_36dp
androidx.core.R$style: int Widget_Compat_NotificationActionText
androidx.customview.widget.ViewDragHelper: int BASE_SETTLE_DURATION
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: long serialVersionUID
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean forWebSocket
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle mExtras
androidx.appcompat.R$style: int Base_Widget_AppCompat_SearchView
androidx.appcompat.R$color: int background_material_light
com.xuexiang.xhttp2.R$color: int foreground_material_dark
com.xuexiang.xhttp2.R$attr: int singleChoiceItemLayout
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: long serialVersionUID
androidx.appcompat.R$id: int accessibility_custom_action_4
com.appspa.update.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupEnabled
io.reactivex.internal.operators.observable.ObservableConcatMapEager: io.reactivex.internal.util.ErrorMode errorMode
androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility
androidx.appcompat.R$style: int Widget_AppCompat_Light_SearchView
com.google.gson.internal.reflect.ReflectionAccessor: com.google.gson.internal.reflect.ReflectionAccessor instance
com.appspa.update.widget.NumberProgressBar: android.graphics.RectF mReachedRectF
com.appspa.update.widget.NumberProgressBar: java.lang.String mSuffix
androidx.core.app.FrameMetricsAggregator: int COMMAND_DURATION
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: io.reactivex.functions.Consumer onError
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: long produced
androidx.appcompat.R$color: int abc_tint_btn_checkable
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: java.lang.Object index
androidx.appcompat.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.activity.R$attr: int fontWeight
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom: io.reactivex.functions.BiFunction combiner
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: io.reactivex.subjects.ReplaySubject$TimedNode tail
com.appspa.update.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.appspa.update.R$layout: int abc_activity_chooser_view
androidx.core.view.ViewCompat: int SCROLL_AXIS_VERTICAL
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.widget.FitWindowsLinearLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
androidx.core.view.PointerIconCompat: int TYPE_GRAB
com.appspa.update.R$style: int TextAppearance_Compat_Notification_Info
androidx.customview.R$attr: int alpha
androidx.appcompat.view.menu.MenuAdapter: boolean mForceShowIcon
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: io.reactivex.internal.disposables.SequentialDisposable arbiter
androidx.appcompat.R$layout: int notification_template_part_time
com.appspa.demo.R$id: int alertTitle
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode ONLY_CACHE
retrofit2.RequestFactory$Builder: java.lang.String httpMethod
androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover
androidx.appcompat.view.menu.MenuItemImpl: int mFlags
androidx.loader.R$styleable: int GradientColor_android_gradientRadius
androidx.core.app.NavUtils: java.lang.String TAG
androidx.appcompat.R$dimen: int abc_dialog_list_padding_top_no_title
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: int bufferSize
androidx.appcompat.R$styleable: int MenuItem_android_checkable
com.appspa.update.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsets
com.appspa.demo.R$styleable: int AppCompatTheme_windowFixedHeightMinor
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_NEEDED
io.reactivex.internal.util.SorterFunction: java.util.Comparator comparator
com.appspa.update.R$attr: int tickMarkTintMode
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: int mAbsGravity
com.appspa.update.R$id: int accessibility_custom_action_22
com.appspa.demo.R$id: int accessibility_custom_action_21
io.reactivex.internal.operators.parallel.ParallelConcatMap: io.reactivex.internal.util.ErrorMode errorMode
androidx.customview.widget.ViewDragHelper: float[] mInitialMotionY
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: long serialVersionUID
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress
okhttp3.RealCall$AsyncCall: okhttp3.Callback responseCallback
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
com.appspa.demo.R$string: int abc_shareactionprovider_share_with
androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.String FONT_FAMILY_CLASS
androidx.core.text.TextUtilsCompat: java.lang.String ARAB_SCRIPT_SUBTAG
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_KEYFRAME_VALUE_TYPE
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTintMode
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.RemoteInput mRemoteInput
androidx.drawerlayout.R$dimen: int compat_button_padding_vertical_material
com.appspa.demo.R$styleable: int View_android_focusable
androidx.appcompat.widget.ScrollingTabContainerView$TabView: int[] BG_ATTRS
com.appspa.demo.R$styleable: int[] View
androidx.versionedparcelable.VersionedParcel: int TYPE_PARCELABLE
com.xuexiang.xhttp2.R$attr: int autoSizeMinTextSize
androidx.core.view.ViewCompat: int LAYER_TYPE_HARDWARE
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: io.reactivex.internal.disposables.DisposableContainer tasks
com.appspa.demo.R$attr: int windowNoTitle
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: androidx.core.app.SharedElementCallback mCallback
androidx.core.text.HtmlCompat: int FROM_HTML_MODE_LEGACY
com.appspa.update.R$style: int Platform_AppCompat_Light
androidx.core.view.ViewGroupCompat: int LAYOUT_MODE_CLIP_BOUNDS
com.appspa.update.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: long lastId
androidx.customview.R$color: int secondary_text_default_material_light
com.appspa.update.R$styleable: int AppCompatTheme_panelBackground
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
com.xuexiang.xhttp2.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.appcompat.R$attr: int alphabeticModifiers
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
okhttp3.internal.Internal: okhttp3.internal.Internal instance
com.appspa.update.R$id: int contentPanel
com.appspa.update.R$attr: int textAppearanceSearchResultSubtitle
com.appspa.update.widget.UpdateDialogFragment: android.widget.Button mBtnUpdate
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabTextStyle
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry: io.reactivex.functions.BiFunction errorHandler
androidx.appcompat.R$styleable: int AppCompatTheme_actionMenuTextColor
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
com.xuexiang.xhttp2.R$color: int bright_foreground_disabled_material_light
com.google.gson.internal.LinkedHashTreeMap: boolean $assertionsDisabled
com.xuexiang.xhttp2.R$anim: int abc_shrink_fade_out_from_bottom
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mHeadsUpContentView
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: java.util.concurrent.atomic.AtomicLong requested
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: org.reactivestreams.Subscription upstream
com.google.gson.stream.JsonReader: int PEEKED_EOF
io.reactivex.internal.operators.flowable.FlowableZipIterable: io.reactivex.functions.BiFunction zipper
io.reactivex.internal.operators.observable.ObservableElementAtSingle: java.lang.Object defaultValue
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: java.lang.Object item
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableRefCount: io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection connection
okhttp3.internal.ws.RealWebSocket$1: okhttp3.internal.ws.RealWebSocket this$0
org.aspectj.internal.lang.reflect.AjTypeImpl: org.aspectj.lang.reflect.InterTypeFieldDeclaration[] declaredITDFields
com.appspa.demo.R$styleable: int[] ButtonBarLayout
androidx.fragment.app.FragmentManagerImpl$3: androidx.fragment.app.Fragment val$fragment
androidx.fragment.app.FragmentTransition$3: boolean val$inIsPop
androidx.viewpager.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.R$style: int Base_V23_Theme_AppCompat
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue queue
com.jakewharton.disklrucache.StrictLineReader: int pos
com.google.gson.stream.JsonReader: int peekedNumberLength
androidx.fragment.app.FragmentState: int mMaxLifecycleState
io.reactivex.internal.operators.single.SingleCache: java.lang.Throwable error
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver: io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver parent
org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl: int modifiers
org.aspectj.runtime.reflect.MethodSignatureImpl: java.lang.Class returnType
okhttp3.ResponseBody: java.io.Reader reader
retrofit2.RequestFactory$Builder: boolean gotQueryMap
com.xuexiang.xhttp2.R$styleable: int FontFamily_fontProviderCerts
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: io.reactivex.Observer downstream
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_DATA_ONLY_REMOTE_INPUTS
io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver: io.reactivex.CompletableObserver downstream
com.appspa.demo.R$attr: int displayOptions
retrofit2.RequestFactory: okhttp3.MediaType contentType
okhttp3.internal.connection.RouteException: java.io.IOException lastException
androidx.loader.content.CursorLoader: java.lang.String mSelection
androidx.core.view.ActionProvider: java.lang.String TAG
io.reactivex.internal.observers.QueueDrainObserver: io.reactivex.internal.fuseable.SimplePlainQueue queue
androidx.core.app.ShareCompat$IntentReader: java.lang.String mCallingPackage
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: boolean disposed
com.appspa.update.R$styleable: int ButtonBarLayout_allowStacking
androidx.activity.R$id: int dialog_button
com.xuexiang.xhttp2.R$styleable: int AlertDialog_buttonIconDimen
androidx.core.view.MotionEventCompat: int AXIS_ORIENTATION
com.xuexiang.xhttp2.R$id: int search_badge
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: long serialVersionUID
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
androidx.appcompat.widget.SearchView: java.lang.String IME_OPTION_NO_MICROPHONE
io.reactivex.internal.schedulers.InstantPeriodicTask: java.util.concurrent.atomic.AtomicReference first
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: boolean once
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: int cores
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: long serialVersionUID
com.appspa.demo.R$attr: int panelMenuListWidth
com.appspa.demo.R$id: int off
com.zhy.http.okhttp.cookie.store.MemoryCookieStore: java.util.HashMap allCookies
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: long serialVersionUID
com.xuexiang.xhttp2.R$drawable: int tooltip_frame_dark
androidx.core.widget.NestedScrollView$SavedState: int scrollPosition
androidx.activity.R$style: int TextAppearance_Compat_Notification_Time
androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks
androidx.core.app.NotificationCompat$Builder: android.app.Notification mNotification
androidx.viewpager.widget.PagerTabStrip: int MIN_STRIP_HEIGHT
io.reactivex.internal.schedulers.NewThreadScheduler: io.reactivex.internal.schedulers.RxThreadFactory THREAD_FACTORY
com.appspa.demo.entity.CustomResult$PatchInfo: java.lang.String tip
com.appspa.update.R$drawable: int abc_item_background_holo_dark
androidx.appcompat.widget.ActionBarContextView: java.lang.String TAG
androidx.fragment.R$string: int status_bar_notification_info_overflow
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.reactivex.internal.subscribers.BasicFuseableSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$styleable: int[] TextAppearance
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter ATOMIC_INTEGER
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: java.util.concurrent.atomic.AtomicLong requested
com.appspa.update.R$attr: int searchHintIcon
androidx.appcompat.R$style: int Theme_AppCompat_DialogWhenLarge
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowMinWidthMinor
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: long index
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: int completedSources
androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable
androidx.appcompat.R$style: int Widget_AppCompat_Button_Colored
androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level PARAM
io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeToFlowable: io.reactivex.MaybeSource source
io.reactivex.internal.operators.flowable.FlowableSwitchMap: int bufferSize
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: boolean cancelled
com.appspa.demo.R$styleable: int AppCompatTheme_buttonStyle
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: long idx
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: boolean isLeft
okio.RealBufferedSource$1: okio.RealBufferedSource this$0
com.appspa.update.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.completable.CompletableDisposeOn: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.flowable.FlowableUsing: io.reactivex.functions.Function sourceSupplier
androidx.viewpager.widget.PagerTabStrip: android.graphics.Paint mTabPaint
com.appspa.update.entity.UpdateEntity: java.lang.String mVersionName
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: io.reactivex.functions.Action onFinally
io.reactivex.processors.MulticastProcessor: java.util.concurrent.atomic.AtomicBoolean once
com.xuexiang.xhttp2.interceptor.HeadersInterceptor: com.xuexiang.xhttp2.model.HttpHeaders headers
com.appspa.demo.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: long serialVersionUID
com.appspa.update.R$id: int action_bar_subtitle
androidx.appcompat.R$styleable: int ActionBar_background
androidx.core.app.AppOpsManagerCompat: int MODE_DEFAULT
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Large
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: java.util.concurrent.TimeUnit unit
com.xuexiang.xhttp2.R$dimen: int abc_dialog_padding_top_material
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int mId
com.xuexiang.xhttp2.R$styleable: int AppCompatTextHelper_android_drawableStart
com.appspa.demo.R$dimen: int abc_list_item_padding_horizontal_material
org.aspectj.lang.reflect.DeclareAnnotation$Kind: org.aspectj.lang.reflect.DeclareAnnotation$Kind Constructor
androidx.core.app.ShareCompat$IntentBuilder: java.util.ArrayList mToAddresses
androidx.activity.R$id: int accessibility_custom_action_17
com.appspa.update.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
com.appspa.update.R$drawable: int abc_list_selector_background_transition_holo_light
io.reactivex.internal.queue.SpscLinkedArrayQueue: int producerLookAheadStep
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: java.util.concurrent.atomic.AtomicInteger active
androidx.vectordrawable.animated.R$layout: int notification_action
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: long timeout
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.widget.MenuPopupWindow window
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: java.util.concurrent.atomic.AtomicBoolean shouldConnect
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody$CountingSink: com.xuexiang.xhttp2.request.body.UploadProgressRequestBody this$0
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: org.reactivestreams.Subscriber downstream
androidx.appcompat.R$style: int Widget_AppCompat_TextView_SpinnerItem
androidx.lifecycle.MediatorLiveData$Source: androidx.lifecycle.Observer mObserver
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: int limit
androidx.collection.ArraySet$1: androidx.collection.ArraySet this$0
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: long timespan
com.appspa.demo.R$styleable: int GradientColor_android_endColor
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: long timeskip
com.xuexiang.xhttp2.R$drawable: int abc_text_select_handle_left_mtrl_light
io.reactivex.internal.operators.flowable.FlowableCreate$DropAsyncEmitter: long serialVersionUID
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: java.lang.String name
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.appcompat.R$styleable: int[] ActionMode
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: io.reactivex.SingleObserver downstream
com.appspa.update.widget.UpdateDialogFragment: android.widget.ImageView mIvTop
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$enterTransition
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_unreached_bar_height
com.xuexiang.xhttp2.R$attr: int actionBarDivider
com.xuexiang.xhttp2.R$attr: int suggestionRowLayout
androidx.customview.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: boolean delayErrors
com.appspa.update.R$dimen: int abc_list_item_padding_horizontal_material
androidx.appcompat.R$layout: int notification_action_tombstone
androidx.appcompat.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
androidx.appcompat.R$dimen: int tooltip_horizontal_padding
androidx.appcompat.resources.R$id: int accessibility_custom_action_13
com.google.gson.internal.LinkedHashTreeMap$KeySet$1: com.google.gson.internal.LinkedHashTreeMap$KeySet this$1
androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha
okhttp3.OkHttpClient$Builder: int connectTimeout
okhttp3.internal.http2.Http2Connection: long degradedPongsReceived
androidx.core.app.NotificationManagerCompat: java.lang.String ACTION_BIND_SIDE_CHANNEL
androidx.fragment.app.BackStackState: int[] mOldMaxLifecycleStates
com.xuexiang.xhttp2.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogStyle
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool pool
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable: boolean delayErrors
androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth
io.reactivex.internal.operators.parallel.ParallelRunOn: int prefetch
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: io.reactivex.CompletableObserver downstream
androidx.appcompat.R$attr: int tooltipFrameBackground
com.xuexiang.xhttp2.R$styleable: int Toolbar_titleMarginTop
com.appspa.update.R$attr: int contentInsetEnd
com.appspa.demo.R$styleable: int AppCompatTheme_buttonBarButtonStyle
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: io.reactivex.Scheduler scheduler
androidx.appcompat.resources.R$drawable: int notification_bg_normal_pressed
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: boolean done
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: boolean disposed
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityManager mManager
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: long lastTime
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: java.util.concurrent.TimeUnit unit
androidx.vectordrawable.R$id: int right_icon
androidx.appcompat.R$attr: int srcCompat
retrofit2.RequestBuilder: okhttp3.Headers$Builder headersBuilder
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.ws.WebSocketWriter$FrameSink: boolean closed
okhttp3.internal.http2.Http2Connection$6: okhttp3.internal.http2.Http2Connection this$0
okhttp3.FormBody$Builder: java.util.List values
com.appspa.update.R$attr: int autoSizeTextType
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner inner
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_Light_ListView_DropDown
androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart
com.appspa.update.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.appspa.update.R$styleable: int FontFamily_fontProviderFetchStrategy
org.aspectj.lang.Aspects14: java.lang.Class class$java$lang$Class
androidx.appcompat.R$drawable: int notification_bg_normal_pressed
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
com.appspa.demo.R$style: int ThemeOverlay_AppCompat_Dialog
androidx.viewpager.widget.PagerTitleStrip: int mGravity
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter: int value
com.appspa.update.R$style: int Base_Widget_AppCompat_Light_ActionBar
io.reactivex.internal.operators.single.SingleFromPublisher: org.reactivestreams.Publisher publisher
androidx.collection.MapCollections$MapIterator: int mEnd
androidx.drawerlayout.widget.DrawerLayout: int STATE_SETTLING
io.reactivex.internal.operators.parallel.ParallelRunOn: io.reactivex.parallel.ParallelFlowable source
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate: io.reactivex.functions.Predicate predicate
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_ALWAYS
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_IDLE
com.appspa.update.R$styleable: int[] LinearLayoutCompat_Layout
androidx.core.R$id: int accessibility_custom_action_24
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: boolean mIsStarted
com.appspa.demo.R$color: int abc_hint_foreground_material_light
androidx.appcompat.R$style: int Base_Widget_AppCompat_ButtonBar
io.reactivex.internal.operators.completable.CompletableConcatIterable: java.lang.Iterable sources
androidx.core.view.MotionEventCompat: int AXIS_THROTTLE
androidx.appcompat.R$style: int Widget_AppCompat_SearchView
com.appspa.demo.R$attr: int listPopupWindowStyle
com.appspa.update.R$id: int message
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarDivider
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.appspa.demo.R$drawable: int abc_btn_default_mtrl_shape
androidx.appcompat.resources.R$id: int accessibility_custom_action_26
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int ITEM_VIEW_TYPE_FOOTER
io.reactivex.Scheduler$PeriodicDirectTask: io.reactivex.Scheduler$Worker worker
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: int NANOS_ROUNDING_VALUE
com.appspa.demo.R$drawable: int abc_ratingbar_material
com.appspa.demo.R$attr: int queryBackground
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY
androidx.loader.R$id: int icon
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_NONE
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: long serialVersionUID
androidx.appcompat.resources.R$dimen: int notification_top_pad_large_text
com.appspa.demo.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTint
androidx.fragment.app.Fragment: int CREATED
com.google.gson.internal.LinkedTreeMap$KeySet: com.google.gson.internal.LinkedTreeMap this$0
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: java.util.HashMap cookies
com.appspa.demo.R$dimen: int space_title_text_size
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.appspa.update.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNeutralButtonIcon
androidx.fragment.app.FragmentTransaction: int TRANSIT_NONE
androidx.core.R$dimen: int notification_right_icon_size
androidx.fragment.R$id: int notification_main_column
androidx.loader.content.ModernAsyncTask$4: int[] $SwitchMap$androidx$loader$content$ModernAsyncTask$Status
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: java.util.concurrent.atomic.AtomicBoolean stopWindows
androidx.core.view.ViewPropertyAnimatorCompat: int mOldLayerType
okhttp3.MultipartBody: okhttp3.MediaType FORM
io.reactivex.processors.MulticastProcessor: java.util.concurrent.atomic.AtomicReference subscribers
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator: org.reactivestreams.Subscriber downstream
com.appspa.demo.R$styleable: int SearchView_layout
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_0
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetClipToWindowEnabledMethod
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_IF_MODIFIED_SINCE
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon2
com.appspa.update.widget.UpdateDialogFragment: android.widget.LinearLayout mLlClose
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler
org.aspectj.internal.lang.reflect.AdviceImpl: org.aspectj.lang.reflect.AjType[] parameterTypes
com.google.gson.internal.bind.JsonTreeReader: int stackSize
androidx.appcompat.widget.RtlSpacingHelper: int mStart
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: io.reactivex.functions.BiFunction errorHandler
androidx.appcompat.view.menu.StandardMenuPopup: boolean mHasContentWidth
com.appspa.update.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.R$attr: int listPreferredItemPaddingLeft
com.xuexiang.xhttp2.R$attr: int subtitleTextAppearance
androidx.appcompat.resources.R$styleable: int ColorStateListItem_alpha
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
androidx.core.R$dimen: int notification_action_text_size
androidx.appcompat.R$attr: int hideOnContentScroll
androidx.core.text.BidiFormatter: boolean mIsRtlContext
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: boolean emitLast
androidx.vectordrawable.R$drawable: int notification_bg_low_normal
com.appspa.demo.R$attr: int popupWindowStyle
io.reactivex.subjects.PublishSubject: java.util.concurrent.atomic.AtomicReference subscribers
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnClickListener
androidx.vectordrawable.R$styleable: int GradientColor_android_centerX
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_SET_COOKIE
io.reactivex.internal.operators.observable.ObservableGroupJoin: io.reactivex.functions.Function leftEnd
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: int count
com.appspa.update.R$id: int accessibility_custom_action_12
com.appspa.demo.R$style: int Base_Widget_AppCompat_ActionMode
org.aspectj.runtime.reflect.StringMaker: boolean includeJoinPointTypeName
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: boolean terminated
com.appspa.update.R$dimen: int abc_action_bar_overflow_padding_start_material
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: io.reactivex.disposables.CompositeDisposable disposables
com.xuexiang.xhttp2.R$id: int text
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
com.appspa.demo.R$style: int Base_Theme_AppCompat_Dialog_Alert
androidx.collection.ArraySet: java.lang.Object[] mArray
androidx.appcompat.R$style: int TextAppearance_AppCompat_SearchResult_Title
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: io.reactivex.Observer downstream
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha
androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
io.reactivex.processors.UnicastProcessor: boolean cancelled
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.internal.util.AtomicThrowable errors
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_seekBarStyle
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleRes
com.xuexiang.xhttp2.R$dimen: int notification_right_icon_size
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: boolean cancelled
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector: io.reactivex.functions.Function close
androidx.viewpager.widget.PagerAdapter: int POSITION_NONE
com.xuexiang.xhttp2.R$color: int material_grey_300
androidx.appcompat.R$id: int parentPanel
okhttp3.internal.connection.RealConnection: java.net.Socket socket
com.zhy.http.okhttp.request.RequestCall: okhttp3.Request request
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
com.zhy.http.okhttp.request.OtherRequest: okhttp3.RequestBody requestBody
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: boolean isPrintStack
okhttp3.internal.http2.Http2Connection$7: okhttp3.internal.http2.ErrorCode val$errorCode
androidx.appcompat.R$id: int action_container
androidx.core.R$id: int icon
io.reactivex.internal.operators.observable.ObservableError: java.util.concurrent.Callable errorSupplier
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber: io.reactivex.internal.operators.flowable.FlowableWithLatestFrom this$0
androidx.core.R$id: int accessibility_custom_action_7
org.aspectj.runtime.reflect.SignatureImpl: java.lang.Class[] EMPTY_CLASS_ARRAY
com.appspa.demo.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.fragment.app.ListFragment: android.widget.ListView mList
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber parent
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: io.reactivex.functions.Predicate predicate
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: androidx.appcompat.app.ToolbarActionBar this$0
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy SLEEP_1000MS
androidx.fragment.R$drawable: int notification_bg_low_normal
io.reactivex.internal.operators.flowable.FlowableSkipLast: int skip
okhttp3.Response$Builder: long sentRequestAtMillis
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.appspa.update.R$style: int Widget_AppCompat_PopupMenu
com.xuexiang.xhttp2.R$drawable: int abc_btn_check_material
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: java.lang.Object v1
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasXOffset
androidx.lifecycle.Transformations$2: androidx.arch.core.util.Function val$switchMapFunction
com.appspa.update.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.activity.R$layout: int notification_action
com.xuexiang.xhttp2.R$id: int dialog_button
com.appspa.demo.R$color: int material_grey_600
okhttp3.MediaType: java.lang.String mediaType
io.reactivex.internal.subscriptions.BooleanSubscription: long serialVersionUID
io.reactivex.processors.ReplayProcessor$TimedNode: long serialVersionUID
androidx.core.content.PermissionChecker: int PERMISSION_DENIED_APP_OP
androidx.fragment.R$attr: int fontProviderCerts
com.xuexiang.xhttp2.R$styleable: int SearchView_iconifiedByDefault
androidx.appcompat.R$styleable: int FontFamily_fontProviderFetchStrategy
com.appspa.update.R$styleable: int AppCompatTheme_editTextColor
androidx.appcompat.R$styleable: int DrawerArrowToggle_spinBars
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe: boolean delayErrors
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedTreeMap$Node next
com.appspa.update.R$attr: int tickMarkTint
com.appspa.update.R$string: int abc_prepend_shortcut_label
androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId
com.appspa.update.R$dimen: int abc_text_size_title_material
com.appspa.demo.R$string: int space_error_download_permission_denied
androidx.appcompat.R$style: int TextAppearance_AppCompat_Body2
com.xuexiang.xhttp2.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.appcompat.widget.SwitchCompat: boolean mShowText
com.appspa.update.widget.UpdateDialogFragment: android.widget.TextView mTvUpdateInfo
com.google.gson.stream.JsonReader: int PEEKED_TRUE
com.appspa.demo.R$mipmap: int bg_update_top
com.xuexiang.xhttp2.R$color: int abc_tint_edittext
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerInner: io.reactivex.functions.BiFunction combiner
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: java.lang.Throwable error
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable: int maxConcurrency
com.appspa.demo.R$style: int Base_V7_Theme_AppCompat
com.appspa.update.R$attr: int actionModeCutDrawable
com.appspa.demo.R$attr: int submitBackground
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: long serialVersionUID
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.DataOutputStream mDataStream
com.appspa.update.R$style: int Widget_AppCompat_RatingBar
androidx.fragment.app.ListFragment: android.view.View mEmptyView
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher: org.reactivestreams.Publisher source
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_25
androidx.fragment.app.FragmentTransaction: int TRANSIT_EXIT_MASK
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: boolean syncFused
com.appspa.update.R$dimen: int abc_dialog_fixed_width_minor
com.appspa.update.R$attr: int dialogPreferredPadding
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove: io.reactivex.schedulers.TestScheduler$TimedRunnable timedAction
io.reactivex.internal.operators.mixed.CompletableAndThenObservable: io.reactivex.CompletableSource source
org.aspectj.runtime.internal.CFlowCounter: org.aspectj.runtime.internal.cflowstack.ThreadStackFactory tsFactory
io.reactivex.internal.subscriptions.ScalarSubscription: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: java.util.concurrent.atomic.AtomicReference mainDisposable
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber this$0
com.appspa.update.R$id: int buttonPanel
com.appspa.update.R$style: int Widget_AppCompat_TextView
androidx.core.app.Person$Builder: boolean mIsImportant
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: java.lang.Object u
androidx.vectordrawable.R$id: int accessibility_custom_action_17
io.reactivex.internal.operators.observable.ObservableRepeat: long count
com.appspa.update.R$attr: int drawableBottomCompat
androidx.core.view.DragStartHelper: androidx.core.view.DragStartHelper$OnDragStartListener mListener
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: io.reactivex.SingleSource source
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: io.reactivex.SingleObserver downstream
com.xuexiang.xhttp2.R$attr: int textLocale
org.aspectj.lang.Aspects14: java.lang.Class[] PEROBJECT_CLASS_ARRAY
androidx.vectordrawable.animated.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.R$dimen: int abc_text_size_title_material
okhttp3.internal.connection.StreamAllocation: boolean $assertionsDisabled
androidx.loader.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.view.menu.CascadingMenuPopup: int HORIZ_POSITION_RIGHT
io.reactivex.internal.subscribers.SubscriberResourceWrapper: long serialVersionUID
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: long serialVersionUID
androidx.drawerlayout.R$id: int right_side
androidx.appcompat.app.AlertController: android.os.Message mButtonNegativeMessage
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
androidx.appcompat.widget.TintContextWrapper: java.util.ArrayList sCache
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: boolean restartTimerOnMaxSize
com.appspa.update.R$style: int Widget_AppCompat_SeekBar_Discrete
com.xuexiang.xhttp2.R$bool: int abc_action_bar_embed_tabs
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
retrofit2.Retrofit: java.util.List callAdapterFactories
androidx.appcompat.widget.TooltipCompatHandler: java.lang.String TAG
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: org.reactivestreams.Subscription upstream
com.appspa.update.R$id: int normal
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast: long serialVersionUID
androidx.activity.R$style: int Widget_Compat_NotificationActionContainer
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: java.io.DataOutputStream mTarget
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: boolean terminated
androidx.fragment.R$id: int accessibility_custom_action_18
androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET
com.appspa.update.R$drawable: int abc_vector_test
androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
com.appspa.demo.R$styleable: int[] AppCompatTheme
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mFileName
androidx.appcompat.R$attr: int thickness
io.reactivex.internal.operators.single.SingleCache$CacheDisposable: io.reactivex.internal.operators.single.SingleCache parent
com.appspa.update.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
com.appspa.update.R$attr: int windowActionBarOverlay
com.appspa.demo.R$attr: int textAppearanceListItem
androidx.appcompat.app.AlertController: int mAlertDialogLayout
com.xuexiang.xhttp2.utils.ApiUtils: int SUCCESS_CODE
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: boolean done
io.reactivex.internal.operators.observable.ObservableElementAtSingle: long index
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.api.ApiService mApiManager
androidx.core.app.NotificationCompat$Builder: boolean mLocalOnly
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_13
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: long id
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mVerticalMirror
androidx.appcompat.view.menu.BaseMenuWrapper: java.util.Map mSubMenus
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: int size
retrofit2.RequestFactory$Builder: java.lang.annotation.Annotation[][] parameterAnnotationsArray
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node next
com.google.gson.GsonBuilder: com.google.gson.FieldNamingStrategy fieldNamingPolicy
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: boolean restartTimerOnMaxSize
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: java.lang.Object value
androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean DBG_ANIMATION_VECTOR_DRAWABLE
com.appspa.update.R$color: int dim_foreground_disabled_material_light
io.reactivex.internal.operators.flowable.FlowableError: java.util.concurrent.Callable errorSupplier
androidx.fragment.R$id: int accessibility_custom_action_27
androidx.appcompat.R$style: int Base_V26_Theme_AppCompat_Light
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle
androidx.appcompat.R$attr: int tooltipForegroundColor
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mSummaryText
com.appspa.demo.R$styleable: int[] ViewBackgroundHelper
com.xuexiang.xhttp2.R$styleable: int SwitchCompat_switchPadding
com.appspa.update.R$dimen: int abc_control_padding_material
com.xuexiang.xhttp2.R$attr: int theme
androidx.appcompat.R$styleable: int AlertDialog_listItemLayout
androidx.loader.R$style: int TextAppearance_Compat_Notification_Info
com.xuexiang.xhttp2.R$styleable: int ActionBarLayout_android_layout_gravity
com.appspa.demo.R$dimen: int abc_alert_dialog_button_dimen
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: long index
androidx.core.content.FileProvider: java.lang.String[] COLUMNS
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: long index
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: io.reactivex.functions.Function errorMapper
com.xuexiang.xhttp2.model.ApiResult: java.lang.Object Data
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem
androidx.core.text.BidiFormatter: int DIR_RTL
androidx.appcompat.R$drawable: int abc_ic_menu_overflow_material
com.xuexiang.xhttp2.R$id: int select_dialog_listview
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: int OTHER_STATE_CONSUMED_OR_EMPTY
androidx.appcompat.R$attr: int actionBarItemBackground
com.xuexiang.xhttp2.R$dimen: int compat_button_inset_horizontal_material
com.xuexiang.xhttp2.R$styleable: int AppCompatImageView_android_src
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean mSpin
io.reactivex.schedulers.Schedulers$ComputationHolder: io.reactivex.Scheduler DEFAULT
io.reactivex.internal.observers.ConsumerSingleObserver: long serialVersionUID
androidx.core.R$id: int tag_accessibility_heading
com.appspa.demo.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
androidx.viewpager.widget.ViewPager: float mInitialMotionY
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: io.reactivex.Observer downstream
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$string: int abc_searchview_description_voice
com.xuexiang.xhttp2.R$color: int material_grey_900
com.appspa.demo.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
androidx.core.R$color: int notification_action_color_filter
androidx.appcompat.widget.PopupMenu: android.view.View mAnchor
com.appspa.demo.R$styleable: int MenuItem_android_onClick
com.appspa.demo.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.appcompat.R$drawable: int abc_btn_radio_material
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_9
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: long lastRefreshUiTime
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
io.reactivex.internal.operators.flowable.FlowableReplay$SizeBoundReplayBuffer: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableTimeout: io.reactivex.functions.Function itemTimeoutIndicator
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: boolean delayErrors
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleGenerator: io.reactivex.functions.Consumer consumer
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri mContentUri
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: io.reactivex.disposables.CompositeDisposable tasks
com.appspa.update.R$dimen: int tooltip_corner_radius
com.xuexiang.xhttp2.R$attr: int background
retrofit2.OkHttpCall: retrofit2.Converter responseConverter
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: long time
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
io.reactivex.internal.operators.completable.CompletableMergeArray: io.reactivex.CompletableSource[] sources
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: io.reactivex.CompletableSource next
io.reactivex.internal.operators.flowable.FlowableToList: java.util.concurrent.Callable collectionSupplier
androidx.core.provider.SelfDestructiveThread: int mPriority
okhttp3.RequestBody$2: okhttp3.MediaType val$contentType
okhttp3.internal.connection.RealConnection: int successCount
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_VALUE_FROM
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: int limit
androidx.fragment.app.FragmentActivity: boolean mRequestedPermissionsFromFragment
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: io.reactivex.functions.BiFunction accumulator
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object[] stack
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
androidx.appcompat.R$style: int Widget_AppCompat_Button
androidx.customview.widget.ViewDragHelper: int EDGE_SIZE
androidx.activity.R$integer: int status_bar_notification_info_maxnum
io.reactivex.disposables.FutureDisposable: boolean allowInterrupt
androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments
androidx.appcompat.app.AlertController$1: androidx.appcompat.app.AlertController this$0
androidx.vectordrawable.animated.R$id: int time
androidx.appcompat.view.menu.MenuPopupHelper: android.content.Context mContext
okio.Pipe$PipeSource: okio.Timeout timeout
com.xuexiang.xhttp2.R$style: int Base_DialogWindowTitle_AppCompat
com.appspa.update.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: java.util.ArrayList mAnimationCallbacks
androidx.viewpager.R$id: int right_icon
com.xuexiang.xhttp2.R$color: int accent_material_dark
com.appspa.demo.R$attr: int customNavigationLayout
com.xuexiang.xhttp2.R$color: int secondary_text_disabled_material_dark
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: int prefetch
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int LINECAP_SQUARE
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
androidx.fragment.app.Fragment: int RESUMED
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: org.reactivestreams.Subscriber downstream
androidx.drawerlayout.R$id: int icon
androidx.appcompat.R$style: int Widget_AppCompat_EditText
androidx.viewpager.R$dimen: int compat_control_corner_material
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable: io.reactivex.Observable source
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription: long serialVersionUID
io.reactivex.schedulers.TestScheduler$TimedRunnable: long time
com.xuexiang.xhttp2.R$id: int accessibility_custom_action_17
androidx.fragment.R$styleable: int GradientColorItem_android_offset
androidx.loader.R$layout: int notification_action_tombstone
com.appspa.update.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x
androidx.appcompat.R$attr: int actionBarTabStyle
androidx.customview.R$dimen: int notification_subtext_size
com.appspa.demo.R$layout: int abc_alert_dialog_button_bar_material
com.appspa.update.R$styleable: int Toolbar_maxButtonHeight
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.util.Map nameToConstant
retrofit2.ParameterHandler$QueryMap: retrofit2.Converter valueConverter
androidx.appcompat.R$dimen: int hint_pressed_alpha_material_light
androidx.appcompat.view.ContextThemeWrapper: android.view.LayoutInflater mInflater
com.appspa.update.R$id: int customPanel
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display1
com.appspa.update.R$attr: int titleTextStyle
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO
com.zhy.http.okhttp.callback.Callback: com.zhy.http.okhttp.callback.Callback CALLBACK_DEFAULT
com.appspa.demo.R$styleable: int ViewBackgroundHelper_android_background
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
androidx.appcompat.R$style: int TextAppearance_AppCompat_Subhead_Inverse
okhttp3.internal.http1.Http1Codec$ChunkedSink: okhttp3.internal.http1.Http1Codec this$0
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver$ConsumerIndexHolder: io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver parent
org.aspectj.runtime.reflect.StringMaker: boolean shortPrimaryTypeNames
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_checked
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
androidx.appcompat.R$style: int Widget_AppCompat_DropDownItem_Spinner
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.observers.BaseTestConsumer: int initialFusionMode
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: long serialVersionUID
org.aspectj.internal.lang.reflect.DeclareParentsImpl: java.lang.String parentsString
com.appspa.demo.R$attr: int fontProviderAuthority
com.appspa.update.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: io.reactivex.Observer downstream
com.xuexiang.xhttp2.utils.Utils: java.lang.String APP_EXT_STORAGE_PATH
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_GROUP_SUMMARY
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: io.reactivex.functions.Predicate predicate
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates
androidx.core.app.NotificationCompat$Builder: android.content.Context mContext
com.google.gson.Gson: java.util.List builderHierarchyFactories
com.appspa.update.R$dimen: int abc_config_prefDialogWidth
androidx.appcompat.R$drawable: int abc_ic_search_api_material
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_ERROR
androidx.loader.R$drawable: int notification_bg_low
androidx.core.R$style: int TextAppearance_Compat_Notification_Line2
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: org.reactivestreams.Subscriber downstream
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: io.reactivex.functions.Consumer onNext
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.R$drawable: int abc_scrubber_track_mtrl_alpha
okhttp3.internal.platform.OptionalMethod: java.lang.Class returnType
com.xuexiang.xhttp2.R$attr: int actionMenuTextAppearance
androidx.loader.R$attr: int fontWeight
androidx.annotation.VisibleForTesting: int PROTECTED
androidx.viewpager.R$dimen: int notification_main_column_padding_top
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: io.reactivex.internal.util.AtomicThrowable error
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
androidx.vectordrawable.R$id: int time
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: boolean hasValue
androidx.vectordrawable.animated.R$layout: int notification_action_tombstone
com.appspa.demo.R$attr: int actionModeCloseButtonStyle
com.xuexiang.xhttp2.R$attr: int progressBarPadding
com.appspa.demo.R$dimen: int abc_text_size_body_2_material
androidx.appcompat.R$styleable: int RecycleListView_paddingTopNoTitle
androidx.versionedparcelable.VersionedParcelStream: java.io.DataInputStream mMasterInput
com.appspa.update.R$styleable: int SearchView_submitBackground
androidx.core.app.NotificationCompat$Action$Builder: java.util.ArrayList mRemoteInputs
androidx.vectordrawable.R$styleable: int GradientColor_android_endX
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator parent
io.reactivex.internal.operators.parallel.ParallelConcatMap: io.reactivex.functions.Function mapper
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_EXPAND
androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver INNER_DISPOSED
androidx.drawerlayout.R$styleable: int GradientColorItem_android_color
org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.String name
com.xuexiang.xhttp2.R$color: int tooltip_background_dark
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent
androidx.appcompat.widget.ListPopupWindow: android.view.View mDropDownAnchorView
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTint
androidx.core.app.FrameMetricsAggregator: int LAYOUT_MEASURE_DURATION
androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: io.reactivex.Observer downstream
okio.Timeout: okio.Timeout NONE
com.appspa.update.R$attr: int subtitleTextColor
androidx.viewpager.widget.ViewPager$3: androidx.viewpager.widget.ViewPager this$0
com.appspa.demo.R$dimen: int abc_dropdownitem_text_padding_right
okhttp3.internal.cache.DiskLruCache: java.util.concurrent.Executor executor
com.appspa.update.R$styleable: int GradientColor_android_type
com.appspa.update.R$layout: int abc_action_bar_title_item
com.appspa.update.R$styleable: int LinearLayoutCompat_android_orientation
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownAlwaysVisible
com.appspa.update.R$dimen: int abc_list_item_height_material
androidx.appcompat.resources.R$id: int async
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okhttp3.internal.http1.Http1Codec this$0
androidx.fragment.app.DialogFragment: java.lang.String SAVED_STYLE
androidx.core.provider.SelfDestructiveThread: int mGeneration
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int mMaximumFlingVelocity
androidx.appcompat.R$styleable: int ActionBar_elevation
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: io.reactivex.disposables.Disposable upstream
org.aspectj.runtime.internal.CFlowStack: org.aspectj.runtime.internal.cflowstack.ThreadStack stackProxy
io.reactivex.plugins.RxJavaPlugins: io.reactivex.functions.Function onConnectableFlowableAssembly
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable: io.reactivex.Scheduler scheduler
com.appspa.demo.R$styleable: int AppCompatTextView_autoSizeMinTextSize
io.reactivex.processors.MulticastProcessor: int limit
androidx.core.internal.view.SupportMenu: int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
com.appspa.demo.R$styleable: int Spinner_popupTheme
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderFetchTimeout
okhttp3.RealCall: okhttp3.EventListener eventListener
androidx.appcompat.widget.SuggestionsAdapter: boolean DBG
com.appspa.update.R$drawable: int btn_radio_off_to_on_mtrl_animation
androidx.appcompat.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.appspa.update.R$attr: int textAppearanceListItemSmall
androidx.appcompat.R$attr: int colorButtonNormal
com.appspa.demo.R$color: int abc_tint_spinner
com.xuexiang.xhttp2.R$style: int Widget_Compat_NotificationActionContainer
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver: io.reactivex.disposables.CompositeDisposable set
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$AlertParams this$0
androidx.customview.R$styleable: int GradientColor_android_centerY
io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction: java.util.concurrent.TimeUnit unit
androidx.appcompat.R$style: int Base_Widget_AppCompat_Spinner_Underlined
io.reactivex.subscribers.DisposableSubscriber: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast: long serialVersionUID
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: boolean cancelled
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_SECURITY_VIOLATION
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: int fusionMode
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_CompoundButton_CheckBox
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: io.reactivex.internal.util.AtomicThrowable error
androidx.loader.R$dimen: int notification_main_column_padding_top
androidx.appcompat.R$attr: int switchMinWidth
androidx.activity.R$id: int right_side
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.xuexiang.xhttp2.R$styleable: int[] ViewBackgroundHelper
io.reactivex.internal.operators.flowable.FlowableScanSeed: java.util.concurrent.Callable seedSupplier
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] EMPTY_STRING_ARRAY
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownVerticalOffsetSet
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: long timeout
com.appspa.update.R$styleable: int LinearLayoutCompat_android_weightSum
com.appspa.update.entity.UpdateEntity: com.appspa.update.proxy.IUpdateHttpService mIUpdateHttpService
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String TOOLTIP_TEXT_KEY
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_END
androidx.fragment.app.Fragment: java.lang.String mWho
androidx.drawerlayout.R$attr: int fontProviderQuery
okhttp3.internal.connection.StreamAllocation: boolean reportedAcquired
io.reactivex.internal.schedulers.IoScheduler: java.util.concurrent.TimeUnit KEEP_ALIVE_UNIT
androidx.core.R$dimen: int notification_action_icon_size
androidx.appcompat.R$styleable: int StateListDrawable_android_dither
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: int bufferSize
com.appspa.demo.R$styleable: int FontFamilyFont_android_font
androidx.viewpager.widget.PagerAdapter: int POSITION_UNCHANGED
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: long serialVersionUID
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: long serialVersionUID
com.appspa.update.R$dimen: int notification_large_icon_width
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level[] $VALUES
com.appspa.demo.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.R$color: int material_grey_100
io.reactivex.internal.operators.completable.CompletableCreate: io.reactivex.CompletableOnSubscribe source
com.appspa.update.R$styleable: int Toolbar_titleMargins
androidx.core.app.RemoteInput: int SOURCE_FREE_FORM_INPUT
com.appspa.update.R$attr: int lastBaselineToBottomHeight
io.reactivex.internal.subscribers.StrictSubscriber: io.reactivex.internal.util.AtomicThrowable error
okhttp3.internal.Util: java.nio.charset.Charset UTF_8
androidx.fragment.R$attr: int ttcIndex
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: org.reactivestreams.Subscriber downstream
androidx.drawerlayout.R$attr: int fontWeight
androidx.viewpager.widget.ViewPager$ItemInfo: int position
androidx.core.view.MotionEventCompat: int ACTION_HOVER_MOVE
io.reactivex.internal.operators.observable.ObservableTimeout: io.reactivex.ObservableSource other
androidx.appcompat.R$styleable: int SearchView_submitBackground
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.appspa.update.R$xml: int update_file_paths
com.appspa.demo.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.appspa.update.R$styleable: int SearchView_closeIcon
okio.Okio$1: java.io.OutputStream val$out
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: long serialVersionUID
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Headline
com.appspa.update.R$id: int iv_top
com.google.gson.internal.bind.TypeAdapters$27: java.lang.String HOUR_OF_DAY
androidx.appcompat.view.menu.ActionMenuItemView: boolean mExpandedFormat
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: int skip
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: androidx.appcompat.widget.ListPopupWindow this$0
com.xuexiang.xhttp2.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.fragment.app.Fragment: boolean mHidden
io.reactivex.internal.subscriptions.SubscriptionArbiter: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableSingleSingle: java.lang.Object defaultValue
com.appspa.demo.R$attr: int closeIcon
androidx.appcompat.widget.DropDownListView: int INVALID_POSITION
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: int offset
com.xuexiang.xhttp2.R$attr: int actionBarStyle
androidx.appcompat.R$styleable: int AppCompatTheme_borderlessButtonStyle
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: io.reactivex.Scheduler scheduler
androidx.core.view.ViewCompat: int MEASURED_STATE_TOO_SMALL
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver inner
androidx.appcompat.resources.R$styleable: int[] ColorStateListItem
com.xuexiang.xhttp2.R$attr: int font
androidx.customview.R$layout: int notification_action_tombstone
androidx.appcompat.graphics.drawable.StateListDrawable: boolean mMutated
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_startY
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mFullScreenIntent
com.appspa.demo.R$string: int abc_activitychooserview_choose_application
com.xuexiang.xhttp2.R$attr: int windowFixedWidthMinor
com.xuexiang.xhttp2.R$attr: int autoCompleteTextViewStyle
com.appspa.update.R$dimen: int space_button_text_size_mini
androidx.core.provider.FontsContractCompat$TypefaceResult: android.graphics.Typeface mTypeface
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: java.lang.String mName
androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMajor
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver otherObserver
io.reactivex.internal.schedulers.SchedulerWhen: io.reactivex.processors.FlowableProcessor workerProcessor
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver[] EMPTY
io.reactivex.internal.subscribers.BlockingBaseSubscriber: java.lang.Object value
androidx.loader.R$attr: int fontProviderQuery
androidx.appcompat.R$drawable: int abc_control_background_material
com.xuexiang.xhttp2.R$attr: int fontProviderCerts
io.reactivex.internal.operators.completable.CompletableDelay: java.util.concurrent.TimeUnit unit
androidx.appcompat.R$attr: int actionOverflowButtonStyle
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
com.appspa.demo.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.xuexiang.xhttp2.R$dimen: int abc_dropdownitem_text_padding_left
androidx.lifecycle.ClassesInfoCache: java.util.Map mCallbackMap
retrofit2.RequestFactory$Builder: boolean isFormEncoded
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: boolean done
androidx.appcompat.R$string: int abc_searchview_description_query
androidx.appcompat.R$styleable: int PopupWindow_overlapAnchor
androidx.appcompat.R$id: int accessibility_custom_action_0
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_CUSTOM
com.appspa.update.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.google.gson.DefaultDateTypeAdapter: java.util.List dateFormats
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: long serialVersionUID
com.appspa.demo.R$styleable: int AppCompatTheme_dialogPreferredPadding
okhttp3.Response$Builder: okhttp3.Handshake handshake
io.reactivex.internal.operators.flowable.FlowableRange: int start
androidx.appcompat.R$attr: int editTextColor
androidx.versionedparcelable.VersionedParcel: int EX_BAD_PARCELABLE
io.reactivex.internal.queue.SpscArrayQueue: int mask
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: io.reactivex.internal.disposables.SequentialDisposable task
androidx.appcompat.R$styleable: int MenuItem_actionViewClass
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: io.reactivex.functions.Function combiner
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: boolean cancelled
okhttp3.internal.http.RealInterceptorChain: int index
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean cancelled
io.reactivex.internal.operators.flowable.FlowableReplay$Node: java.lang.Object value
androidx.vectordrawable.R$dimen: int compat_control_corner_material
okio.SegmentPool: long byteCount
androidx.fragment.app.Fragment: boolean mMenuVisible
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mLogo
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver: io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber parent
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: io.reactivex.MaybeObserver downstream
androidx.activity.R$id: int tag_unhandled_key_event_manager
androidx.core.view.InputDeviceCompat: int SOURCE_ANY
com.xuexiang.xhttp2.R$color: int abc_btn_colored_borderless_text_material
com.appspa.demo.R$id: int accessibility_custom_action_22
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: long serialVersionUID
androidx.appcompat.R$attr: int dialogPreferredPadding
androidx.appcompat.widget.AppCompatDrawableManager: java.lang.String TAG
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: java.util.concurrent.Callable bufferSupplier
androidx.appcompat.R$drawable: int notification_action_background
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int LINECAP_BUTT
com.xuexiang.xhttp2.R$styleable: int RecycleListView_paddingTopNoTitle
io.reactivex.internal.operators.single.SingleDoOnSubscribe: io.reactivex.functions.Consumer onSubscribe
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
androidx.fragment.R$dimen: int notification_small_icon_background_padding
androidx.loader.R$styleable: int[] ColorStateListItem
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type ownerType
com.xuexiang.xhttp2.R$color: int material_grey_50
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasYOffset
androidx.collection.LongSparseArray: long[] mKeys
com.zhy.http.okhttp.request.RequestCall: okhttp3.OkHttpClient clone
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
androidx.core.R$styleable: int GradientColor_android_centerColor
androidx.drawerlayout.R$attr: int fontProviderAuthority
com.appspa.update.R$id: int image
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: java.util.concurrent.atomic.AtomicBoolean once
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_windowFixedWidthMajor
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route
com.appspa.demo.R$attr: int voiceIcon
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: long count
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.String TAG
androidx.appcompat.R$bool: int abc_config_actionMenuItemAllCaps
androidx.appcompat.R$attr: int contentDescription
com.xuexiang.xhttp2.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.appspa.demo.R$style: int Theme_AppCompat_NoActionBar
androidx.appcompat.widget.SuggestionsAdapter: int QUERY_LIMIT
androidx.fragment.R$dimen: int notification_large_icon_width
com.appspa.demo.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
androidx.appcompat.R$anim: int abc_tooltip_enter
com.appspa.demo.R$style: int Base_Theme_AppCompat_Light
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: int bufferSize
com.appspa.demo.R$style: int TextAppearance_AppCompat_Subhead_Inverse
androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification
androidx.viewpager.widget.ViewPager: int mActivePointerId
androidx.appcompat.R$styleable: int ActionMode_background
androidx.vectordrawable.R$id: int icon
io.reactivex.internal.operators.maybe.MaybeZipArray$SingletonArrayFunc: io.reactivex.internal.operators.maybe.MaybeZipArray this$0
com.jakewharton.disklrucache.DiskLruCache$Entry: java.lang.String key
com.appspa.update.R$style: int Widget_AppCompat_ProgressBar
org.aspectj.runtime.reflect.Factory: java.lang.Object[] NO_ARGS
androidx.appcompat.app.TwilightCalculator: float DEGREES_TO_RADIANS
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess: io.reactivex.functions.Consumer onAfterSuccess
androidx.appcompat.widget.Toolbar: int mTitleMarginTop
com.xuexiang.xhttp2.R$styleable: int ActionBar_elevation
androidx.core.widget.ContentLoadingProgressBar: int MIN_SHOW_TIME
androidx.appcompat.R$id: int search_badge
androidx.core.app.NotificationManagerCompat$SideChannelManager: int MSG_SERVICE_CONNECTED
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_CLOSE
com.appspa.demo.R$styleable: int AppCompatTheme_actionBarTabStyle
com.xuexiang.xhttp2.R$anim: int abc_slide_in_top
androidx.vectordrawable.R$id: int tag_accessibility_heading
androidx.appcompat.view.menu.CascadingMenuPopup$1: androidx.appcompat.view.menu.CascadingMenuPopup this$0
androidx.viewpager.R$styleable: int FontFamily_fontProviderQuery
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: android.os.Bundle mBundle
androidx.fragment.app.FragmentTransaction: int OP_REPLACE
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: long emitted
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_CLOSED
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_KEYFRAME_VALUE
androidx.core.view.InputDeviceCompat: int SOURCE_GAMEPAD
com.google.gson.internal.bind.TypeAdapters$35$1: java.lang.Class val$requestedType
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int ITEM_VIEW_TYPE_COUNT
androidx.appcompat.R$attr: int fontStyle
androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable: long serialVersionUID
androidx.appcompat.R$dimen: int tooltip_corner_radius
com.appspa.update.R$id: int blocking
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_shadowRadius
com.appspa.demo.R$dimen: int abc_text_size_display_4_material
com.appspa.update.entity.PromptEntity: java.lang.String mTopDrawableTag
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent mIntent
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY
com.appspa.demo.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling RETRY
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean mDelegateTargeted
com.appspa.demo.R$color: int abc_hint_foreground_material_dark
com.appspa.update.R$drawable: int abc_list_divider_material
io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker worker
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_tooltipFrameBackground
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: long firstEmission
androidx.appcompat.R$drawable: int abc_text_cursor_material
com.xuexiang.xhttp2.R$attr: int listItemLayout
androidx.appcompat.resources.R$id: int tag_screen_reader_focusable
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: io.reactivex.MaybeSource fallback
com.appspa.update.widget.NumberProgressBar: int mUnreachedBarColor
com.appspa.demo.R$attr: int drawableTintMode
androidx.core.view.MotionEventCompat: int AXIS_BRAKE
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: org.reactivestreams.Subscriber downstream
com.xuexiang.xhttp2.R$styleable: int ActionBar_itemPadding
com.appspa.update.R$style: int TextAppearance_AppCompat_Large_Inverse
androidx.appcompat.R$drawable: int notification_icon_background
com.appspa.demo.R$styleable: int ViewStubCompat_android_inflatedId
com.appspa.demo.R$color: int error_color_material_dark
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: long index
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: com.xuexiang.xhttp2.subsciber.impl.IProgressLoader mIProgressLoader
retrofit2.HttpServiceMethod$CallAdapted: retrofit2.CallAdapter callAdapter
com.appspa.demo.R$attr: int dividerPadding
androidx.core.app.NotificationCompat$Action$WearableExtender: int FLAG_HINT_DISPLAY_INLINE
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: io.reactivex.functions.BiFunction accumulator
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
okhttp3.CacheControl$Builder: boolean noStore
androidx.appcompat.widget.TooltipCompatHandler: long HOVER_HIDE_TIMEOUT_MS
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver: io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver parent
org.aspectj.lang.reflect.AjTypeSystem: java.util.Map ajTypes
com.appspa.update.UpdateManager: boolean mIsWifiOnly
androidx.drawerlayout.widget.DrawerLayout: androidx.customview.widget.ViewDragHelper mLeftDragger
com.appspa.demo.R$attr: int thickness
com.xuexiang.xhttp2.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle: io.reactivex.SingleSource other
com.xuexiang.xhttp2.R$styleable: int TextAppearance_android_textColorHint
com.appspa.update.R$id: int split_action_bar
com.appspa.demo.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
io.reactivex.internal.operators.maybe.MaybeFromSingle: io.reactivex.SingleSource source
io.reactivex.internal.operators.observable.ObservableFromPublisher: org.reactivestreams.Publisher source
androidx.core.text.util.FindAddress: java.lang.String WORD_DELIM
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: androidx.appcompat.widget.ForwardingListener this$0
io.reactivex.internal.operators.observable.ObservableReplay$ScheduledReplaySupplier: long maxAge
io.reactivex.internal.operators.flowable.FlowableFromCallable: java.util.concurrent.Callable callable
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX
androidx.loader.R$drawable: int notification_icon_background
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription[] TERMINATED
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mInternalBackgroundTint
androidx.appcompat.R$styleable: int ActionMode_backgroundSplit
com.xuexiang.xhttp2.R$styleable: int Toolbar_title
com.google.gson.internal.Excluder: boolean requireExpose
androidx.core.graphics.ColorUtils: double XYZ_EPSILON
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mWeight
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: io.reactivex.functions.Predicate predicate
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: androidx.core.widget.AutoScrollHelper this$0
io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver: io.reactivex.CompletableObserver co
com.appspa.update.R$styleable: int GradientColor_android_gradientRadius
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: java.util.concurrent.atomic.AtomicLong requested
com.appspa.demo.R$attr: int listPreferredItemPaddingStart
androidx.core.widget.AutoScrollHelper: int DEFAULT_EDGE_TYPE
io.reactivex.internal.util.AppendOnlyLinkedArrayList: java.lang.Object[] head
org.aspectj.lang.reflect.DeclareAnnotation$Kind: org.aspectj.lang.reflect.DeclareAnnotation$Kind Method
androidx.drawerlayout.widget.DrawerLayout: boolean CHILDREN_DISALLOW_INTERCEPT
com.appspa.update.R$id: int dialog_button
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: java.lang.String TAG
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: java.util.concurrent.atomic.AtomicLong totalRequested
com.appspa.update.R$style: int TextAppearance_AppCompat_Tooltip
androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: androidx.cursoradapter.widget.CursorAdapter this$0
io.reactivex.internal.functions.Functions$ActionConsumer: io.reactivex.functions.Action action
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontVariationSettings
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator parent
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: int end
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.appspa.demo.R$attr: int fontVariationSettings
androidx.viewpager.widget.ViewPager: boolean mScrollingCacheEnabled
com.xuexiang.xhttp2.R$id: int unchecked
com.appspa.demo.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.appspa.update.R$string: int abc_menu_sym_shortcut_label
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: long serialVersionUID
androidx.core.app.ActivityRecreator$1: java.lang.Object val$token
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: io.reactivex.functions.Predicate predicate
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating
com.appspa.update.R$styleable: int StateListDrawable_android_variablePadding
com.xuexiang.xhttp2.annotation.NetMethod: java.lang.String DELETE
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle: int maxConcurrency
androidx.appcompat.widget.SuggestionsAdapter: int INVALID_INDEX
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnComplete: io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber this$0
retrofit2.ParameterHandler$1: retrofit2.ParameterHandler this$0
com.appspa.update.R$styleable: int MenuView_subMenuArrow
androidx.appcompat.R$attr: int theme
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy MISSING
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_7
io.reactivex.internal.operators.flowable.FlowableAnySingle: io.reactivex.functions.Predicate predicate
androidx.vectordrawable.animated.R$id: int accessibility_action_clickable_span
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: long count
com.xuexiang.xhttp2.R$styleable: int FontFamily_fontProviderQuery
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: io.reactivex.internal.util.AtomicThrowable errors
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: java.util.concurrent.atomic.AtomicBoolean connect
androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator
com.appspa.update.R$string: int space_error_prompt_unknown
androidx.vectordrawable.R$id: int accessibility_custom_action_27
com.xuexiang.xhttp2.R$attr: int actionModeStyle
com.appspa.update.R$id: int action_bar_spinner
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitleCondensed
io.reactivex.internal.operators.observable.ObserverResourceWrapper: java.util.concurrent.atomic.AtomicReference upstream
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.widget.ResourceManagerInternal: java.lang.String TAG
com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType: com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType BODY
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: int index
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: long serialVersionUID
com.appspa.update.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.vectordrawable.animated.R$id: int action_divider
androidx.appcompat.R$attr: int closeIcon
io.reactivex.subjects.BehaviorSubject: io.reactivex.subjects.BehaviorSubject$BehaviorDisposable[] EMPTY
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: io.reactivex.Scheduler scheduler
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.reflect.Method getMethod
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
io.reactivex.subjects.UnicastSubject: boolean disposed
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.loader.R$dimen: int notification_action_text_size
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: boolean missed
com.appspa.demo.R$drawable: int tooltip_frame_light
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence mTextOn
androidx.core.util.TimeUtils: int SECONDS_PER_HOUR
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.appspa.demo.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
io.reactivex.internal.operators.parallel.ParallelMap: io.reactivex.parallel.ParallelFlowable source
com.appspa.demo.R$styleable: int AppCompatTheme_searchViewStyle
com.appspa.demo.R$drawable: int abc_text_select_handle_right_mtrl_light
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: io.reactivex.disposables.Disposable upstream
androidx.loader.R$attr: int fontProviderAuthority
androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material
androidx.core.provider.FontsContractCompat$Columns: java.lang.String WEIGHT
com.zhy.http.okhttp.cookie.store.SerializableHttpCookie: okhttp3.Cookie clientCookie
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe: io.reactivex.functions.Function mapper
androidx.appcompat.view.menu.ActionMenuItem: int mFlags
io.reactivex.internal.subscriptions.ScalarSubscription: int CANCELLED
androidx.viewpager.widget.ViewPager: int mTopPageBounds
com.appspa.demo.R$id: int search_button
androidx.core.content.IntentCompat: java.lang.String EXTRA_HTML_TEXT
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: long count
androidx.appcompat.view.SupportActionModeWrapper: android.content.Context mContext
com.appspa.demo.R$styleable: int AppCompatTheme_actionModeStyle
com.appspa.update.R$string: int abc_action_mode_done
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe: io.reactivex.MaybeSource other
com.xuexiang.xhttp2.request.BaseRequest: boolean mTimeStamp
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
io.reactivex.internal.subscriptions.ScalarSubscription: int REQUESTED
com.appspa.demo.R$styleable: int AppCompatTextView_fontFamily
okhttp3.MediaType: java.lang.String type
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: java.util.concurrent.atomic.AtomicReference other
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener
com.xuexiang.xhttp2.R$styleable: int Toolbar_collapseContentDescription
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: java.util.concurrent.TimeUnit unit
androidx.appcompat.R$styleable: int Spinner_android_dropDownWidth
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$attr: int actionBarTheme
androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: retrofit2.Call call
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator parent
androidx.appcompat.widget.ListPopupWindow: int mListItemExpandMaximum
com.appspa.update.R$attr: int actionBarTabBarStyle
com.appspa.update.R$anim: int abc_popup_enter
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: long serialVersionUID
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PagerObserver mObserver
com.appspa.demo.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.appspa.update.R$layout: int custom_dialog
com.xuexiang.xhttp2.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
androidx.appcompat.R$attr: int divider
com.appspa.update.R$style: int Base_TextAppearance_AppCompat_Caption
androidx.appcompat.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.appspa.update.R$styleable: int AppCompatTheme_colorButtonNormal
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.String KEY_FLAGS
com.appspa.update.R$id: int scrollIndicatorDown
com.appspa.demo.R$attr: int buttonBarNegativeButtonStyle
androidx.viewpager.R$id: int action_divider
androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: boolean mainDone
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: long count
io.reactivex.internal.operators.completable.CompletableTimeout: io.reactivex.Scheduler scheduler
com.appspa.update.R$styleable: int Toolbar_collapseContentDescription
com.appspa.demo.R$drawable: int abc_vector_test
com.appspa.demo.R$attr: int alertDialogButtonGroupStyle
com.appspa.demo.R$drawable: int abc_cab_background_top_mtrl_alpha
androidx.appcompat.R$styleable: int Toolbar_contentInsetStart
com.appspa.update.R$styleable: int ActionMenuItemView_android_minWidth
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: long serialVersionUID
androidx.appcompat.R$dimen: int abc_text_size_small_material
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: int bufferSize
androidx.appcompat.view.SupportActionModeWrapper: androidx.appcompat.view.ActionMode mWrappedObject
com.appspa.update.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.core.app.JobIntentService: boolean mStopped
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SamplerObserver: io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver parent
androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler
com.appspa.demo.R$attr: int iconifiedByDefault
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: long serialVersionUID
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_PopupMenu_Overflow
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNegativeButtonListener
androidx.customview.widget.ViewDragHelper: int STATE_DRAGGING
androidx.viewpager.widget.PagerTabStrip: int MIN_TEXT_SPACING
com.xuexiang.xhttp2.R$attr: int srcCompat
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_IF_ROOM
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter STRING_BUFFER
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: long consumerIndex
io.reactivex.internal.operators.single.SingleFlatMap: io.reactivex.SingleSource source
androidx.appcompat.app.WindowDecorActionBar$2: androidx.appcompat.app.WindowDecorActionBar this$0
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: java.util.concurrent.atomic.AtomicInteger wip
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle: io.reactivex.MaybeSource source
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: io.reactivex.disposables.Disposable upstream
com.appspa.update.R$drawable: int abc_scrubber_track_mtrl_alpha
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: long serialVersionUID
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: long serialVersionUID
androidx.appcompat.R$styleable: int SearchView_goIcon
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher: int maxConcurrency
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
com.appspa.demo.R$attr: int colorControlNormal
androidx.appcompat.app.AlertController: int mViewSpacingTop
com.xuexiang.xhttp2.R$styleable: int AppCompatSeekBar_android_thumb
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionBarTabBarStyle
androidx.vectordrawable.animated.R$id: int tag_accessibility_clickable_spans
com.appspa.demo.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.appspa.demo.R$id: int text2
androidx.activity.R$id: int time
com.appspa.update.R$drawable: int abc_ic_menu_share_mtrl_alpha
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables
com.xuexiang.xhttp2.cache.model.CacheMode: java.lang.String className
androidx.appcompat.resources.R$attr: int fontWeight
com.appspa.demo.R$layout: int abc_list_menu_item_checkbox
io.reactivex.internal.operators.observable.ObservableScanSeed: java.util.concurrent.Callable seedSupplier
com.appspa.update.R$styleable: int TextAppearance_android_shadowRadius
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber parent
com.appspa.demo.R$id: int titleDividerNoCustom
com.appspa.update.widget.NumberProgressBar: float mUnreachedBarHeight
com.appspa.demo.R$id: int icon_group
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup mPopup
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: boolean done
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: boolean disposed
androidx.customview.R$id: int right_side
androidx.appcompat.widget.LinearLayoutCompat: int HORIZONTAL
androidx.fragment.app.FragmentManagerImpl: int mCurState
com.appspa.update.R$attr: int titleMarginBottom
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: long emitted
com.appspa.demo.R$style: int Base_Widget_AppCompat_EditText
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeBackground
androidx.appcompat.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
androidx.annotation.VisibleForTesting: int PRIVATE
com.appspa.demo.R$dimen: int abc_dialog_min_width_major
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: boolean otherDone
androidx.fragment.app.BackStackState: boolean mReorderingAllowed
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
com.xuexiang.xhttp2.R$integer: int cancel_button_image_alpha
androidx.fragment.app.FragmentTabHost$TabInfo: java.lang.Class clss
com.xuexiang.xhttp2.R$id: int off
com.xuexiang.xhttp2.R$drawable: int btn_radio_off_mtrl
com.google.gson.Gson: boolean DEFAULT_PRETTY_PRINT
androidx.appcompat.app.AlertController$5: androidx.appcompat.app.AlertController this$0
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
com.xuexiang.xhttp2.R$anim: int abc_grow_fade_in_from_bottom
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: java.lang.Object item
org.aspectj.lang.Aspects14: java.lang.Class[] PERTYPEWITHIN_CLASS_ARRAY
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: boolean disposed
androidx.fragment.app.DialogFragment: int STYLE_NO_INPUT
com.zhy.http.okhttp.utils.L: boolean debug
retrofit2.HttpException: java.lang.String message
androidx.appcompat.R$styleable: int ActionBar_homeAsUpIndicator
io.reactivex.internal.operators.observable.ObservableGenerate: io.reactivex.functions.BiFunction generator
androidx.loader.R$id: int actions
com.appspa.demo.R$dimen: int abc_text_size_display_3_material
com.appspa.update.R$styleable: int AppCompatTheme_actionModeCutDrawable
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_ttcIndex
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: io.reactivex.Scheduler scheduler
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Inverse
androidx.appcompat.app.ActionBarDrawerToggle$1: androidx.appcompat.app.ActionBarDrawerToggle this$0
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.completable.CompletableOnErrorComplete: io.reactivex.CompletableSource source
com.appspa.update.R$attr: int windowFixedHeightMajor
androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.xuexiang.xhttp2.callback.CallClazzProxy: java.lang.reflect.Type type
androidx.core.content.FileProvider: java.io.File DEVICE_ROOT
androidx.appcompat.R$style: int Widget_AppCompat_ListMenuView
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_centerY
androidx.appcompat.R$string: int abc_capital_on
com.xuexiang.xhttp2.R$style: int Base_Theme_AppCompat_CompactMenu
androidx.appcompat.widget.LinearLayoutCompat: int INDEX_CENTER_VERTICAL
com.xuexiang.xhttp2.R$color: int dim_foreground_material_light
androidx.appcompat.widget.SwitchCompat: float mTouchX
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper[] $VALUES
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: long serialVersionUID
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: boolean done
io.reactivex.internal.operators.observable.ObservableSkipUntil: io.reactivex.ObservableSource other
androidx.loader.R$dimen: int notification_large_icon_height
io.reactivex.internal.operators.flowable.FlowableJoin: io.reactivex.functions.BiFunction resultSelector
androidx.vectordrawable.R$id: int accessibility_custom_action_31
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Title
androidx.appcompat.R$styleable: int AppCompatTheme_dialogCornerRadius
io.reactivex.internal.operators.observable.ObservableAutoConnect: io.reactivex.observables.ConnectableObservable source
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_SCROLLED
com.xuexiang.xhttp2.R$attr: int titleTextStyle
com.appspa.update.R$id: int select_dialog_listview
androidx.appcompat.view.menu.ListMenuPresenter: java.lang.String VIEWS_TAG
io.reactivex.internal.operators.observable.ObservableReduceMaybe: io.reactivex.functions.BiFunction reducer
androidx.activity.R$attr: int fontProviderAuthority
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
com.google.gson.internal.ConstructorConstructor$1: com.google.gson.InstanceCreator val$typeCreator
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_UNAVAILABLE
retrofit2.adapter.rxjava2.ResultObservable$ResultObserver: io.reactivex.Observer observer
androidx.core.app.NotificationCompat$MessagingStyle: int MAXIMUM_RETAINED_MESSAGES
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind ERROR
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: java.util.concurrent.atomic.AtomicReference upstream
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect mTempScreenRect
io.reactivex.internal.operators.maybe.MaybeContains: io.reactivex.MaybeSource source
androidx.appcompat.view.StandaloneActionMode: android.content.Context mContext
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: io.reactivex.disposables.Disposable upstream
com.appspa.demo.R$style: int Base_AlertDialog_AppCompat
com.appspa.demo.R$attr: int xnpb_current
androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted
com.xuexiang.xhttp2.transform.func.ApiResultFunc: boolean mKeepJson
androidx.appcompat.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.appcompat.app.AlertController$AlertParams: android.database.Cursor mCursor
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: int sourceMode
androidx.appcompat.R$attr: int checkboxStyle
androidx.fragment.app.FragmentTransitionImpl$3: androidx.fragment.app.FragmentTransitionImpl this$0
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber: io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber parent
com.appspa.demo.R$anim: int abc_popup_enter
androidx.appcompat.resources.R$styleable: int GradientColor_android_startColor
androidx.appcompat.widget.SwitchCompat: android.util.Property THUMB_POS
androidx.appcompat.R$attr: int searchViewStyle
androidx.appcompat.resources.R$id: int accessibility_custom_action_22
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMajor
com.appspa.update.R$styleable: int MenuItem_android_orderInCategory
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.util.Queue evictedGroups
androidx.fragment.R$dimen: int notification_content_margin_start
com.appspa.demo.R$attr: int actionBarSize
com.appspa.demo.R$drawable: int abc_item_background_holo_dark
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.lang.reflect.Method checkServerTrusted
io.reactivex.internal.operators.observable.ObservableCollect: io.reactivex.functions.BiConsumer collector
com.xuexiang.xhttp2.R$attr: int showTitle
com.appspa.demo.R$styleable: int[] StateListDrawableItem
com.xuexiang.xhttp2.R$style: int Base_V21_Theme_AppCompat
io.reactivex.internal.queue.SpscArrayQueue: java.lang.Integer MAX_LOOK_AHEAD_STEP
io.reactivex.internal.observers.BiConsumerSingleObserver: long serialVersionUID
androidx.activity.R$id: int accessibility_custom_action_10
androidx.viewpager.widget.ViewPager: int mMaximumVelocity
com.appspa.demo.R$dimen: int abc_text_size_display_2_material
androidx.appcompat.resources.R$styleable: int[] GradientColorItem
androidx.appcompat.R$string: int abc_shareactionprovider_share_with
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: io.reactivex.internal.disposables.SequentialDisposable disposables
com.google.gson.GsonBuilder: java.util.List factories
com.xuexiang.xhttp2.R$styleable: int[] ViewStubCompat
androidx.vectordrawable.R$styleable: int GradientColor_android_tileMode
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.SparseArrayCompat mStateIds
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3: com.xuexiang.xhttp2.cache.RxCache val$rxCache
io.reactivex.internal.schedulers.InstantPeriodicTask: java.lang.Thread runner
retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable: retrofit2.Call call
com.appspa.demo.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
io.reactivex.internal.operators.completable.CompletableTimeout: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: long delay
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: java.util.concurrent.TimeUnit unit
com.appspa.demo.entity.CustomResult$VersionInfo: long size
com.appspa.demo.R$color: int secondary_text_disabled_material_light
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode mButtonTintMode
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: long serialVersionUID
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo
com.appspa.demo.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
io.reactivex.internal.operators.flowable.FlowableCache: boolean done
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: boolean gate
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: java.util.concurrent.atomic.AtomicBoolean cancelled
okhttp3.HttpUrl: java.util.List pathSegments
androidx.appcompat.view.menu.MenuBuilder: boolean mIsActionItemsStale
com.appspa.update.R$dimen: int abc_seekbar_track_background_height_material
androidx.fragment.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue queue
com.google.gson.stream.JsonScope: int CLOSED
com.appspa.update.R$styleable: int AppCompatImageView_tint
com.appspa.update.R$styleable: int AppCompatTheme_android_windowAnimationStyle
com.appspa.demo.R$bool: int abc_allow_stacked_button_bar
okio.SegmentedByteString: int[] directory
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: io.reactivex.SingleObserver downstream
com.appspa.demo.R$id: int line3
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: io.reactivex.internal.util.AtomicThrowable errors
com.appspa.demo.R$color: int bright_foreground_material_dark
androidx.loader.R$color: int ripple_material_light
okio.DeflaterSink: boolean closed
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MESSAGING_STYLE_USER
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: io.reactivex.functions.Consumer disposeState
okhttp3.MultipartBody: long contentLength
androidx.appcompat.widget.SearchView$2: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.R$style: int Base_Widget_AppCompat_EditText
androidx.appcompat.R$drawable: int abc_ic_star_half_black_48dp
org.aspectj.internal.lang.reflect.AdviceImpl$1: int[] $SwitchMap$org$aspectj$lang$reflect$AdviceKind
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject$ReplayBuffer buffer
retrofit2.KotlinExtensions$suspendAndThrow$1: java.lang.Object L$0
com.appspa.demo.R$style: int Base_V28_Theme_AppCompat_Light
androidx.appcompat.R$style: int Widget_AppCompat_ListView
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: boolean done
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: io.reactivex.SingleObserver downstream
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: long serialVersionUID
io.reactivex.internal.subscribers.BoundedSubscriber: io.reactivex.functions.Consumer onError
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: io.reactivex.disposables.Disposable upstream
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Method sGetWindowLayoutTypeMethod
okhttp3.ConnectionSpec: java.lang.String[] cipherSuites
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_numericShortcut
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mAnchorView
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask: long maxAge
com.appspa.update.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
io.reactivex.internal.operators.maybe.MaybeAmb: java.lang.Iterable sourcesIterable
com.xuexiang.xhttp2.interceptor.CacheInterceptor: android.content.Context context
androidx.appcompat.R$attr: int autoSizePresetSizes
androidx.viewpager.widget.ViewPager: int DRAW_ORDER_REVERSE
com.appspa.demo.R$dimen: int disabled_alpha_material_dark
okhttp3.Response$Builder: okhttp3.Protocol protocol
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_END
androidx.appcompat.view.menu.CascadingMenuPopup: android.content.Context mContext
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: io.reactivex.Scheduler$Worker worker
com.appspa.demo.R$styleable: int SearchView_android_inputType
com.appspa.update.R$attr: int textAppearancePopupMenuHeader
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling STOP
com.xuexiang.xhttp2.R$id: int info
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: io.reactivex.functions.Function valueSupplier
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_ANIMATOR_DURATION
androidx.core.view.PointerIconCompat: int TYPE_ZOOM_OUT
androidx.customview.R$id: int actions
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.widget.ForwardingListener: int mActivePointerId
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.app.Person[] mPersons
com.google.gson.internal.Excluder: double version
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable: int maxConcurrency
com.appspa.update.R$attr: int actionOverflowButtonStyle
com.xuexiang.xhttp2.R$styleable: int ActionBar_contentInsetRight
retrofit2.adapter.rxjava2.RxJava2CallAdapter: boolean isBody
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LOCALE
org.aspectj.internal.lang.reflect.AdviceImpl: org.aspectj.lang.reflect.PointcutExpression pointcutExpression
com.appspa.demo.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.fragment.R$styleable: int ColorStateListItem_android_alpha
androidx.core.os.LocaleListCompatWrapper: java.util.Locale EN_LATN
androidx.collection.ArraySet: int sTwiceBaseCacheSize
com.appspa.update.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
com.appspa.update.R$attr: int buttonBarNegativeButtonStyle
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode CACHE_REMOTE
androidx.core.widget.CompoundButtonCompat: boolean sButtonDrawableFieldFetched
okhttp3.FormBody$Builder: java.nio.charset.Charset charset
androidx.core.app.NotificationCompat: int PRIORITY_HIGH
com.xuexiang.xhttp2.R$styleable: int AppCompatImageView_tint
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: long serialVersionUID
androidx.appcompat.R$styleable: int StateListDrawable_android_variablePadding
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: int size
org.aspectj.runtime.internal.AroundClosure: int bitflags
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle: io.reactivex.ObservableSource source
androidx.appcompat.widget.Toolbar$1: androidx.appcompat.widget.Toolbar this$0
androidx.vectordrawable.animated.R$attr: int fontWeight
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sActionTitleField
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber: io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber parent
androidx.appcompat.R$styleable: int[] PopupWindow
com.appspa.update.entity.UpdateError$ERROR: int FAIL_GET_SOURCE
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter FLOAT
androidx.appcompat.R$color: int primary_text_disabled_material_dark
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: long index
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar_Small
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: org.reactivestreams.Subscription upstream
com.xuexiang.xhttp2.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.R$attr: int autoSizeMaxTextSize
androidx.core.app.NotificationManagerCompat$NotifyTask: int id
com.appspa.demo.R$styleable: int AppCompatTheme_windowFixedWidthMinor
io.reactivex.internal.schedulers.NewThreadScheduler: java.util.concurrent.ThreadFactory threadFactory
com.google.gson.internal.ConstructorConstructor$5: com.google.gson.internal.ConstructorConstructor this$0
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_Solid
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionBar_Solid
com.xuexiang.xhttp2.R$styleable: int SearchView_android_inputType
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.content.Context mActionModeContext
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: long time
androidx.viewpager.R$id: int text2
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.core.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerInner: java.lang.Object t
com.appspa.demo.R$layout: int abc_action_mode_bar
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.observable.ObservableGroupBy$State: java.lang.Throwable error
com.google.gson.internal.ConstructorConstructor$2: com.google.gson.internal.ConstructorConstructor this$0
com.appspa.demo.R$styleable: int AppCompatTheme_activityChooserViewStyle
androidx.core.view.inputmethod.InputConnectionCompat: java.lang.String COMMIT_CONTENT_CONTENT_URI_KEY
com.appspa.demo.R$color: int material_grey_50
com.xuexiang.xhttp2.R$attr: int buttonBarStyle
retrofit2.RequestBuilder: okhttp3.MultipartBody$Builder multipartBuilder
androidx.drawerlayout.R$id: int action_image
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextPaint mPaint
androidx.appcompat.resources.R$styleable: int FontFamilyFont_ttcIndex
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.xuexiang.xhttp2.R$color: int abc_tint_spinner
androidx.fragment.app.FragmentTabHost: android.widget.TabHost$OnTabChangeListener mOnTabChangeListener
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_SHOWS_USER_INTERFACE
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.vectordrawable.animated.R$styleable: int[] GradientColorItem
com.appspa.demo.R$styleable: int TextAppearance_android_shadowDx
io.reactivex.internal.operators.completable.CompletableCache: java.util.concurrent.atomic.AtomicBoolean once
androidx.collection.SimpleArrayMap: int mSize
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: io.reactivex.Notification iteratorNotification
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float mBarGap
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: long serialVersionUID
com.appspa.update.R$style: int AlertDialog_AppCompat
com.appspa.demo.R$styleable: int AppCompatTheme_ratingBarStyle
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: java.util.concurrent.atomic.AtomicBoolean shouldConnect
com.appspa.demo.R$styleable: int MenuItem_numericModifiers
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: io.reactivex.Observer downstream
androidx.appcompat.R$style: int Theme_AppCompat_CompactMenu
androidx.loader.R$attr: int fontProviderFetchStrategy
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver: long serialVersionUID
com.appspa.demo.R$attr: int xnpb_text_size
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: boolean delayError
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_current
androidx.appcompat.widget.Toolbar$LayoutParams: int CUSTOM
androidx.appcompat.R$styleable: int FontFamilyFont_android_font
com.google.gson.internal.bind.TypeAdapters$33: java.lang.Class val$boxed
com.appspa.demo.R$drawable: int abc_text_select_handle_middle_mtrl_dark
androidx.appcompat.widget.ListPopupWindow: java.lang.Runnable mShowDropDownRunnable
androidx.appcompat.app.WindowDecorActionBar: long FADE_OUT_DURATION_MS
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.observable.ObservableAutoConnect: java.util.concurrent.atomic.AtomicInteger clients
com.appspa.demo.R$attr: int xnpb_unreached_bar_height
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
io.reactivex.observers.BaseTestConsumer: java.util.List errors
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: boolean done
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.xuexiang.xhttp2.R$attr: int listPreferredItemHeight
androidx.viewpager.widget.PagerTabStrip: int mIndicatorHeight
com.xuexiang.xhttp2.R$drawable: int abc_ratingbar_material
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: java.lang.Throwable error
com.appspa.demo.R$styleable: int[] ViewStubCompat
com.appspa.update.R$styleable: int LinearLayoutCompat_divider
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11: int change_count
androidx.core.R$id: int accessibility_custom_action_26
com.xuexiang.xhttp2.R$dimen: int abc_action_bar_subtitle_top_margin_material
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: int STATE_INACTIVE
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mVariationSettings
androidx.appcompat.R$id: int accessibility_custom_action_25
com.xuexiang.xhttp2.R$attr: int titleMarginEnd
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: io.reactivex.disposables.CompositeDisposable set
com.appspa.demo.R$anim: int spa_app_window_in
com.appspa.demo.R$dimen: int compat_button_inset_horizontal_material
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$5: com.xuexiang.xhttp2.subsciber.DownloadSubscriber this$0
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView_Menu
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: java.util.Collection collection
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver: io.reactivex.disposables.Disposable upstream
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo: java.lang.reflect.Method setHomeActionContentDescription
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: io.reactivex.disposables.Disposable upstream
com.google.gson.internal.LinkedHashTreeMap$EntrySet: com.google.gson.internal.LinkedHashTreeMap this$0
com.appspa.update.R$styleable: int[] AnimatedStateListDrawableTransition
com.appspa.update.entity.UpdateError$ERROR: int DOWNLOAD_FAILED
io.reactivex.internal.operators.observable.ObservableTimeoutTimed: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: io.reactivex.internal.operators.maybe.MaybePeek parent
androidx.viewpager.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.widget.ActivityChooserView: android.widget.ImageView mExpandActivityOverflowButtonImage
okhttp3.internal.http2.Http2Codec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: long keepAliveTime
com.xuexiang.xhttp2.utils.Utils: java.lang.String EXT_STORAGE_DIR
okhttp3.OkHttpClient: okhttp3.Dns dns
com.google.gson.JsonSyntaxException: long serialVersionUID
com.xuexiang.xhttp2.cache.RxCache$Builder: long diskMaxSize
androidx.drawerlayout.R$attr: int font
okhttp3.Cookie$Builder: long expiresAt
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat mIcon
okio.AsyncTimeout$1: okio.Sink val$sink
com.xuexiang.xhttp2.R$dimen: int abc_text_size_headline_material
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: int sourceMode
com.xuexiang.xhttp2.request.BaseRequest: retrofit2.Retrofit mRetrofit
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: java.util.concurrent.atomic.AtomicReference upstream
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated
androidx.fragment.R$id: int italic
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_YES
io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Runnable actual
androidx.appcompat.widget.ButtonBarLayout: int mLastWidthSize
androidx.appcompat.widget.ActivityChooserModel: java.lang.String ATTRIBUTE_ACTIVITY
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: io.reactivex.internal.fuseable.SimpleQueue queue
androidx.appcompat.app.ToolbarActionBar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: boolean delayError
androidx.lifecycle.MediatorLiveData: androidx.arch.core.internal.SafeIterableMap mSources
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.drawerlayout.widget.DrawerLayout: int mScrimColor
com.appspa.demo.R$dimen: int space_content_line_spacing_extra_size
com.appspa.update.R$drawable: int abc_textfield_search_activated_mtrl_alpha
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: java.util.concurrent.atomic.AtomicInteger count
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: io.reactivex.Observer downstream
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
io.reactivex.internal.operators.observable.ObservableFilter: io.reactivex.functions.Predicate predicate
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores
androidx.core.R$styleable: int FontFamilyFont_fontWeight
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle: int prefetch
com.appspa.demo.R$string: int space_error_prompt_activity_destroy
com.appspa.demo.R$id: int image
okio.InflaterSource: int bufferBytesHeldByInflater
com.appspa.update.R$drawable: int abc_list_selector_holo_dark
androidx.collection.SparseArrayCompat: int mSize
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: java.util.concurrent.Callable bufferSupplier
com.xuexiang.xhttp2.R$drawable: int btn_radio_on_mtrl
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: int TAP_TIMEOUT
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: io.reactivex.Observer downstream
com.appspa.update.R$id: int home
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_RIGHT
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: int bufferSize
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: io.reactivex.disposables.CompositeDisposable timed
androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled
androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: java.util.concurrent.atomic.AtomicLong requested
com.appspa.demo.R$id: int btn_force_update
com.appspa.update.R$anim: int abc_popup_exit
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap
com.appspa.demo.R$styleable: int SearchView_submitBackground
com.appspa.update.R$styleable: int ActionBar_displayOptions
com.xuexiang.xhttp2.R$attr: int menu
io.reactivex.internal.operators.completable.CompletablePeek: io.reactivex.functions.Action onTerminate
androidx.activity.R$dimen: int notification_large_icon_height
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapter URL
com.xuexiang.xhttp2.R$layout: int select_dialog_singlechoice_material
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: boolean done
androidx.appcompat.widget.ActivityChooserModel: boolean mReadShareHistoryCalled
androidx.fragment.app.FragmentManagerImpl$FragmentTag: int[] Fragment
androidx.vectordrawable.graphics.drawable.AndroidResources: int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y
androidx.loader.R$styleable: int FontFamily_fontProviderAuthority
com.appspa.update.R$styleable: int AppCompatTheme_panelMenuListTheme
io.reactivex.internal.subscribers.LambdaSubscriber: long serialVersionUID
androidx.appcompat.R$attr: int buttonIconDimen
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver: long serialVersionUID
com.xuexiang.xhttp2.R$style: int Widget_AppCompat_ActionButton_CloseMode
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: long serialVersionUID
androidx.core.view.ViewCompat: int MEASURED_STATE_MASK
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: io.reactivex.disposables.Disposable upstream
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver: java.util.concurrent.atomic.AtomicReference parent
okhttp3.internal.ws.RealWebSocket$CancelRunnable: okhttp3.internal.ws.RealWebSocket this$0
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.appspa.demo.R$styleable: int MenuView_android_windowAnimationStyle
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionModeFindDrawable
io.reactivex.internal.operators.flowable.FlowableFromFuture: java.util.concurrent.TimeUnit unit
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: java.util.concurrent.atomic.AtomicReference mainDisposable
androidx.appcompat.R$attr: int buttonBarStyle
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: long serialVersionUID
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_NOT_FOUND
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Display3
com.appspa.update.R$color: int bright_foreground_disabled_material_dark
com.xuexiang.xhttp2.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.google.gson.stream.JsonReader: int PEEKED_LONG
com.xuexiang.xhttp2.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$Completion: io.reactivex.processors.UnicastProcessor processor
androidx.loader.content.AsyncTaskLoader: long mLastLoadCompleteTime
com.appspa.demo.R$id: int async
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: int mNumPostponed
androidx.loader.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.core.view.inputmethod.EditorInfoCompat: int IME_FLAG_NO_PERSONALIZED_LEARNING
androidx.appcompat.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: org.reactivestreams.Subscriber reactiveStreams
com.xuexiang.xhttp2.R$layout: int abc_select_dialog_material
com.appspa.update.R$style: int Widget_AppCompat_TextView_SpinnerItem
com.appspa.update.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
io.reactivex.internal.operators.observable.ObservableFromUnsafeSource: io.reactivex.ObservableSource source
androidx.appcompat.R$color: int bright_foreground_inverse_material_light
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutNumericChar
androidx.appcompat.R$styleable: int TextAppearance_fontFamily
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
androidx.appcompat.R$color: int abc_search_url_text_selected
androidx.core.content.res.ResourcesCompat: java.lang.String TAG
com.appspa.update.R$styleable: int AnimatedStateListDrawableItem_android_id
com.appspa.demo.R$string: int abc_action_bar_home_description
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList
androidx.appcompat.widget.AppCompatSpinner: int[] ATTRS_ANDROID_SPINNERMODE
androidx.core.graphics.TypefaceCompatApi21Impl: boolean sHasInitBeenCalled
com.appspa.update.R$color: int abc_primary_text_material_light
androidx.appcompat.R$styleable: int ActionBar_contentInsetStartWithNavigation
androidx.appcompat.R$style: int Platform_V21_AppCompat_Light
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: java.lang.reflect.Method doAfterTextChanged
androidx.core.app.ActivityRecreator$3: java.lang.Object val$token
androidx.versionedparcelable.VersionedParcelStream: java.io.DataOutputStream mMasterOutput
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber[] subscribers
io.reactivex.Observable$1: int[] $SwitchMap$io$reactivex$BackpressureStrategy
com.appspa.demo.R$attr: int drawableLeftCompat
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: io.reactivex.disposables.Disposable upstream
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: java.lang.Throwable error
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.appspa.update.R$styleable: int MenuItem_showAsAction
okio.RealBufferedSource: boolean closed
io.reactivex.internal.operators.flowable.FlowableDelay: io.reactivex.Scheduler scheduler
io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable: long serialVersionUID
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.core.graphics.drawable.IconCompat: float DEFAULT_VIEW_PORT_SCALE
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: int rightIndex
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String HEAD_KEY_SET_COOKIE2
com.xuexiang.xhttp2.R$attr: int spinBars
com.xuexiang.xhttp2.R$styleable: int MenuItem_android_id
com.appspa.demo.R$id: int multiply
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable: io.reactivex.CompletableSource other
androidx.cursoradapter.widget.CursorFilter: androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient
com.xuexiang.xhttp2.R$integer: int abc_config_activityDefaultDur
com.appspa.update.R$attr: int thumbTint
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector: io.reactivex.functions.Function close
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe: io.reactivex.MaybeSource other
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
com.appspa.demo.R$styleable: int[] CompoundButton
androidx.appcompat.R$styleable: int SwitchCompat_splitTrack
com.appspa.demo.R$string: int abc_action_bar_up_description
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.appcompat.widget.DropDownListView: boolean mHijackFocus
androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView
io.reactivex.internal.operators.maybe.MaybeOnErrorNext: io.reactivex.functions.Function resumeFunction
com.google.gson.JsonPrimitive: java.lang.Object value
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: int rightIndex
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: boolean outputFused
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: int size
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_radioButtonStyle
androidx.appcompat.R$dimen: int notification_small_icon_background_padding
androidx.fragment.R$drawable: int notification_tile_bg
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence mText
com.appspa.update.R$id: int checkbox
com.xuexiang.xhttp2.R$string: int abc_shareactionprovider_share_with_application
com.appspa.demo.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_reached_bar_height
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_SYSTEM
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: int bufferSize
androidx.appcompat.view.menu.MenuBuilder: boolean mStructureChangedWhileDispatchPrevented
androidx.core.app.NotificationCompat: int DEFAULT_ALL
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: java.util.List ws
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: boolean delayErrors
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String SPANS_ACTION_ID_KEY
com.appspa.update.R$styleable: int AppCompatTheme_actionBarSplitStyle
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: io.reactivex.subjects.Subject signaller
androidx.appcompat.resources.R$dimen: int compat_control_corner_material
com.appspa.demo.R$attr: int popupTheme
com.xuexiang.xhttp2.R$layout: int abc_activity_chooser_view
retrofit2.RequestFactory: okhttp3.HttpUrl baseUrl
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources mResources
com.xuexiang.xhttp2.R$style: int TextAppearance_AppCompat_SearchResult_Title
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: org.reactivestreams.Subscription upstream
io.reactivex.internal.functions.Functions$ToMultimapKeyValueSelector: io.reactivex.functions.Function keySelector
androidx.appcompat.R$attr: int textAllCaps
com.appspa.update.R$attr: int singleChoiceItemLayout
androidx.customview.R$attr: int fontProviderFetchStrategy
com.appspa.update.R$attr: int drawableTintMode
com.xuexiang.xhttp2.model.ExpiredInfo: int mExpiredType
io.reactivex.internal.subscribers.FutureSubscriber: java.lang.Object value
androidx.appcompat.R$drawable: int btn_radio_off_to_on_mtrl_animation
androidx.fragment.app.Fragment: boolean mHiddenChanged
androidx.appcompat.R$styleable: int ActionBar_subtitle
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: int limit
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayPublisher: java.util.concurrent.Callable bufferFactory
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_actionDropDownStyle
com.appspa.update.R$styleable: int DrawerArrowToggle_drawableSize
androidx.loader.R$id: int tag_unhandled_key_event_manager
com.appspa.update.R$styleable: int ActionBar_subtitle
okio.Options: okio.ByteString[] byteStrings
androidx.fragment.app.FragmentManagerImpl$5: android.view.View val$animatingView
androidx.collection.MapCollections$ArrayIterator: int mIndex
androidx.appcompat.R$styleable: int[] MenuGroup
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: java.util.concurrent.atomic.AtomicLong requested
androidx.loader.R$styleable: int GradientColor_android_tileMode
androidx.appcompat.R$attr: int measureWithLargestChild
androidx.core.app.AppLaunchChecker: java.lang.String SHARED_PREFS_NAME
androidx.viewpager.widget.ViewPager$LayoutParams: int position
androidx.appcompat.R$id: int wrap_content
io.reactivex.internal.operators.observable.ObservableRefCount: io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection connection
retrofit2.RequestFactory: java.lang.String httpMethod
androidx.appcompat.resources.R$drawable: int notification_template_icon_low_bg
com.xuexiang.xhttp2.R$style: int Base_DialogWindowTitleBackground_AppCompat
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_dividerVertical
androidx.vectordrawable.animated.R$drawable: int notification_bg_low
androidx.appcompat.widget.TintContextWrapper: java.lang.Object CACHE_LOCK
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: java.lang.Object value
com.appspa.update.R$styleable: int SwitchCompat_splitTrack
com.appspa.demo.R$string: int abc_searchview_description_submit
io.reactivex.internal.disposables.ListCompositeDisposable: java.util.List resources
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node next
com.xuexiang.xhttp2.R$attr: int autoSizeMaxTextSize
com.google.gson.TypeAdapter$1: com.google.gson.TypeAdapter this$0
androidx.appcompat.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.appspa.update.R$styleable: int XNumberProgressBar_xnpb_unreached_color
okhttp3.internal.connection.StreamAllocation: okhttp3.EventListener eventListener
com.appspa.demo.R$dimen: int tooltip_y_offset_non_touch
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: io.reactivex.MaybeSource[] sources
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
androidx.core.view.InputDeviceCompat: int SOURCE_TRACKBALL
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: int skip
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: io.reactivex.Scheduler$Worker w
okio.Util: java.nio.charset.Charset UTF_8
com.google.gson.GsonBuilder: com.google.gson.internal.Excluder excluder
com.appspa.update.R$attr: int colorPrimary
com.appspa.demo.R$string: int abc_menu_function_shortcut_label
okhttp3.Protocol: okhttp3.Protocol QUIC
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: java.util.concurrent.atomic.AtomicInteger wip
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: int bufferSize
androidx.core.app.FrameMetricsAggregator: int LAYOUT_MEASURE_INDEX
androidx.appcompat.R$style: int AlertDialog_AppCompat_Light
com.xuexiang.xhttp2.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.appcompat.R$color: int notification_icon_bg_color
androidx.fragment.R$id: int accessibility_custom_action_0
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: io.reactivex.functions.BiPredicate comparer
androidx.activity.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.resources.R$styleable: int FontFamilyFont_fontStyle
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: io.reactivex.internal.util.AtomicThrowable error
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: long contentLength
com.appspa.demo.R$styleable: int AlertDialog_buttonPanelSideLayout
androidx.appcompat.view.menu.ActionMenuItem: int mIconResId
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: io.reactivex.internal.queue.SpscArrayQueue queue
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActivityChooserView
androidx.appcompat.R$styleable: int TextAppearance_fontVariationSettings
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: long serialVersionUID
androidx.appcompat.widget.SearchView: boolean mSubmitButtonEnabled
com.appspa.update.R$styleable: int GradientColor_android_startX
com.xuexiang.xhttp2.R$color: int secondary_text_default_material_dark
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_START
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
com.zhy.http.okhttp.callback.FileCallBack$1: com.zhy.http.okhttp.callback.FileCallBack this$0
com.appspa.demo.R$style: int Widget_AppCompat_SearchView_ActionBar
androidx.core.content.pm.ShortcutManagerCompat: androidx.core.content.pm.ShortcutInfoCompatSaver sShortcutInfoCompatSaver
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: java.util.Deque deque
androidx.drawerlayout.R$layout: int notification_action_tombstone
io.reactivex.processors.BehaviorProcessor: io.reactivex.processors.BehaviorProcessor$BehaviorSubscription[] TERMINATED
androidx.core.widget.NestedScrollView: int mMinimumVelocity
androidx.fragment.app.FragmentManagerState: int mNextFragmentIndex
okhttp3.internal.http2.Http2Connection$PingRunnable: okhttp3.internal.http2.Http2Connection this$0
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged: io.reactivex.functions.BiPredicate comparer
com.appspa.demo.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
io.reactivex.subjects.PublishSubject$PublishDisposable: io.reactivex.subjects.PublishSubject parent
androidx.customview.widget.FocusStrategy$SequentialComparator: androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter
com.appspa.demo.R$styleable: int GradientColor_android_startColor
androidx.customview.widget.ViewDragHelper: float[] mLastMotionX
androidx.appcompat.resources.R$dimen: int compat_button_padding_vertical_material
com.appspa.update.R$color: int primary_text_default_material_dark
com.appspa.update.R$color: int notification_icon_bg_color
androidx.core.view.DragStartHelper: android.view.View$OnLongClickListener mLongClickListener
com.appspa.demo.R$attr: int windowFixedHeightMinor
com.xuexiang.xhttp2.https.HttpsUtils$MyTrustManager: javax.net.ssl.X509TrustManager localTrustManager
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: long serialVersionUID
com.appspa.demo.R$styleable: int SearchView_searchHintIcon
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
com.appspa.update.R$dimen: int tooltip_y_offset_touch
com.appspa.update.R$style: int Theme_AppCompat_Dialog
com.appspa.update.R$attr: int spinBars
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
okhttp3.internal.http2.Http2Connection: long intervalPingsSent
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: boolean cancelled
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: io.reactivex.Observer downstream
com.appspa.update.R$styleable: int MenuGroup_android_checkableBehavior
com.appspa.update.proxy.impl.DefaultUpdateChecker$2: com.appspa.update.proxy.impl.DefaultUpdateChecker this$0
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_TextView
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
okhttp3.FormBody: java.util.List encodedValues
androidx.appcompat.R$id: int line3
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator: io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber this$0
androidx.appcompat.R$attr: int submitBackground
androidx.appcompat.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod
androidx.fragment.app.BackStackState: int mTransition
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: long timespan
androidx.appcompat.widget.AppCompatBackgroundHelper: android.view.View mView
io.reactivex.internal.operators.observable.ObservableCombineLatest: int bufferSize
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.appcompat.R$color: int abc_secondary_text_material_dark
com.appspa.demo.R$styleable: int AppCompatTheme_dropDownListViewStyle
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner
androidx.appcompat.R$id: int customPanel
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayFunction: io.reactivex.Scheduler scheduler
com.appspa.update.entity.UpdateError$ERROR: int FAIL_GEN_MD5
androidx.appcompat.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.https.HttpsUtils$SSLParams mSSLParams
androidx.appcompat.widget.AppCompatSpinner$2: androidx.appcompat.widget.AppCompatSpinner this$0
io.reactivex.subjects.BehaviorSubject: java.util.concurrent.atomic.AtomicReference subscribers
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: java.util.concurrent.atomic.AtomicBoolean once
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_buttonBarStyle
com.appspa.demo.R$style: int Base_Widget_AppCompat_PopupWindow
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator sInstance
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mDeltaTime
com.appspa.update.entity.UpdateError$ERROR: int CHECK_NO_NETWORK
androidx.appcompat.view.menu.MenuBuilder: java.lang.String TAG
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNeutralButtonListener
io.reactivex.internal.operators.flowable.FlowableObserveOn: boolean delayError
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_4
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor mCursor
com.appspa.update.R$styleable: int ActionBar_height
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mAdvanceKey
com.appspa.demo.R$styleable: int ActionBar_background
com.appspa.update.R$attr: int logoDescription
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: java.util.concurrent.atomic.AtomicReference value
androidx.appcompat.widget.LinearLayoutCompat: int mGravity
com.appspa.demo.R$attr: int listPreferredItemHeight
io.reactivex.internal.queue.SpscLinkedArrayQueue: int MAX_LOOK_AHEAD_STEP
retrofit2.RequestBuilder: char[] HEX_DIGITS
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_centerX
com.appspa.update.widget.NumberProgressBar: int mCurrentProgress
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: long serialVersionUID
io.reactivex.internal.operators.maybe.MaybeFromFuture: long timeout
org.aspectj.internal.lang.reflect.DeclarePrecedenceImpl: java.lang.String precedenceString
retrofit2.RequestFactory: boolean hasBody
androidx.lifecycle.MethodCallsLogger: java.util.Map mCalledMethods
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: long index
io.reactivex.internal.observers.DeferredScalarDisposable: int FUSED_EMPTY
androidx.appcompat.R$attr: int drawableBottomCompat
com.xuexiang.xhttp2.R$style: int Base_Widget_AppCompat_ActivityChooserView
io.reactivex.processors.MulticastProcessor: java.lang.Throwable error
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayPublisher: java.util.concurrent.atomic.AtomicReference curr
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderCerts
com.xuexiang.xhttp2.cache.RxCache$3: java.lang.String val$key
androidx.core.view.MotionEventCompat: int AXIS_RX
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: boolean mIsShowProgress
retrofit2.ParameterHandler$Path: retrofit2.Converter valueConverter
io.reactivex.internal.subscribers.InnerQueuedSubscriber: int fusionMode
com.appspa.demo.R$attr: int actionModeFindDrawable
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.reactivex.internal.operators.observable.ObservableFromFuture: java.util.concurrent.TimeUnit unit
com.appspa.update.R$id: int off
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy[] $VALUES
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable: io.reactivex.functions.Function mapper
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: org.reactivestreams.Subscriber downstream
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext
androidx.core.util.PatternsCompat: java.lang.String STRICT_HOST_NAME
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
androidx.loader.R$id: int tag_transition_group
androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations
com.xuexiang.xhttp2.R$anim: int abc_tooltip_enter
androidx.loader.R$drawable: int notification_bg_normal
androidx.appcompat.R$attr: int allowStacking
androidx.core.app.NotificationCompatJellybean: java.lang.String KEY_EXTRAS
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShowTitle
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
androidx.fragment.app.FragmentManagerImpl$3$1: androidx.fragment.app.FragmentManagerImpl$3 this$1
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: boolean veryEnd
androidx.drawerlayout.R$attr: int alpha
com.appspa.update.R$styleable: int ActionBar_itemPadding
androidx.fragment.app.FragmentState: boolean mRetainInstance
androidx.core.graphics.PathParser$ExtractFloatResult: boolean mEndWithNegOrDot
androidx.customview.R$drawable: int notification_bg
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: long subscriberCount
android.support.v4.os.ResultReceiver: android.support.v4.os.IResultReceiver mReceiver
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_CheckBox
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: io.reactivex.internal.util.AtomicThrowable error
com.appspa.update.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask: io.reactivex.Scheduler scheduler
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.SpinnerAdapter mAdapter
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask$DisposeObserver: io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask this$1
okhttp3.internal.connection.RealConnection: java.util.List allocations
com.appspa.update.R$styleable: int ActionBar_elevation
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: io.reactivex.SingleSource source
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner mOwner
com.google.gson.GsonBuilder: boolean prettyPrinting
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: io.reactivex.functions.Function debounceSelector
androidx.core.view.ViewParentCompat: int[] sTempNestedScrollConsumed
androidx.core.util.AtomicFile: java.io.File mBaseName
androidx.appcompat.widget.ScrollingTabContainerView: int mSelectedTabIndex
androidx.collection.SimpleArrayMap: int mBaseCacheSize
androidx.appcompat.R$dimen: int hint_pressed_alpha_material_dark
okhttp3.ConnectionPool: java.lang.Runnable cleanupRunnable
androidx.viewpager.R$id: int chronometer
androidx.loader.R$style: int Widget_Compat_NotificationActionContainer
androidx.drawerlayout.R$layout: int notification_template_custom_big
androidx.versionedparcelable.VersionedParcel: int TYPE_FLOAT
androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack
androidx.appcompat.R$styleable: int ColorStateListItem_android_alpha
okhttp3.ResponseBody$BomAwareReader: boolean closed
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: long produced
androidx.vectordrawable.R$styleable: int GradientColor_android_startX
androidx.appcompat.R$attr: int buttonStyle
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: long produced
androidx.appcompat.R$attr: int textAppearanceLargePopupMenu
androidx.appcompat.R$dimen: int abc_action_bar_elevation_material
com.xuexiang.xhttp2.R$color: int switch_thumb_normal_material_dark
io.reactivex.processors.AsyncProcessor: io.reactivex.processors.AsyncProcessor$AsyncSubscription[] TERMINATED
androidx.core.R$drawable: int notification_bg_low
com.xuexiang.xhttp2.R$styleable: int AppCompatImageView_tintMode
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.view.ActionMode val$mode
com.appspa.update.R$attr: int alertDialogCenterButtons
com.appspa.demo.R$drawable: int abc_control_background_material
androidx.fragment.app.FragmentTransaction: int mBreadCrumbShortTitleRes
com.xuexiang.xhttp2.R$attr: int navigationIcon
com.zhy.http.okhttp.request.RequestCall: long writeTimeOut
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder DEFAULT
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription[] EMPTY
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sExtrasField
com.xuexiang.xhttp2.model.HttpParams: java.util.LinkedHashMap urlParamsMap
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsIn
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: io.reactivex.functions.BiFunction combiner
com.appspa.update.R$styleable: int MenuView_android_headerBackground
io.reactivex.internal.operators.observable.ObservableBufferTimed: java.util.concurrent.Callable bufferSupplier
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: int featureId
com.appspa.demo.R$styleable: int LinearLayoutCompat_dividerPadding
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: org.reactivestreams.Subscription upstream
androidx.appcompat.R$id: int on
androidx.appcompat.resources.R$styleable: int GradientColor_android_endColor
com.xuexiang.xhttp2.R$style: int Animation_AppCompat_DropDownUp
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy$1: com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy this$0
com.appspa.demo.R$style: int TextAppearance_AppCompat_SearchResult_Title
androidx.core.os.HandlerCompat: java.lang.String TAG
okhttp3.CacheControl$Builder: boolean noCache
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: java.lang.Object NEXT_WINDOW
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: long serialVersionUID
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: java.lang.Throwable error
io.reactivex.internal.functions.Functions$BooleanSupplierPredicateReverse: io.reactivex.functions.BooleanSupplier supplier
com.appspa.update.R$style: int Widget_AppCompat_ListMenuView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: int count
io.reactivex.internal.functions.Functions$Array3Func: io.reactivex.functions.Function3 f
com.appspa.demo.R$styleable: int[] ActionMode
com.appspa.update.R$layout: int abc_screen_simple_overlay_action_mode
com.appspa.update.R$styleable: int AppCompatTheme_popupMenuStyle
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: org.reactivestreams.Publisher sampler
androidx.core.provider.FontsContractCompat: java.lang.String PARCEL_FONT_RESULTS
androidx.loader.R$id: int normal
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue queue
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
com.appspa.update.utils.FileUtils: java.lang.String EXT_DCIM_PATH
com.xuexiang.xhttp2.cache.RxCache$5: com.xuexiang.xhttp2.cache.RxCache this$0
androidx.core.app.NotificationCompat: int BADGE_ICON_NONE
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderCerts
com.appspa.update.R$string: int abc_activity_chooser_view_see_all
com.zhy.http.okhttp.request.CountingRequestBody: com.zhy.http.okhttp.request.CountingRequestBody$Listener listener
okhttp3.Request$Builder: okhttp3.RequestBody body
androidx.appcompat.R$styleable: int[] ActionMenuItemView
com.appspa.update.R$attr: int actionViewClass
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback
com.appspa.update.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
androidx.core.app.ShareCompat$IntentBuilder: java.util.ArrayList mBccAddresses
androidx.viewpager.widget.ViewPager: float mFirstOffset
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
androidx.core.app.NotificationCompat: int FLAG_NO_CLEAR
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode
com.appspa.update.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.appspa.demo.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.appspa.demo.R$id: int accessibility_custom_action_11
androidx.activity.R$id: int forever
com.appspa.demo.http.OKHttpUpdateHttpService$1: com.appspa.update.proxy.IUpdateHttpService$Callback val$callBack
com.appspa.update.R$style: int Base_V21_Theme_AppCompat_Dialog
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.drawerlayout.widget.DrawerLayout: boolean ALLOW_EDGE_LOCK
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeftResolved
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: java.util.Map boundFields
androidx.customview.R$layout: int notification_action
com.appspa.update.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
androidx.activity.R$styleable: int FontFamily_fontProviderQuery
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Time
com.appspa.update.R$style: int XUpdate_Dialog
androidx.core.view.MenuItemCompat: java.lang.String TAG
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable: boolean delayErrors
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: io.reactivex.MaybeObserver downstream
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: int capacityHint
androidx.fragment.app.Fragment$AnimationInfo: android.animation.Animator mAnimator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
com.appspa.demo.R$id: int search_go_btn
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
io.reactivex.internal.operators.maybe.MaybeCache: java.lang.Object value
okhttp3.internal.http1.Http1Codec$AbstractSource: boolean closed
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
retrofit2.adapter.rxjava2.Result: java.lang.Throwable error
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: long produced
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory URL_FACTORY
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze
io.reactivex.internal.util.LinkedArrayList: int capacityHint
com.appspa.update.R$id: int search_plate
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderQuery
androidx.appcompat.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
androidx.appcompat.widget.TintInfo: boolean mHasTintList
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.appspa.demo.R$attr: int editTextBackground
com.appspa.update.R$integer: int abc_config_activityDefaultDur
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
io.reactivex.internal.operators.flowable.FlowableFromObservable: io.reactivex.Observable upstream
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: boolean done
androidx.appcompat.R$attr: int progressBarStyle
androidx.activity.R$style: int TextAppearance_Compat_Notification
com.xuexiang.xhttp2.request.DownloadRequest: boolean mIsUseBaseUrl
androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom
com.xuexiang.xhttp2.R$style: int Base_V26_Theme_AppCompat
com.xuexiang.xhttp2.R$styleable: int AppCompatTheme_activityChooserViewStyle
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementSourceNames
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: io.reactivex.internal.queue.SpscLinkedArrayQueue queue
com.xuexiang.xhttp2.R$id: int customPanel
androidx.customview.R$styleable: int FontFamily_fontProviderPackage
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: java.util.concurrent.TimeUnit unit
androidx.appcompat.widget.SuggestionsAdapter: int mText1Col
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingBottomNoButtons
com.appspa.update.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.appspa.demo.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
io.reactivex.processors.UnicastProcessor: java.util.concurrent.atomic.AtomicReference onTerminate
androidx.appcompat.R$styleable: int MenuView_subMenuArrow
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: long serialVersionUID
androidx.fragment.app.DialogFragment$1: androidx.fragment.app.DialogFragment this$0
androidx.core.text.ICUCompat: java.lang.String TAG
io.reactivex.internal.operators.flowable.FlowableToListSingle: io.reactivex.Flowable source
com.xuexiang.xhttp2.R$id: int image
okhttp3.RealCall: boolean executed
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: long serialVersionUID
androidx.core.app.NotificationCompat$InboxStyle: java.util.ArrayList mTexts
com.appspa.demo.R$integer: int status_bar_notification_info_maxnum
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: io.reactivex.MaybeObserver downstream
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_ALARM
com.appspa.demo.R$style: int Widget_AppCompat_ButtonBar
com.xuexiang.xhttp2.R$styleable: int GradientColor_android_type
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.appspa.demo.R$id: int withText
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber: org.reactivestreams.Subscriber downstream
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: java.lang.Object defaultValue
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast: io.reactivex.internal.operators.observable.ObservableGroupBy$State state
com.xuexiang.xhttp2.R$attr: int controlBackground
io.reactivex.internal.operators.flowable.FlowableFlatMap: boolean delayErrors
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable: io.reactivex.Flowable source
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
io.reactivex.internal.schedulers.InstantPeriodicTask: java.util.concurrent.atomic.AtomicReference rest
androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown
com.appspa.demo.R$id: int forever
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: io.reactivex.disposables.Disposable upstream
com.xuexiang.xhttp2.R$drawable: int abc_ic_clear_material
androidx.appcompat.resources.R$id: int notification_main_column
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_right
okhttp3.Request: okhttp3.CacheControl cacheControl
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: long index
okhttp3.internal.http2.Http2Stream: boolean $assertionsDisabled
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool NONE
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber$ConsumerIndexHolder: long index
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: long index
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: long serialVersionUID
com.appspa.demo.R$drawable: int abc_dialog_material_background
com.xuexiang.xhttp2.R$styleable: int Spinner_android_prompt
com.appspa.demo.R$dimen: int abc_control_corner_material
com.appspa.demo.R$styleable: int AppCompatTextView_fontVariationSettings
com.appspa.demo.R$style: int TextAppearance_Compat_Notification_Info
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_dither
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView
androidx.appcompat.R$attr: int maxButtonHeight
com.appspa.demo.R$style: int Base_TextAppearance_AppCompat_Subhead
com.appspa.update.R$attr: int checkboxStyle
androidx.vectordrawable.animated.R$attr: int font
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
io.reactivex.internal.functions.Functions$ClassFilter: java.lang.Class clazz
retrofit2.Retrofit: boolean validateEagerly
androidx.collection.SimpleArrayMap: boolean CONCURRENT_MODIFICATION_EXCEPTIONS
com.appspa.demo.R$attr: int textAppearanceSmallPopupMenu
androidx.viewpager.widget.PagerTabStrip: android.graphics.Rect mTempRect
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: io.reactivex.internal.util.AtomicThrowable errors
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: void onError(java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.SearchView$OnQueryTextListener: boolean onQueryTextChange(java.lang.String)
androidx.collection.MapCollections: java.lang.Object colGetEntry(int,int)
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: SingleUnsubscribeOn$UnsubscribeOnSingleObserver(io.reactivex.SingleObserver,io.reactivex.Scheduler)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy: io.reactivex.Observable loadRemote(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,io.reactivex.Observable,boolean)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.annotations.SerializedName: java.lang.String value()
com.google.gson.internal.bind.DateTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: int requestFusion(int)
com.google.gson.JsonArray: void add(java.lang.Boolean)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver(io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver)
com.xuexiang.xhttp2.utils.PathUtils: boolean isHuaWeiUri(android.net.Uri)
androidx.collection.LongSparseArray: void clear()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()
androidx.customview.widget.FocusStrategy: java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: void cancel()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
okio.Buffer: okio.Buffer writeLong(long)
com.appspa.update.R$drawable: R$drawable()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setVisible(boolean)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver: ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver(io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver)
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void innerError(java.lang.Throwable)
androidx.viewpager.widget.PagerTabStrip: void updateTextPositions(int,float,boolean)
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier[] values()
com.appspa.update.UpdateManager: void doUpdate()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.provider.FontsContractCompat$4$3: void run()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: ActionMenuItemView$PopupCallback()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] getMessages()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: ObservableBufferTimed$BufferSkipBoundedObserver(io.reactivex.Observer,java.util.concurrent.Callable,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)
okio.HashingSource: long read(okio.Buffer,long)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void onUnsubscribed()
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void errorAll(org.reactivestreams.Subscriber)
androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)
okhttp3.CertificatePinner: okio.ByteString sha256(java.security.cert.X509Certificate)
androidx.appcompat.view.menu.MenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.schedulers.TestScheduler$TestWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.appcompat.view.StandaloneActionMode: void setCustomView(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
org.aspectj.runtime.reflect.Factory: java.lang.Class makeClass(java.lang.String,java.lang.ClassLoader)
androidx.customview.widget.ViewDragHelper: void dragTo(int,int,int,int)
androidx.fragment.app.FragmentManagerViewModel: void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
androidx.loader.content.AsyncTaskLoader: AsyncTaskLoader(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: void onNext(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.appspa.update.utils.UpdateUtils: java.io.File getDefaultDiskCacheDir()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.schedulers.Schedulers$NewThreadTask: io.reactivex.Scheduler call()
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean,int,int)
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: void onComplete()
androidx.core.view.MenuItemCompat: void setShowAsAction(android.view.MenuItem,int)
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
com.google.gson.internal.UnsafeAllocator$4: UnsafeAllocator$4()
androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean)
androidx.appcompat.text.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: void onComplete()
com.xuexiang.xhttp2.model.HttpParams: void remove(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySubscriber: void onNext(java.lang.Object)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
androidx.collection.LongSparseArray: java.lang.Object replace(long,java.lang.Object)
androidx.core.app.NotificationCompat$Builder: int getColor()
okio.RealBufferedSource: void require(long)
androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.ViewCompat: float getTranslationZ(android.view.View)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.zhy.http.okhttp.request.PostFormRequest$1$1: PostFormRequest$1$1(com.zhy.http.okhttp.request.PostFormRequest$1,long,long)
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.SearchView: boolean onItemClicked(int,int,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: boolean collapseActionView()
io.reactivex.internal.observers.CallbackCompletableObserver: void accept(java.lang.Throwable)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: void onSuccess(java.lang.Object)
org.aspectj.lang.SoftException: void printStackTrace(java.io.PrintStream)
androidx.appcompat.app.ToolbarActionBar: android.content.Context getThemedContext()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: void clear()
io.reactivex.internal.operators.completable.CompletableDelay$Delay: void dispose()
io.reactivex.internal.observers.BlockingObserver: void dispose()
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.exceptions.UndeliverableException: UndeliverableException(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
com.xuexiang.xhttp2.annotation.NetMethod: int paramType()
io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber: void onNext(java.lang.Object)
com.xuexiang.xhttp2.cache.RxCache$Builder: boolean access$100(com.xuexiang.xhttp2.cache.RxCache$Builder)
io.reactivex.internal.operators.maybe.MaybeZipArray: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.os.Bundle toBundle()
com.xuexiang.xhttp2.XHttp: long getCacheMaxSize()
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void innerError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: ObservableSubscribeOn$SubscribeOnObserver(io.reactivex.Observer)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: boolean isDisposed()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setNumericShortcut(char,int)
androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)
androidx.appcompat.graphics.drawable.StateListDrawable: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber(io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber)
retrofit2.ParameterHandler: ParameterHandler()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void fail(java.lang.Throwable,org.reactivestreams.Subscriber,io.reactivex.internal.fuseable.SimpleQueue)
androidx.loader.content.CursorLoader: void onCanceled(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: CompletableMerge$CompletableMergeSubscriber(io.reactivex.CompletableObserver,int,boolean)
okio.Buffer$UnsafeCursor: int next()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: boolean isDisposed()
androidx.core.view.ActionProvider: boolean hasSubMenu()
androidx.appcompat.view.menu.ListMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: FlowableOnErrorNext$OnErrorNextSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean)
okio.Buffer: okio.BufferedSink write(okio.ByteString)
androidx.core.widget.NestedScrollView: void fling(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast: void completion()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: void dispose()
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: java.lang.Object next()
androidx.core.content.res.ResourcesCompat$FontCallback$1: void run()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)
androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void onNext(java.lang.Object)
androidx.viewpager.widget.ViewPager$SavedState: java.lang.String toString()
com.appspa.update.widget.UpdateDialogFragment: void initTheme(int,int,int)
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
io.reactivex.processors.PublishProcessor$PublishSubscription: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: void otherError(java.lang.Throwable)
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: okhttp3.ResponseBody convert(okhttp3.ResponseBody)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: void dispose()
io.reactivex.observers.TestObserver$EmptyObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: FlowableDelaySubscriptionOther$MainSubscriber(org.reactivestreams.Subscriber,org.reactivestreams.Publisher)
androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
androidx.appcompat.view.menu.MenuItemImpl: int getItemId()
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getConfirmLabel()
io.reactivex.internal.operators.parallel.ParallelMapTry: void subscribe(org.reactivestreams.Subscriber[])
retrofit2.HttpServiceMethod: HttpServiceMethod(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter)
androidx.fragment.app.FragmentTransition$1: void run()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Function,boolean)
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: void onComplete()
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: SingleDelayWithCompletable$OtherObserver(io.reactivex.SingleObserver,io.reactivex.SingleSource)
okio.ByteString: boolean equals(java.lang.Object)
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: void otherError(java.lang.Throwable)
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getOpacity()
androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)
okhttp3.Dns$1: java.util.List lookup(java.lang.String)
androidx.appcompat.app.ToolbarActionBar: androidx.appcompat.app.ActionBar$Tab getSelectedTab()
io.reactivex.internal.operators.observable.ObservableEmpty: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: org.reactivestreams.Subscription replaceResource(int,org.reactivestreams.Subscription)
androidx.fragment.R$dimen: R$dimen()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMultiLine(boolean)
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: void onComplete()
androidx.core.provider.FontsContractCompat: void resetCache()
com.appspa.update.service.DownloadService: boolean isRunning()
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.DialogFragment: void setStyle(int,int)
androidx.appcompat.widget.RtlSpacingHelper: int getStart()
io.reactivex.observers.DisposableObserver: boolean isDisposed()
io.reactivex.internal.observers.ForEachWhileObserver: void onError(java.lang.Throwable)
io.reactivex.internal.functions.Functions$Array3Func: java.lang.Object apply(java.lang.Object)
androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void autoSizeText()
androidx.loader.content.ModernAsyncTask$2: java.lang.Object call()
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
io.reactivex.internal.operators.flowable.FlowableSingle: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: boolean isDisposed()
retrofit2.ParameterHandler$HeaderMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.appcompat.app.ToolbarActionBar$1: ToolbarActionBar$1(androidx.appcompat.app.ToolbarActionBar)
androidx.core.database.DatabaseUtilsCompat: java.lang.String concatenateWhere(java.lang.String,java.lang.String)
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: void emitLoop()
okhttp3.Cache$1: void remove(okhttp3.Request)
androidx.appcompat.widget.ActionMenuPresenter: void setWidthLimit(int,boolean)
androidx.appcompat.view.menu.StandardMenuPopup: boolean isShowing()
com.xuexiang.xhttp2.annotation.RequestParams: java.lang.String url()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void drainLoop()
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDoFinally: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.SuggestionsAdapter: void updateSpinnerState(android.database.Cursor)
androidx.fragment.app.FragmentTransaction: void commitNowAllowingStateLoss()
okhttp3.internal.ws.RealWebSocket: void writePingFrame()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceName(int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getChildCount()
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
org.aspectj.runtime.internal.Conversions: Conversions()
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: void dispose()
androidx.versionedparcelable.VersionedParcelize: boolean isCustom()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean)
com.google.gson.internal.LazilyParsedNumber: double doubleValue()
com.appspa.update.service.DownloadService$FileDownloadCallBack: void onCancel()
io.reactivex.internal.util.ArrayListSupplier: ArrayListSupplier(java.lang.String,int)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: void onComplete()
okhttp3.HttpUrl: java.lang.String encodedPassword()
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: void onError(java.lang.Throwable)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: AbsActionBarView$VisibilityAnimListener(androidx.appcompat.widget.AbsActionBarView)
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: void setCancellable(io.reactivex.functions.Cancellable)
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.Object clone()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.model.HttpParams getCommonParams()
okhttp3.HttpUrl: java.lang.String encodedFragment()
com.appspa.update.utils.DrawableUtils: android.graphics.drawable.StateListDrawable getDrawable(int,int,int)
androidx.fragment.app.FragmentTabHost$DummyTabFactory: android.view.View createTabContent(java.lang.String)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
androidx.appcompat.view.menu.ActionMenuItem: char getNumericShortcut()
okhttp3.internal.Util: boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[])
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: void innerNext(java.lang.Object)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.gson.JsonSerializer: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.appspa.update.widget.UpdateDialogFragment: void initData()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.processors.UnicastProcessor: void drainFused(org.reactivestreams.Subscriber)
okhttp3.EventListener: okhttp3.EventListener$Factory factory(okhttp3.EventListener)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1: DrawerLayout$ViewDragCallback$1(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String)
androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody: okhttp3.MediaType contentType()
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void cancel()
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyUp(int,android.view.KeyEvent)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: void otherComplete()
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: void drain()
androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void create(boolean)
androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColorResource(int)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void start()
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: void onComplete()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getColumnCount()
androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[])
okhttp3.Cache$CacheRequestImpl: void abort()
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: boolean hasCompleted()
androidx.appcompat.app.AppCompatDelegateImpl$1: boolean shouldWrapException(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getDrawingOrder()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: FlowableAll$AllSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Predicate)
okio.Buffer: long size()
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable: ObservablePublish$InnerDisposable(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: void onError(java.lang.Throwable)
io.reactivex.parallel.ParallelFailureHandling: java.lang.Object apply(java.lang.Object,java.lang.Object)
androidx.viewpager.R$drawable: R$drawable()
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.internal.operators.maybe.MaybeToPublisher valueOf(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: boolean equals(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)
io.reactivex.internal.subscriptions.SubscriptionHelper: SubscriptionHelper(java.lang.String,int)
com.xuexiang.xhttp2.utils.Utils: java.lang.String getDiskFilesDir(java.lang.String)
com.appspa.update.proxy.impl.DefaultPrompterProxyImpl: void recycle()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
okio.ByteString: boolean startsWith(byte[])
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.customview.widget.ViewDragHelper: void abort()
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: void onDismiss()
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String)
androidx.appcompat.widget.TintResources: android.graphics.drawable.Drawable getDrawable(int)
retrofit2.OkHttpCall: retrofit2.OkHttpCall clone()
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: boolean tryOnNext(java.lang.Object)
com.appspa.update.entity.PromptEntity: boolean isIgnoreDownloadError()
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: void onError(java.lang.Throwable)
okio.Buffer$1: void write(int)
androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: void drain()
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void release(io.reactivex.internal.schedulers.IoScheduler$ThreadWorker)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void truncateFinal()
androidx.collection.SparseArrayCompat: void remove(int)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: java.lang.Object next()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(java.lang.Object)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: void onNext(java.lang.Object)
io.reactivex.subjects.ReplaySubject$Node: ReplaySubject$Node(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
androidx.core.app.ShareCompat: ShareCompat()
androidx.core.os.BuildCompat: boolean isAtLeastN()
androidx.appcompat.resources.R$style: R$style()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
okhttp3.internal.http2.Settings: void clear()
com.google.gson.Gson$FutureTypeAdapter: Gson$FutureTypeAdapter()
com.xuexiang.xhttp2.cache.RxCache$Builder: long access$700(com.xuexiang.xhttp2.cache.RxCache$Builder)
androidx.fragment.app.FragmentTabHost: void ensureHierarchy(android.content.Context)
com.xuexiang.xhttp2.callback.SimpleCallBack: SimpleCallBack()
androidx.core.app.NotificationManagerCompat$NotifyTask: NotificationManagerCompat$NotifyTask(java.lang.String,int,java.lang.String,android.app.Notification)
io.reactivex.internal.observers.EmptyCompletableObserver: void dispose()
com.google.gson.internal.LinkedHashTreeMap: java.util.Set entrySet()
androidx.vectordrawable.animated.R$dimen: R$dimen()
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapSupport: void innerError(java.lang.Throwable)
com.xuexiang.xhttp2.interceptor.CacheInterceptorOffline: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.appcompat.widget.ActionMenuPresenter$SavedState: ActionMenuPresenter$SavedState(android.os.Parcel)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void request(long)
com.appspa.update.entity.PromptEntity: int getThemeColor()
io.reactivex.internal.operators.flowable.FlowableToListSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: boolean onMenuItemClick(android.view.MenuItem)
io.reactivex.internal.operators.flowable.FlowableSkipLast: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: AppCompatSpinner$DialogPopup(androidx.appcompat.widget.AppCompatSpinner)
okhttp3.Response: okhttp3.Headers headers()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver(io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
com.xuexiang.xhttp2.https.HttpsUtils$MyTrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)
com.appspa.update.utils.UpdateUtils: java.lang.String byte2FitMemorySize(long)
androidx.loader.content.CursorLoader: void setSelectionArgs(java.lang.String[])
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getDirection()
org.aspectj.runtime.reflect.StringMaker: java.lang.String makeModifiersString(int)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput)
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: void onComplete()
androidx.appcompat.app.ActionBar: void setLogo(android.graphics.drawable.Drawable)
retrofit2.ParameterHandler$Headers: void apply(retrofit2.RequestBuilder,okhttp3.Headers)
androidx.collection.CircularIntArray: void removeFromEnd(int)
androidx.core.internal.view.SupportMenuItem: int getAlphabeticModifiers()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: void onError(java.lang.Throwable)
androidx.core.view.VelocityTrackerCompat: VelocityTrackerCompat()
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)
androidx.appcompat.widget.SwitchCompat: void cancelSuperTouch(android.view.MotionEvent)
retrofit2.Response: java.lang.Object body()
androidx.core.graphics.TypefaceCompatBaseImpl$1: TypefaceCompatBaseImpl$1(androidx.core.graphics.TypefaceCompatBaseImpl)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: FlowableBufferBoundary$BufferCloseSubscriber(io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber,long)
androidx.appcompat.view.menu.MenuPopupHelper: void onDismiss()
com.xuexiang.xhttp2.cache.model.CacheMode: java.lang.String getClassName()
okhttp3.internal.http2.Http2Connection$3: void execute()
androidx.appcompat.widget.ActionBarOverlayLayout$3: ActionBarOverlayLayout$3(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.appspa.update.utils.ApkUtils: boolean installNormal(android.content.Context,java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void innerSuccess(io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver,java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onEdgeDragStarted(int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeWithDefaults(int)
com.appspa.update.utils.UpdateUtils: boolean isMainThread()
androidx.fragment.app.Fragment: void onDestroyView()
androidx.core.view.NestedScrollingChildHelper: void onDetachedFromWindow()
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber(io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void cancel()
com.zhy.http.okhttp.request.PostFileRequest$1: void onRequestProgress(long,long)
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void innerValue(boolean,java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber: void request(long)
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: ParallelCollect$ParallelCollectSubscriber(org.reactivestreams.Subscriber,java.lang.Object,io.reactivex.functions.BiConsumer)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)
io.reactivex.internal.operators.parallel.ParallelRunOn: void createSubscriber(int,org.reactivestreams.Subscriber[],org.reactivestreams.Subscriber[],io.reactivex.Scheduler$Worker)
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder()
okhttp3.CipherSuite$1: int compare(java.lang.Object,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)
androidx.appcompat.widget.TintTypedArray: void recycle()
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: void onNext(java.lang.Object)
com.google.gson.internal.Streams$AppendableWriter: void write(int)
okhttp3.CacheControl$Builder: CacheControl$Builder()
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
androidx.core.app.Person: android.os.PersistableBundle toPersistableBundle()
com.zhy.http.okhttp.request.PostStringRequest: okhttp3.Request buildRequest(okhttp3.RequestBody)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: void startTimeout(long)
com.appspa.update.utils.UpdateUtils: boolean checkWifi()
androidx.loader.content.ModernAsyncTask$2: ModernAsyncTask$2(androidx.loader.content.ModernAsyncTask)
okio.Timeout: void waitUntilNotified(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask: void run()
io.reactivex.internal.subscribers.FutureSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: SupportMenuInflater$InflatedOnMenuItemClickListener(java.lang.Object,java.lang.String)
com.zhy.http.okhttp.request.PostFileRequest: okhttp3.Request buildRequest(okhttp3.RequestBody)
androidx.appcompat.widget.DecorToolbar: void setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
io.reactivex.observers.ResourceSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.NotificationCompatSideChannelService: android.os.IBinder onBind(android.content.Intent)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.core.view.MenuItemCompat: boolean collapseActionView(android.view.MenuItem)
io.reactivex.subjects.MaybeSubject$MaybeDisposable: void dispose()
okhttp3.internal.Util: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
okhttp3.internal.http2.Http2Connection: void start(boolean)
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)
com.google.gson.internal.Primitives: boolean isWrapperType(java.lang.reflect.Type)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)
androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryOpenSubscriber: void onComplete()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(int,okio.Source)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.internal.http2.Http2Connection$4: Http2Connection$4(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
androidx.appcompat.widget.AppCompatSpinner$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.versionedparcelable.VersionedParcel: java.lang.Throwable getRootCause(java.lang.Throwable)
com.google.gson.internal.ConstructorConstructor$1: java.lang.Object construct()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationEnd(android.view.View)
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
io.reactivex.internal.util.NotificationLite: NotificationLite(java.lang.String,int)
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: void onNext(java.lang.Object)
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
okio.RealBufferedSource$1: int read(byte[],int,int)
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuBuilder: void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: ReflectiveTypeAdapterFactory$BoundField(java.lang.String,boolean,boolean)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver(io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver)
okhttp3.internal.connection.RealConnection: boolean isMultiplexed()
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setVersionName(java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer: FlowableOnBackpressureBuffer(io.reactivex.Flowable,int,boolean,boolean,io.reactivex.functions.Action)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentFactory getFragmentFactory()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapIntoIterable: org.reactivestreams.Publisher apply(java.lang.Object)
com.xuexiang.xhttp2.cache.key.Strings: Strings()
com.appspa.update.widget.UpdateDialog: void onDetachedFromWindow()
okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)
androidx.appcompat.widget.MenuPopupWindow: void setEnterTransition(java.lang.Object)
okio.ForwardingSource: void close()
androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)
com.appspa.update.utils.FileUtils: boolean isPrivatePath(android.content.Context,java.lang.String)
com.appspa.update.utils.FileUtils: android.net.Uri getMediaContentUri(android.content.Context,java.io.File)
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: BaseDynamicInterceptor()
androidx.collection.ArraySet$1: void colRemoveAt(int)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
com.xuexiang.xhttp2.cookie.PersistentCookieStore: java.util.List get(okhttp3.HttpUrl)
androidx.appcompat.R$interpolator: R$interpolator()
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: void onSuccess(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: void dispose()
androidx.cursoradapter.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.core.text.util.LinkifyCompat: void pruneOverlaps(java.util.ArrayList,android.text.Spannable)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: ObservableSequenceEqualSingle$EqualObserver(io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator,int,int)
io.reactivex.internal.operators.observable.ObservableRefCount: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.Object adapt(retrofit2.Call)
io.reactivex.internal.observers.FutureObserver: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object cloneTransition(java.lang.Object)
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
com.appspa.update.widget.UpdateDialogFragment: void installApp()
com.google.gson.internal.Primitives: Primitives()
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: java.lang.Object poll()
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void setOption(int,java.lang.Object)
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void removeFirst()
io.reactivex.observers.DisposableSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher getCipher()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: FlowablePublish$PublishSubscriber(java.util.concurrent.atomic.AtomicReference,int)
com.xuexiang.xhttp2.cache.RxCache$Builder: com.xuexiang.xhttp2.cache.converter.IDiskConverter access$800(com.xuexiang.xhttp2.cache.RxCache$Builder)
androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver: void dispose()
androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)
okio.RealBufferedSink: int write(java.nio.ByteBuffer)
androidx.core.content.MimeTypeFilter: boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[])
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: io.reactivex.ObservableEmitter serialize()
androidx.core.view.inputmethod.EditorInfoCompat: int getProtocol(android.view.inputmethod.EditorInfo)
androidx.appcompat.app.ToolbarActionBar: void setSelectedNavigationItem(int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver: void onComplete()
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getTimeout()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: android.net.Uri getLinkUri()
androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowPending()
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver(io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: void onComplete()
io.reactivex.internal.operators.maybe.MaybeZipIterable$SingletonArrayFunc: java.lang.Object apply(java.lang.Object)
androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.String[] makeCache()
androidx.appcompat.view.menu.StandardMenuPopup: void dismiss()
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: boolean isDisposed()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy valueOf(java.lang.String)
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.service.DownloadService: androidx.core.app.NotificationCompat$Builder getNotificationBuilder()
androidx.collection.SparseArrayCompat: void removeAt(int)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast: io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast createWith(java.lang.Object,int,io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver,boolean)
io.reactivex.internal.util.BackpressureHelper: long addCap(long,long)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: void truncate()
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: void onSuccess(java.lang.Object)
okio.Okio$2: Okio$2(okio.Timeout,java.io.InputStream)
io.reactivex.internal.operators.flowable.FlowableCreate: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.Scheduler$Worker createWorker()
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: void onError(java.lang.Throwable)
androidx.viewpager.widget.PagerTitleStrip: void setTextSize(int,float)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber: FlowableTimeoutTimed$FallbackSubscriber(org.reactivestreams.Subscriber,io.reactivex.internal.subscriptions.SubscriptionArbiter)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.cache.core.BaseDiskCache: boolean remove(java.lang.String)
androidx.core.app.TaskStackBuilder: TaskStackBuilder(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableCache$Node: FlowableCache$Node(int)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: ObservableSampleWithObservable$SampleMainObserver(io.reactivex.Observer,io.reactivex.ObservableSource)
okio.Buffer$2: Buffer$2(okio.Buffer)
okhttp3.Request$Builder: okhttp3.Request$Builder get()
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab getSelectedTab()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(int)
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: void onNext(java.lang.Object)
io.reactivex.internal.observers.BasicFuseableObserver: void dispose()
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: void onComplete()
androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: boolean isDisposed()
okio.Buffer: boolean rangeEquals(long,okio.ByteString,int,int)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] stop()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(int)
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy$1: CacheAndRemoteStrategy$1(com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: void onNext(java.lang.Object)
io.reactivex.subscribers.DisposableSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
io.reactivex.internal.operators.observable.ObservableFlattenIterable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: void dispose()
okhttp3.internal.http2.Http2Connection$2: Http2Connection$2(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long)
com.google.gson.JsonStreamParser: boolean hasNext()
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: boolean isDisposed()
io.reactivex.internal.observers.BasicFuseableObserver: boolean isDisposed()
androidx.core.util.DebugUtils: DebugUtils()
okio.Buffer: Buffer()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: void cancel()
androidx.core.widget.AutoSizeableTextView: int getAutoSizeMinTextSize()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder disableInnerClassSerialization()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: ObservableTimeout$TimeoutFallbackObserver(io.reactivex.Observer,io.reactivex.functions.Function,io.reactivex.ObservableSource)
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
androidx.appcompat.widget.TooltipCompatHandler: void scheduleShow()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver(io.reactivex.MaybeObserver,io.reactivex.functions.BiFunction)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)
retrofit2.OkHttpCall$1: void onResponse(okhttp3.Call,okhttp3.Response)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: void dispose()
io.reactivex.exceptions.CompositeException$WrappedPrintWriter: CompositeException$WrappedPrintWriter(java.io.PrintWriter)
androidx.core.widget.AutoScrollHelper: AutoScrollHelper(android.view.View)
io.reactivex.internal.util.HalfSerializer: void onNext(io.reactivex.Observer,java.lang.Object,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
androidx.core.os.ParcelableCompat: ParcelableCompat()
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.core.app.NotificationCompat$Style: void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews)
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: TreeTypeAdapter$SingleTypeFactory(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: java.lang.Object peek()
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: void onError(java.lang.Throwable)
com.google.gson.internal.bind.TypeAdapters$30: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.reactivex.internal.subscriptions.EmptySubscription: java.lang.String toString()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: boolean isDisposed()
io.reactivex.internal.operators.single.SingleDoOnTerminate: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: void onSuccess(java.lang.Object)
com.xuexiang.xhttp2.XHttp$1: XHttp$1()
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
io.reactivex.subjects.AsyncSubject: void remove(io.reactivex.subjects.AsyncSubject$AsyncDisposable)
com.appspa.update.widget.WeakFileDownloadListener: void onError(java.lang.Throwable)
io.reactivex.internal.operators.parallel.ParallelFromArray: void subscribe(org.reactivestreams.Subscriber[])
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: void onComplete()
androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
android.support.v4.app.INotificationSideChannel$Stub: INotificationSideChannel$Stub()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getTooltipText()
androidx.appcompat.widget.PopupMenu: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableRefCount: void reset(io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection)
io.reactivex.subscribers.ResourceSubscriber: void request(long)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void innerError(io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver,java.lang.Throwable)
okio.SegmentedByteString: void write(java.io.OutputStream)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.vectordrawable.R$integer: R$integer()
androidx.core.net.ConnectivityManagerCompat: ConnectivityManagerCompat()
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: java.lang.Object poll()
io.reactivex.internal.util.ArrayListSupplier: java.lang.Object call()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
retrofit2.Platform: retrofit2.Platform findPlatform()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: void onStart()
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: void emit(long,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.collection.CircularIntArray: int getFirst()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewDetachedFromWindow(android.view.View)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
com.xuexiang.xhttp2.cache.converter.SerializableDiskConverter: boolean writer(java.io.OutputStream,java.lang.Object)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextString()
androidx.core.view.ViewGroupCompat: int getNestedScrollAxes(android.view.ViewGroup)
com.xuexiang.xhttp2.cache.RxCache$Builder: RxCache$Builder()
io.reactivex.internal.operators.maybe.MaybeCache: void onComplete()
androidx.core.content.res.ComplexColorCompat: int getColor()
io.reactivex.internal.subscribers.StrictSubscriber: void request(long)
com.google.gson.Gson$2: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.view.ViewPropertyAnimatorCompat: void start()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: void request(long)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
io.reactivex.internal.operators.completable.CompletableFromSingle$CompletableFromSingleObserver: void onError(java.lang.Throwable)
retrofit2.adapter.rxjava2.ResultObservable$ResultObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: CompletableSubscribeOn$SubscribeOnObserver(io.reactivex.CompletableObserver,io.reactivex.CompletableSource)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: void emit(long,java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$5: FragmentManagerImpl$5(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
com.appspa.update.widget.BaseDialog$1: void show(android.view.Window)
com.appspa.update.proxy.impl.DefaultUpdateDownloader: void backgroundDownload()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog show()
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: void replay(io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable)
androidx.appcompat.app.ToolbarActionBar: void setCustomView(int)
androidx.fragment.app.Fragment: void onLowMemory()
org.aspectj.runtime.reflect.StringMaker: java.lang.String stripPackageName(java.lang.String)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: java.io.OutputStream getOutputStream()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findAndroidPlatform()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue getQueue()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
com.google.gson.stream.JsonReader: java.lang.String nextQuotedValue(char)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: void onNext(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: boolean performAction(int,int,android.os.Bundle)
com.xuexiang.xhttp2.interceptor.BaseResponseInterceptor: okhttp3.Request onBeforeRequest(okhttp3.Request,okhttp3.Interceptor$Chain)
androidx.appcompat.widget.TintTypedArray: int getIndex(int)
androidx.fragment.app.Fragment: void setNextTransition(int,int)
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: FlowableRepeat$RepeatSubscriber(org.reactivestreams.Subscriber,long,io.reactivex.internal.subscriptions.SubscriptionArbiter,org.reactivestreams.Publisher)
org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl: java.lang.String getName()
io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: void onSuccess(java.lang.Object)
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.xuexiang.xhttp2.cookie.PersistentCookieStore: void add(okhttp3.HttpUrl,okhttp3.Cookie)
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void fail(java.lang.Throwable,io.reactivex.Observer,io.reactivex.internal.queue.SpscLinkedArrayQueue)
androidx.lifecycle.ComputableLiveData$1: void onActive()
io.reactivex.android.schedulers.AndroidSchedulers: AndroidSchedulers()
io.reactivex.internal.util.NotificationLite: java.lang.Object complete()
retrofit2.Invocation: Invocation(java.lang.reflect.Method,java.util.List)
androidx.loader.content.Loader$ForceLoadContentObserver: boolean deliverSelfNotifications()
io.reactivex.internal.operators.parallel.ParallelFromArray: int parallelism()
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: ObservableDelaySubscriptionOther$DelayObserver(io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther,io.reactivex.internal.disposables.SequentialDisposable,io.reactivex.Observer)
okhttp3.TlsVersion: java.lang.String javaName()
androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)
androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: int requestFusion(int)
androidx.appcompat.app.WindowDecorActionBar: boolean hasIcon()
androidx.appcompat.app.WindowDecorActionBar: boolean collapseActionView()
androidx.appcompat.widget.DecorToolbar: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable()
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.internal.cache.InternalCache)
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: void setActionBarDescription(int)
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: void onComplete()
com.zhy.http.okhttp.request.PostFileRequest$1$1: PostFileRequest$1$1(com.zhy.http.okhttp.request.PostFileRequest$1,long,long)
io.reactivex.internal.queue.SpscLinkedArrayQueue: int calcWrappedOffset(long,int)
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.util.NotificationLite: java.lang.Object error(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableCreate$ErrorAsyncEmitter: FlowableCreate$ErrorAsyncEmitter(org.reactivestreams.Subscriber)
androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)
io.reactivex.internal.operators.completable.CompletableDefer: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getTitle()
org.aspectj.internal.lang.reflect.PointcutExpressionImpl: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatImageHelper: void setInternalImageTint(android.content.res.ColorStateList)
okio.Timeout: okio.Timeout clearTimeout()
androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)
com.zhy.http.okhttp.utils.Platform$Android: java.util.concurrent.Executor defaultCallbackExecutor()
androidx.appcompat.app.WindowDecorActionBar: java.lang.CharSequence getTitle()
io.reactivex.processors.UnicastProcessor: void drain()
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void clear()
io.reactivex.internal.operators.observable.ObservableTake: void subscribeActual(io.reactivex.Observer)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()
okio.Pipe$PipeSink: void write(okio.Buffer,long)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher()
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: boolean isDisposed()
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
androidx.core.app.ActivityRecreator$3: void run()
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: void onComplete()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat z(float)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: boolean offer(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: void onComplete()
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient: android.database.Cursor getCursor()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void clear()
androidx.fragment.app.FragmentManagerImpl: void removeFragment(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: void cancel()
io.reactivex.internal.functions.Functions: java.util.concurrent.Callable createHashSet()
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.cache.RxCache$Builder generateRxCache()
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void close(io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver,long)
androidx.fragment.app.BackStackState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl)
androidx.core.view.ViewCompat: float getScaleY(android.view.View)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createIconWithBackground(int,int,int,int)
com.google.gson.JsonIOException: JsonIOException(java.lang.String,java.lang.Throwable)
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: io.reactivex.internal.operators.flowable.FlowableReplay$Node getHead()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: void drain()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.gson.FieldNamingPolicy$2: FieldNamingPolicy$2(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast: void run()
com.google.gson.internal.UnsafeAllocator$2: java.lang.Object newInstance(java.lang.Class)
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
com.google.gson.internal.bind.TypeAdapters$28: void write(com.google.gson.stream.JsonWriter,java.util.Locale)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: FlowableWithLatestFrom$WithLatestFromSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.BiFunction)
androidx.appcompat.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean isEmpty()
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: void dispose()
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String access$000(okhttp3.internal.cache.DiskLruCache$Snapshot)
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: SingleTimeout$TimeoutMainObserver(io.reactivex.SingleObserver,io.reactivex.SingleSource,long,java.util.concurrent.TimeUnit)
androidx.core.app.JobIntentService: android.os.IBinder onBind(android.content.Intent)
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
io.reactivex.internal.subscriptions.AsyncSubscription: void cancel()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: void onError(java.lang.Throwable)
com.google.gson.stream.JsonReader: double nextDouble()
androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int,int,int)
androidx.core.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: void onSubscribe(org.reactivestreams.Subscription)
retrofit2.RequestFactory$Builder: void parseMethodAnnotation(java.lang.annotation.Annotation)
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: ReplaySubject$SizeBoundReplayBuffer(int)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response stripBody(okhttp3.Response)
androidx.core.view.ViewGroupCompat: void setLayoutMode(android.view.ViewGroup,int)
okhttp3.internal.cache.CacheInterceptor$1: long read(okio.Buffer,long)
androidx.customview.widget.ExploreByTouchHelper$2: java.lang.Object get(java.lang.Object,int)
io.reactivex.internal.operators.observable.ObservableLift: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleDoOnError: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View,int)
com.xuexiang.xhttp2.exception.ApiException: ApiException(java.lang.String,int)
com.appspa.update._AppSpace$1: void run()
androidx.fragment.app.Fragment: void setStateAfterAnimating(int)
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: void emitNext(java.lang.Object,long)
io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: void dispose()
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.interceptor.BaseInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver: MaybeFromCompletable$FromCompletableObserver(io.reactivex.MaybeObserver)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)
androidx.core.content.res.GrowingArrayUtils: long[] insert(long[],int,int,long)
androidx.appcompat.view.menu.ActionMenuItem: void applyIconTint()
io.reactivex.internal.operators.single.SingleCreate$Emitter: void dispose()
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: void dispose()
com.google.gson.Gson: java.lang.String toJson(com.google.gson.JsonElement)
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: void dispose()
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
androidx.appcompat.widget.SearchView$3: SearchView$3(androidx.appcompat.widget.SearchView)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableTakeLastOne: void subscribeActual(org.reactivestreams.Subscriber)
com.xuexiang.xhttp2.model.ExpiredInfo: com.xuexiang.xhttp2.model.ExpiredInfo setExpired(boolean)
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerSlideAnimationEnabled(boolean)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: void replayFinal()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)
androidx.core.app.ActivityOptionsCompat: ActivityOptionsCompat()
androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()
okio.Util: short reverseBytesShort(short)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.view.menu.MenuPopup: int getId()
androidx.versionedparcelable.VersionedParcelStream: void writeLong(long)
androidx.appcompat.widget.ActivityChooserModel: void setHistoryMaxSize(int)
io.reactivex.observers.DisposableCompletableObserver: boolean isDisposed()
androidx.fragment.app.FragmentManagerImpl: void removeRetainedFragment(androidx.fragment.app.Fragment)
io.reactivex.internal.schedulers.SchedulerPoolFactory: java.util.concurrent.ScheduledExecutorService create(java.util.concurrent.ThreadFactory)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterSubscriber: void onError(java.lang.Throwable)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: void request(long)
io.reactivex.internal.subscriptions.BooleanSubscription: void cancel()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int)
androidx.core.widget.AutoSizeableTextView: int[] getAutoSizeTextAvailableSizes()
androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: void onComplete()
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View)
okhttp3.Cookie: java.lang.String value()
androidx.collection.ArrayMap: java.util.Set entrySet()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.gson.InstanceCreator: java.lang.Object createInstance(java.lang.reflect.Type)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: int requestFusion(int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setIcon(int)
okio.SegmentedByteString: boolean rangeEquals(int,okio.ByteString,int,int)
com.google.gson.internal.Streams: java.io.Writer writerForAppendable(java.lang.Appendable)
androidx.appcompat.view.menu.MenuItemImpl: void setShowAsAction(int)
com.google.gson.internal.Excluder$1: com.google.gson.TypeAdapter delegate()
androidx.appcompat.app.AppCompatCallback: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: void cancel()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void invalidateDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: FlowableLastMaybe$LastSubscriber(io.reactivex.MaybeObserver)
androidx.appcompat.widget.DecorToolbar: void setDropdownSelectedPosition(int)
androidx.viewpager.widget.ViewPager: void populate(int)
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
retrofit2.adapter.rxjava2.CallExecuteObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: boolean access$000(io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber)
com.appspa.update.logs.UpdateLog: void setTag(java.lang.String)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode[] values()
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: void onTimeoutError(long,java.lang.Throwable)
androidx.appcompat.app.ActionBar: int getHeight()
androidx.appcompat.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)
androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
androidx.collection.SimpleArrayMap: boolean isEmpty()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean isOutOfBounds(int,int)
androidx.appcompat.widget.SearchView$6: SearchView$6(androidx.appcompat.widget.SearchView)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void cancel()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
androidx.core.view.ViewCompat: void setTranslationX(android.view.View,float)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void onComplete()
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void onComplete()
androidx.fragment.app.Fragment: void performDetach()
com.xuexiang.xhttp2.utils.PathUtils: boolean isExternalStorageDocument(android.net.Uri)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void drainFused()
androidx.versionedparcelable.VersionedParcel: java.io.Serializable readSerializable()
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Menu getMenu()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void drain()
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
io.reactivex.internal.util.BlockingHelper: void verifyNonBlocking()
com.google.gson.JsonPrimitive: com.google.gson.JsonElement deepCopy()
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: MaybeEqualSingle$EqualCoordinator(io.reactivex.SingleObserver,io.reactivex.functions.BiPredicate)
io.reactivex.subjects.CompletableSubject: void onError(java.lang.Throwable)
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: java.lang.Object getAndNullValue()
com.xuexiang.xhttp2.interceptor.BaseRequestInterceptor: BaseRequestInterceptor()
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
retrofit2.ParameterHandler$RawPart: void apply(retrofit2.RequestBuilder,java.lang.Object)
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs()
androidx.appcompat.app.ToolbarActionBar: void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
io.reactivex.internal.observers.FutureObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ActivityChooserView: void setProvider(androidx.core.view.ActionProvider)
io.reactivex.internal.operators.single.SingleMap$MapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.util.EmptyComponent: EmptyComponent(java.lang.String,int)
androidx.appcompat.widget.SearchView$OnSuggestionListener: boolean onSuggestionSelect(int)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: void onError(java.lang.Throwable)
io.reactivex.internal.schedulers.NewThreadWorker: void shutdown()
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: java.lang.Object lpValue()
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: void next(java.lang.Object)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void drainLoop()
androidx.core.widget.TintableCompoundButton: android.content.res.ColorStateList getSupportButtonTintList()
com.google.gson.internal.Excluder: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
okhttp3.internal.cache.FaultHidingSink: void flush()
com.google.gson.Gson: com.google.gson.internal.Excluder excluder()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: ObservableGroupJoin$GroupJoinDisposable(io.reactivex.Observer,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)
androidx.core.view.WindowInsetsCompat: int getStableInsetBottom()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$3: void run()
okio.Buffer: void flush()
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber: java.lang.Object poll()
io.reactivex.internal.operators.flowable.FlowableReduceMaybe: void subscribeActual(io.reactivex.MaybeObserver)
com.xuexiang.xhttp2.cookie.PersistentCookieStore: java.lang.String encodeCookie(com.xuexiang.xhttp2.cookie.SerializableOkHttpCookies)
androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()
io.reactivex.internal.operators.observable.ObservableZip: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: void remove(io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: void onNext(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: int getNumericModifiers()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: ObservableDoFinally$DoFinallyObserver(io.reactivex.Observer,io.reactivex.functions.Action)
androidx.customview.view.AbsSavedState: int describeContents()
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void drainLoop()
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
com.xuexiang.xhttp2.logs.HttpLog: HttpLog()
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawTickMarks(android.graphics.Canvas)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.View getWrappedView()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$Completion: FlowableWindowTimed$WindowSkipSubscriber$Completion(io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber,io.reactivex.processors.UnicastProcessor)
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: void run()
androidx.fragment.app.FragmentStatePagerAdapter: FragmentStatePagerAdapter(androidx.fragment.app.FragmentManager)
io.reactivex.internal.schedulers.InstantPeriodicTask: void dispose()
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: void remove(io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable)
io.reactivex.processors.MulticastProcessor: void onComplete()
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: boolean isDisposed()
androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getLinkUri()
com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(java.lang.Class)
androidx.appcompat.widget.ActionBarContextView: boolean hideOverflowMenu()
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
androidx.customview.widget.ExploreByTouchHelper$1: void obtainBounds(java.lang.Object,android.graphics.Rect)
com.xuexiang.xhttp2.cache.converter.GsonDiskConverter: boolean writer(java.io.OutputStream,java.lang.Object)
com.xuexiang.xhttp2.cache.RxCache$Builder: int access$600(com.xuexiang.xhttp2.cache.RxCache$Builder)
androidx.fragment.app.FragmentHostCallback: int onGetWindowAnimations()
android.support.v4.os.ResultReceiver$MyRunnable: ResultReceiver$MyRunnable(android.support.v4.os.ResultReceiver,int,android.os.Bundle)
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: void trim()
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder(boolean)
org.reactivestreams.Subscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast: ObservableSampleTimed$SampleTimedEmitLast(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)
io.reactivex.internal.disposables.EmptyDisposable: void clear()
androidx.drawerlayout.widget.DrawerLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: boolean isDisposed()
androidx.appcompat.widget.TintResources: TintResources(android.content.Context,android.content.res.Resources)
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: boolean isDisposed()
com.google.gson.internal.bind.JsonTreeReader: int nextInt()
com.zhy.http.okhttp.OkHttpUtils$2: OkHttpUtils$2(com.zhy.http.okhttp.OkHttpUtils,com.zhy.http.okhttp.callback.Callback,okhttp3.Call,java.lang.Exception,int)
androidx.viewpager.widget.ViewPager: void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
androidx.fragment.app.Fragment: boolean isVisible()
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: ObservableTakeUntil$TakeUntilMainObserver$OtherObserver(io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: boolean isDone()
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: void run()
io.reactivex.internal.operators.single.SingleResumeNext: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: FlowableMergeWithCompletable$MergeWithSubscriber(org.reactivestreams.Subscriber)
io.reactivex.internal.util.NotificationLite$ErrorNotification: java.lang.String toString()
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: void trim()
androidx.appcompat.widget.ResourcesWrapper: android.util.DisplayMetrics getDisplayMetrics()
io.reactivex.observers.TestObserver$EmptyObserver: io.reactivex.observers.TestObserver$EmptyObserver[] values()
com.google.gson.internal.bind.JsonTreeReader: void beginObject()
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)
androidx.fragment.app.ListFragment: void onDestroyView()
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap)
io.reactivex.internal.observers.InnerQueuedObserver: int fusionMode()
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: void onNext(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()
androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream)
androidx.appcompat.view.StandaloneActionMode: boolean isTitleOptional()
org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: org.aspectj.lang.reflect.AjType[] getParameterTypes()
com.jakewharton.disklrucache.DiskLruCache: void completeEdit(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean)
androidx.collection.LongSparseArray: boolean containsValue(java.lang.Object)
okhttp3.internal.http2.Http2Codec: java.util.List http2HeadersList(okhttp3.Request)
okhttp3.Cookie: java.lang.String parseDomain(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeDoFinally: void subscribeActual(io.reactivex.MaybeObserver)
okio.ByteString: okio.ByteString of(java.nio.ByteBuffer)
io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableMap$MapObserver: java.lang.Object poll()
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: FlowablePublishAlt$InnerSubscription(org.reactivestreams.Subscriber,io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection)
androidx.appcompat.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)
androidx.appcompat.widget.SearchView: void updateFocusedState()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: RetryExceptionFunc()
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: ParallelRunOn$BaseRunOnSubscriber(int,io.reactivex.internal.queue.SpscArrayQueue,io.reactivex.Scheduler$Worker)
com.google.gson.internal.bind.JsonTreeReader: void promoteNameToValue()
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable: void dispose()
org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: boolean checkTerminated(java.lang.Object,boolean)
androidx.drawerlayout.R$color: R$color()
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.observers.EmptyCompletableObserver: void onComplete()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$4: void accept(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSingleMaybe: ObservableSingleMaybe(io.reactivex.ObservableSource)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()
androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind()
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: void onComplete()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.xuexiang.xhttp2.cache.core.CacheCore: boolean containsKey(java.lang.String)
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String getDate(long)
com.xuexiang.xhttp2.request.BaseBodyRequest: io.reactivex.Observable uploadFilesWithBodys()
com.xuexiang.xhttp2.cache.key.Strings: java.lang.String arrayToString(java.lang.Class,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: java.lang.Object poll()
androidx.appcompat.view.menu.ActionMenuItem: int getOrder()
androidx.fragment.app.ListFragment: android.widget.ListAdapter requireListAdapter()
com.appspa.demo.App: void initUpdate()
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int)
androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbShortTitleRes()
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
com.appspa.update.widget.UpdateDialogFragment: void onDestroyView()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder clone()
org.aspectj.runtime.reflect.SourceLocationImpl: int getLine()
io.reactivex.internal.operators.maybe.MaybeIsEmpty: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.util.AtomicFile: java.io.FileOutputStream startWrite()
androidx.appcompat.app.AlertDialog: void onCreate(android.os.Bundle)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.processors.UnicastProcessor: UnicastProcessor(int)
androidx.appcompat.widget.ResourcesWrapper: int[] getIntArray(int)
androidx.core.util.Consumer: void accept(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayPublisher: void subscribe(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: ObservableCombineLatest$CombinerObserver(io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator,int)
androidx.customview.widget.ExploreByTouchHelper: androidx.collection.SparseArrayCompat getAllNodes()
io.reactivex.internal.operators.completable.CompletableConcatArray: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: void cancel()
com.appspa.update.proxy.impl.AbstractUpdateParser: AbstractUpdateParser()
retrofit2.ParameterHandler$QueryMap: ParameterHandler$QueryMap(java.lang.reflect.Method,int,retrofit2.Converter,boolean)
io.reactivex.internal.subscribers.BlockingSubscriber: BlockingSubscriber(java.util.Queue)
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)
com.google.gson.internal.LinkedTreeMap: java.util.Set entrySet()
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: void truncateFinal()
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: void onNext(java.lang.Object)
com.appspa.update.utils.DialogUtils: boolean isShouldHideInput(android.view.Window,android.view.MotionEvent)
com.zhy.http.okhttp.utils.Platform: com.zhy.http.okhttp.utils.Platform findPlatform()
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.vectordrawable.graphics.drawable.Animatable2Compat: void clearAnimationCallbacks()
androidx.core.text.util.FindAddress$ZipRange: FindAddress$ZipRange(int,int,int,int)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter jsonValue(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void innerClose(boolean,io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber)
io.reactivex.internal.operators.single.SingleMap: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.subscribers.BlockingSubscriber: void onComplete()
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: void dispose()
androidx.appcompat.widget.ButtonBarLayout: int getNextVisibleChildIndex(int)
androidx.fragment.app.FragmentManagerImpl: void makeActive(androidx.fragment.app.Fragment)
com.appspa.update.utils.FileUtils: java.lang.String getExtStoragePath()
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getLongLabel()
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void onComplete()
androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getSubtitle()
androidx.fragment.app.FragmentTransaction: int commit()
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: void dispose()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Character)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableElementAtSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean)
androidx.appcompat.app.ToolbarActionBar: int getNavigationItemCount()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
okhttp3.Response: void close()
com.appspa.update.entity.UpdateError: UpdateError(int,java.lang.String)
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object)
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: void startTimeout(long)
io.reactivex.internal.operators.maybe.MaybeHide: void subscribeActual(io.reactivex.MaybeObserver)
androidx.drawerlayout.R$string: R$string()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] getMetrics()
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager()
okhttp3.RequestBody: long contentLength()
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver: void onNext(java.lang.Object)
okio.Segment: void compact()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okio.ForwardingSource: okio.Timeout timeout()
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling[] values()
com.zhy.http.okhttp.https.HttpsUtils$UnSafeTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()
androidx.collection.SparseArrayCompat: int keyAt(int)
io.reactivex.processors.BehaviorProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.customview.view.AbsSavedState: AbsSavedState(androidx.customview.view.AbsSavedState$1)
okhttp3.Cache$CacheRequestImpl: okio.Sink body()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void onNext(java.lang.Object)
com.google.gson.internal.Streams: void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: void drain()
okhttp3.internal.http.RequestLine: RequestLine()
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver: MaybeFromSingle$FromSingleObserver(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: void onError(java.lang.Throwable)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void innerError(io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver,java.lang.Throwable)
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
androidx.appcompat.widget.ActionBarOverlayLayout$2: void run()
androidx.appcompat.widget.ShareActionProvider: void onPrepareSubMenu(android.view.SubMenu)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
com.appspa.update.widget.UpdateDialogActivity: void initUpdateInfo(com.appspa.update.entity.UpdateEntity)
io.reactivex.internal.operators.single.SingleDelay$Delay$OnError: void run()
io.reactivex.Completable: void subscribe(io.reactivex.CompletableObserver)
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: Http2Connection$IntervalPingRunnable(okhttp3.internal.http2.Http2Connection)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: boolean isCancelled()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.Runnable getCallback()
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: void onUnsubscribed()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)
com.appspa.update.utils.FileUtils: java.lang.String getAppExtPath(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: void dispose()
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
io.reactivex.internal.disposables.ListCompositeDisposable: boolean remove(io.reactivex.disposables.Disposable)
androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
androidx.loader.app.LoaderManagerImpl: boolean hasRunningLoaders()
io.reactivex.internal.functions.ObjectHelper: long verifyPositive(long,java.lang.String)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: void onNext(java.lang.Object)
io.reactivex.subjects.ReplaySubject$ReplayDisposable: ReplaySubject$ReplayDisposable(io.reactivex.Observer,io.reactivex.subjects.ReplaySubject)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)
androidx.appcompat.graphics.drawable.DrawableContainer$1: DrawableContainer$1(androidx.appcompat.graphics.drawable.DrawableContainer)
androidx.appcompat.widget.LinearLayoutCompat: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.flowable.FlowableInterval: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.ToolbarActionBar: void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
androidx.lifecycle.ReportFragment$ActivityInitializationListener: void onResume()
androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisible(boolean)
com.xuexiang.xhttp2.transform.HandleErrTransformer: io.reactivex.ObservableSource apply(io.reactivex.Observable)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: void dismiss()
androidx.appcompat.app.AlertController$AlertParams$1: AlertController$AlertParams$1(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView)
okhttp3.internal.http1.Http1Codec: Http1Codec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter beginArray()
androidx.core.app.NotificationManagerCompat: void cancel(int)
androidx.appcompat.view.ActionBarPolicy: boolean showsOverflowMenuButton()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: void onNext(java.lang.Object)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.util.BlockingIgnoringReceiver: BlockingIgnoringReceiver()
androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
com.appspa.update.utils.ApkUtils: boolean isDeviceRooted()
io.reactivex.internal.util.HalfSerializer: void onError(org.reactivestreams.Subscriber,java.lang.Throwable,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: void init(boolean)
okhttp3.internal.platform.Platform: java.util.List alpnProtocolNames(java.util.List)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: boolean isEmpty()
io.reactivex.internal.operators.mixed.ScalarXMapZHelper: boolean tryAsCompletable(java.lang.Object,io.reactivex.functions.Function,io.reactivex.CompletableObserver)
androidx.fragment.app.ListFragment: android.widget.ListView getListView()
okhttp3.internal.http2.Http2Connection$5: void execute()
io.reactivex.internal.operators.flowable.FlowableTimer: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.ShareCompat$IntentBuilder: void startChooser()
com.xuexiang.xhttp2.cache.core.LruDiskCache: boolean doSave(java.lang.String,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber: int requestFusion(int)
com.appspa.update.utils.ApkUtils: boolean isSystemApplication(android.content.Context,java.lang.String)
okio.SegmentedByteString: okio.ByteString sha256()
androidx.fragment.app.FragmentManagerImpl: void dispatchLowMemory()
io.reactivex.internal.subscribers.StrictSubscriber: void cancel()
com.appspa.demo.http.OKHttpUpdateHttpService: java.util.Map transform(java.util.Map)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBar getSupportActionBar()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: void cancel()
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle getExtras()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)
androidx.fragment.app.FragmentTransitionImpl: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
androidx.appcompat.widget.SearchView$SavedState: java.lang.String toString()
com.google.gson.internal.reflect.PreJava9ReflectionAccessor: PreJava9ReflectionAccessor()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: void drain()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setCategories(java.util.Set)
io.reactivex.Completable: java.lang.NullPointerException toNpe(java.lang.Throwable)
io.reactivex.internal.observers.DisposableLambdaObserver: void onNext(java.lang.Object)
okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
androidx.annotation.CheckResult: java.lang.String suggest()
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: ObservableRefCount$RefConnection(io.reactivex.internal.operators.observable.ObservableRefCount)
okio.Timeout: okio.Timeout clearDeadline()
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionButton()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$SingletonArrayFunc: FlowableCombineLatest$SingletonArrayFunc(io.reactivex.internal.operators.flowable.FlowableCombineLatest)
io.reactivex.internal.operators.completable.CompletableNever: void subscribeActual(io.reactivex.CompletableObserver)
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void drainFused()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean canApplyTheme()
androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: void cancel()
com.xuexiang.xhttp2.XHttp$2: void accept(java.lang.Object)
io.reactivex.observers.DisposableSingleObserver: void onStart()
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: void onComplete()
androidx.appcompat.app.AppCompatDelegate: void onStop()
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3: BaseStrategy$3(com.xuexiang.xhttp2.cache.stategy.BaseStrategy,com.xuexiang.xhttp2.cache.RxCache,java.lang.String)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()
retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)
com.appspa.update.logs.UpdateLog: boolean enableLog(int)
androidx.activity.OnBackPressedCallback: void handleOnBackPressed()
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: void onComplete()
com.google.gson.JsonPrimitive: int hashCode()
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: ListPopupWindow$PopupTouchInterceptor(androidx.appcompat.widget.ListPopupWindow)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: void onChange(boolean)
com.google.gson.internal.LinkedHashTreeMap$KeySet: boolean remove(java.lang.Object)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentTabHost$SavedState$1: FragmentTabHost$SavedState$1()
androidx.fragment.app.FragmentManagerImpl$6: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.widget.AbsActionBarView: boolean canShowOverflowMenu()
okio.Buffer$2: int read()
io.reactivex.internal.functions.Functions$NotificationOnComplete: void run()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void innerError(io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver,java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.view.menu.MenuBuilder: int findItemIndex(int)
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeTask: void run()
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void trimHead()
androidx.appcompat.view.SupportMenuInflater$MenuState: void readGroup(android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: boolean canShowOverflowMenu()
androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)
androidx.fragment.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: FlowableElementAtSingle$ElementAtSubscriber(io.reactivex.SingleObserver,long,java.lang.Object)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.observers.BasicFuseableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver: ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver(io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: void onError(java.lang.Throwable)
okio.Okio: okio.Sink blackhole()
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: boolean hasNext()
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean)
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent getIntent()
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
androidx.appcompat.view.menu.MenuBuilder: void removeGroup(int)
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
retrofit2.OkHttpCall$1: OkHttpCall$1(retrofit2.OkHttpCall,retrofit2.Callback)
io.reactivex.observers.ResourceSingleObserver: boolean isDisposed()
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: void innerError(java.lang.Throwable)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(okio.Buffer)
androidx.appcompat.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: void onNext(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
androidx.collection.LongSparseArray: java.lang.Object get(long)
retrofit2.Platform: java.util.concurrent.Executor defaultCallbackExecutor()
androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1: void onAnimationEnd(android.graphics.drawable.Drawable)
retrofit2.CompletableFutureCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$2: com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper apply(java.lang.Throwable,java.lang.Integer)
androidx.fragment.app.FragmentActivity: void onResume()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void clear()
androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRetrieved(android.graphics.Typeface)
androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)
com.zhy.http.okhttp.request.OtherRequest: okhttp3.RequestBody buildRequestBody()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: void dispose()
androidx.core.widget.EdgeEffectCompat: boolean onRelease()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCanOpenPopup(boolean)
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void innerError(java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
androidx.core.app.ShareCompat$IntentReader: boolean isSingleShare()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[])
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable: void dispose()
io.reactivex.internal.functions.Functions$HashSetCallable: io.reactivex.internal.functions.Functions$HashSetCallable[] values()
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.versionedparcelable.VersionedParcel: void writeFloatArray(float[])
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: void drain()
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.ActionMode: void setTitleOptionalHint(boolean)
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: void run()
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: ObservableOnErrorReturn$OnErrorReturnObserver(io.reactivex.Observer,io.reactivex.functions.Function)
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: void emitFirst()
androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)
androidx.core.os.UserManagerCompat: UserManagerCompat()
com.google.gson.internal.JavaVersion: int getMajorJavaVersion(java.lang.String)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.zhy.http.okhttp.callback.StringCallback: java.lang.Object parseNetworkResponse(okhttp3.Response,int)
androidx.appcompat.widget.TintInfo: TintInfo()
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: void dispose()
io.reactivex.processors.SerializedProcessor: void emitLoop()
io.reactivex.internal.operators.flowable.FlowableRepeatWhen: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
io.reactivex.internal.subscribers.DeferredScalarSubscriber: DeferredScalarSubscriber(org.reactivestreams.Subscriber)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void stop()
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: void request(long)
io.reactivex.internal.schedulers.RxThreadFactory: RxThreadFactory(java.lang.String)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: boolean isEmpty()
androidx.appcompat.app.WindowDecorActionBar: boolean isShowing()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: void onNext(java.lang.Object)
androidx.core.provider.SelfDestructiveThread$1: SelfDestructiveThread$1(androidx.core.provider.SelfDestructiveThread)
androidx.versionedparcelable.VersionedParcelize: java.lang.Class factory()
io.reactivex.internal.operators.flowable.FlowableRetryWhen: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.lang.Object peek()
androidx.annotation.RequiresPermission: boolean conditional()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getOrder()
io.reactivex.Scheduler$Worker$PeriodicTask: Scheduler$Worker$PeriodicTask(io.reactivex.Scheduler$Worker,long,java.lang.Runnable,long,io.reactivex.internal.disposables.SequentialDisposable,long)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.view.View)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri)
androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: void sleep(int)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
androidx.core.app.JobIntentService: int onStartCommand(android.content.Intent,int,int)
androidx.drawerlayout.widget.DrawerLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getOutline(android.graphics.Outline)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: SingleFlatMapMaybe$FlatMapSingleObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function)
com.xuexiang.xhttp2.cache.stategy.NoStrategy$1: NoStrategy$1(com.xuexiang.xhttp2.cache.stategy.NoStrategy)
androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
androidx.core.view.NestedScrollingParent: int getNestedScrollAxes()
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
androidx.appcompat.view.menu.CascadingMenuPopup: int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: AppCompatDelegateImpl$PanelFeatureState(int)
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)
retrofit2.ParameterHandler$RawPart: void apply(retrofit2.RequestBuilder,okhttp3.MultipartBody$Part)
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: void subscribe()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.annotation.InspectableProperty: boolean hasAttributeId()
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
androidx.appcompat.app.ToolbarActionBar: int getSelectedNavigationIndex()
io.reactivex.internal.functions.Functions$ToMapKeySelector: void accept(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onMeasure(int,int)
androidx.core.provider.FontsContractCompat$4$8: FontsContractCompat$4$8(androidx.core.provider.FontsContractCompat$4)
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: void onError(java.lang.Throwable)
com.jakewharton.disklrucache.StrictLineReader$1: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()
androidx.fragment.app.ListFragment: void setEmptyText(java.lang.CharSequence)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: void run()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame()
com.google.gson.internal.bind.JsonTreeWriter: void flush()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowOperation: FlowableWindowBoundarySelector$WindowOperation(io.reactivex.processors.UnicastProcessor,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: FlowablePublish$InnerSubscriber(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.appspa.update.proxy.impl.DefaultUpdateChecker: void onCheckSuccess(java.lang.String,java.lang.String,com.appspa.update.proxy.IUpdateProxy)
com.xuexiang.xhttp2.cache.RxCache: boolean access$1500(com.xuexiang.xhttp2.cache.RxCache)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite valueOf(java.lang.String)
retrofit2.ParameterHandler$Headers: void apply(retrofit2.RequestBuilder,java.lang.Object)
io.reactivex.internal.subscribers.FutureSubscriber: void request(long)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: void innerComplete()
androidx.arch.core.executor.ArchTaskExecutor$1: ArchTaskExecutor$1()
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: void setResource(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: void onError(java.lang.Throwable)
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
androidx.appcompat.view.menu.MenuPopup: void setHorizontalOffset(int)
com.xuexiang.xhttp2.utils.TypeUtils: java.lang.Class getGenericClass(java.lang.reflect.ParameterizedType,int)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.ActionBar getSupportActionBar()
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterSubscriber: java.lang.Object poll()
androidx.fragment.app.Fragment: java.lang.String toString()
io.reactivex.internal.operators.maybe.MaybeZipArray$SingletonArrayFunc: MaybeZipArray$SingletonArrayFunc(io.reactivex.internal.operators.maybe.MaybeZipArray)
com.google.gson.JsonObject: JsonObject()
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: RoundedBitmapDrawableFactory()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat wrap(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: java.lang.CharSequence getHintText()
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: FlowablePublishMulticast$MulticastProcessor(int,boolean)
androidx.appcompat.widget.MenuItemHoverListener: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.fragment.app.FragmentController: FragmentController(androidx.fragment.app.FragmentHostCallback)
androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)
com.xuexiang.xhttp2.model.HttpParams: void put(java.lang.String,byte[],java.lang.String,com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenuPrepared()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()
androidx.annotation.StringDef: boolean open()
io.reactivex.internal.operators.single.SingleToObservable: io.reactivex.SingleObserver create(io.reactivex.Observer)
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: RxJava2CallAdapterFactory(io.reactivex.Scheduler,boolean)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void accept(java.net.SocketImpl)
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: void logForRequest(okhttp3.Request,okhttp3.Connection)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void removeShortcuts(java.util.List)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void error(java.lang.Throwable)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: ActivityChooserModel$HistoricalRecord(android.content.ComponentName,long,float)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: FlowableDebounceTimed$DebounceEmitter(java.lang.Object,long,io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber)
io.reactivex.internal.queue.SpscArrayQueue: void clear()
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: void onNext(java.lang.Object)
okhttp3.CookieJar$1: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okio.ByteString: okio.ByteString digest(java.lang.String)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void onComplete()
androidx.versionedparcelable.VersionedParcel: java.lang.Exception readException(java.lang.Exception,int)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)
com.appspa.update.proxy.impl.DefaultUpdateDownloader: void startOpenHtml(com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationEnd(android.animation.Animator)
androidx.core.view.MenuItemCompat$1: MenuItemCompat$1(androidx.core.view.MenuItemCompat$OnActionExpandListener)
androidx.fragment.app.FragmentManagerImpl: android.os.Parcelable saveAllState()
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)
io.reactivex.Observable: io.reactivex.Observable wrap(io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: void drainLoop()
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: boolean isCollapsed(android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: DrawableContainer$DrawableContainerState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void onError(java.lang.Throwable)
androidx.loader.content.ModernAsyncTask: void finish(java.lang.Object)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: FingerprintManagerCompat$AuthenticationCallback()
androidx.core.app.Person$Builder: androidx.core.app.Person build()
androidx.appcompat.widget.SearchView$10: void afterTextChanged(android.text.Editable)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setGravity(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char)
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: void onNext(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean isStateful()
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: void request(long)
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableIntervalRange: void subscribeActual(io.reactivex.Observer)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: void setMaxActivityCount(int)
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable: ObservableIgnoreElementsCompletable(io.reactivex.ObservableSource)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void innerError(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber,java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: void dispose()
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void open(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void onComplete()
androidx.core.text.ICUCompat: java.lang.String getScript(java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)
com.xuexiang.xhttp2.cache.core.BaseDiskCache: boolean containsKey(java.lang.String)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(android.view.View)
androidx.appcompat.widget.SuggestionsAdapter: void onClick(android.view.View)
io.reactivex.internal.operators.flowable.FlowableTakeUntil: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: FlowableLastSingle$LastSubscriber(io.reactivex.SingleObserver,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: FlowableConcatMap$ConcatMapDelayed(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,boolean)
com.xuexiang.xhttp2.request.BaseRequest: retrofit2.Retrofit$Builder generateRetrofit()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: void onComplete()
androidx.fragment.app.DialogFragment: boolean getShowsDialog()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()
androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void accept(io.reactivex.Observer,java.util.Collection)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: AppCompatSpinner$DropdownPopup(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceEntryName(int)
io.reactivex.internal.operators.observable.ObservableToList: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: void dispose()
com.jakewharton.disklrucache.DiskLruCache$Editor: DiskLruCache$Editor(com.jakewharton.disklrucache.DiskLruCache,com.jakewharton.disklrucache.DiskLruCache$Entry,com.jakewharton.disklrucache.DiskLruCache$1)
io.reactivex.internal.subscribers.BlockingLastSubscriber: BlockingLastSubscriber()
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: void onComplete()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: void writeToParcel(android.os.Parcel,int)
okhttp3.HttpUrl: java.lang.String host()
androidx.appcompat.widget.TintTypedArray: android.content.res.Resources getResources()
androidx.core.view.ViewPropertyAnimatorListenerAdapter: ViewPropertyAnimatorListenerAdapter()
io.reactivex.internal.operators.observable.ObservableBlockingSubscribe: ObservableBlockingSubscribe()
com.appspa.update.utils.ShellUtils: com.appspa.update.utils.ShellUtils$CommandResult execCommand(java.lang.String,boolean,boolean)
com.appspa.update.UpdateManager$2: UpdateManager$2(com.appspa.update.UpdateManager,com.appspa.update.listener.IUpdateParseCallback)
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: void onNext(java.lang.Object)
androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: void onComplete()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: int getColumn()
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void tryReplenish()
org.aspectj.lang.SoftException: void printStackTrace(java.io.PrintWriter)
androidx.core.app.RemoteInput: android.os.Bundle getExtras()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)
androidx.appcompat.app.ToolbarActionBar: androidx.appcompat.app.ActionBar$Tab getTabAt(int)
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: ThemedSpinnerAdapter$Helper(android.content.Context)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.internal.operators.maybe.MaybeToPublisher[] values()
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hideOverflowMenu()
com.xuexiang.xhttp2.model.XHttpRequest: com.xuexiang.xhttp2.annotation.RequestParams getHttpRequestParams(java.lang.Class)
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
okhttp3.internal.cache.DiskLruCache: boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: void onError(java.lang.Throwable)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
com.xuexiang.xhttp2.exception.ApiException: ApiException(java.lang.Throwable,int)
io.reactivex.internal.operators.parallel.ParallelReduce: void reportError(org.reactivestreams.Subscriber[],java.lang.Throwable)
io.reactivex.internal.schedulers.ComputationScheduler: void createWorkers(int,io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: void onError(java.lang.Throwable)
org.aspectj.internal.lang.reflect.AdviceImpl: org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: void onError(java.lang.Throwable)
okio.AsyncTimeout$1: void write(okio.Buffer,long)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: void onFontRetrievalFailed(int)
androidx.appcompat.app.ToolbarActionBar: boolean openOptionsMenu()
androidx.fragment.app.FragmentState: java.lang.String toString()
io.reactivex.flowables.ConnectableFlowable: ConnectableFlowable()
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.SwitchCompat: boolean hitThumb(float,float)
com.xuexiang.xhttp2.transform.func.HttpResponseThrowableFunc: java.lang.Object apply(java.lang.Object)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver(io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver)
io.reactivex.internal.subscriptions.ScalarSubscription: boolean isEmpty()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: void onNext(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char,int,int)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: ActivityOptionsCompat$ActivityOptionsCompatImpl(android.app.ActivityOptions)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: boolean isDisposed()
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: ExecutorScheduler$DelayedRunnable(java.lang.Runnable)
com.google.gson.internal.JavaVersion: int parseDotted(java.lang.String)
androidx.fragment.app.FragmentManager: FragmentManager()
androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()
io.reactivex.internal.observers.QueueDrainObserver: boolean cancelled()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void onError(java.lang.Throwable)
okhttp3.RealCall: java.lang.String redactedUrl()
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: void reset(int)
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: void onError(java.lang.Throwable)
com.google.gson.internal.ConstructorConstructor$10: ConstructorConstructor$10(com.google.gson.internal.ConstructorConstructor)
androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle: void onComplete()
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap(java.util.Comparator)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void dispose()
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.NestedScrollingChildHelper: void onStopNestedScroll(android.view.View)
okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification)
androidx.appcompat.widget.Toolbar: void dismissPopupMenus()
androidx.fragment.app.FragmentManager: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
androidx.appcompat.app.AppCompatActivity: boolean supportRequestWindowFeature(int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: MenuItemWrapperICS$ActionProviderWrapperJB(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
androidx.core.widget.TextViewCompat: int getMaxLines(android.widget.TextView)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRoleDescription(java.lang.CharSequence)
okhttp3.Request$Builder: Request$Builder()
io.reactivex.internal.operators.maybe.MaybeToPublisher: MaybeToPublisher(java.lang.String,int)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void clear()
androidx.appcompat.widget.SwitchCompat: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.ActionBar: void setDisplayOptions(int)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void cancel()
com.appspa.demo.R$integer: R$integer()
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: FlowableGroupBy$State(int,io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber,java.lang.Object,boolean)
androidx.core.app.NotificationCompat$CarExtender: android.graphics.Bitmap getLargeIcon()
com.appspa.update.listener.impl.DefaultInstallListener: DefaultInstallListener()
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: void request(long)
androidx.fragment.app.FragmentTransition: void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
io.reactivex.internal.functions.Functions$TruePredicate: Functions$TruePredicate()
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources getResources()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)
io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver: ObservableFilter$FilterObserver(io.reactivex.Observer,io.reactivex.functions.Predicate)
okhttp3.Challenge: int hashCode()
io.reactivex.internal.functions.ObjectHelper: int compare(long,long)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
com.xuexiang.xhttp2.cache.key.DefaultObjectSerializer: java.lang.String toString(java.lang.Object)
androidx.appcompat.view.SupportMenuInflater$MenuState: void readItem(android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleGenerator: java.lang.Object apply(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: void getValue(int,android.util.TypedValue,boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
okhttp3.Headers: java.lang.String name(int)
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setBarLength(float)
com.zhy.http.okhttp.builder.OkHttpRequestBuilder: com.zhy.http.okhttp.builder.OkHttpRequestBuilder tag(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: AppCompatSpinner$DropDownAdapter(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)
okio.ForwardingSink: java.lang.String toString()
okhttp3.internal.http1.Http1Codec$ChunkedSink: void close()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
okhttp3.internal.Internal: Internal()
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView$1: void onClick(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: java.lang.Object getItem(int)
androidx.cursoradapter.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
io.reactivex.internal.operators.flowable.FlowableAutoConnect: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: void onComplete()
androidx.versionedparcelable.VersionedParcelParcel: void writeStrongBinder(android.os.IBinder)
androidx.fragment.app.FragmentStatePagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.versionedparcelable.VersionedParcel: long[] readLongArray(long[],int)
okhttp3.Handshake: java.util.List peerCertificates()
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver: SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver(java.util.concurrent.atomic.AtomicReference,io.reactivex.SingleObserver)
com.xuexiang.xhttp2.utils.Utils: boolean isPublicPath(java.lang.String)
com.appspa.update.widget.WeakFileDownloadListener: com.appspa.update.widget.IDownloadEventHandler getEventHandler()
androidx.appcompat.widget.SearchView: boolean launchSuggestion(int,int,java.lang.String)
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
androidx.drawerlayout.R$id: R$id()
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$4: io.reactivex.ObservableSource apply(java.lang.Throwable)
androidx.customview.widget.ExploreByTouchHelper: boolean performActionForHost(int,android.os.Bundle)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window$Callback)
com.zhy.http.okhttp.cookie.store.MemoryCookieStore: java.util.List get(okhttp3.HttpUrl)
androidx.core.widget.NestedScrollView: void doScrollY(int)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: ObservableDebounce$DebounceObserver(io.reactivex.Observer,io.reactivex.functions.Function)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: boolean isDisposed()
androidx.viewpager.widget.ViewPager: void onMeasure(int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver: void onSuccess(java.lang.Object)
com.xuexiang.xhttp2.transform.HttpResultTransformer: io.reactivex.ObservableSource apply(io.reactivex.Observable)
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])
io.reactivex.internal.operators.maybe.MaybeFromCallable: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean checkTerminate()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void request(long)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()
androidx.core.app.NotificationCompatSideChannelService: NotificationCompatSideChannelService()
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader$1: void onCancel(android.content.DialogInterface)
io.reactivex.internal.subscriptions.BasicQueueSubscription: BasicQueueSubscription()
io.reactivex.internal.operators.observable.ObservableSkipLast: void subscribeActual(io.reactivex.Observer)
androidx.core.app.JobIntentService$CompatWorkEnqueuer: void serviceStartReceived()
com.google.gson.internal.bind.JsonTreeWriter: void put(com.google.gson.JsonElement)
androidx.appcompat.view.ActionMode: void setTitle(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.subjects.AsyncSubject: void onError(java.lang.Throwable)
androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)
androidx.appcompat.widget.ActionBarContainer: void jumpDrawablesToCurrentState()
androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
io.reactivex.processors.UnicastProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: NotificationManagerCompat$SideChannelManager$ListenerRecord(android.content.ComponentName)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void clear()
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void onComplete()
androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)
okhttp3.internal.ws.WebSocketWriter$FrameSink: void write(okio.Buffer,long)
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: void onRequested()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStopped()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: long requested()
io.reactivex.internal.disposables.EmptyDisposable: boolean offer(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableCountSingle: void subscribeActual(io.reactivex.SingleObserver)
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: void dismissProgress()
androidx.appcompat.app.AppCompatActivity: boolean performMenuItemShortcut(int,android.view.KeyEvent)
androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.appspa.update._AppSpace: android.graphics.drawable.Drawable getTopDrawable(java.lang.String)
androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast: void onNext(java.lang.Object)
androidx.core.net.TrafficStatsCompat: void untagSocket(java.net.Socket)
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void setupSubscribers()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast: ObservableSampleWithObservable$SampleMainEmitLast(io.reactivex.Observer,io.reactivex.ObservableSource)
androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()
androidx.core.content.res.ConfigurationHelper: int getDensityDpi(android.content.res.Resources)
androidx.core.content.pm.ShortcutInfoCompat: android.os.PersistableBundle buildExtrasBundle()
androidx.core.text.util.FindAddress$ZipRange: boolean matches(java.lang.String)
androidx.appcompat.view.menu.ListMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
io.reactivex.internal.util.ExceptionHelper$Termination: ExceptionHelper$Termination()
io.reactivex.internal.functions.ObjectHelper: int verifyPositive(int,java.lang.String)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber: void onComplete()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper: RetryExceptionFunc$Wrapper(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc,java.lang.Throwable,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: ScrollingTabContainerView$TabClickListener(androidx.appcompat.widget.ScrollingTabContainerView)
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: FlowableReduce$ReduceSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: void cancel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()
androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: void dispose()
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onPageScrollStateChanged(int)
io.reactivex.observers.ResourceSingleObserver: void dispose()
androidx.fragment.app.FragmentTabHost$SavedState$1: androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.app.Activity,android.content.Context,android.os.Handler,int)
androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)
androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)
okhttp3.internal.cache2.FileOperator: FileOperator(java.nio.channels.FileChannel)
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: boolean isDisposed()
com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache$Editor access$702(com.jakewharton.disklrucache.DiskLruCache$Entry,com.jakewharton.disklrucache.DiskLruCache$Editor)
okhttp3.ConnectionPool$1: ConnectionPool$1(okhttp3.ConnectionPool)
io.reactivex.internal.schedulers.RxThreadFactory: RxThreadFactory(java.lang.String,int)
androidx.fragment.app.FragmentManagerViewModel: int hashCode()
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: java.lang.Object poll()
androidx.appcompat.widget.ListPopupWindow$1: androidx.appcompat.widget.ListPopupWindow getPopup()
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: ObservableDoOnEach$DoOnEachObserver(io.reactivex.Observer,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
okhttp3.internal.http2.Http2Connection$Listener$1: Http2Connection$Listener$1()
androidx.core.view.ScrollingView: int computeVerticalScrollRange()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.versionedparcelable.VersionedParcel: java.util.Map readMap(java.util.Map,int)
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: FlowableScan$ScanSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: void onComplete()
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleGenerator: java.lang.Object apply(java.lang.Object,io.reactivex.Emitter)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: ObservableBufferBoundary$BufferBoundaryObserver(io.reactivex.Observer,io.reactivex.ObservableSource,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.appcompat.app.AppCompatDialog: void invalidateOptionsMenu()
com.google.gson.internal.LinkedTreeMap$KeySet: void clear()
com.appspa.update.R$color: R$color()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)
okhttp3.CookieJar$1: CookieJar$1()
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySubscriber: void onComplete()
androidx.core.provider.FontsContractCompat$4$9: FontsContractCompat$4$9(androidx.core.provider.FontsContractCompat$4,android.graphics.Typeface)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVisibility(int)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: void onComplete()
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: SingleTakeUntil$TakeUntilMainObserver(io.reactivex.SingleObserver)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMinTextSize()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: AppCompatTextViewAutoSizeHelper(android.widget.TextView)
androidx.lifecycle.ReportFragment: ReportFragment()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)
io.reactivex.internal.operators.maybe.MaybeFlatten: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: void cancelTimer()
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnComplete: void run()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okio.Buffer$UnsafeCursor: void close()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] cleanupAutoSizePresetSizes(int[])
io.reactivex.observers.DisposableMaybeObserver: DisposableMaybeObserver()
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver: void onNext(retrofit2.Response)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: void onNext(java.lang.Object)
androidx.viewpager.widget.ViewPager: void onSizeChanged(int,int,int,int)
io.reactivex.internal.util.EndConsumerHelper: java.lang.String composeMessage(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)
com.xuexiang.xhttp2.cache.key.DefaultObjectSerializer: DefaultObjectSerializer()
androidx.appcompat.widget.SearchView: void updateVoiceButton(boolean)
androidx.core.view.ViewCompat: void setAccessibilityHeading(android.view.View,boolean)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast: io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast createWith(java.lang.Object,int,io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber,boolean)
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
okio.Buffer: okio.Buffer writeByte(int)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: void onError(java.lang.Throwable)
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getStringOrNull(android.database.Cursor,int)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: FlowableTimeout$TimeoutFallbackSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,org.reactivestreams.Publisher)
androidx.versionedparcelable.VersionedParcel: void writeCharArray(char[],int)
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: ObservableDebounceTimed$DebounceEmitter(java.lang.Object,long,io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver)
androidx.core.graphics.drawable.IconCompat: IconCompat(int)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: void onSuccess(java.lang.Object)
androidx.collection.MapCollections$EntrySet: int hashCode()
io.reactivex.internal.operators.flowable.FlowableReplay: FlowableReplay(org.reactivestreams.Publisher,io.reactivex.Flowable,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable)
androidx.fragment.app.FragmentTabHost: void onAttachedToWindow()
androidx.core.view.ViewCompat: float getTranslationX(android.view.View)
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.subscriptions.AsyncSubscription: AsyncSubscription()
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: void accept(io.reactivex.Observer,java.lang.Object)
okhttp3.RealCall$AsyncCall: java.lang.String host()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: void cancel()
androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection)
com.zhy.http.okhttp.cookie.CookieJarImpl: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: void cancel()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.fragment.app.DialogFragment$1: void run()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
androidx.appcompat.widget.TintTypedArray: boolean getBoolean(int,boolean)
androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: CascadingMenuPopup$CascadingMenuInfo(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int)
androidx.appcompat.widget.ForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()
io.reactivex.internal.observers.ResumeSingleObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
androidx.appcompat.widget.AppCompatSpinner: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.AppCompatPopupWindow: AppCompatPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn: SingleOnErrorReturn$OnErrorReturn(io.reactivex.internal.operators.single.SingleOnErrorReturn,io.reactivex.SingleObserver)
io.reactivex.internal.observers.BlockingLastObserver: void onNext(java.lang.Object)
okhttp3.internal.http2.Http2Connection: boolean access$302(okhttp3.internal.http2.Http2Connection,boolean)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
retrofit2.Utils: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)
com.jakewharton.disklrucache.DiskLruCache$Entry: void access$800(com.jakewharton.disklrucache.DiskLruCache$Entry,java.lang.String[])
androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()
retrofit2.BuiltInConverters: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
okio.Buffer: okio.Buffer writeInt(int)
io.reactivex.internal.operators.flowable.FlowableScan: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.LongSerializationPolicy$2: LongSerializationPolicy$2(java.lang.String,int)
com.google.gson.JsonPrimitive: char getAsCharacter()
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowMenuShowing()
androidx.customview.widget.FocusStrategy$SequentialComparator: FocusStrategy$SequentialComparator(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter)
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: void onError(java.lang.Throwable)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.graphics.Rect getLaunchBounds()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void onError(java.lang.Throwable)
androidx.core.os.LocaleListInterface: int size()
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup getPopup()
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getExtras(android.app.Notification)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
androidx.fragment.app.FragmentManagerImpl: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
com.zhy.http.okhttp.https.HttpsUtils$UnSafeTrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onViewDragStateChanged(int)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: NotificationCompat$CarExtender$UnreadConversation(java.lang.String[],androidx.core.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long)
okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getMethod(java.lang.Class)
androidx.appcompat.widget.AbsActionBarView: void access$001(androidx.appcompat.widget.AbsActionBarView,int)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()
com.xuexiang.xhttp2.interceptor.CacheInterceptor: CacheInterceptor(android.content.Context,java.lang.String,java.lang.String)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
androidx.versionedparcelable.VersionedParcelStream: void writeCharSequence(java.lang.CharSequence)
androidx.viewpager.widget.ViewPager$4: ViewPager$4(androidx.viewpager.widget.ViewPager)
io.reactivex.internal.operators.flowable.FlowableConcatMap$SimpleScalarSubscription: void request(long)
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: void request(long)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object[] newArray(int)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: BasicIntQueueSubscription()
androidx.core.database.DatabaseUtilsCompat: DatabaseUtilsCompat()
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: void onComplete()
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: void onNext(io.reactivex.Notification)
com.google.gson.Gson: com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy)
androidx.vectordrawable.R$style: R$style()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay: io.reactivex.flowables.ConnectableFlowable call()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action)
androidx.viewpager.R$id: R$id()
androidx.fragment.app.BackStackState$1: java.lang.Object[] newArray(int)
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: void dispose()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: void onComplete()
io.reactivex.observers.TestObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void onTimeout(long)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask: ObservableSubscribeOn$SubscribeTask(io.reactivex.internal.operators.observable.ObservableSubscribeOn,io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: void remove()
com.google.gson.internal.bind.JsonTreeWriter$1: void flush()
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: void request(long)
androidx.appcompat.widget.AppCompatSpinner$2: AppCompatSpinner$2(androidx.appcompat.widget.AppCompatSpinner)
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: void onNext(java.lang.Object)
retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable: void dispose()
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter$SavedState: void writeToParcel(android.os.Parcel,int)
io.reactivex.internal.disposables.DisposableHelper: boolean isDisposed(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
org.aspectj.internal.lang.reflect.SignaturePatternImpl: java.lang.String toString()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$NextObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.customview.widget.ExploreByTouchHelper: int getKeyboardFocusedVirtualViewId()
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: void onError(java.lang.Throwable)
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
okio.ByteString: int codePointIndexToCharIndex(java.lang.String,int)
androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean onStopJob(android.app.job.JobParameters)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: void onComplete()
com.xuexiang.xhttp2.XHttp: XHttp()
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class)
com.google.gson.internal.bind.JsonTreeReader: void endArray()
androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)
androidx.appcompat.app.ToolbarActionBar: void setHomeActionContentDescription(int)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: void dispose()
com.appspa.update.widget.UpdateDialog: void initViews()
io.reactivex.subscribers.TestSubscriber: void onError(java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: void writeDouble(double)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: FragmentManagerImpl$AnimationOrAnimator(android.animation.Animator)
androidx.core.app.JobIntentService$CommandProcessor: JobIntentService$CommandProcessor(androidx.core.app.JobIntentService)
com.xuexiang.xhttp2.request.BaseBodyRequest: com.xuexiang.xhttp2.request.BaseBodyRequest upJson(java.lang.String)
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: java.lang.Long poll()
io.reactivex.internal.operators.flowable.FlowableMaterialize: FlowableMaterialize(io.reactivex.Flowable)
androidx.core.widget.NestedScrollView: void initOrResetVelocityTracker()
com.appspa.update.proxy.impl.DefaultUpdateChecker$3: void onParseResult(com.appspa.update.entity.UpdateEntity)
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: SingleDoAfterSuccess$DoAfterObserver(io.reactivex.SingleObserver,io.reactivex.functions.Consumer)
com.google.gson.internal.bind.TypeAdapters$17: void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver: int requestFusion(int)
io.reactivex.internal.operators.mixed.SingleFlatMapObservable: void subscribeActual(io.reactivex.Observer)
org.aspectj.lang.NoAspectBoundException: java.lang.Throwable getCause()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseCache()
androidx.appcompat.view.menu.ActionMenuItem: boolean isEnabled()
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void request(long)
io.reactivex.Observable: int bufferSize()
com.google.gson.JsonArray: java.math.BigDecimal getAsBigDecimal()
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty: FlowableSwitchIfEmpty(io.reactivex.Flowable,org.reactivestreams.Publisher)
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void onNext(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.reflect.Type responseType()
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: ObservableDetach$DetachObserver(io.reactivex.Observer)
okhttp3.Cookie: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void collect(java.util.Collection)
androidx.core.math.MathUtils: float clamp(float,float,float)
com.google.gson.internal.bind.TypeAdapters$12: TypeAdapters$12()
androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)
retrofit2.RequestBuilder: java.lang.String canonicalizeForPath(java.lang.String,boolean)
androidx.appcompat.app.AppCompatDelegate: void installViewFactory()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void removeLoader(int)
io.reactivex.internal.util.AppendOnlyLinkedArrayList: void setFirst(java.lang.Object)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: int transitiveBoundaryFusion(int)
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: ObservableIgnoreElements$IgnoreObservable(io.reactivex.Observer)
io.reactivex.subscribers.SerializedSubscriber: void onComplete()
io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: FlowableWindowTimed$WindowExactBoundedSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,long,boolean)
androidx.appcompat.app.ActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber: void onNext(java.lang.Object)
androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: void drain()
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: boolean isDisposed()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber: int requestFusion(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: int onGetWindowAnimations()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: void dispose()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: void setPromptText(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferBoundaryObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.functions.Functions$BoundedConsumer: void accept(org.reactivestreams.Subscription)
io.reactivex.internal.schedulers.ScheduledDirectTask: java.lang.Void call()
androidx.fragment.app.FragmentManagerImpl: boolean checkForMenus()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: void onComplete()
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
io.reactivex.internal.operators.flowable.FlowableConcatArray: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: void cancel()
androidx.core.view.OneShotPreDrawListener: void removeListener()
com.jakewharton.disklrucache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(com.jakewharton.disklrucache.DiskLruCache,java.lang.String,long,java.io.InputStream[],long[])
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: void clear(io.reactivex.internal.queue.SpscLinkedArrayQueue)
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream)
androidx.fragment.app.FragmentManagerNonConfig: java.util.Collection getFragments()
androidx.appcompat.widget.ListPopupWindow: int getWidth()
com.appspa.update.widget.UpdateDialog: void show()
com.appspa.update.widget.BaseDialog: void init(int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void onComplete()
androidx.appcompat.app.ActionBar: void onDestroy()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: AnimatedStateListDrawableCompat$FrameInterpolator(android.graphics.drawable.AnimationDrawable,boolean)
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: ObservableRangeLong$RangeDisposable(io.reactivex.Observer,long,long)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.fragment.app.BackStackState: int describeContents()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean expandActionView()
androidx.collection.ContainerHelpers: int idealByteArraySize(int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)
io.reactivex.internal.subscribers.BlockingSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleDoOnTerminate$DoOnTerminate: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableHide: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: void onNext(java.lang.Object)
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.google.gson.internal.Streams$AppendableWriter: void flush()
androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(androidx.core.view.WindowInsetsCompat)
androidx.fragment.app.FragmentTransitionImpl: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
androidx.core.app.NotificationCompat$Builder: android.app.Notification build()
androidx.core.provider.FontsContractCompat$4$5: void run()
com.google.gson.internal.UnsafeAllocator$1: UnsafeAllocator$1(java.lang.reflect.Method,java.lang.Object)
androidx.appcompat.widget.SearchView: void updateViewsVisibility(boolean)
androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void distributeKeyframes(android.animation.Keyframe[],float,int,int)
com.xuexiang.xhttp2.model.HttpParams: void put(java.lang.String,java.io.File,com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: ForEachWhileSubscriber(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn: void onSuccess(java.lang.Object)
androidx.appcompat.widget.AppCompatHintHelper: AppCompatHintHelper()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)
androidx.versionedparcelable.VersionedParcelStream: void readObject(int,java.lang.String,android.os.Bundle)
com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionCollapse(android.view.MenuItem)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SamplerObserver: void onNext(java.lang.Object)
okio.Okio$4: void timedOut()
androidx.appcompat.app.WindowDecorActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
com.xuexiang.xhttp2.transform.func.OriginalStringFuc: OriginalStringFuc()
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceTypeName(int)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
io.reactivex.Observable: io.reactivex.Observable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: boolean isDisposed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: VectorDrawableCompat$VectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver: void dispose()
androidx.appcompat.widget.SwitchCompat$1: void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float)
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)
okhttp3.Response: okhttp3.CacheControl cacheControl()
com.google.gson.stream.JsonReader: JsonReader(java.io.Reader)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)
com.xuexiang.xhttp2.utils.Utils: long toLong(java.lang.String,long)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: void onNext(java.lang.Object)
androidx.core.content.ContextCompat: java.io.File createFilesDir(java.io.File)
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: void run()
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
androidx.collection.LongSparseArray: int indexOfKey(long)
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterConditionalSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: boolean isDisposed()
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,int)
androidx.core.hardware.display.DisplayManagerCompat: DisplayManagerCompat(android.content.Context)
io.reactivex.internal.queue.SpscLinkedArrayQueue: SpscLinkedArrayQueue(int)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
androidx.appcompat.app.ActionBar: void setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void drain()
com.xuexiang.xhttp2.utils.RequestBodyUtils$1: RequestBodyUtils$1(okhttp3.MediaType,java.io.InputStream)
com.xuexiang.xhttp2.utils.Utils: java.io.File getDiskCacheDir(android.content.Context,java.lang.String)
androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.AppCompatDelegate: void onCreate(android.os.Bundle)
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(int)
androidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String toString()
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerOpened(android.view.View)
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRefCount: void cancel(io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection)
io.reactivex.internal.disposables.ListCompositeDisposable: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver: ObservableWithLatestFrom$WithLatestFromOtherObserver(io.reactivex.internal.operators.observable.ObservableWithLatestFrom,io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver)
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: void onComplete()
androidx.appcompat.widget.SearchView: boolean isIconfiedByDefault()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
retrofit2.SkipCallbackExecutorImpl: boolean equals(java.lang.Object)
com.xuexiang.xhttp2.utils.Utils: boolean isEmpty(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)
io.reactivex.internal.operators.observable.ObservableFromFuture: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.LinkedTreeMap: void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: MaybeFlatten$FlatMapMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Collection)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext: void accept(java.lang.Object)
io.reactivex.internal.operators.single.SingleDoAfterTerminate: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()
androidx.appcompat.widget.SuggestionsAdapter: void setViewText(android.widget.TextView,java.lang.CharSequence)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setForce(boolean)
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isEnabled()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: void onComplete()
com.zhy.http.okhttp.builder.GetBuilder: com.zhy.http.okhttp.builder.GetBuilder params(java.util.Map)
org.aspectj.lang.SoftException: SoftException(java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.ListPopupWindow: void setWindowLayoutType(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: void request(long)
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
io.reactivex.processors.BehaviorProcessor: io.reactivex.processors.BehaviorProcessor$BehaviorSubscription[] terminate(java.lang.Object)
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask: java.lang.Object call()
androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)
androidx.vectordrawable.R$color: R$color()
okhttp3.internal.platform.JdkWithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display getDisplay(int)
io.reactivex.internal.subscribers.BlockingSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.SearchView: boolean onItemSelected(int)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber$ConsumerIndexHolder: FlowableWindowTimed$WindowExactBoundedSubscriber$ConsumerIndexHolder(long,io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: boolean isHandleNativeActionModesEnabled()
io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(int)
okio.SegmentedByteString: java.lang.String hex()
okio.Buffer: int readInt()
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: ObservableTakeUntilPredicate$TakeUntilPredicateObserver(io.reactivex.Observer,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: void onNext(java.lang.Object)
androidx.core.app.AlarmManagerCompat: AlarmManagerCompat()
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
androidx.appcompat.view.menu.BaseMenuWrapper: void internalClear()
com.google.gson.internal.bind.TypeAdapters$1: java.lang.Class read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void request(long)
com.appspa.update.UpdateManager: void noNewVersion(java.lang.Throwable)
androidx.loader.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: ToolbarActionBar$MenuBuilderCallback(androidx.appcompat.app.ToolbarActionBar)
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterConditionalSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow: android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl: ThreadStackFactoryImpl$ThreadCounterImpl(org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$1)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop: FlowableOnBackpressureDrop(io.reactivex.Flowable)
okio.Buffer: okio.BufferedSink write(byte[],int,int)
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void innerClose(boolean,io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver)
androidx.drawerlayout.widget.DrawerLayout: android.os.Parcelable onSaveInstanceState()
okhttp3.RealCall$AsyncCall: okhttp3.RealCall get()
androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)
androidx.appcompat.widget.Toolbar: void setTitleMargin(int,int,int,int)
io.reactivex.Flowable: void subscribe(io.reactivex.FlowableSubscriber)
androidx.appcompat.widget.TooltipPopup: void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
androidx.appcompat.widget.SearchView: boolean isQueryRefinementEnabled()
org.aspectj.runtime.reflect.MethodSignatureImpl: java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: void onSuccess(java.lang.Object)
com.appspa.update.utils.FileUtils: boolean isScopedStorageMode()
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: ResourceManagerInternal$AvdcInflateDelegate()
com.appspa.update.UpdateManager: com.appspa.update.entity.UpdateEntity access$100(com.appspa.update.UpdateManager,com.appspa.update.entity.UpdateEntity)
androidx.core.view.ActionProvider$VisibilityListener: void onActionProviderVisibilityChanged(boolean)
io.reactivex.internal.util.HalfSerializer: void onError(io.reactivex.Observer,java.lang.Throwable,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: FlowableSampleTimed$SampleTimedSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCacheStates()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: AppCompatDelegateImpl$ListMenuDecorView(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
androidx.core.app.BundleCompat: BundleCompat()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: boolean isDisposed()
io.reactivex.internal.subscribers.BlockingSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: boolean isClipPath()
com.appspa.update.widget.UpdateDialogActivity: java.lang.String getUrl()
io.reactivex.internal.operators.observable.ObservableZipIterable: void subscribeActual(io.reactivex.Observer)
com.appspa.update.widget.UpdateDialogActivity: void initTheme(int,int,int)
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: void dispose()
com.jakewharton.disklrucache.DiskLruCache$Entry: com.jakewharton.disklrucache.DiskLruCache$Editor access$700(com.jakewharton.disklrucache.DiskLruCache$Entry)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
androidx.viewpager.widget.ViewPager: boolean canScrollHorizontally(int)
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: void onComplete()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getVerticalOffset()
androidx.core.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver: void onSuccess(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.vectordrawable.animated.R$drawable: R$drawable()
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: int requestFusion(int)
androidx.appcompat.widget.SearchView$9: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
io.reactivex.internal.observers.DeferredScalarDisposable: DeferredScalarDisposable(io.reactivex.Observer)
com.zhy.http.okhttp.https.HttpsUtils$SSLParams: HttpsUtils$SSLParams()
androidx.vectordrawable.R$layout: R$layout()
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: void clear()
androidx.fragment.app.FragmentManager: java.util.List getFragments()
com.xuexiang.xhttp2.model.XHttpRequest: java.lang.Object getResponseEntityType()
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: void setCancellable(io.reactivex.functions.Cancellable)
io.reactivex.internal.util.HashMapSupplier: io.reactivex.internal.util.HashMapSupplier valueOf(java.lang.String)
okio.AsyncTimeout$1: okio.Timeout timeout()
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: void run()
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: void onError(java.lang.Throwable)
androidx.core.os.LocaleListCompatWrapper: int findFirstMatchIndex(java.util.Locale)
androidx.core.app.TaskStackBuilder: android.content.Intent getIntent(int)
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: void onComplete()
com.xuexiang.xhttp2.request.BaseRequest: okhttp3.OkHttpClient$Builder generateOkClient()
androidx.versionedparcelable.VersionedParcelStream$1: long skip(long)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.resources.R$color: R$color()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearActions()
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
okio.RealBufferedSink$1: void write(int)
com.xuexiang.xhttp2.model.HttpParams: HttpParams(java.util.Map)
androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
io.reactivex.internal.operators.observable.ObservableAutoConnect: void subscribeActual(io.reactivex.Observer)
retrofit2.Converter$Factory: java.lang.Class getRawType(java.lang.reflect.Type)
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: MaybeIgnoreElementCompletable$IgnoreMaybeObserver(io.reactivex.CompletableObserver)
androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)
androidx.appcompat.view.menu.CascadingMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
io.reactivex.internal.observers.FutureObserver: FutureObserver()
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: boolean isDisposed()
androidx.customview.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: ViewPropertyAnimatorCompatSet$1(androidx.appcompat.view.ViewPropertyAnimatorCompatSet)
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
okhttp3.internal.platform.Android10Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationEnd(android.animation.Animator)
androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()
com.zhy.http.okhttp.https.HttpsUtils$MyTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()
androidx.core.app.AppOpsManagerCompat: int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
com.appspa.update.utils.FileUtils: android.net.Uri getUriByFile(java.io.File)
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
androidx.core.view.MenuItemCompat: boolean isActionViewExpanded(android.view.MenuItem)
androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
io.reactivex.subscribers.TestSubscriber: TestSubscriber()
androidx.core.app.RemoteInput$Builder: android.os.Bundle getExtras()
androidx.appcompat.widget.DecorToolbar: void collapseActionView()
okhttp3.HttpUrl: java.util.List percentDecode(java.util.List,boolean)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable valueOf(java.lang.String)
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean isAvailableOffline()
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void cancel()
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: void request(long)
androidx.activity.OnBackPressedCallback: boolean isEnabled()
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence[] getTextArray(int)
androidx.core.view.ActionProvider: boolean isVisible()
io.reactivex.Scheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.fragment.app.BackStackRecord: void executeOps()
com.google.gson.annotations.JsonAdapter: java.lang.Class value()
androidx.lifecycle.ViewModelProvider$KeyedFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)
io.reactivex.internal.observers.BlockingLastObserver: BlockingLastObserver()
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver: void onError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint getPaint()
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: ObservableAllSingle$AllObserver(io.reactivex.SingleObserver,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.Util: int indexOf(java.util.Comparator,java.lang.String[],java.lang.String)
com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()
okhttp3.internal.http2.Http2Connection: long access$100(okhttp3.internal.http2.Http2Connection)
io.reactivex.plugins.RxJavaPlugins: boolean isFailOnNonBlockingScheduler()
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: void dispose()
okhttp3.internal.http1.Http1Codec$FixedLengthSink: okio.Timeout timeout()
com.xuexiang.xhttp2.model.HttpParams$FileWrapper: HttpParams$FileWrapper(java.lang.Object,java.lang.String,okhttp3.MediaType,com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack)
androidx.core.view.animation.PathInterpolatorApi14: PathInterpolatorApi14(float,float,float,float)
androidx.core.graphics.ColorUtils: int blendARGB(int,int,float)
androidx.appcompat.app.AppCompatDelegateImpl: int getLocalNightMode()
androidx.appcompat.widget.SearchView$10: void beforeTextChanged(java.lang.CharSequence,int,int,int)
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: void remove(io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: void onError(java.lang.Throwable)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context)
androidx.versionedparcelable.VersionedParcel: boolean[] readBooleanArray(boolean[],int)
androidx.appcompat.widget.DecorToolbar: void dismissPopupMenus()
androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)
io.reactivex.subjects.SingleSubject$SingleDisposable: SingleSubject$SingleDisposable(io.reactivex.SingleObserver,io.reactivex.subjects.SingleSubject)
com.google.gson.JsonArray: JsonArray(int)
okio.AsyncTimeout: long remainingNanos(long)
androidx.annotation.IntDef: boolean flag()
okhttp3.internal.http2.Http2Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab getTabAt(int)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTint(int)
okhttp3.Request: java.lang.String toString()
io.reactivex.internal.observers.CallbackCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: AnimatedVectorDrawableCompat$1(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer)
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void innerValue(boolean,java.lang.Object)
io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction: io.reactivex.disposables.Disposable callActual(io.reactivex.Scheduler$Worker,io.reactivex.CompletableObserver)
retrofit2.RequestFactory: okhttp3.Request create(java.lang.Object[])
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void truncate()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.BasicQueueDisposable: BasicQueueDisposable()
okhttp3.CipherSuite: okhttp3.CipherSuite init(java.lang.String,int)
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void drain()
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: boolean isDisposed()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
okhttp3.internal.http.HttpDate$1: java.lang.Object initialValue()
io.reactivex.internal.operators.observable.ObservableObserveOn: ObservableObserveOn(io.reactivex.ObservableSource,io.reactivex.Scheduler,boolean,int)
com.google.gson.GsonBuilder: void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)
okio.AsyncTimeout: okio.Source source(okio.Source)
androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)
retrofit2.Retrofit$1: Retrofit$1(retrofit2.Retrofit,java.lang.Class)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatTextHelper: boolean isAutoSizeEnabled()
androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.appcompat.widget.Toolbar: void ensureMenuView()
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: ActionMenuPresenter$OverflowPopup(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: void dispose()
androidx.appcompat.app.WindowDecorActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.ScrollerCompat: int getCurrY()
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableDelay$Delay: void run()
com.google.gson.JsonPrimitive: java.math.BigDecimal getAsBigDecimal()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: void setShowFooterView(boolean)
com.xuexiang.xhttp2.utils.Utils: java.lang.String getFilePath(java.lang.String,java.lang.String)
io.reactivex.internal.observers.BiConsumerSingleObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver: void onNext(java.lang.Object)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onResponse(retrofit2.Call,retrofit2.Response)
androidx.appcompat.widget.SearchView: void forceSuggestionQuery()
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: void onDrop(io.reactivex.Notification)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnSubscriber: void run()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean onPerformDefaultAction()
io.reactivex.internal.operators.single.SingleDelay$Delay: void onError(java.lang.Throwable)
androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setArrowHeadLength(float)
io.reactivex.internal.util.ExceptionHelper: java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReference)
androidx.lifecycle.ViewModel: java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)
androidx.fragment.app.FragmentManagerImpl: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: boolean isDisposed()
androidx.viewpager.widget.ViewPager$1: int compare(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcel)
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: int producerIndex()
androidx.appcompat.widget.TooltipCompatHandler: void cancelPendingShow()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: void cancel()
androidx.viewpager.widget.PagerTitleStrip$PageListener: PagerTitleStrip$PageListener(androidx.viewpager.widget.PagerTitleStrip)
androidx.appcompat.view.menu.ActionMenuItem: android.view.View getActionView()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()
androidx.customview.widget.ViewDragHelper: int getTouchSlop()
io.reactivex.internal.operators.observable.ObservableRetryPredicate: void subscribeActual(io.reactivex.Observer)
androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean enter()
androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
androidx.appcompat.widget.ScrollingTabContainerView: void onAttachedToWindow()
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: boolean isFull()
androidx.appcompat.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)
androidx.appcompat.app.ActionBar: void setTitle(java.lang.CharSequence)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: void dispose()
androidx.fragment.app.FragmentManagerImpl: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int)
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Object newFamily()
com.xuexiang.xhttp2.logs.LogcatLogger: java.lang.String getStackTraceString(java.lang.Throwable)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)
androidx.appcompat.app.WindowDecorActionBar: void setSelectedNavigationItem(int)
retrofit2.adapter.rxjava2.ResultObservable$ResultObserver: void onComplete()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: void onComplete()
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransitionCompat21$4: FragmentTransitionCompat21$4(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent: java.util.Iterator iterator()
io.reactivex.internal.subscriptions.DeferredScalarSubscription: int requestFusion(int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void unregisterListeningView(android.view.View)
androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)
androidx.core.app.JobIntentService$CompatWorkEnqueuer: void enqueueWork(android.content.Intent)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray)
io.reactivex.subscribers.DisposableSubscriber: void dispose()
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested(android.view.SearchEvent)
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: void onComplete()
androidx.core.app.NotificationCompat$CarExtender: NotificationCompat$CarExtender()
com.appspa.update.utils.ApkUtils: ApkUtils()
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.R$layout: R$layout()
androidx.core.widget.ListViewAutoScrollHelper: ListViewAutoScrollHelper(android.widget.ListView)
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: BlockingObservableLatest$BlockingObservableLatestIterator()
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] reset()
okio.RealBufferedSource: java.lang.String readString(java.nio.charset.Charset)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void stop()
androidx.fragment.app.FragmentController: void noteStateNotSaved()
io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.Scheduler$Worker createWorker()
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: void onError(java.lang.Throwable)
org.aspectj.runtime.internal.CFlowStack: void selectFactoryForVMVersion()
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: void innerNext(java.util.List,int)
io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver: ObservablePublishSelector$SourceObserver(io.reactivex.subjects.PublishSubject,java.util.concurrent.atomic.AtomicReference)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet,int)
androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.xuexiang.xhttp2.utils.HttpUtils: java.lang.String createUrlFromParams(java.lang.String,java.util.Map)
okhttp3.RequestBody$3: void writeTo(okio.BufferedSink)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: FrameMetricsAggregator$FrameMetricsApi24Impl$1(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl)
com.xuexiang.xhttp2.transform.func.HttpResponseThrowableFunc: HttpResponseThrowableFunc()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getColor()
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: void request(long)
com.google.gson.JsonPrimitive: boolean isBoolean()
androidx.appcompat.widget.AppCompatButton: void setTextSize(int,float)
com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setVerticalOffset(int)
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper: android.view.View onCreatePanelView(int)
io.reactivex.internal.operators.observable.ObservableRepeatUntil: void subscribeActual(io.reactivex.Observer)
androidx.fragment.app.BackStackRecord: int commit()
androidx.fragment.app.FragmentTransitionImpl: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
okio.Pipe$PipeSink: void flush()
retrofit2.ParameterHandler$Field: ParameterHandler$Field(java.lang.String,retrofit2.Converter,boolean)
com.appspa.update.widget.NumberProgressBar: int getSuggestedMinimumWidth()
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
okhttp3.internal.Version: Version()
okhttp3.Dispatcher: boolean promoteAndExecute()
okhttp3.Request: java.util.List headers(java.lang.String)
okio.SegmentedByteString: byte[] toByteArray()
com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getDateFormatPattern(int)
androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: void onError(java.lang.Throwable)
io.reactivex.subjects.AsyncSubject: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: void onError(java.lang.Throwable)
androidx.collection.ArrayMap: void putAll(java.util.Map)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: void setResource(io.reactivex.disposables.Disposable)
io.reactivex.observers.DisposableCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.observers.DefaultObserver: void onStart()
androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.google.gson.stream.JsonReader: void close()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void cancel()
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ActivityChooserView$5: ActivityChooserView$5(androidx.appcompat.widget.ActivityChooserView)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$2: BaseStrategy$2(com.xuexiang.xhttp2.cache.stategy.BaseStrategy)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void drainLoop()
retrofit2.Retrofit: retrofit2.CallAdapter callAdapter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
io.reactivex.internal.operators.flowable.FlowableGroupBy: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: void accept(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String)
androidx.versionedparcelable.VersionedParcel$1: VersionedParcel$1(androidx.versionedparcelable.VersionedParcel,java.io.InputStream)
io.reactivex.internal.observers.BasicIntQueueDisposable: BasicIntQueueDisposable()
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: long getContentLength()
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,io.reactivex.functions.BiPredicate)
androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: void onNext(java.lang.Object)
com.xuexiang.xhttp2.cache.model.CacheResult: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: FlowableSingleMaybe$SingleElementSubscriber(io.reactivex.MaybeObserver)
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
io.reactivex.internal.observers.BiConsumerSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.disposables.ReferenceDisposable: void onDisposed(java.lang.Object)
androidx.core.app.ComponentActivity: ComponentActivity()
okhttp3.internal.cache.DiskLruCache: void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEditable()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: boolean access$000(io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver)
androidx.customview.widget.FocusStrategy: java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)
com.zhy.http.okhttp.callback.FileCallBack: java.lang.Object parseNetworkResponse(okhttp3.Response,int)
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: void run()
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getWrappedDrawable()
io.reactivex.internal.subscribers.LambdaSubscriber: void onComplete()
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
com.google.gson.stream.JsonReader: int peekNumber()
okhttp3.HttpUrl: java.util.List pathSegments()
io.reactivex.internal.observers.ConsumerSingleObserver: boolean isDisposed()
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: HandlerScheduler$ScheduledRunnable(android.os.Handler,java.lang.Runnable)
androidx.versionedparcelable.VersionedParcel: float readFloat(float,int)
androidx.core.widget.NestedScrollView: void stopNestedScroll(int)
io.reactivex.observers.DisposableMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: void onDismiss()
okhttp3.internal.Util: int decodeHexDigit(char)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: boolean isCancelled()
androidx.core.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)
androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: void onError(java.lang.Throwable)
com.jakewharton.disklrucache.DiskLruCache: void access$2200(com.jakewharton.disklrucache.DiskLruCache,com.jakewharton.disklrucache.DiskLruCache$Editor,boolean)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setHasUpdate(boolean)
androidx.appcompat.app.ToolbarActionBar: void setIcon(android.graphics.drawable.Drawable)
com.zhy.http.okhttp.callback.Callback: void onAfter(int)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
androidx.appcompat.widget.SwitchCompat: void drawableStateChanged()
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: void dispose()
com.google.gson.internal.Excluder$1: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.FragmentManagerImpl: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
androidx.core.view.inputmethod.InputConnectionCompat: InputConnectionCompat()
androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)
org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: SignatureImpl$CacheImpl()
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: void cancel(io.reactivex.internal.queue.SpscLinkedArrayQueue,io.reactivex.internal.queue.SpscLinkedArrayQueue)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()
io.reactivex.internal.util.ListAddBiConsumer: ListAddBiConsumer(java.lang.String,int)
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver: java.lang.Object poll()
androidx.core.app.NotificationCompat$MessagingStyle$Message: long getTimestamp()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setAdapter(android.widget.ListAdapter)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: void onNext(java.lang.Object)
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: boolean isDisposed()
androidx.appcompat.view.menu.MenuPresenter: void updateMenuView(boolean)
io.reactivex.observers.TestObserver: TestObserver(io.reactivex.Observer)
io.reactivex.internal.queue.SpscArrayQueue: java.lang.Object poll()
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getTitle()
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays(java.lang.String)
com.google.gson.annotations.Until: double value()
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: void cancel()
androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)
com.appspa.update.utils.Md5Utils: java.lang.String bytes2Hex(byte[])
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.appspa.update.entity.DownloadEntity$1: DownloadEntity$1()
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: RetryExceptionFunc(int,long,long)
com.xuexiang.xhttp2.XHttpProxy: XHttpProxy()
androidx.loader.app.LoaderManagerImpl$LoaderObserver: java.lang.String toString()
okhttp3.internal.http1.Http1Codec: okio.Source newUnknownLengthSource()
androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.ActivityCompat: void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
io.reactivex.subjects.PublishSubject$PublishDisposable: PublishSubject$PublishDisposable(io.reactivex.Observer,io.reactivex.subjects.PublishSubject)
androidx.appcompat.widget.DecorToolbar: boolean hasExpandedActionView()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableRangeLong: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: ObservableTakeLastTimed$TakeLastTimedObserver(io.reactivex.Observer,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,boolean)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
androidx.cursoradapter.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
androidx.customview.widget.ExploreByTouchHelper$2: int size(java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: ListPopupWindow$PopupDataSetObserver(androidx.appcompat.widget.ListPopupWindow)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: void dispose()
androidx.appcompat.widget.ActivityChooserView: void onMeasure(int,int)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: MaybeOnErrorNext$OnErrorNextMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function,boolean)
io.reactivex.Notification: Notification(java.lang.Object)
io.reactivex.internal.queue.SpscArrayQueue: void soProducerIndex(long)
androidx.viewpager.widget.PagerTabStrip: int getTabIndicatorColor()
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getInProgressLabel()
retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable: boolean isDisposed()
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(java.lang.Object)
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void subscribe(org.reactivestreams.Publisher[],int)
androidx.collection.LruCache: int createCount()
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])
com.xuexiang.xhttp2.subsciber.CallBackSubscriber: void onStart()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void innerComplete()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder enableComplexMapKeySerialization()
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: void onComplete()
androidx.versionedparcelable.VersionedParcelStream: boolean readField(int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: void adjustLookAheadStep(int)
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter: ActivityChooserModel$DefaultSorter()
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)
okio.ByteString: java.lang.String base64Url()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void onError(java.lang.Throwable)
retrofit2.Utils$WildcardTypeImpl: int hashCode()
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: void onNext(java.lang.Object)
com.google.gson.JsonArray: int getAsInt()
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: void onError(java.lang.Throwable)
androidx.customview.widget.ViewDragHelper: int getActivePointerId()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.appcompat.widget.Toolbar: void inflateMenu(int)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
okhttp3.ResponseBody$1: okhttp3.MediaType contentType()
androidx.appcompat.widget.ListPopupWindow: android.widget.ListView getListView()
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request: void run()
androidx.appcompat.app.AppCompatDelegate: boolean requestWindowFeature(int)
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: int requestFusion(int)
androidx.loader.app.LoaderManager: androidx.loader.content.Loader getLoader(int)
com.appspa.update.service.DownloadService$FileDownloadCallBack: void onProgress(float,long)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void openComplete(io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void disposeAll()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast: void completion()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: void cancel()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
androidx.core.app.JobIntentService$CommandProcessor: java.lang.Object doInBackground(java.lang.Object[])
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: boolean isDisposed()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void innerCloseError(java.lang.Throwable)
com.google.gson.stream.JsonWriter: void close()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: void onComplete()
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence)
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: java.lang.Void poll()
io.reactivex.internal.operators.flowable.FlowableConcatMap$SimpleScalarSubscription: void cancel()
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: ForwardingListener$TriggerLongPress(androidx.appcompat.widget.ForwardingListener)
androidx.core.view.ViewCompat: void setPivotX(android.view.View,float)
androidx.appcompat.app.AlertController$3: void run()
com.appspa.update.widget.BaseDialog: com.appspa.update.widget.BaseDialog setIsSyncSystemUiVisibility(boolean)
androidx.fragment.app.ListFragment$1: ListFragment$1(androidx.fragment.app.ListFragment)
androidx.appcompat.widget.DecorToolbar: void setVisibility(int)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void onComplete()
io.reactivex.internal.operators.maybe.MaybeMaterialize: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: boolean isDisposed()
androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)
io.reactivex.internal.operators.maybe.MaybeDelay: void subscribeActual(io.reactivex.MaybeObserver)
androidx.drawerlayout.widget.DrawerLayout$SavedState: void writeToParcel(android.os.Parcel,int)
com.google.gson.JsonArray: com.google.gson.JsonArray deepCopy()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber: FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber(io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber,io.reactivex.processors.UnicastProcessor)
com.appspa.update.utils.UpdateUtils: java.lang.String getBaseApkMd5(android.content.Context)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: void clear()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isCheckable()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getTextSelectionStart()
com.xuexiang.xhttp2.https.HttpsUtils$UnSafeTrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean canShowOverflowMenu()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context)
androidx.core.math.MathUtils: int clamp(int,int,int)
androidx.appcompat.widget.DecorToolbar: boolean hasIcon()
androidx.core.widget.AutoScrollHelper: void startAnimating()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
okhttp3.internal.Util$1: int compare(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction openTransaction()
androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: AppCompatDelegateImpl$ActionModeCallbackWrapperV9(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float getValueAt(long)
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,boolean,long)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: ObservableBufferBoundary$BufferCloseObserver(io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver,long)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
androidx.core.text.HtmlCompat: HtmlCompat()
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: boolean add(io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription)
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
androidx.appcompat.view.menu.StandardMenuPopup: void updateMenuView(boolean)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: void onError(java.lang.Throwable)
okhttp3.Cache$1: void trackResponse(okhttp3.internal.cache.CacheStrategy)
io.reactivex.subjects.MaybeSubject: MaybeSubject()
androidx.appcompat.app.AppCompatDelegate: android.view.MenuInflater getMenuInflater()
androidx.core.view.ViewCompat$5: java.lang.Object frameworkGet(android.view.View)
androidx.appcompat.view.ActionMode: void setSubtitle(int)
androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String,java.util.regex.MatchResult)
okio.RealBufferedSource: boolean isOpen()
com.google.gson.JsonStreamParser: com.google.gson.JsonElement next()
androidx.viewpager.widget.ViewPager: void addFocusables(java.util.ArrayList,int,int)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: void onNext(java.lang.Object)
androidx.appcompat.view.menu.StandardMenuPopup$2: StandardMenuPopup$2(androidx.appcompat.view.menu.StandardMenuPopup)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: void clear()
androidx.core.view.MenuItemCompat: MenuItemCompat()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean isLongpressEnabled()
com.xuexiang.xhttp2.model.XHttpRequest: java.lang.String getUrl()
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: FlowableRetryPredicate$RetrySubscriber(org.reactivestreams.Subscriber,long,io.reactivex.functions.Predicate,io.reactivex.internal.subscriptions.SubscriptionArbiter,org.reactivestreams.Publisher)
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: void add(com.google.gson.internal.LinkedHashTreeMap$Node)
androidx.appcompat.app.AppCompatDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)
com.appspa.update.entity.DownloadEntity: boolean isPatch()
okhttp3.internal.cache.DiskLruCache$2: void onException(java.io.IOException)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: BlockingFlowableNext$NextIterator(org.reactivestreams.Publisher,io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber)
com.appspa.update.proxy.impl.DefaultUpdateChecker: void noNewVersion(java.lang.Throwable)
androidx.core.view.KeyEventDispatcher: KeyEventDispatcher()
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: boolean isDisposed()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: FlowableAllSingle$AllSubscriber(io.reactivex.SingleObserver,io.reactivex.functions.Predicate)
androidx.appcompat.view.ActionMode: java.lang.CharSequence getSubtitle()
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.provider.FontsContractCompat: void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
com.appspa.update.service.DownloadService$FileDownloadCallBack: void onError(int,java.lang.Throwable)
okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,boolean)
okhttp3.Protocol: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: FlowableCombineLatest$CombineLatestCoordinator(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,int,boolean)
io.reactivex.internal.schedulers.ImmediateThinScheduler$ImmediateThinWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: int requestFusion(int)
io.reactivex.internal.operators.observable.ObservableNever: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: void drainLoop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)
io.reactivex.schedulers.TestScheduler$TimedRunnable: int compareTo(io.reactivex.schedulers.TestScheduler$TimedRunnable)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void removeInner(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: void onError(java.lang.Throwable)
io.reactivex.exceptions.Exceptions: void throwIfFatal(java.lang.Throwable)
androidx.appcompat.text.AllCapsTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)
androidx.appcompat.widget.ActionBarOverlayLayout: void dismissPopups()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()
com.appspa.update.widget.UpdateDialogFragment: void onCreate(android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableCache: void remove(io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache)
androidx.lifecycle.LiveData: boolean hasActiveObservers()
androidx.appcompat.widget.ActionBarOverlayLayout: void removeActionBarHideOffset()
io.reactivex.schedulers.Schedulers$ComputationTask: Schedulers$ComputationTask()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: void dispose()
androidx.appcompat.widget.SearchView: boolean isSubmitAreaEnabled()
okhttp3.internal.platform.Platform: byte[] concatLengthPrefixed(java.util.List)
androidx.appcompat.widget.AppCompatTextHelper: void setTextSizeInternal(int,float)
com.google.gson.JsonElement: boolean isJsonNull()
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void onComplete()
androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)
androidx.core.text.PrecomputedTextCompat: int length()
okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)
androidx.appcompat.widget.ListPopupWindow: void setSoftInputMode(int)
io.reactivex.internal.schedulers.IoScheduler: IoScheduler()
org.reactivestreams.Subscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void cancel()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.xuexiang.xhttp2.subsciber.CallBackSubscriber: void onError(com.xuexiang.xhttp2.exception.ApiException)
androidx.viewpager.widget.ViewPager: void computeScroll()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: boolean isVisibleToUser(android.view.View)
androidx.appcompat.app.ActionBarDrawerToggle$1: void onClick(android.view.View)
androidx.appcompat.app.WindowDecorActionBar: void setSubtitle(int)
io.reactivex.internal.operators.observable.ObservableDefer: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber(io.reactivex.CompletableObserver,io.reactivex.functions.Function,boolean,int)
io.reactivex.internal.operators.flowable.FlowableLastMaybe: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.Response: long receivedResponseAtMillis()
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()
io.reactivex.internal.operators.flowable.FlowableCache: void onComplete()
com.jakewharton.disklrucache.DiskLruCache$Entry: java.lang.String getLengths()
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void clear()
androidx.collection.LongSparseArray: void putAll(androidx.collection.LongSparseArray)
androidx.core.content.res.ComplexColorCompat: void setColor(int)
com.appspa.update.proxy.impl.DefaultUpdatePrompter: com.appspa.update.proxy.IPrompterProxy getPrompterProxy(com.appspa.update.proxy.IUpdateProxy)
androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)
io.reactivex.internal.observers.InnerQueuedObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context)
io.reactivex.internal.operators.single.SingleMaterialize: void subscribeActual(io.reactivex.SingleObserver)
androidx.versionedparcelable.VersionedParcel: double readDouble(double,int)
io.reactivex.internal.operators.observable.ObservableSerialized: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer: FlowableReplay$MulticastFlowable$DisposableConsumer(io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable,io.reactivex.internal.subscribers.SubscriberResourceWrapper)
com.appspa.update.service.DownloadService$FileDownloadCallBack: void dispatchOnProgress(float,long)
androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)
androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: ActivityCompat$SharedElementCallback21Impl(androidx.core.app.SharedElementCallback)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ListPopupWindow: void postShow()
io.reactivex.processors.PublishProcessor$PublishSubscription: PublishProcessor$PublishSubscription(org.reactivestreams.Subscriber,io.reactivex.processors.PublishProcessor)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.SearchView: void onActionViewCollapsed()
io.reactivex.internal.operators.observable.ObservableFromIterable: ObservableFromIterable(java.lang.Iterable)
androidx.fragment.app.FragmentManagerImpl: boolean isDestroyed()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: java.lang.String toString()
com.xuexiang.xhttp2.request.DownloadRequest$1: io.reactivex.ObservableSource apply(io.reactivex.Observable)
androidx.fragment.app.FragmentManager: void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void run()
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: DrawerLayout$SimpleDrawerListener()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void drain()
okhttp3.Cache$2: java.lang.String next()
androidx.appcompat.widget.ListPopupWindow: void setPromptView(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: void onTimeoutError(long,java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable: void subscribeActual(io.reactivex.CompletableObserver)
com.xuexiang.xhttp2.model.HttpParams: void put(java.lang.String,java.io.File,java.lang.String,com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack)
androidx.fragment.app.FragmentActivity: void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)
androidx.loader.content.CursorLoader: void onCanceled(android.database.Cursor)
androidx.appcompat.widget.SwitchCompat: void drawableHotspotChanged(float,float)
androidx.appcompat.widget.SearchView$10: void onTextChanged(java.lang.CharSequence,int,int,int)
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: boolean isEmpty()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: void onComplete()
io.reactivex.internal.operators.completable.CompletableToFlowable: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.$Gson$Preconditions: $Gson$Preconditions()
androidx.appcompat.app.AlertController$AlertParams$4: AlertController$AlertParams$4(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
io.reactivex.internal.operators.flowable.FlowableReduce: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void drain()
retrofit2.OptionalConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void onComplete()
io.reactivex.internal.operators.single.SingleContains$ContainsSingleObserver: SingleContains$ContainsSingleObserver(io.reactivex.internal.operators.single.SingleContains,io.reactivex.SingleObserver)
retrofit2.BuiltInConverters: BuiltInConverters()
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.app.ActionBar: void show()
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: void onComplete()
com.google.gson.FieldNamingPolicy: FieldNamingPolicy(java.lang.String,int)
okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Boolean)
retrofit2.HttpServiceMethod: java.lang.Object invoke(java.lang.Object[])
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.provider.FontsContractCompat$3: void onReply(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: boolean isDisposed()
androidx.core.app.ActivityManagerCompat: ActivityManagerCompat()
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: OkHttpCall$ExceptionCatchingResponseBody(okhttp3.ResponseBody)
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.ConnectionPool,okhttp3.Route)
com.google.gson.Gson: com.google.gson.JsonElement toJsonTree(java.lang.Object)
io.reactivex.internal.subscriptions.EmptySubscription: boolean offer(java.lang.Object)
androidx.appcompat.widget.PopupMenu: void show()
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void onNext(java.lang.Object)
com.google.gson.Gson$4: Gson$4(com.google.gson.TypeAdapter)
com.appspa.update.widget.NumberProgressBar: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.versionedparcelable.VersionedParcel: void writeSerializable(java.io.Serializable)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void innerComplete(io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: void innerComplete(int)
androidx.core.text.util.FindAddress: java.util.regex.MatchResult matchHouseNumber(java.lang.String,int)
com.appspa.update.proxy.impl.DefaultUpdatePrompter: DefaultUpdatePrompter()
io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: boolean isEmpty()
androidx.appcompat.widget.AppCompatSeekBar: void drawableStateChanged()
androidx.appcompat.app.AlertController$AlertParams: void createListView(androidx.appcompat.app.AlertController)
androidx.appcompat.view.menu.ListMenuPresenter: int getId()
io.reactivex.observers.TestObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View)
androidx.viewpager.widget.PagerTabStrip: PagerTabStrip(android.content.Context)
com.xuexiang.xhttp2.utils.HttpUtils: java.lang.String toJson(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: void onNext(java.lang.Object)
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder(java.util.Locale)
io.reactivex.internal.functions.ObjectHelper: boolean equals(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: java.lang.Object next()
androidx.collection.ArrayMap: ArrayMap()
com.xuexiang.xhttp2.XHttp: retrofit2.Retrofit$Builder getRetrofitBuilder()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableSequenceEqual: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: MaterializeSingleObserver(io.reactivex.SingleObserver)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isMultiLine()
com.appspa.demo.http.OKHttpUpdateHttpService$2: void onBefore(okhttp3.Request,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)
okhttp3.RequestBody$2: okhttp3.MediaType contentType()
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: void onComplete()
com.xuexiang.xhttp2.cookie.SerializableOkHttpCookies: okhttp3.Cookie getCookies()
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationCancel(android.animation.Animator)
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.http2.Settings: int getInitialWindowSize()
io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void errorAll(java.lang.Throwable)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void setResource(io.reactivex.disposables.Disposable)
androidx.loader.content.CursorLoader: void setUri(android.net.Uri)
com.google.gson.Gson$4: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: void drain()
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.Person getPerson()
androidx.core.util.Preconditions: void checkState(boolean)
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.entity.UpdateEntity$1: UpdateEntity$1()
io.reactivex.internal.operators.flowable.FlowableFromIterable: void subscribe(org.reactivestreams.Subscriber,java.util.Iterator)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
io.reactivex.exceptions.CompositeException$PrintStreamOrWriter: CompositeException$PrintStreamOrWriter()
androidx.core.view.ViewGroupCompat: void setTransitionGroup(android.view.ViewGroup,boolean)
io.reactivex.internal.operators.flowable.FlowableGroupJoin: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)
io.reactivex.internal.operators.completable.CompletableConcat: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: int transitiveBoundaryFusion(int)
androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)
androidx.lifecycle.Lifecycling$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: boolean isDisposed()
io.reactivex.internal.schedulers.DisposeOnCancel: DisposeOnCancel(io.reactivex.disposables.Disposable)
androidx.core.view.ViewPropertyAnimatorCompat: ViewPropertyAnimatorCompat(android.view.View)
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
com.google.gson.internal.bind.TypeAdapters$19: java.lang.StringBuilder read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.SearchView$OnCloseListener: boolean onClose()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()
androidx.appcompat.app.AlertController$AlertParams$2: void bindView(android.view.View,android.content.Context,android.database.Cursor)
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void cancelAll(java.lang.String)
com.appspa.update.utils.ShellUtils: ShellUtils()
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver: boolean isDisposed()
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: boolean equals(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onIoScheduler(io.reactivex.Scheduler)
retrofit2.ParameterHandler$Field: void apply(retrofit2.RequestBuilder,java.lang.Object)
io.reactivex.observers.TestObserver: void dispose()
androidx.annotation.IntDef: boolean open()
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterSubscriber: void onError(java.lang.Throwable)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.gson.internal.LinkedHashTreeMap$1: LinkedHashTreeMap$1()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: MaybeFlatMapIterableFlowable$FlatMapIterableObserver(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: void onError(java.lang.Throwable)
com.google.gson.FieldNamingPolicy$3: java.lang.String translateName(java.lang.reflect.Field)
io.reactivex.internal.schedulers.IoScheduler: IoScheduler(java.util.concurrent.ThreadFactory)
okio.Base64: byte[] decode(java.lang.String)
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
io.reactivex.disposables.CompositeDisposable: CompositeDisposable()
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RouteDatabase routeDatabase()
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence)
com.google.gson.internal.LinkedTreeMap: java.lang.Object writeReplace()
androidx.appcompat.widget.ListPopupWindow: void setContentWidth(int)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: java.lang.Object getItem(int)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onNext(java.lang.Object)
okio.ByteString: java.nio.ByteBuffer asByteBuffer()
androidx.core.R$color: R$color()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: void onError(java.lang.Throwable)
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
androidx.lifecycle.ViewModel: ViewModel()
com.zhy.http.okhttp.request.OkHttpRequest: void initBuilder()
androidx.appcompat.app.AppCompatDelegateImpl: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle()
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: void onNext(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getHotspotBounds(android.graphics.Rect)
io.reactivex.processors.PublishProcessor: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.RequestBody$3: RequestBody$3(okhttp3.MediaType,java.io.File)
androidx.appcompat.widget.AppCompatProgressBarHelper: AppCompatProgressBarHelper(android.widget.ProgressBar)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: void onTimeout(long)
androidx.appcompat.widget.AppCompatSeekBar: void jumpDrawablesToCurrentState()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.logs.LogcatLogger: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)
androidx.fragment.app.BackStackRecord: int getId()
androidx.appcompat.widget.PopupMenu$1: PopupMenu$1(androidx.appcompat.widget.PopupMenu)
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: void onNext(java.lang.Object)
com.appspa.demo.R$mipmap: R$mipmap()
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: void cancel()
okhttp3.internal.http1.Http1Codec: void detachTimeout(okio.ForwardingTimeout)
androidx.core.app.NotificationCompat$WearableExtender: android.app.PendingIntent getDisplayIntent()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: void cancel()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: java.lang.Object poll()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
com.jakewharton.disklrucache.DiskLruCache: void rebuildJournal()
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SamplerObserver: void onError(java.lang.Throwable)
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: ReplaySubject$UnboundedReplayBuffer(int)
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: boolean isDisposed()
okhttp3.internal.platform.Platform: void log(int,java.lang.String,java.lang.Throwable)
io.reactivex.disposables.RunnableDisposable: java.lang.String toString()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()
androidx.customview.R$attr: R$attr()
io.reactivex.internal.subscribers.BoundedSubscriber: boolean isDisposed()
com.xuexiang.xhttp2.utils.Utils: java.lang.String getExtStoragePath()
androidx.fragment.app.BackStackState$1: BackStackState$1()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String getParticipant()
com.xuexiang.xhttp2.transform.HttpSchedulersTransformer: io.reactivex.ObservableSource apply(io.reactivex.Observable)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowMenuShowPending()
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: void dispose()
io.reactivex.subscribers.SerializedSubscriber: void emitLoop()
androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()
android.support.v4.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationCancel(android.view.View)
io.reactivex.internal.observers.BlockingMultiObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: void onNext(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: MaybeTimeoutPublisher$TimeoutMainMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.MaybeSource)
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate: void onError(java.lang.Throwable)
io.reactivex.internal.util.VolatileSizeArrayList: void add(int,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt: io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt valueOf(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: DrawerLayout$SavedState$1()
okio.Timeout: Timeout()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: void onNext(java.lang.Object)
com.jakewharton.disklrucache.DiskLruCache: void processJournal()
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: void onComplete()
com.google.gson.LongSerializationPolicy$2: com.google.gson.JsonElement serialize(java.lang.Long)
io.reactivex.internal.operators.maybe.MaybeUnsafeCreate: void subscribeActual(io.reactivex.MaybeObserver)
okio.Buffer: okio.BufferedSink writeHexadecimalUnsignedLong(long)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context)
androidx.core.app.NotificationCompat$Action: android.os.Bundle getExtras()
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: void request(long)
androidx.drawerlayout.widget.DrawerLayout: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.provider.FontsContractCompat$4$7: void run()
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
androidx.core.view.ViewCompat: void setActivated(android.view.View,boolean)
com.google.gson.internal.bind.JsonTreeWriter$1: void write(char[],int,int)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean closeMenuOnSubMenuOpened()
androidx.core.view.ViewCompat: int generateViewId()
okhttp3.Cookie: java.lang.String toString()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: void dispose()
com.xuexiang.xhttp2.cache.core.CacheCore: boolean save(java.lang.String,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: void cancel()
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: void dispose()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: boolean isDisposed()
androidx.appcompat.widget.ActivityChooserModel: void readHistoricalDataImpl()
androidx.collection.LruCache: int evictionCount()
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: FlowableRefCount$RefCountSubscriber(org.reactivestreams.Subscriber,io.reactivex.internal.operators.flowable.FlowableRefCount,io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection)
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode[] values()
com.google.gson.internal.bind.TypeAdapters$16: TypeAdapters$16()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onMenuOpened(int,android.view.Menu)
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: void onComplete()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.shapes.Shape getDrawableShape()
androidx.appcompat.widget.TooltipPopup: boolean isShowing()
io.reactivex.internal.functions.Functions$EqualsPredicate: boolean test(java.lang.Object)
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okhttp3.internal.cache.DiskLruCache$Snapshot)
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isShortcutsVisible()
androidx.appcompat.widget.VectorEnabledTintResources: VectorEnabledTintResources(android.content.Context,android.content.res.Resources)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: FlowableGroupBy$GroupBySubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,io.reactivex.functions.Function,int,boolean,java.util.Map,java.util.Queue)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.view.ViewCompat: void setPivotY(android.view.View,float)
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.util.SorterFunction: java.lang.Object apply(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
io.reactivex.subjects.PublishSubject: io.reactivex.subjects.PublishSubject create()
androidx.fragment.app.Fragment: boolean isDetached()
com.xuexiang.xhttp2.XHttp: int getRetryIncreaseDelay()
androidx.versionedparcelable.VersionedParcelStream: void writeString(java.lang.String)
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()
androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)
okhttp3.internal.io.FileSystem$1: void deleteContents(java.io.File)
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable valueOf(java.lang.String)
okio.SegmentedByteString: int indexOf(byte[],int)
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.WindowDecorActionBar: int getSelectedNavigationIndex()
io.reactivex.internal.operators.single.SingleFromPublisher: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)
com.zhy.http.okhttp.request.OkHttpRequest: com.zhy.http.okhttp.request.RequestCall build()
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast: void run()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)
io.reactivex.internal.schedulers.SchedulerPoolFactory$ScheduledTask: void run()
androidx.appcompat.widget.MenuPopupWindow: void setTouchModal(boolean)
io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction: SchedulerWhen$ScheduledAction()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter)
okhttp3.CertificatePinner$Pin: boolean matches(java.lang.String)
androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)
io.reactivex.internal.operators.flowable.FlowableLastSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.functions.Functions$NullCallable: java.lang.Object call()
androidx.appcompat.app.WindowDecorActionBar: void setIcon(int)
org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor: void onNext(java.lang.Object)
com.xuexiang.xhttp2.transform.func.ApiResultFunc: com.xuexiang.xhttp2.model.ApiResult parseCustomApiResult(okhttp3.ResponseBody,com.xuexiang.xhttp2.model.ApiResult)
androidx.core.app.NotificationCompat$Style: void hideNormalContent(android.widget.RemoteViews)
androidx.appcompat.app.AlertController: boolean shouldCenterSingleButton(android.content.Context)
com.google.gson.stream.JsonWriter: void push(int)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver: void dispose()
retrofit2.Retrofit: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl: boolean equals(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.app.ActionBar: boolean isShowing()
okio.ByteString: okio.ByteString hmacSha1(okio.ByteString)
com.google.gson.internal.$Gson$Types: void checkNotPrimitive(java.lang.reflect.Type)
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: void disposeResourceAfter()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)
io.reactivex.internal.disposables.EmptyDisposable: boolean isDisposed()
io.reactivex.Notification: boolean isOnNext()
okio.RealBufferedSink$1: void close()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void cancel()
com.google.gson.JsonElement: java.lang.Number getAsNumber()
com.appspa.update.widget.UpdateDialogFragment: void doStart()
io.reactivex.subjects.MaybeSubject$MaybeDisposable: MaybeSubject$MaybeDisposable(io.reactivex.MaybeObserver,io.reactivex.subjects.MaybeSubject)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void drainNormal()
androidx.loader.content.ModernAsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.fragment.app.FragmentActivity: void onLowMemory()
androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$SequentialDispose: void run()
androidx.appcompat.widget.SearchView: void updateSubmitArea()
com.google.gson.JsonPrimitive: boolean equals(java.lang.Object)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable)
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver: boolean isDisposed()
okhttp3.internal.http2.Http2Connection: void start()
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.ActivityChooserView$Callbacks: ActivityChooserView$Callbacks(androidx.appcompat.widget.ActivityChooserView)
okio.RealBufferedSource: boolean rangeEquals(long,okio.ByteString)
androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)
io.reactivex.processors.PublishProcessor$PublishSubscription: void cancel()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: void read(com.google.gson.stream.JsonReader,java.lang.Object)
androidx.customview.widget.ViewDragHelper: void saveInitialMotion(float,float,int)
com.appspa.update.utils.ApkUtils: boolean installAppSilent(android.content.Context,java.lang.String)
com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.String toString()
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadStackImpl: java.lang.Object initialValue()
io.reactivex.internal.functions.Functions$ErrorConsumer: void accept(java.lang.Object)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: void onNext(java.lang.Object)
com.appspa.update.service.DownloadService$FileDownloadCallBack: void dispatchOnError(java.lang.Throwable)
androidx.appcompat.view.menu.BaseMenuPresenter: void setId(int)
androidx.lifecycle.ReportFragment: void onResume()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutTask: ObservableTimeoutTimed$TimeoutTask(long,io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutSupport)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: boolean isEmpty()
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect getEpicenterBounds()
org.reactivestreams.FlowAdapters$ReactivePublisherFromFlow: void subscribe(org.reactivestreams.Subscriber)
io.reactivex.internal.disposables.EmptyDisposable: void error(java.lang.Throwable,io.reactivex.MaybeObserver)
androidx.appcompat.view.menu.SubMenuBuilder: SubMenuBuilder(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setAlpha(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View getCustomView()
org.aspectj.internal.lang.reflect.AdviceImpl: java.lang.String toString()
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: void innerError(int,java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: boolean isDisposed()
com.google.gson.internal.bind.JsonTreeReader: void beginArray()
androidx.appcompat.widget.FitWindowsViewGroup: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.view.DragStartHelper: void getTouchPosition(android.graphics.Point)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void clear()
io.reactivex.internal.operators.observable.ObservableMaterialize: void subscribeActual(io.reactivex.Observer)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$5: void run()
androidx.appcompat.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: boolean isDisposed()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.lang.Object lvElement(java.util.concurrent.atomic.AtomicReferenceArray,int)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void onComplete()
com.google.gson.Gson: com.google.gson.TypeAdapter floatAdapter(boolean)
com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,androidx.core.app.Person)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isStateful()
androidx.appcompat.app.WindowDecorActionBar: void setDisplayUseLogoEnabled(boolean)
androidx.appcompat.widget.SwitchCompat$1: void set(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
okio.RealBufferedSource: long read(okio.Buffer,long)
io.reactivex.internal.operators.mixed.ScalarXMapZHelper: boolean tryAsSingle(java.lang.Object,io.reactivex.functions.Function,io.reactivex.Observer)
androidx.versionedparcelable.ParcelImpl: int describeContents()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(int)
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withVersion(double)
androidx.appcompat.view.menu.MenuBuilder: void setOptionalIconsVisible(boolean)
androidx.customview.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()
androidx.versionedparcelable.VersionedParcelStream: void writeBoolean(boolean)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean equals(java.lang.Object)
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(int,java.lang.CharSequence,android.app.PendingIntent)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String getPath()
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.parallel.ParallelMap: void subscribe(org.reactivestreams.Subscriber[])
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction: SchedulerWhen$CreateWorkerFunction(io.reactivex.Scheduler$Worker)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getResourceId()
androidx.collection.LongSparseArray: int indexOfValue(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.xuexiang.xhttp2.callback.SimpleCallBack: void onStart()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerTitle(int,java.lang.CharSequence)
androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.view.menu.StandardMenuPopup: void setVerticalOffset(int)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void replay(io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable)
com.appspa.update.entity.UpdateError$ERROR: UpdateError$ERROR()
io.reactivex.internal.subscribers.BlockingFirstSubscriber: void onNext(java.lang.Object)
com.xuexiang.xhttp2.exception.ApiException: java.lang.String getDetailMessage()
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver: void dispose()
androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isHeading()
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: void onError(java.lang.Throwable)
androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
androidx.viewpager.widget.ViewPager$ItemInfo: ViewPager$ItemInfo()
androidx.appcompat.view.menu.MenuItemImpl: char getAlphabeticShortcut()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersHorizontal(android.graphics.Canvas)
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter: void sort(android.content.Intent,java.util.List,java.util.List)
com.google.gson.internal.LinkedTreeMap$EntrySet$1: java.lang.Object next()
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,byte,byte)
okio.AsyncTimeout$1: java.lang.String toString()
com.xuexiang.xhttp2.transform.func.OriginalStringFuc: java.lang.String apply(okhttp3.ResponseBody)
androidx.loader.content.Loader: void commitContentChanged()
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: FlowableConcatWithCompletable$ConcatWithSubscriber(org.reactivestreams.Subscriber,io.reactivex.CompletableSource)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable()
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersVertical(android.graphics.Canvas)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
retrofit2.DefaultCallAdapterFactory$1: retrofit2.Call adapt(retrofit2.Call)
okio.GzipSource: okio.Timeout timeout()
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: SingleInternalHelper$NoSuchElementCallable(java.lang.String,int)
com.google.gson.TypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber: FlowableBufferExactBoundary$BufferBoundarySubscriber(io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber)
androidx.appcompat.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)
io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: void onComplete()
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterator: io.reactivex.Flowable next()
okhttp3.ResponseBody: ResponseBody()
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: void request(long)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity)
androidx.core.app.AlarmManagerCompat: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: void onError(java.lang.Throwable)
com.appspa.update.widget.UpdateDialogFragment: void onClick(android.view.View)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleBiGenerator: java.lang.Object apply(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: void dispose()
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void drain()
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.UpdateManager: com.appspa.update.entity.UpdateEntity parseJson(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: void onNext(java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onChanged()
com.google.gson.internal.LinkedHashTreeMap$KeySet$1: LinkedHashTreeMap$KeySet$1(com.google.gson.internal.LinkedHashTreeMap$KeySet)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
retrofit2.KotlinExtensions$await$2$2: void onResponse(retrofit2.Call,retrofit2.Response)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableAndThenCompletable: void subscribeActual(io.reactivex.CompletableObserver)
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: java.lang.String byteArrayToHexString(byte[])
androidx.versionedparcelable.VersionedParcelParcel: void writeStrongInterface(android.os.IInterface)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.res.ColorStateList getIconTintList()
com.xuexiang.xhttp2.cache.converter.SerializableDiskConverter: SerializableDiskConverter()
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: boolean hasNext()
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver: void onSuccess(java.lang.Object)
okhttp3.HttpUrl: boolean equals(java.lang.Object)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okio.Buffer: byte readByte()
com.google.gson.Gson$FutureTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
okio.Buffer: long indexOf(byte)
io.reactivex.internal.functions.Functions$HashSetCallable: io.reactivex.internal.functions.Functions$HashSetCallable valueOf(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: void cancel()
androidx.core.database.DatabaseUtilsCompat: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])
androidx.lifecycle.ComputableLiveData$3: ComputableLiveData$3(androidx.lifecycle.ComputableLiveData)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
com.google.gson.Gson$1: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.viewpager.widget.PagerTabStrip$2: PagerTabStrip$2(androidx.viewpager.widget.PagerTabStrip)
androidx.annotation.IntRange: long from()
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: java.lang.CharSequence getText()
com.xuexiang.xhttp2.interceptor.BaseInterceptor: BaseInterceptor()
retrofit2.ServiceMethod: ServiceMethod()
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: MenuItemWrapperICS$OnMenuItemClickListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener)
retrofit2.Response: java.lang.String message()
com.zhy.http.okhttp.callback.StringCallback: java.lang.String parseNetworkResponse(okhttp3.Response,int)
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: boolean isEmpty()
com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType: com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType valueOf(java.lang.String)
com.zhy.http.okhttp.request.OtherRequest: okhttp3.Request buildRequest(okhttp3.RequestBody)
com.google.gson.internal.LinkedTreeMap$EntrySet: boolean contains(java.lang.Object)
io.reactivex.internal.queue.SpscLinkedArrayQueue: void clear()
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: boolean isDisposed()
okhttp3.internal.io.FileSystem$1: okio.Sink appendingSink(java.io.File)
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.ViewCompat$2: ViewCompat$2(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: ObservableLastMaybe$LastObserver(io.reactivex.MaybeObserver)
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
androidx.appcompat.app.ToolbarActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
com.appspa.demo.Constants: Constants()
androidx.versionedparcelable.VersionedParcel: java.lang.Exception createException(int,java.lang.String)
org.aspectj.runtime.reflect.InitializerSignatureImpl: java.lang.String getName()
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.graphics.drawable.DrawableWrapper: int[] getState()
androidx.appcompat.view.StandaloneActionMode: void finish()
androidx.appcompat.view.menu.MenuHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
okio.Buffer$1: void flush()
io.reactivex.internal.util.EmptyComponent: org.reactivestreams.Subscriber asSubscriber()
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: LinearOutSlowInInterpolator()
okio.ByteString: byte[] internalArray()
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferBoundaryObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: void onNext(java.lang.Object)
com.appspa.update._AppSpace: void onUpdateError(com.appspa.update.entity.UpdateError)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$4: BaseStrategy$4(com.xuexiang.xhttp2.cache.stategy.BaseStrategy)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void drainNormal()
androidx.lifecycle.ComputableLiveData: void invalidate()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
okio.AsyncTimeout$Watchdog: void run()
io.reactivex.Observable: io.reactivex.Observable unsubscribeOn(io.reactivex.Scheduler)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Collection)
androidx.activity.R$id: R$id()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: void cancel()
androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
androidx.collection.MapCollections$EntrySet: int size()
androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: void truncateFinal()
com.zhy.http.okhttp.callback.FileCallBack$1: FileCallBack$1(com.zhy.http.okhttp.callback.FileCallBack,long,long,int)
com.google.gson.JsonElement: char getAsCharacter()
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
okio.Util: int reverseBytesInt(int)
okhttp3.internal.http1.Http1Codec: okio.Sink newFixedLengthSink(long)
io.reactivex.exceptions.CompositeException: java.util.List getListOfCauses(java.lang.Throwable)
androidx.core.content.res.GrowingArrayUtils: boolean[] append(boolean[],int,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
com.google.gson.internal.LinkedTreeMap$Node: LinkedTreeMap$Node()
androidx.core.text.BidiFormatter: boolean isRtl(java.lang.String)
androidx.appcompat.widget.PopupMenu$OnDismissListener: void onDismiss(androidx.appcompat.widget.PopupMenu)
androidx.appcompat.app.ResourcesFlusher: ResourcesFlusher()
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay()
io.reactivex.internal.operators.single.SingleDoOnTerminate$DoOnTerminate: SingleDoOnTerminate$DoOnTerminate(io.reactivex.internal.operators.single.SingleDoOnTerminate,io.reactivex.SingleObserver)
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable: void run()
androidx.core.graphics.PathParser: PathParser()
androidx.appcompat.widget.ActionMenuPresenter: boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: void dispose()
io.reactivex.internal.subscribers.LambdaSubscriber: void dispose()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$RepeatWhenSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.ViewStubCompat$OnInflateListener: void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View)
androidx.viewpager.widget.ViewPager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewAttachedToWindow(android.view.View)
io.reactivex.internal.disposables.EmptyDisposable: void complete(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void onComplete()
io.reactivex.subjects.BehaviorSubject: void onError(java.lang.Throwable)
androidx.collection.ArraySet: int size()
androidx.appcompat.view.menu.MenuDialogHelper: void dismiss()
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterable: java.util.Iterator iterator()
androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: int consumerIndex()
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: boolean isDisposed()
okhttp3.Dispatcher: Dispatcher()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
com.google.gson.internal.bind.TypeAdapters$20: java.lang.StringBuffer read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: void dispose()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: BaseTestConsumer$TestWaitStrategy(java.lang.String,int,io.reactivex.observers.BaseTestConsumer$1)
okhttp3.internal.Util: boolean isAndroidGetsocknameError(java.lang.AssertionError)
okio.Buffer: java.io.InputStream inputStream()
com.xuexiang.xhttp2.transform.HttpSchedulersTransformer: HttpSchedulersTransformer(boolean,boolean)
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
okio.RealBufferedSink: okio.BufferedSink writeInt(int)
com.xuexiang.xhttp2.cache.stategy.OnlyCacheStrategy: OnlyCacheStrategy()
io.reactivex.internal.operators.observable.ObservableFromArray: ObservableFromArray(java.lang.Object[])
com.xuexiang.xhttp2.cache.stategy.OnlyRemoteStrategy: OnlyRemoteStrategy()
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String)
com.google.gson.internal.bind.TypeAdapters$28: java.util.Locale read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void complete()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void complete(java.lang.Object)
retrofit2.BuiltInConverters$VoidResponseBodyConverter: java.lang.Object convert(java.lang.Object)
com.appspa.update.proxy.impl.AbstractUpdateParser: boolean isAsyncParser()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void cancelTaps()
com.xuexiang.xhttp2.R$styleable: R$styleable()
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: void onError(java.lang.Throwable)
androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver: void onSuccess(java.lang.Object)
androidx.appcompat.view.menu.MenuPopupHelper: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean)
io.reactivex.internal.operators.completable.CompletableNever: CompletableNever()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: void onComplete()
androidx.loader.content.ModernAsyncTask: void onProgressUpdate(java.lang.Object[])
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: void cancel()
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.reflect.Type responseType()
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: void onComplete()
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean hasAntiAlias()
androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])
io.reactivex.schedulers.Schedulers$IoHolder: Schedulers$IoHolder()
androidx.fragment.app.FragmentManager: boolean executePendingTransactions()
com.xuexiang.xhttp2.utils.RequestBodyUtils$1: void writeTo(okio.BufferedSink)
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)
androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$1: com.xuexiang.xhttp2.cache.model.CacheResult apply(java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)
androidx.core.os.ParcelableCompat: android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks)
okhttp3.RealCall$1: void timedOut()
retrofit2.Retrofit$Builder: java.util.List converterFactories()
androidx.interpolator.view.animation.LookupTableInterpolator: float getInterpolation(float)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: int getId()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback(retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter,java.util.concurrent.CompletableFuture)
okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentTransition$3: void run()
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getRowIndex()
okhttp3.Dispatcher: void finished(okhttp3.RealCall$AsyncCall)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: android.os.Parcelable onSaveInstanceState()
com.appspa.update.R$attr: R$attr()
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast: void complete()
androidx.customview.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)
com.google.gson.LongSerializationPolicy$1: LongSerializationPolicy$1(java.lang.String,int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourcePackageName(int)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setStyle(android.content.Context)
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()
androidx.fragment.app.FragmentActivity: void onStop()
com.xuexiang.xhttp2.model.ExpiredInfo: com.xuexiang.xhttp2.model.ExpiredInfo setBodyString(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.util.HalfSerializer: void onComplete(io.reactivex.Observer,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: void onComplete()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManagerImpl: void dispatchStop()
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: void cancel()
androidx.core.app.ServiceCompat: ServiceCompat()
androidx.cursoradapter.widget.SimpleCursorAdapter: SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupEnabled(int,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: void soNext(java.util.concurrent.atomic.AtomicReferenceArray,java.util.concurrent.atomic.AtomicReferenceArray)
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
androidx.core.app.BundleCompat: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: void cancel()
androidx.lifecycle.FullLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
com.appspa.update.widget.UpdateDialog: void dismiss()
androidx.appcompat.view.menu.CascadingMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: void onError(java.lang.Throwable)
io.reactivex.processors.MulticastProcessor$MulticastSubscription: void onNext(java.lang.Object)
com.appspa.demo.App$1: App$1(com.appspa.demo.App)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: void dispose()
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleGenerator: java.lang.Object apply(java.lang.Object,java.lang.Object)
com.appspa.demo.R$color: R$color()
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver(io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber)
com.appspa.update.proxy.impl.DefaultFileEncryptor: DefaultFileEncryptor()
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: java.lang.Object call()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCornerRadius(float)
org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[])
androidx.core.os.BuildCompat: boolean isAtLeastQ()
androidx.fragment.app.BackStackState$1: java.lang.Object createFromParcel(android.os.Parcel)
retrofit2.Utils: java.lang.RuntimeException methodError(java.lang.reflect.Method,java.lang.String,java.lang.Object[])
androidx.core.text.BidiFormatter$DirectionalityEstimator: int getExitDir()
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: FlowablePublishAlt$PublishConnection(java.util.concurrent.atomic.AtomicReference,int)
androidx.appcompat.view.ActionMode: java.lang.CharSequence getTitle()
androidx.versionedparcelable.VersionedParcel: void writeLongArray(long[],int)
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.appcompat.view.StandaloneActionMode: void setTitleOptionalHint(boolean)
androidx.versionedparcelable.VersionedParcelize: boolean ignoreParcelables()
io.reactivex.internal.operators.single.SingleDoOnTerminate$DoOnTerminate: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void innerComplete()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
androidx.appcompat.view.menu.MenuItemImpl: int getNumericModifiers()
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: void innerComplete()
io.reactivex.internal.operators.observable.ObservableInternalHelper$ItemDelayFunction: io.reactivex.ObservableSource apply(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel)
androidx.collection.MapCollections: void colPut(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)
io.reactivex.internal.operators.completable.CompletableCache: void onComplete()
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: void dispose()
androidx.customview.widget.ViewDragHelper: void clearMotionHistory()
okio.Pipe$PipeSink: okio.Timeout timeout()
androidx.versionedparcelable.VersionedParcelize: boolean allowSerialization()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: boolean isCancelled()
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void drain()
com.appspa.update.widget.UpdateDialogActivity: void installApp()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: boolean isHierarchical()
androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean validate(long)
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void onError(java.lang.Throwable)
androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbTitleRes()
io.reactivex.internal.operators.observable.ObservableSkipWhile: void subscribeActual(io.reactivex.Observer)
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()
androidx.fragment.app.Fragment: java.lang.String getString(int)
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer: void accept(java.lang.Object)
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)
androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
com.xuexiang.xhttp2.model.HttpParams: HttpParams(java.lang.String,java.lang.String)
androidx.core.graphics.PathSegment: android.graphics.PointF getStart()
com.xuexiang.xhttp2.model.HttpHeaders: void setUserAgent(java.lang.String)
androidx.appcompat.app.ToolbarActionBar: void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.versionedparcelable.VersionedParcel: void writeArray(java.lang.Object[])
io.reactivex.internal.subscribers.InnerQueuedSubscriber: io.reactivex.internal.fuseable.SimpleQueue queue()
com.google.gson.JsonNull: com.google.gson.JsonElement deepCopy()
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$1: java.lang.Object apply(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: BlockingObservableIterable$BlockingObservableIterator(int)
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int,int)
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableMap: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: void drain()
androidx.appcompat.app.AppCompatActivity: void onStart()
io.reactivex.internal.operators.observable.ObservableReplay$UnBoundedFactory: ObservableReplay$UnBoundedFactory()
io.reactivex.internal.operators.completable.CompletableDoFinally: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.completable.CompletableDelay$Delay: void onError(java.lang.Throwable)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
okhttp3.OkHttpClient$1: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float getInterpolation(float)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableReplay$ReplaySource: void subscribe(io.reactivex.Observer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: void innerError(io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver,java.lang.Throwable)
io.reactivex.internal.schedulers.SchedulerWhen$OnCompletedAction: void run()
androidx.core.view.ViewCompat: int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: void onComplete()
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
androidx.core.app.NotificationManagerCompat$CancelTask: NotificationManagerCompat$CancelTask(java.lang.String,int,java.lang.String)
androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)
okio.Buffer: int hashCode()
androidx.loader.content.ModernAsyncTask$1: ModernAsyncTask$1()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: java.util.NoSuchElementException call()
okio.Okio: okio.Source source(java.io.InputStream)
androidx.collection.CircularIntArray: int popLast()
io.reactivex.internal.queue.SpscArrayQueue: boolean offer(java.lang.Object)
androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)
io.reactivex.internal.functions.Functions$Array2Func: java.lang.Object apply(java.lang.Object[])
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: ObservableConcatMapMaybe$ConcatMapMaybeMainObserver(io.reactivex.Observer,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: void onNext(java.lang.Object)
com.google.gson.internal.LinkedTreeMap: boolean equal(java.lang.Object,java.lang.Object)
io.reactivex.internal.schedulers.ImmediateThinScheduler$ImmediateThinWorker: ImmediateThinScheduler$ImmediateThinWorker()
io.reactivex.internal.util.EmptyComponent: void dispose()
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab getTab()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void clearColorFilter()
com.zhy.http.okhttp.request.RequestCall: RequestCall(com.zhy.http.okhttp.request.OkHttpRequest)
com.appspa.update.listener.impl.DefaultInstallListener: void onInstallApkSuccess()
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.subscribers.QueueDrainSubscriberPad3: QueueDrainSubscriberPad3()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)
io.reactivex.internal.observers.CallbackCompletableObserver: CallbackCompletableObserver(io.reactivex.functions.Action)
androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)
io.reactivex.internal.util.EmptyComponent: void onSuccess(java.lang.Object)
okio.ByteString: java.lang.String string(java.nio.charset.Charset)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int)
okio.ForwardingSource: long read(okio.Buffer,long)
androidx.lifecycle.ComputableLiveData: ComputableLiveData()
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.reactivex.disposables.CompositeDisposable: boolean add(io.reactivex.disposables.Disposable)
androidx.core.view.ViewCompat: boolean isAccessibilityHeading(android.view.View)
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: void dispose()
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: int hashCode()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.plugins.RxJavaPlugins: void onError(java.lang.Throwable)
com.appspa.update.utils.DrawableUtils: android.graphics.drawable.GradientDrawable getSolidRectDrawable(int,int)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.util.List getMessagesFromBundleArray(android.os.Parcelable[])
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver(io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver)
com.google.gson.internal.bind.util.ISO8601Utils: java.util.Date parse(java.lang.String,java.text.ParsePosition)
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator: void validateRequestPermissionsRequestCode(int)
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void drainAndDispose()
okio.Util: boolean arrayRangeEquals(byte[],int,byte[],int,int)
androidx.loader.app.LoaderManager$LoaderCallbacks: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void dispose()
androidx.appcompat.widget.SearchView$4: SearchView$4(androidx.appcompat.widget.SearchView)
com.xuexiang.xhttp2.utils.HttpUtils: java.lang.String parseUrl(java.lang.String)
okio.Pipe$PipeSource: void close()
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: void run()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream(int)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setVerticalMirror(boolean)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void request(long)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: boolean isDisposed()
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()
io.reactivex.internal.schedulers.SchedulerWhen$SubscribedDisposable: boolean isDisposed()
okhttp3.RealCall: void captureCallStackTrace()
okhttp3.internal.http.HttpHeaders: int parseSeconds(java.lang.String,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)
androidx.fragment.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
io.reactivex.processors.BehaviorProcessor: void onNext(java.lang.Object)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float)
okio.AsyncTimeout$1: AsyncTimeout$1(okio.AsyncTimeout,okio.Sink)
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: void onAfterTerminate()
io.reactivex.internal.operators.observable.ObservableMapNotification: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.LinkedTreeMap$KeySet: boolean remove(java.lang.Object)
androidx.customview.widget.ViewDragHelper$2: void run()
com.appspa.update.entity.PromptEntity: java.lang.String getTopDrawableTag()
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: FlowableSubscribeOn$SubscribeOnSubscriber(org.reactivestreams.Subscriber,io.reactivex.Scheduler$Worker,org.reactivestreams.Publisher,boolean)
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
com.xuexiang.xhttp2.XHttp$3: void accept(java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$3: DownloadSubscriber$3(com.xuexiang.xhttp2.subsciber.DownloadSubscriber,com.xuexiang.xhttp2.callback.CallBack,java.lang.String)
okio.RealBufferedSink: void write(okio.Buffer,long)
androidx.appcompat.widget.AppCompatTextHelper: void setTypefaceByCallback(android.graphics.Typeface)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber(org.reactivestreams.Subscriber,java.util.concurrent.Callable,java.util.concurrent.Callable)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
io.reactivex.subjects.SerializedSubject: void onNext(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onLayoutDirectionChanged(int)
androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
io.reactivex.internal.util.NotificationLite$SubscriptionNotification: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableIgnoreElements: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableCreate$ErrorAsyncEmitter: void onOverflow()
okhttp3.RealCall: okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
com.xuexiang.xhttp2.request.CustomRequest: CustomRequest()
io.reactivex.internal.operators.observable.ObservableOnErrorReturn: void subscribeActual(io.reactivex.Observer)
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform: PagerTitleStrip$SingleLineAllCapsTransform(android.content.Context)
retrofit2.RequestFactory$Builder: void validatePathName(int,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: void onComplete()
androidx.fragment.app.FragmentTransition: void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainTypedArray(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable: CompletableTimer$TimerDisposable(io.reactivex.CompletableObserver)
androidx.appcompat.widget.MenuPopupWindow: MenuPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.lifecycle.ViewModelStore: java.util.Set keys()
io.reactivex.internal.observers.CallbackCompletableObserver: void accept(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableFromArray: void subscribeActual(org.reactivestreams.Subscriber)
okio.ForwardingSource: okio.Source delegate()
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: void setResource(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: void dispose()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
io.reactivex.internal.operators.maybe.MaybeToSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.view.menu.MenuPopup: void setShowTitle(boolean)
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
retrofit2.Utils$WildcardTypeImpl: boolean equals(java.lang.Object)
androidx.core.util.Pools$SynchronizedPool: java.lang.Object acquire()
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: ParallelPeek$ParallelPeekSubscriber(org.reactivestreams.Subscriber,io.reactivex.internal.operators.parallel.ParallelPeek)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void request(long)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder)
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: void cancel()
androidx.cursoradapter.widget.CursorAdapter: android.widget.Filter getFilter()
androidx.appcompat.widget.SearchView$1: void run()
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: void onNext(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl: java.net.URL url()
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: void onError(com.xuexiang.xhttp2.exception.ApiException)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain()
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: void request(long)
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: boolean isDisposed()
androidx.fragment.app.FragmentManager: void popBackStack(java.lang.String,int)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,int)
androidx.appcompat.view.SupportActionModeWrapper: void invalidate()
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: void onNext(java.lang.Object)
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: void onError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getOpacity()
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: ObservableRepeat$RepeatObserver(io.reactivex.Observer,long,io.reactivex.internal.disposables.SequentialDisposable,io.reactivex.ObservableSource)
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: void dispose()
com.google.gson.internal.bind.TypeAdapters$9: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb: androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.app.Activity,android.graphics.drawable.Drawable,int)
io.reactivex.internal.schedulers.SingleScheduler: SingleScheduler(java.util.concurrent.ThreadFactory)
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
androidx.appcompat.resources.R$layout: R$layout()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
retrofit2.Platform$Android: java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[])
com.google.gson.internal.bind.TypeAdapters$30: TypeAdapters$30()
com.appspa.update.entity.UpdateEntity: java.lang.String toString()
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll()
okio.Buffer: int read(java.nio.ByteBuffer)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: void onError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)
retrofit2.adapter.rxjava2.ResultObservable$ResultObserver: void onNext(retrofit2.Response)
androidx.customview.widget.ViewDragHelper: int getEdgesTouched(int,int)
androidx.fragment.app.FragmentTabHost: void onRestoreInstanceState(android.os.Parcelable)
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
androidx.core.widget.AutoScrollHelper: float getEdgeValue(float,float,float,float)
androidx.appcompat.app.ToolbarActionBar: void setDisplayOptions(int)
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node first()
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: void dispose()
io.reactivex.observers.TestObserver$EmptyObserver: void onNext(java.lang.Object)
com.appspa.update.utils.FileUtils: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri)
androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: void remove()
androidx.core.app.NotificationCompat$MessagingStyle: boolean hasMessagesWithoutSender()
io.reactivex.subscribers.ResourceSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,io.reactivex.internal.queue.SpscLinkedArrayQueue)
io.reactivex.internal.observers.QueueDrainObserver: java.lang.Throwable error()
com.zhy.http.okhttp.cookie.store.MemoryCookieStore: void add(okhttp3.HttpUrl,java.util.List)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast: FlowableSampleTimed$SampleTimedNoLast(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: void onError(java.lang.Throwable)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getCurrent()
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void removeSome(int)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void errorAll(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clone()
androidx.viewpager.widget.PagerTitleStrip: void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
com.appspa.update.utils.ApkUtils: boolean isSystemApplication(android.content.Context)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: int getEnd()
androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)
androidx.fragment.app.FragmentManagerImpl: void addRetainedFragment(androidx.fragment.app.Fragment)
io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: void onComplete()
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: void onNext(java.lang.Object)
okhttp3.internal.http.HttpDate$1: HttpDate$1()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isVisible()
androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void onComplete()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
com.appspa.update.proxy.impl.DefaultFileEncryptor: boolean isFileValid(java.lang.String,java.io.File)
androidx.core.graphics.TypefaceCompatApi21Impl: TypefaceCompatApi21Impl()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(int)
com.google.gson.internal.bind.TypeAdapters$23: TypeAdapters$23()
androidx.core.util.Pair: boolean equals(java.lang.Object)
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType[] values()
androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: ObservableCombineLatest$LatestCoordinator(io.reactivex.Observer,io.reactivex.functions.Function,int,int,boolean)
io.reactivex.schedulers.Timed: Timed(java.lang.Object,long,java.util.concurrent.TimeUnit)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.appcompat.app.ToolbarActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)
okhttp3.ResponseBody$BomAwareReader: void close()
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: void onComplete()
com.google.gson.internal.bind.TypeAdapters$24: TypeAdapters$24()
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void clear()
com.appspa.update._AppSpace: com.appspa.update.proxy.IUpdatePrompter getIUpdatePrompter()
androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)
androidx.collection.CircularIntArray: CircularIntArray()
androidx.versionedparcelable.VersionedParcelStream: void setOutputField(int)
androidx.core.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.queue.SpscArrayQueue: boolean isEmpty()
androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: void request(long)
androidx.versionedparcelable.VersionedParcelStream: androidx.versionedparcelable.VersionedParcel createSubParcel()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider getProvider()
androidx.appcompat.app.ToolbarActionBar: void setDisplayShowCustomEnabled(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int findLargestTextSizeWhichFits(android.graphics.RectF)
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: ObservableIntervalRange$IntervalRangeObserver(io.reactivex.Observer,long,long)
androidx.customview.widget.ViewDragHelper: float getMinVelocity()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawable(android.net.Uri)
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: java.lang.Object[] getValues(java.lang.Object[])
io.reactivex.internal.operators.flowable.FlowableEmpty: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: void dispose()
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewExpanded()
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
org.reactivestreams.FlowAdapters: FlowAdapters()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean performClick()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: ObservableConcatMapCompletable$ConcatMapCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int)
io.reactivex.processors.BehaviorProcessor: void setCurrent(java.lang.Object)
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.internal.util.QueueDrainHelper: void drainLoop(io.reactivex.internal.fuseable.SimplePlainQueue,io.reactivex.Observer,boolean,io.reactivex.disposables.Disposable,io.reactivex.internal.util.ObservableQueueDrain)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void startCreatingLoader()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.fragment.app.FragmentManagerImpl: void scheduleCommit()
io.reactivex.internal.functions.Functions$EmptyRunnable: Functions$EmptyRunnable()
com.appspa.update.UpdateManager: void onAfterCheck()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()
androidx.appcompat.app.ToolbarActionBar: void setDisplayHomeAsUpEnabled(boolean)
io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable: MaybeCache$CacheDisposable(io.reactivex.MaybeObserver,io.reactivex.internal.operators.maybe.MaybeCache)
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.HttpUrl: void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$5: void accept(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int,int)
com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
androidx.fragment.app.FragmentManagerImpl: void dispatchPrimaryNavigationFragmentChanged()
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getHeight()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void closeOtherDrawer()
io.reactivex.internal.schedulers.IoScheduler: io.reactivex.Scheduler$Worker createWorker()
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
com.google.gson.JsonElement: double getAsDouble()
androidx.core.os.OperationCanceledException: OperationCanceledException()
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.ToolbarActionBar: void hide()
retrofit2.BuiltInConverters$UnitResponseBodyConverter: kotlin.Unit convert(okhttp3.ResponseBody)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback)
okhttp3.internal.ws.RealWebSocket: void cancel()
androidx.fragment.app.Fragment: android.view.View getView()
androidx.collection.CircularArray: java.lang.Object getLast()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: void setIsLongpressEnabled(boolean)
org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.AjType[] getParameterTypes()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: ObservableTimeoutTimed$TimeoutObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object setValue(java.lang.Object)
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int)
androidx.core.hardware.display.DisplayManagerCompat: androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context)
io.reactivex.internal.functions.ObjectHelper: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)
com.google.gson.internal.bind.TypeAdapters$28: java.lang.Object read(com.google.gson.stream.JsonReader)
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy getCandidate()
okhttp3.internal.http1.Http1Codec$ChunkedSink: Http1Codec$ChunkedSink(okhttp3.internal.http1.Http1Codec)
androidx.fragment.app.FragmentManagerImpl: java.util.List getFragments()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void request(long)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: void cancel()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: void onComplete()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTint(int)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.ViewCompat: void tickleInvalidationFlag(android.view.View)
androidx.viewpager.widget.PagerTitleStrip: int getTextSpacing()
okio.GzipSource: void consumeHeader()
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: FlowableDoOnEach$DoOnEachSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
retrofit2.CallAdapter$Factory: CallAdapter$Factory()
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.Scheduler$Worker createWorker()
io.reactivex.internal.operators.parallel.ParallelFlatMap: int parallelism()
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void drainLoop()
androidx.cursoradapter.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)
okhttp3.internal.cache.DiskLruCache: void trimToSize()
io.reactivex.internal.operators.single.SingleCreate$Emitter: SingleCreate$Emitter(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: FlowableZip$ZipCoordinator(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,int,boolean)
androidx.core.os.LocaleListInterface: java.util.Locale get(int)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver: MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver(io.reactivex.SingleObserver,java.util.concurrent.atomic.AtomicReference)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: CompletableConcatIterable$ConcatInnerObserver(io.reactivex.CompletableObserver,java.util.Iterator)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void clear()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription: void onError(java.lang.Throwable)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
io.reactivex.internal.schedulers.SchedulerWhen$SubscribedDisposable: SchedulerWhen$SubscribedDisposable()
okhttp3.internal.http2.Http2: Http2()
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: void onError(java.lang.Throwable)
com.appspa.update.widget.UpdateDialogActivity: void refreshUpdateButton()
androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.http2.Huffman: byte[] decode(byte[])
io.reactivex.internal.fuseable.SimpleQueue: boolean isEmpty()
io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: FlowableTake$TakeSubscriber(org.reactivestreams.Subscriber,long)
io.reactivex.schedulers.TestScheduler$TestWorker: TestScheduler$TestWorker(io.reactivex.schedulers.TestScheduler)
androidx.core.app.NotificationCompat$WearableExtender: int getCustomContentHeight()
androidx.lifecycle.MediatorLiveData: void onInactive()
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener: void onDetachedFromWindow()
okio.ByteString: boolean endsWith(byte[])
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver: void onComplete()
com.google.gson.JsonArray: float getAsFloat()
androidx.fragment.app.Fragment: int getStateAfterAnimating()
io.reactivex.internal.operators.maybe.MaybeErrorCallable: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.subscribers.FutureSubscriber: boolean isDone()
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
androidx.appcompat.widget.ShareActionProvider: void setOnShareTargetSelectedListener(androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener)
androidx.appcompat.view.menu.MenuWrapperICS: void removeGroup(int)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: boolean isDisposed()
com.xuexiang.xhttp2.model.ApiResult: java.lang.String toString()
com.appspa.update.utils.DrawableUtils: android.graphics.drawable.StateListDrawable getStateListDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
io.reactivex.exceptions.CompositeException: java.lang.Throwable getRootCause(java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask: void run()
io.reactivex.internal.observers.BlockingBaseObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: void dispose()
okio.ForwardingSink: void flush()
androidx.customview.widget.ExploreByTouchHelper$2: ExploreByTouchHelper$2()
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
com.google.gson.internal.bind.JsonTreeReader: long nextLong()
com.appspa.update.utils.UpdateUtils: float getDensity(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: java.lang.Object poll()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Single onAssembly(io.reactivex.Single)
io.reactivex.internal.util.BackpressureHelper: long producedCancel(java.util.concurrent.atomic.AtomicLong,long)
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableGroupBy$State: void drain()
androidx.appcompat.app.AppCompatDialog: void setContentView(int)
androidx.appcompat.view.StandaloneActionMode: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable createFrom(io.reactivex.ObservableSource)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: int requestFusion(int)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void subscribeInner(io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.completable.CompletableAmb$Amb: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableReplay$UnBoundedFactory: io.reactivex.internal.operators.observable.ObservableReplay$ReplayBuffer call()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void innerError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void subscribeActual()
okio.Segment: okio.Segment split(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
okhttp3.ConnectionSpec: int hashCode()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void innerError(io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver,java.lang.Throwable)
androidx.core.widget.ScrollerCompat: int getFinalX()
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$2: CacheAndRemoteDistinctStrategy$2(com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy)
androidx.lifecycle.Transformations$2$1: Transformations$2$1(androidx.lifecycle.Transformations$2)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableZip: FlowableZip(org.reactivestreams.Publisher[],java.lang.Iterable,io.reactivex.functions.Function,int,boolean)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: boolean isCancelled()
com.xuexiang.xhttp2.model.ApiResult: com.xuexiang.xhttp2.model.ApiResult setMsg(java.lang.String)
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: void onComplete()
com.appspa.update.proxy.impl.DefaultUpdateChecker$3: DefaultUpdateChecker$3(com.appspa.update.proxy.impl.DefaultUpdateChecker,java.lang.String,com.appspa.update.proxy.IUpdateProxy)
okhttp3.RequestBody$1: void writeTo(okio.BufferedSink)
androidx.vectordrawable.R$dimen: R$dimen()
com.jakewharton.disklrucache.DiskLruCache$Entry: long access$1202(com.jakewharton.disklrucache.DiskLruCache$Entry,long)
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: void onComplete()
com.appspa.update.entity.DownloadEntity: com.appspa.update.entity.DownloadEntity setShowNotification(boolean)
androidx.core.app.Person: android.app.Person toAndroidPerson()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: CascadingMenuPopup$3$1(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder)
com.google.gson.internal.LinkedTreeMap$Node: int hashCode()
androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.demo.activity.MainActivity: MainActivity()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
com.xuexiang.xhttp2.request.CustomRequest$2: io.reactivex.ObservableSource apply(io.reactivex.Observable)
androidx.cursoradapter.widget.ResourceCursorAdapter: void setViewResource(int)
androidx.core.view.ViewCompat: boolean isOpaque(android.view.View)
androidx.core.widget.AutoScrollHelper$ClampedScroller: AutoScrollHelper$ClampedScroller()
okhttp3.Request: okhttp3.HttpUrl url()
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable: boolean isDisposed()
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: boolean getShowDefaultActivity()
androidx.fragment.app.FragmentController: void dispatchCreate()
androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: void remove()
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void onNext(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: double readDouble()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.widget.Toolbar$LayoutParams)
androidx.appcompat.app.AppCompatDelegateImpl$4: void onFitSystemWindows(android.graphics.Rect)
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: void schedule()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)
io.reactivex.internal.queue.MpscLinkedQueue: void clear()
io.reactivex.internal.functions.Functions$Array7Func: java.lang.Object apply(java.lang.Object)
androidx.customview.view.AbsSavedState: AbsSavedState()
io.reactivex.processors.SerializedProcessor: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable: MaybeTimer$TimerDisposable(io.reactivex.MaybeObserver)
io.reactivex.internal.util.NotificationLite: java.lang.Object disposable(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AppCompatDelegateImpl: void setHandleNativeActionModesEnabled(boolean)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: FlowableConcatMap$ConcatMapImmediate(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int)
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void subscribe(io.reactivex.ObservableSource[],int)
io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(int,java.lang.Runnable)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
androidx.loader.content.Loader: void onAbandon()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1: void run()
okhttp3.internal.http1.Http1Codec: void writeRequestHeaders(okhttp3.Request)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)
okio.Pipe$PipeSource: long read(okio.Buffer,long)
androidx.cursoradapter.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)
com.zhy.http.okhttp.OkHttpUtils$METHOD: OkHttpUtils$METHOD()
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: void cancel()
androidx.appcompat.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int)
io.reactivex.internal.functions.Functions$NotificationOnNext: void accept(java.lang.Object)
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
com.google.gson.annotations.JsonAdapter: boolean nullSafe()
com.appspa.update.widget.UpdateDialogActivity: boolean handleCompleted(java.io.File)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: void onTimeout(long)
androidx.fragment.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: ActionMenuPresenter$OpenOverflowRunnable(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup)
okhttp3.FormBody: void writeTo(okio.BufferedSink)
androidx.fragment.app.FragmentManagerImpl: int allocBackStackIndex(androidx.fragment.app.BackStackRecord)
com.xuexiang.xhttp2.cache.RxCache$6: java.lang.Object execute()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler io()
androidx.appcompat.widget.PopupMenu: void dismiss()
androidx.appcompat.widget.AbsActionBarView$1: void run()
androidx.appcompat.widget.DropDownListView: void clearPressedItem()
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.flowable.FlowableReplay: void resetIf(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuPopupHelper: int getGravity()
androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollY()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Flowable onAssembly(io.reactivex.Flowable)
com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
com.xuexiang.xhttp2.utils.Utils: boolean isScopedStorageMode()
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: void onComplete()
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean canReverse()
io.reactivex.internal.queue.SpscArrayQueue: void soElement(int,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: ObservableTakeUntil$TakeUntilMainObserver(io.reactivex.Observer)
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void cancel()
androidx.appcompat.view.menu.MenuWrapperICS: void clear()
androidx.customview.widget.ExploreByTouchHelper: boolean clickKeyboardFocusedVirtualView()
androidx.appcompat.view.menu.StandardMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()
com.jakewharton.disklrucache.DiskLruCache$Editor: void commit()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void cancel()
com.appspa.update.proxy.impl.DefaultUpdateParser: int checkUpdateStatus(int,int,java.lang.String)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.SingleObserver onSubscribe(io.reactivex.Single,io.reactivex.SingleObserver)
okhttp3.internal.platform.AndroidPlatform: boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: void onComplete()
androidx.core.view.ViewParentCompat: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: void onSuccess(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void drain()
io.reactivex.internal.operators.flowable.FlowableCache: void remove(io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription)
androidx.appcompat.widget.ForwardingListener: void onLongPress()
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isScrollable()
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableRepeatUntil: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int getCount()
androidx.core.view.animation.PathInterpolatorApi14: android.graphics.Path createQuad(float,float)
com.appspa.demo.utils.SettingSPUtils: boolean setServiceURL(java.lang.String)
androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)
androidx.loader.R$style: R$style()
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: io.reactivex.internal.operators.flowable.FlowableReplay$Node getHead()
androidx.appcompat.widget.Toolbar: void setContentInsetsRelative(int,int)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean offer(java.lang.Object)
okio.ByteString: int decodeHexDigit(char)
androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)
androidx.viewpager.widget.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
io.reactivex.internal.schedulers.DisposeOnCancel: java.lang.Object get()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()
androidx.appcompat.app.AppCompatDelegate: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.appspa.update._AppSpace: boolean onInstallApk(android.content.Context,java.io.File,com.appspa.update.entity.DownloadEntity)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast: void run()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
io.reactivex.internal.subscriptions.BasicQueueSubscription: java.lang.Object poll()
androidx.loader.content.CursorLoader: void cancelLoadInBackground()
io.reactivex.internal.subscribers.BlockingBaseSubscriber: void onComplete()
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: void remove()
androidx.fragment.app.FragmentTransitionImpl$3: FragmentTransitionImpl$3(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
androidx.appcompat.view.menu.ActionMenuItem: boolean requiresActionButton()
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onError(java.lang.Throwable)
com.google.gson.internal.LinkedHashTreeMap: java.lang.Object get(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableAmb$Amb: void onComplete()
androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: void dispose()
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest timeOut(long)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: int getCompoundPaddingLeft(int)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet,int)
androidx.versionedparcelable.VersionedParcel: android.util.Size readSize(android.util.Size,int)
androidx.core.view.NestedScrollingParent2: void onNestedScroll(android.view.View,int,int,int,int,int)
okio.Buffer: boolean isOpen()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void cancel()
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void onComplete()
com.xuexiang.xhttp2.cookie.CookieManager: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: void cancel()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.observables.ConnectableObservable onAssembly(io.reactivex.observables.ConnectableObservable)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: boolean add(io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription)
androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean setFrame(int,int,int,int)
com.jakewharton.disklrucache.DiskLruCache: com.jakewharton.disklrucache.DiskLruCache open(java.io.File,int,int,long)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.Menu getMenuWrapper(android.view.Menu)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$SingletonArrayFunc: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: void onComplete()
androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.reflect.PreJava9ReflectionAccessor: void makeAccessible(java.lang.reflect.AccessibleObject)
okhttp3.Address: okhttp3.HttpUrl url()
androidx.core.view.ViewCompat: float getRotation(android.view.View)
androidx.viewpager.widget.ViewPager: int getChildDrawingOrder(int,int)
androidx.fragment.app.Fragment: java.lang.Object getHost()
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
androidx.savedstate.SavedStateRegistry$SavedStateProvider: android.os.Bundle saveState()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: void dispose()
com.appspa.update.utils.UpdateUtils: boolean isAppOnForeground(android.content.Context)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: void disposeTimer()
androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean beforeDownstream()
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean getHintDisplayActionInline()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypefaceByIndex(int,int)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
com.jakewharton.disklrucache.DiskLruCache: com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String,long)
io.reactivex.internal.operators.observable.ObservableSubscribeOn: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.queue.SpscArrayQueue: SpscArrayQueue(int)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver(io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver)
android.support.v4.os.ResultReceiver$MyResultReceiver: ResultReceiver$MyResultReceiver(android.support.v4.os.ResultReceiver)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()
retrofit2.Utils$ParameterizedTypeImpl: int hashCode()
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuOpened(int)
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
io.reactivex.internal.observers.ForEachWhileObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: void onError(java.lang.Throwable)
androidx.fragment.app.Fragment: void performResume()
io.reactivex.internal.functions.Functions$EmptyAction: Functions$EmptyAction()
androidx.appcompat.widget.ToolbarWidgetWrapper$1: ToolbarWidgetWrapper$1(androidx.appcompat.widget.ToolbarWidgetWrapper)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void onError(java.lang.Throwable)
androidx.core.view.ViewCompat: int getLayerType(android.view.View)
io.reactivex.processors.ReplayProcessor: boolean add(io.reactivex.processors.ReplayProcessor$ReplaySubscription)
androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: void dispose()
androidx.core.app.NotificationManagerCompat: void deleteNotificationChannelGroup(java.lang.String)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$5: BaseTestConsumer$TestWaitStrategy$5(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void cancel()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)
retrofit2.OkHttpCall$NoContentResponseBody: okio.BufferedSource source()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.loader.content.AsyncTaskLoader$LoadTask: void run()
androidx.core.graphics.drawable.RoundedBitmapDrawable: float getCornerRadius()
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void onDrop(java.lang.Object)
androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.cookie.PersistentCookieStore: void addCookies(java.util.List)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void finishCreatingLoader()
androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,int,io.reactivex.internal.util.ErrorMode)
com.google.gson.Gson$4: java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)
androidx.appcompat.app.ActionBar: void removeAllTabs()
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: ObservableRetryPredicate$RepeatObserver(io.reactivex.Observer,long,io.reactivex.functions.Predicate,io.reactivex.internal.disposables.SequentialDisposable,io.reactivex.ObservableSource)
okhttp3.Address: java.util.List connectionSpecs()
androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuAdapter: MenuAdapter(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int)
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: FlowableTimeInterval$TimeIntervalSubscriber(org.reactivestreams.Subscriber,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: void onNext(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void showForSystem()
androidx.collection.CircularArray: java.lang.Object getFirst()
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: AndroidPlatform$AndroidTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14(androidx.core.view.ViewPropertyAnimatorCompat)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: void request(long)
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: boolean tryOnNext(java.lang.Object)
okio.Segment: Segment()
androidx.lifecycle.LifecycleRegistry: int getObserverCount()
okhttp3.internal.Version: java.lang.String userAgent()
okhttp3.Headers: void checkName(java.lang.String)
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.utils.Utils: android.net.Uri getDownloadFileUri(java.lang.String,java.lang.String,okhttp3.MediaType)
androidx.customview.widget.ExploreByTouchHelper: boolean performActionForChild(int,int,android.os.Bundle)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
com.google.gson.internal.bind.ArrayTypeAdapter: ArrayTypeAdapter(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void dispose()
io.reactivex.internal.observers.ConsumerSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: void dispose()
io.reactivex.schedulers.TestScheduler: long now(java.util.concurrent.TimeUnit)
io.reactivex.internal.queue.MpscLinkedQueue: io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode xchgProducerNode(io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode)
okhttp3.internal.http1.Http1Codec$AbstractSource: okio.Timeout timeout()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Parcelable onSaveInstanceState()
okhttp3.CacheControl: CacheControl(okhttp3.CacheControl$Builder)
androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()
androidx.fragment.app.FragmentTransitionImpl$1: void run()
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.android.MainThreadDisposable: void dispose()
androidx.appcompat.view.ActionMode: ActionMode()
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: void remove()
okio.Okio: okio.Sink appendingSink(java.io.File)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: FlowableSequenceEqual$EqualSubscriber(io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinatorHelper,int)
io.reactivex.internal.disposables.EmptyDisposable: boolean isEmpty()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.observers.FutureObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuBuilder: android.view.View getHeaderView()
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)
androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
io.reactivex.internal.schedulers.SingleScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: void onError(java.lang.Throwable)
androidx.loader.content.AsyncTaskLoader: void onForceLoad()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: ObservableWindowTimed$WindowExactUnboundedObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: void onComplete()
io.reactivex.internal.queue.MpscLinkedQueue: boolean offer(java.lang.Object)
io.reactivex.internal.operators.completable.CompletablePeek: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.subscriptions.ScalarSubscription: void cancel()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String feedbackTypeToString(int)
com.google.gson.internal.bind.JsonTreeReader: JsonTreeReader(com.google.gson.JsonElement)
com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.FragmentHostCallback: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.SearchView: void launchQuerySearch(int,java.lang.String,java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
androidx.versionedparcelable.VersionedParcel: boolean isStream()
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.lang.Enum read(com.google.gson.stream.JsonReader)
retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])
com.google.gson.internal.LazilyParsedNumber: int intValue()
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannels()
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setKey(java.lang.String)
androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()
com.google.gson.Gson: Gson()
androidx.core.text.TextUtilsCompat: java.lang.String htmlEncode(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
okio.ByteString: int lastIndexOf(byte[])
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: java.lang.Object poll()
io.reactivex.internal.util.BackpressureHelper: long produced(java.util.concurrent.atomic.AtomicLong,long)
io.reactivex.internal.util.QueueDrainHelper: boolean isCancelled(io.reactivex.functions.BooleanSupplier)
androidx.appcompat.app.WindowDecorActionBar: boolean shouldAnimateContextView()
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: void onComplete()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
com.appspa.update.utils.UpdateUtils: android.content.pm.PackageInfo getPackageInfo(android.content.Context)
androidx.core.text.BidiFormatter: BidiFormatter(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)
io.reactivex.internal.operators.completable.CompletableDoOnEvent$DoOnEvent: void onComplete()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.AssetFileDescriptor openRawResourceFd(int)
androidx.core.view.MenuItemCompat: androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
com.appspa.update.entity.DownloadEntity: long getSize()
androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOffset(int)
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void cancelSources()
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void run()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: VectorDrawableCommon()
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.view.menu.ActionMenuItem: boolean isVisible()
androidx.appcompat.widget.SearchView: boolean isSubmitButtonEnabled()
androidx.appcompat.widget.AppCompatButton: void drawableStateChanged()
com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object getValue()
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: void onNext(java.lang.Object)
androidx.loader.content.ModernAsyncTask$3: ModernAsyncTask$3(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable)
androidx.versionedparcelable.VersionedParcel: double readDouble()
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: ParallelFromPublisher$ParallelDispatcher(org.reactivestreams.Subscriber[],int)
androidx.appcompat.widget.LinearLayoutCompat: int measureNullChild(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
io.reactivex.internal.observers.ConsumerSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObserverResourceWrapper: boolean isDisposed()
io.reactivex.internal.schedulers.RxThreadFactory$RxCustomThread: RxThreadFactory$RxCustomThread(java.lang.Runnable,java.lang.String)
androidx.collection.SparseArrayCompat: boolean replace(int,java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: void cancel()
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[])
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void cancel()
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: MaybeIsEmptySingle$IsEmptyMaybeObserver(io.reactivex.SingleObserver)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspot(float,float)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.observers.SerializedObserver: void emitLoop()
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: void dispose()
androidx.appcompat.widget.SwitchCompat: void onDraw(android.graphics.Canvas)
io.reactivex.internal.functions.Functions$HashSetCallable: Functions$HashSetCallable(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: void dispose()
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: void request(long)
io.reactivex.internal.operators.single.SingleCache: boolean add(io.reactivex.internal.operators.single.SingleCache$CacheDisposable)
io.reactivex.internal.operators.flowable.FlowableObserveOn: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableElementAt: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleToObservable: SingleToObservable(io.reactivex.SingleSource)
androidx.fragment.app.Fragment$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.schedulers.TestScheduler$TimedRunnable: TestScheduler$TimedRunnable(io.reactivex.schedulers.TestScheduler$TestWorker,long,java.lang.Runnable,long)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void drain()
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: void dispose()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: boolean isNavigationVisible()
androidx.fragment.app.FragmentManagerImpl: void dispatchMultiWindowModeChanged(boolean)
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()
com.google.gson.internal.bind.TypeAdapters$31: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.appcompat.view.menu.ActionMenuItemView: void updateTextButtonVisibility()
androidx.core.util.LogWriter: void flushBuilder()
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: void slowPath(long)
androidx.versionedparcelable.VersionedParcel: double[] readDoubleArray()
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: void setDropDownViewTheme(android.content.res.Resources$Theme)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void onError(java.lang.Throwable)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.String toString()
androidx.fragment.app.FragmentPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.fragment.app.FragmentTransitionCompat21: void removeTarget(java.lang.Object,android.view.View)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean)
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: android.content.Context getActionBarThemedContext()
com.appspa.update.utils.UpdateUtils: java.lang.String getFileNameByDownloadUrl(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.Person getUser()
com.zhy.http.okhttp.builder.OkHttpRequestBuilder: OkHttpRequestBuilder()
com.google.gson.internal.bind.ArrayTypeAdapter$1: ArrayTypeAdapter$1()
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
androidx.core.widget.ContentLoadingProgressBar: void removeCallbacks()
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.bind.JsonTreeReader: void endObject()
okio.Util: void checkOffsetAndCount(long,long,long)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
io.reactivex.internal.util.VolatileSizeArrayList: boolean contains(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void innerNext(int,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$8: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.content.res.TypedArrayUtils: int getResourceId(android.content.res.TypedArray,int,int,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addState(int[],android.graphics.drawable.Drawable,int)
androidx.collection.ArrayMap: java.util.Set keySet()
io.reactivex.internal.operators.single.SingleDoOnSuccess$DoOnSuccess: SingleDoOnSuccess$DoOnSuccess(io.reactivex.internal.operators.single.SingleDoOnSuccess,io.reactivex.SingleObserver)
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: void dispose()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean canApplyTheme()
androidx.appcompat.app.AppCompatDelegate: boolean isCompatVectorFromResourcesEnabled()
androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$2: boolean test(com.xuexiang.xhttp2.cache.model.CacheResult)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)
okhttp3.Request: okhttp3.CacheControl cacheControl()
com.google.gson.JsonPrimitive: java.lang.String getAsString()
io.reactivex.internal.schedulers.SchedulerPoolFactory: void start()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: void requestOne()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer: void run()
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: boolean hasNext()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.fragment.app.FragmentManager: void setFragmentFactory(androidx.fragment.app.FragmentFactory)
org.aspectj.runtime.reflect.SignatureImpl: java.lang.Class extractType(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.appcompat.widget.ActionMenuPresenter: void setMenuView(androidx.appcompat.widget.ActionMenuView)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: void cancel()
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
com.google.gson.internal.bind.TypeAdapters$28: TypeAdapters$28()
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()
org.aspectj.runtime.reflect.StringMaker: java.lang.String makeKindName(java.lang.String)
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Object newFamily()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.core.util.Supplier: java.lang.Object get()
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
retrofit2.adapter.rxjava2.CallExecuteObservable: CallExecuteObservable(retrofit2.Call)
androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)
com.google.gson.internal.bind.TypeAdapters$26: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: void onError(java.lang.Throwable)
retrofit2.OkHttpCall: java.lang.Object clone()
androidx.activity.R: R()
androidx.appcompat.widget.ActivityChooserView$1: ActivityChooserView$1(androidx.appcompat.widget.ActivityChooserView)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: void throwIfCaught()
androidx.fragment.app.FragmentManagerImpl: java.lang.String toString()
io.reactivex.internal.functions.Functions$Array2Func: java.lang.Object apply(java.lang.Object)
androidx.core.os.LocaleListCompatWrapper: java.util.Locale getFirstMatch(java.lang.String[])
okio.Okio$1: void close()
io.reactivex.internal.operators.single.SingleError: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.provider.FontsContractCompat$5: FontsContractCompat$5()
androidx.versionedparcelable.VersionedParcelStream: void writeParcelable(android.os.Parcelable)
io.reactivex.internal.operators.maybe.MaybeError: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(int,int,okio.Source)
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
androidx.versionedparcelable.VersionedParcel: void writeArray(java.lang.Object[],int)
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: void onNext(java.lang.Object)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreFling(float,float)
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
androidx.appcompat.view.menu.MenuWrapperICS: boolean hasVisibleItems()
androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
com.appspa.demo.http.OKHttpUpdateHttpService: void asyncGet(java.lang.String,java.util.Map,com.appspa.update.proxy.IUpdateHttpService$Callback)
androidx.appcompat.widget.PopupMenu: int getGravity()
androidx.appcompat.view.menu.ActionMenuItemView: boolean showsIcon()
androidx.appcompat.widget.AppCompatImageHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
androidx.appcompat.widget.ForwardingListener: boolean pointInView(android.view.View,float,float,float)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: void onSuccess(java.lang.Object)
okhttp3.HttpUrl: java.lang.String encodedPath()
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int getViewTypeCount()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: void onComplete()
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform(java.lang.reflect.Method,java.lang.reflect.Method)
androidx.appcompat.widget.AppCompatSeekBarHelper: void setTickMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence)
okhttp3.OkHttpClient$1: OkHttpClient$1()
androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(int)
androidx.core.content.FileProvider$SimplePathStrategy: FileProvider$SimplePathStrategy(java.lang.String)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableCache: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.widget.ScrollerCompat: void notifyHorizontalEdgeReached(int,int,int)
androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)
com.google.gson.stream.JsonWriter: boolean getSerializeNulls()
com.google.gson.internal.ConstructorConstructor$5: ConstructorConstructor$5(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Type)
com.google.gson.internal.LinkedHashTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor()
androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int)
com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: CollectionTypeAdapterFactory$Adapter(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)
com.xuexiang.xhttp2.exception.ApiException: com.xuexiang.xhttp2.exception.ApiException handleException(java.lang.Throwable)
io.reactivex.internal.subscribers.LambdaSubscriber: LambdaSubscriber(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
androidx.collection.SimpleArrayMap: int indexOfNull()
com.google.gson.internal.Excluder: boolean isInnerClass(java.lang.Class)
androidx.fragment.app.FragmentTransition$2: void run()
okhttp3.Address: java.lang.String toString()
androidx.lifecycle.LiveData$AlwaysActiveObserver: LiveData$AlwaysActiveObserver(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
com.xuexiang.xhttp2.request.CustomRequest: com.xuexiang.xhttp2.request.BaseRequest build()
androidx.drawerlayout.R$dimen: R$dimen()
io.reactivex.internal.operators.flowable.FlowableWindowTimed: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.bind.TypeAdapters$16: java.lang.String read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.completable.CompletableConcatIterable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.processors.SerializedProcessor: SerializedProcessor(io.reactivex.processors.FlowableProcessor)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.single.SingleUsing: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Header$Listener access$100(okhttp3.internal.http2.Http2Stream)
androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
io.reactivex.internal.subscriptions.EmptySubscription: void error(java.lang.Throwable,org.reactivestreams.Subscriber)
com.google.gson.stream.JsonReader: void setLenient(boolean)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: void onComplete()
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void onError(java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow: boolean isConfirmKey(int)
androidx.appcompat.app.AppCompatDialog$1: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.xuexiang.xhttp2.interceptor.CacheInterceptor: CacheInterceptor(android.content.Context,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableRetryWhen$RetryWhenSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: FlowableCollect$CollectSubscriber(org.reactivestreams.Subscriber,java.lang.Object,io.reactivex.functions.BiConsumer)
androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)
io.reactivex.Flowable: io.reactivex.Flowable materialize()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder$Callback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.app.ToolbarActionBar: void setTitle(int)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: void startFirstTimeout(io.reactivex.ObservableSource)
com.xuexiang.xhttp2.R$string: R$string()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.lifecycle.ReportFragment$ActivityInitializationListener: void onStart()
androidx.versionedparcelable.VersionedParcel: void writeLongArray(long[])
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: void onError(java.lang.Throwable)
okio.SegmentedByteString: okio.ByteString toAsciiLowercase()
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.android.plugins.RxAndroidPlugins: RxAndroidPlugins()
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver: void onNext(java.lang.Object)
com.google.gson.JsonElement: com.google.gson.JsonNull getAsJsonNull()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: void dispose()
retrofit2.Retrofit$Builder: retrofit2.Retrofit build()
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: boolean cancel(boolean)
io.reactivex.internal.operators.maybe.MaybeCount: void subscribeActual(io.reactivex.SingleObserver)
androidx.fragment.app.FragmentManager: void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: void onComplete()
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: void onError(java.lang.Throwable)
org.aspectj.lang.reflect.NoSuchAdviceException: NoSuchAdviceException(java.lang.String)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: ScrollingTabContainerView$TabAdapter(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservablePublish$PublishSource: void subscribe(io.reactivex.Observer)
retrofit2.RequestFactory$Builder: java.util.Set parsePathParameters(java.lang.String)
okio.RealBufferedSink: okio.BufferedSink emit()
okio.Buffer: okio.Buffer writeShort(int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)
androidx.fragment.app.Fragment: boolean isAdded()
com.xuexiang.xhttp2.cache.RxCache: RxCache(com.xuexiang.xhttp2.cache.RxCache$Builder,com.xuexiang.xhttp2.cache.RxCache$1)
okhttp3.HttpUrl$Builder: int portColonOffset(java.lang.String,int,int)
com.google.gson.internal.LinkedTreeMap$KeySet: int size()
io.reactivex.internal.operators.flowable.FlowableElementAtSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.core.internal.view.SupportMenuItem: android.view.View getActionView()
androidx.appcompat.resources.R$id: R$id()
androidx.appcompat.app.WindowDecorActionBar: void setHideOffset(int)
com.appspa.update.service.DownloadService$FileDownloadCallBack: void dispatchOnStart()
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: androidx.appcompat.widget.ActivityChooserModel getDataModel()
androidx.core.view.accessibility.AccessibilityManagerCompat: AccessibilityManagerCompat()
com.zhy.http.okhttp.callback.FileCallBack: FileCallBack(java.lang.String,java.lang.String)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: void dispose()
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope valueOf(java.lang.String)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
okio.Timeout$1: okio.Timeout deadlineNanoTime(long)
androidx.core.app.ActivityOptionsCompat: android.os.Bundle toBundle()
io.reactivex.internal.operators.observable.BlockingObservableNext: java.util.Iterator iterator()
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: ParallelMapTry$ParallelMapTrySubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.internal.util.ListAddBiConsumer valueOf(java.lang.String)
androidx.fragment.app.Fragment$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.loader.content.AsyncTaskLoader$LoadTask: java.lang.Object doInBackground(java.lang.Void[])
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedReplayCallable: io.reactivex.observables.ConnectableObservable call()
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: SingleResumeNext$ResumeMainSingleObserver(io.reactivex.SingleObserver,io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableEmpty: java.lang.Object call()
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean collapseActionView()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: FlowableBuffer$PublisherBufferSkipSubscriber(org.reactivestreams.Subscriber,int,int,java.util.concurrent.Callable)
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: void cancel()
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStarted()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: boolean isDisposed()
androidx.core.content.res.ResourcesCompat$FontCallback$1: ResourcesCompat$FontCallback$1(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface)
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer: FlowableBufferTimed$BufferSkipBoundedSubscriber$RemoveFromBuffer(io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber,java.util.Collection)
androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)
io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction: SchedulerWhen$DelayedAction(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.google.gson.internal.bind.TypeAdapters$4: TypeAdapters$4()
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: void drain()
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: void request(long)
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: void tryTerminate()
androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
okhttp3.internal.ws.WebSocketReader: void readMessage()
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: FlowableTakeLast$TakeLastSubscriber(org.reactivestreams.Subscriber,int)
com.zhy.http.okhttp.OkHttpUtils: com.zhy.http.okhttp.builder.GetBuilder get()
androidx.core.widget.TintableCompoundButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: void otherComplete()
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedReplayCallable: java.lang.Object call()
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
androidx.appcompat.widget.TooltipPopup: void hide()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void onSetButtonDrawable()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void init(android.content.Context)
io.reactivex.schedulers.Timed: java.lang.String toString()
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind valueOf(java.lang.String)
com.xuexiang.xhttp2.request.BaseBodyRequest: okhttp3.RequestBody getRequestBody(com.xuexiang.xhttp2.model.HttpParams$FileWrapper)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: void onComplete()
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(int)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber(io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber)
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: void onSubscribe(io.reactivex.disposables.Disposable)
retrofit2.ParameterHandler$Query: ParameterHandler$Query(java.lang.String,retrofit2.Converter,boolean)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void dispatchLongPress()
androidx.drawerlayout.widget.DrawerLayout: boolean hasVisibleDrawer()
io.reactivex.observers.DisposableMaybeObserver: void dispose()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: ParallelJoin$JoinInnerSubscriber(io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase,int)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void innerError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setSpinEnabled(boolean)
androidx.core.view.DisplayCutoutCompat: java.lang.String toString()
androidx.core.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: void run()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
com.xuexiang.xhttp2.logs.HttpLog: void d(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeDefer: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer: void next(java.lang.Object)
androidx.core.graphics.ColorUtils: double calculateLuminance(int)
okhttp3.OkHttpClient: int pingIntervalMillis()
androidx.lifecycle.MediatorLiveData: MediatorLiveData()
androidx.appcompat.widget.SwitchCompat: void setSwitchTextAppearance(android.content.Context,int)
com.google.gson.JsonPrimitive: boolean isIntegral(com.google.gson.JsonPrimitive)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification)
okio.Segment: okio.Segment pop()
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: ObservableFromIterable$FromIterableDisposable(io.reactivex.Observer,java.util.Iterator)
androidx.appcompat.widget.Toolbar$3: void onClick(android.view.View)
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: void onComplete()
androidx.appcompat.app.AlertController$5: AlertController$5(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.fragment.app.FragmentTabHost: void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[])
androidx.core.app.ShareCompat$IntentReader: boolean isMultipleShare()
okio.Okio$3: void write(okio.Buffer,long)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void cancel()
okio.RealBufferedSource: short readShort()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableEmpty: ObservableEmpty()
io.reactivex.internal.subscribers.LambdaSubscriber: void request(long)
androidx.collection.LongSparseArray: void remove(long)
okio.RealBufferedSource: void skip(long)
io.reactivex.parallel.ParallelFlowable: boolean validate(org.reactivestreams.Subscriber[])
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: void cancel()
io.reactivex.internal.util.LinkedArrayList: java.lang.Object[] head()
com.xuexiang.xhttp2.cache.RxCache: android.content.Context access$1400(com.xuexiang.xhttp2.cache.RxCache)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void onComplete()
okio.Segment: void writeTo(okio.Segment,int)
okio.Buffer: okio.Timeout timeout()
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void innerCloseError(java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow$3: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context,java.lang.String)
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function identity()
io.reactivex.disposables.CompositeDisposable: boolean remove(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: CompletablePeek$CompletableObserverImplementation(io.reactivex.internal.operators.completable.CompletablePeek,io.reactivex.CompletableObserver)
androidx.loader.content.ModernAsyncTask: java.lang.Object postResult(java.lang.Object)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setUpdateContent(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: void drain()
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: void close()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)
androidx.core.view.ViewCompat: void setZ(android.view.View,float)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.cursoradapter.widget.SimpleCursorAdapter: SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)
com.xuexiang.xhttp2.exception.ServerException: java.lang.String getMessage()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void cancelAllBut(int)
retrofit2.KotlinExtensions$await$4$2: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: int getVerticalOffset()
androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)
io.reactivex.observers.SerializedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.https.HttpsUtils$UnSafeTrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)
com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTint(int)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()
org.aspectj.runtime.reflect.SignatureImpl: int extractInt(int)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.loader.content.ModernAsyncTask: android.os.Handler getHandler()
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor sign(boolean)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1: java.lang.Object next()
okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
androidx.cursoradapter.widget.SimpleCursorAdapter: int getStringConversionColumn()
androidx.core.app.JobIntentService: void setInterruptIfStopped(boolean)
okhttp3.Route: int hashCode()
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getSubtitle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: int requestFusion(int)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: ObservableMergeWithMaybe$MergeWithObserver(io.reactivex.Observer)
androidx.customview.widget.FocusStrategy: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)
com.xuexiang.xhttp2.cache.RxCache: com.xuexiang.xhttp2.cache.RxCache$Builder newBuilder()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void run()
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void onComplete()
androidx.core.view.WindowInsetsCompat: java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat)
org.aspectj.runtime.internal.PerObjectMap: PerObjectMap()
com.google.gson.internal.bind.JsonTreeReader: double nextDouble()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: FlowableFlatMapSingle$FlatMapSingleSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int)
androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)
com.xuexiang.xhttp2.XHttp: android.content.Context getContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: boolean isDisposed()
okhttp3.internal.platform.JdkWithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder generateNonExecutableJson()
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
com.xuexiang.xhttp2.utils.PathUtils: boolean isMediaDocument(android.net.Uri)
retrofit2.Utils: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
io.reactivex.internal.operators.completable.CompletableResumeNext: void subscribeActual(io.reactivex.CompletableObserver)
okio.Buffer: java.lang.String readString(java.nio.charset.Charset)
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
com.google.gson.JsonObject: java.util.Set keySet()
com.appspa.update.widget.NumberProgressBar: void calculateDrawRectFWithoutProgressText()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setCacheDir(java.lang.String)
androidx.versionedparcelable.VersionedParcelStream: void writeStrongBinder(android.os.IBinder)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: void onNext(java.lang.Object)
okio.RealBufferedSink: okio.BufferedSink write(okio.ByteString)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
androidx.appcompat.widget.DropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.graphics.drawable.StateListDrawable: void updateStateFromTypedArray(android.content.res.TypedArray)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver(io.reactivex.Observer,java.util.concurrent.Callable,java.util.concurrent.Callable)
io.reactivex.subjects.AsyncSubject: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.appcompat.view.menu.ListMenuItemView: boolean prefersCondensedTitle()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationFailed()
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.flowables.GroupedFlowable: GroupedFlowable(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
androidx.customview.widget.FocusStrategy: int getWeightedDistanceFor(int,int)
androidx.loader.content.Loader$OnLoadCanceledListener: void onLoadCanceled(androidx.loader.content.Loader)
okhttp3.internal.http2.Http2Connection$4: void execute()
io.reactivex.internal.operators.completable.CompletableDetach: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: void onComplete()
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: java.lang.Object getValue()
io.reactivex.subjects.CompletableSubject: void onComplete()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
io.reactivex.internal.subscribers.BlockingSubscriber: void request(long)
androidx.appcompat.widget.SwitchCompat: int[] onCreateDrawableState(int)
okio.RealBufferedSource: long readDecimalLong()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String)
androidx.appcompat.widget.DecorToolbar: void setIcon(int)
io.reactivex.internal.operators.observable.ObservableMap$MapObserver: void onNext(java.lang.Object)
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest cacheTime(long)
androidx.fragment.app.Fragment: Fragment(int)
io.reactivex.internal.util.ExceptionHelper: boolean addThrowable(java.util.concurrent.atomic.AtomicReference,java.lang.Throwable)
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1: java.util.Map$Entry next()
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: TypeAdapterRuntimeTypeWrapper(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type)
okhttp3.internal.http2.Http2Connection: void sendDegradedPingLater()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: FlowableSwitchMapCompletable$SwitchMapCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Function,boolean)
androidx.versionedparcelable.VersionedParcelStream: android.os.Parcelable readParcelable()
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.core.os.TraceCompat: TraceCompat()
androidx.versionedparcelable.VersionedParcel: android.os.Bundle readBundle(android.os.Bundle,int)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast: void subscribeActual(io.reactivex.Observer)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isCanceled()
com.xuexiang.xhttp2.annotation.NetMethod: java.lang.String[] parameterNames()
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void otherSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: boolean isDisposed()
com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.net.InetAddress)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: boolean isDisposed()
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscription: void cancel()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers()
androidx.appcompat.view.ActionMode: void invalidate()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(int)
retrofit2.adapter.rxjava2.CallExecuteObservable$CallDisposable: CallExecuteObservable$CallDisposable(retrofit2.Call)
com.appspa.update.widget.NumberProgressBar: float getUnreachedBarHeight()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setExclusive(boolean)
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getIntrinsicWidth()
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void onNext(java.lang.Object)
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableDelay$Delay: CompletableDelay$Delay(io.reactivex.CompletableObserver,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)
androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()
android.support.v4.os.IResultReceiver$Stub$Proxy: IResultReceiver$Stub$Proxy(android.os.IBinder)
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: void accept(java.lang.Object)
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: void onSuccess(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.os.BuildCompat: boolean isAtLeastP()
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterConditionalSubscriber: ParallelFilterTry$ParallelFilterConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Predicate,io.reactivex.functions.BiFunction)
androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void innerError(io.reactivex.internal.observers.InnerQueuedObserver,java.lang.Throwable)
androidx.core.widget.TintableCompoundDrawablesView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findJvmPlatform()
androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: MaybeCallbackObserver(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.vectordrawable.animated.R$id: R$id()
okio.ForwardingTimeout: okio.Timeout delegate()
com.appspa.update.proxy.impl.DefaultUpdateParser: com.appspa.update.entity.UpdateEntity parseJson(java.lang.String)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: io.reactivex.ObservableEmitter serialize()
androidx.core.app.ActivityCompat$1: void run()
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler callRequireNonNull(java.util.concurrent.Callable)
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object addShortcuts(java.util.List)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
com.xuexiang.xhttp2.model.ExpiredInfo: int getExpiredType()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: void dispose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean onStateChanged(int[])
io.reactivex.internal.util.VolatileSizeArrayList: VolatileSizeArrayList()
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setShowAsAction(int)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
androidx.appcompat.widget.ListPopupWindow$3: void onNothingSelected(android.widget.AdapterView)
androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: void onNext(java.lang.Object)
io.reactivex.internal.schedulers.ScheduledRunnable: void run()
androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.cookie.CookieManager getCookieJar()
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
io.reactivex.internal.schedulers.InstantPeriodicTask: java.lang.Void call()
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)
androidx.appcompat.app.AppCompatCallback: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: boolean isDisposed()
io.reactivex.internal.util.NotificationLite: java.lang.String toString()
retrofit2.Retrofit: retrofit2.CallAdapter nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.ToolbarActionBar: int getTabCount()
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayFunction: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSkipUntil: void subscribeActual(io.reactivex.Observer)
io.reactivex.subjects.UnicastSubject: void drainNormal(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableCreate$DropAsyncEmitter: void onOverflow()
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)
androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: void onComplete()
androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)
androidx.appcompat.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.fragment.app.FragmentController: void dispatchLowMemory()
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int)
okhttp3.HttpUrl: int port()
okhttp3.Request: Request(okhttp3.Request$Builder)
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()
com.appspa.update.widget.NumberProgressBar: void setReachedBarHeight(float)
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: void onComplete()
androidx.appcompat.widget.Toolbar: boolean showOverflowMenu()
io.reactivex.internal.operators.single.SingleCache: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: void onError(java.lang.Throwable)
androidx.collection.MapCollections: void colClear()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getHorizontalOriginalOffset()
androidx.appcompat.widget.ActivityChooserView: void setExpandActivityOverflowButtonContentDescription(int)
io.reactivex.observers.DisposableSingleObserver: boolean isDisposed()
io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction: void call(io.reactivex.Scheduler$Worker,io.reactivex.CompletableObserver)
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
io.reactivex.internal.functions.Functions$ToMultimapKeyValueSelector: void accept(java.lang.Object,java.lang.Object)
androidx.viewpager.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()
io.reactivex.internal.subscriptions.AsyncSubscription: AsyncSubscription(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: void onNext(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: FingerprintManagerCompat$AuthenticationResult(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
com.appspa.update.utils.FileUtils: boolean isFileExists(java.io.File)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ItemDelayFunction: org.reactivestreams.Publisher apply(java.lang.Object)
androidx.appcompat.view.ActionMode: android.view.MenuInflater getMenuInflater()
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: void dispose()
androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
androidx.appcompat.widget.SearchView$5: SearchView$5(androidx.appcompat.widget.SearchView)
io.reactivex.internal.observers.EmptyCompletableObserver: boolean hasCustomOnError()
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.DecorToolbar: android.view.Menu getMenu()
androidx.core.os.LocaleListPlatformWrapper: int hashCode()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
okhttp3.internal.ws.RealWebSocket: void runWriter()
io.reactivex.internal.operators.single.SingleCreate$Emitter: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe: void subscribeActual(io.reactivex.MaybeObserver)
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String extractString(int)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: void request(long)
androidx.fragment.app.FragmentController: void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
org.aspectj.internal.lang.reflect.TypePatternImpl: java.lang.String toString()
androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator: void cancel()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
okio.Okio: boolean isAndroidGetsocknameError(java.lang.AssertionError)
androidx.core.view.inputmethod.InputConnectionCompat$1: InputConnectionCompat$1(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
io.reactivex.internal.operators.parallel.ParallelFilter: int parallelism()
androidx.viewpager.widget.ViewPager: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.loader.content.Loader: void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener)
androidx.appcompat.widget.DecorContentParent: java.lang.CharSequence getTitle()
androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)
androidx.fragment.app.FragmentTransitionImpl$2: void run()
androidx.core.widget.NestedScrollView: void scrollTo(int,int)
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer: void complete()
org.aspectj.internal.lang.reflect.DeclareSoftImpl: org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void setIsLongpressEnabled(boolean)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okhttp3.MediaType contentType()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: java.lang.String toString()
androidx.core.view.GestureDetectorCompat: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
okhttp3.internal.http2.Http2Connection: boolean pushedStream(int)
androidx.viewpager.widget.PagerTitleStrip: int getMinHeight()
androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)
androidx.collection.SparseArrayCompat: boolean isEmpty()
okio.RealBufferedSink: java.lang.String toString()
com.zhy.http.okhttp.builder.PostFormBuilder$FileInput: java.lang.String toString()
androidx.appcompat.app.ActionBar: float getElevation()
com.appspa.update.widget.UpdateDialog: void initUpdateInfo(com.appspa.update.entity.UpdateEntity)
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: void trim(long,io.reactivex.internal.queue.SpscLinkedArrayQueue)
androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)
androidx.appcompat.view.menu.MenuBuilder: void dispatchSaveInstanceState(android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)
okhttp3.internal.cache.DiskLruCache: void flush()
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] remove(android.app.Activity)
androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$1: CacheAndRemoteDistinctStrategy$1(com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy)
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long)
okhttp3.internal.Util: java.util.List immutableList(java.util.List)
androidx.fragment.app.Fragment: void callStartTransitionListener()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean)
retrofit2.ParameterHandler$RelativeUrl: ParameterHandler$RelativeUrl(java.lang.reflect.Method,int)
okio.SegmentedByteString: okio.ByteString md5()
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$1: java.lang.Object apply(java.lang.Object)
androidx.appcompat.app.ActionBarDrawerToggle: void toggle()
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: ParallelSortedJoin$SortedJoinSubscription(org.reactivestreams.Subscriber,int,java.util.Comparator)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.widget.TooltipCompatHandler: void show(boolean)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String)
androidx.collection.LruCache: int missCount()
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getDisabledMessage()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void request(long)
androidx.appcompat.view.menu.MenuHelper: void dismiss()
com.appspa.update.utils.ApkUtils: int getInstallLocation()
io.reactivex.internal.subscriptions.ScalarSubscription: int requestFusion(int)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri getContentUri()
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: boolean isDisposed()
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: io.reactivex.subscribers.TestSubscriber$EmptySubscriber[] values()
androidx.fragment.app.Fragment$SavedState$1: Fragment$SavedState$1()
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: boolean isDisposed()
io.reactivex.internal.subscriptions.SubscriptionArbiter: void cancel()
io.reactivex.internal.operators.observable.ObservableInterval: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)
com.appspa.update.logs.UpdateLog: void d(java.lang.String)
androidx.collection.LruCache: void trimToSize(int)
io.reactivex.internal.operators.observable.ObservableGroupBy$State: void onComplete()
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.content.res.Resources$Theme getDropDownViewTheme()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver: void onSuccess(java.lang.Object)
androidx.customview.R$integer: R$integer()
androidx.core.text.util.LinkifyCompat: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: void onComplete()
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
okio.ByteString: int size()
androidx.core.view.ViewCompat: void setOverScrollMode(android.view.View,int)
androidx.appcompat.widget.ListPopupWindow: void setDropDownAlwaysVisible(boolean)
androidx.appcompat.widget.Toolbar: boolean isTitleTruncated()
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: long produced(long)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context)
androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)
com.xuexiang.xhttp2.model.HttpHeaders: void clear()
org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: void onComplete()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri)
com.zhy.http.okhttp.request.OkHttpRequest: void appendHeaders()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: boolean isNavigationVisible()
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: void clear(java.util.Deque)
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler parseParameter(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],boolean)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationRepeat(android.view.animation.Animation)
com.xuexiang.xhttp2.cache.model.CacheResult: java.lang.Object getData()
androidx.appcompat.app.ActionBar: void removeTab(androidx.appcompat.app.ActionBar$Tab)
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: void dispose()
com.google.gson.internal.Excluder: java.lang.Object clone()
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: boolean isDisposed()
com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType: BaseBodyRequest$UploadType(java.lang.String,int)
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)
androidx.core.text.BidiFormatter$Builder: void initialize(boolean)
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void dispose()
com.google.gson.FieldAttributes: java.lang.reflect.Type getDeclaredType()
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: void onComplete()
androidx.appcompat.widget.AppCompatSpinner: void drawableStateChanged()
androidx.core.internal.view.SupportMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
com.google.gson.internal.bind.TypeAdapters$5: java.lang.Number read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: void run()
io.reactivex.internal.operators.observable.ObservableRange: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.view.LayoutInflater getDropDownViewInflater()
com.google.gson.JsonElement: java.math.BigInteger getAsBigInteger()
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: void dispose()
androidx.viewpager.widget.PagerTabStrip$1: PagerTabStrip$1(androidx.viewpager.widget.PagerTabStrip)
androidx.appcompat.widget.ListPopupWindow: int getAnimationStyle()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveItem(int)
okhttp3.Cookie: java.lang.String path()
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
io.reactivex.subscribers.DisposableSubscriber: void onStart()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$2: java.lang.Object apply(java.lang.Object,java.lang.Object)
androidx.customview.widget.ViewDragHelper: int getEdgeSize()
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: CursorAdapter$ChangeObserver(androidx.cursoradapter.widget.CursorAdapter)
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String toString()
io.reactivex.internal.subscribers.QueueDrainSubscriber: java.lang.Throwable error()
io.reactivex.observers.SerializedObserver: boolean isDisposed()
androidx.core.content.FileProvider: FileProvider()
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okio.Buffer: okio.BufferedSink writeDecimalLong(long)
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: SingleToFlowable$SingleToFlowableObserver(org.reactivestreams.Subscriber)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
com.appspa.update.UpdateManager: com.appspa.update.proxy.IUpdateHttpService getIUpdateHttpService()
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerInner: ObservableInternalHelper$FlatMapWithCombinerInner(io.reactivex.functions.BiFunction,java.lang.Object)
com.xuexiang.xhttp2.model.XHttpRequest: long getTimeout()
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)
androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.fragment.app.FragmentManagerViewModel: void onCleared()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.viewpager.widget.PagerAdapter: int getCount()
com.appspa.update.entity.PromptEntity: com.appspa.update.entity.PromptEntity setIgnoreDownloadError(boolean)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context)
androidx.collection.CircularIntArray: void addLast(int)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
retrofit2.Platform$Android$MainThreadExecutor: void execute(java.lang.Runnable)
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver(io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver)
okhttp3.internal.cache.CacheInterceptor$1: CacheInterceptor$1(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
android.support.v4.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int)
io.reactivex.internal.operators.observable.ObservableDistinct: ObservableDistinct(io.reactivex.ObservableSource,io.reactivex.functions.Function,java.util.concurrent.Callable)
io.reactivex.schedulers.TestScheduler$TestWorker: long now(java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
com.google.gson.internal.bind.TypeAdapters$25: java.lang.Object read(com.google.gson.stream.JsonReader)
com.appspa.update.service.DownloadService$FileDownloadCallBack: int patchApk(android.content.Context,java.io.File,java.lang.String)
androidx.versionedparcelable.VersionedParcel: void writeByte(byte,int)
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: CompletableTakeUntilCompletable$TakeUntilMainObserver(io.reactivex.CompletableObserver)
androidx.collection.ContainerHelpers: int idealLongArraySize(int)
androidx.core.app.ActivityRecreator$3: ActivityRecreator$3(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: WindowDecorActionBar$ActionModeImpl(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)
androidx.core.view.ViewCompat: android.graphics.Rect getClipBounds(android.view.View)
androidx.appcompat.graphics.drawable.StateListDrawable: void clearMutated()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String typeToString(int)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: void innerError(io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver,java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)
androidx.appcompat.widget.AppCompatSeekBarHelper: AppCompatSeekBarHelper(android.widget.SeekBar)
okhttp3.RealCall: okhttp3.EventListener access$000(okhttp3.RealCall)
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: void onNext(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)
io.reactivex.internal.operators.single.SingleLift: void subscribeActual(io.reactivex.SingleObserver)
com.google.gson.stream.JsonReader: boolean hasNext()
okhttp3.HttpUrl$Builder: int effectivePort()
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void innerError(java.lang.Throwable)
io.reactivex.exceptions.CompositeException: java.lang.String getMessage()
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: void onNext(java.lang.Object)
androidx.appcompat.app.ToolbarActionBar$2: boolean onMenuItemClick(android.view.MenuItem)
io.reactivex.processors.MulticastProcessor: void drain()
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okio.AsyncTimeout: boolean exit()
com.xuexiang.xhttp2.model.HttpHeaders: void put(com.xuexiang.xhttp2.model.HttpHeaders)
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: MaybeConcatArray$ConcatMaybeObserver(org.reactivestreams.Subscriber,io.reactivex.MaybeSource[])
androidx.customview.R$drawable: R$drawable()
androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
com.jakewharton.disklrucache.StrictLineReader: java.nio.charset.Charset access$000(com.jakewharton.disklrucache.StrictLineReader)
org.aspectj.lang.NoAspectBoundException: NoAspectBoundException(java.lang.String,java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: void truncate()
androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: void onError(java.lang.Throwable)
androidx.core.util.Pools$Pool: java.lang.Object acquire()
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: FlowableRange$BaseRangeSubscription(int,int)
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: android.net.Uri getContentUri()
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: ObservableReplay$SizeAndTimeBoundReplayBuffer(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: void onSuccess(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)
io.reactivex.internal.observers.ConsumerSingleObserver: ConsumerSingleObserver(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
com.appspa.update.widget.NumberProgressBar: void setPrefix(java.lang.String)
androidx.activity.R$style: R$style()
io.reactivex.internal.operators.single.SingleDelay$Delay: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: long getCurrentBytes()
androidx.appcompat.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void collect(java.util.Collection)
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: void onComplete()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: void dispose()
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableToList: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)
com.xuexiang.xhttp2.model.HttpParams$FileWrapper: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: boolean isDisposed()
androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.reactivex.internal.operators.parallel.ParallelReduce: int parallelism()
androidx.appcompat.view.ContextThemeWrapper: int getThemeResId()
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: void request()
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput build()
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: android.content.Context getActionBarThemedContext()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean hasRunningLoaders()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: android.view.View getCustomView()
androidx.fragment.app.DialogFragment: int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor: void subscribe(org.reactivestreams.Subscriber)
okhttp3.Handshake: boolean equals(java.lang.Object)
io.reactivex.internal.observers.QueueDrainObserver: boolean enter()
io.reactivex.internal.disposables.EmptyDisposable: EmptyDisposable(java.lang.String,int)
androidx.savedstate.Recreator$SavedStateProvider: void add(java.lang.String)
androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: java.lang.Object poll()
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void recalcViewsWithUnhandled()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
okhttp3.EventListener: EventListener()
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
okhttp3.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.RealCall,okhttp3.Callback)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
io.reactivex.internal.operators.observable.BlockingObservableMostRecent: java.util.Iterator iterator()
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: boolean isDisposed()
com.google.gson.FieldAttributes: java.lang.String getName()
androidx.loader.content.ModernAsyncTask: ModernAsyncTask()
androidx.vectordrawable.animated.R$attr: R$attr()
androidx.core.widget.ScrollerCompat: int getFinalY()
androidx.appcompat.content.res.AppCompatResources: void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
org.aspectj.internal.lang.reflect.PointcutExpressionImpl: java.lang.String asString()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setVisibility(int)
androidx.fragment.app.Fragment: int hashCode()
androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.appcompat.app.AlertController$CheckedItemAdapter: boolean hasStableIds()
androidx.appcompat.app.AlertController: void setView(android.view.View)
com.zhy.http.okhttp.https.HttpsUtils: HttpsUtils()
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
androidx.appcompat.app.AppCompatDelegate: void onDestroy()
com.xuexiang.xhttp2.cache.RxCache: RxCache(com.xuexiang.xhttp2.cache.RxCache$Builder)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: AccessibilityNodeInfoCompat$CollectionInfoCompat(java.lang.Object)
io.reactivex.internal.observers.BasicIntQueueDisposable: int requestFusion(int)
io.reactivex.disposables.RunnableDisposable: void onDisposed(java.lang.Runnable)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void cancel()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$4: void accept(java.lang.Object)
io.reactivex.internal.operators.single.SingleTakeUntil: void subscribeActual(io.reactivex.SingleObserver)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: ObservableMapNotification$MapNotificationObserver(io.reactivex.Observer,io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()
com.appspa.update.widget.NumberProgressBar: void initializePainters()
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(int,int,boolean)
androidx.core.graphics.ColorUtils: int constrain(int,int,int)
okio.Buffer: java.lang.String readUtf8LineStrict()
io.reactivex.internal.observers.LambdaObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: void onComplete()
com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
androidx.appcompat.widget.AppCompatCheckedTextView: void drawableStateChanged()
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: void onNext(java.lang.Object)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl: boolean isLongpressEnabled()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: void cancel()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)
androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
okhttp3.ConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void clearAutoSizeConfiguration()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: void drainLoop()
okio.ByteString: int indexOf(okio.ByteString)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void truncate()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.functions.Functions$MaxRequestSubscription: Functions$MaxRequestSubscription()
okio.Buffer: void readFully(okio.Buffer,long)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor)
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: void cancel()
androidx.core.widget.ScrollerCompat: int getCurrX()
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: SingleScheduler$ScheduledWorker(java.util.concurrent.ScheduledExecutorService)
io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription: FlowableRange$RangeSubscription(org.reactivestreams.Subscriber,int,int)
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.view.GestureDetectorCompat: boolean onTouchEvent(android.view.MotionEvent)
androidx.versionedparcelable.VersionedParcelParcel: float readFloat()
okio.SegmentedByteString: byte[] internalArray()
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setPatchDownloadEntity(com.appspa.update.entity.DownloadEntity)
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: MaybeFilter$FilterMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Predicate)
retrofit2.OkHttpCall: okhttp3.Request request()
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: ObservableTakeLast$TakeLastObserver(io.reactivex.Observer,int)
androidx.versionedparcelable.VersionedParcel: void writeFloat(float)
androidx.core.widget.NestedScrollView: void recycleVelocityTracker()
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: void onError(java.lang.Throwable)
androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.util.EmptyComponent: io.reactivex.Observer asObserver()
androidx.appcompat.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
org.aspectj.lang.reflect.NoSuchPointcutException: NoSuchPointcutException(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: int getGroupId()
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: FlowableFlattenIterable$FlattenIterableSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
androidx.viewpager.R$style: R$style()
okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)
com.google.gson.TypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[])
androidx.appcompat.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
okio.DeflaterSink: void flush()
io.reactivex.subjects.ReplaySubject: void remove(io.reactivex.subjects.ReplaySubject$ReplayDisposable)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
androidx.core.app.NotificationManagerCompat: void cancelAll()
androidx.appcompat.view.menu.MenuDialogHelper: MenuDialogHelper(androidx.appcompat.view.menu.MenuBuilder)
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1(retrofit2.Call)
okhttp3.OkHttpClient: int callTimeoutMillis()
com.google.gson.DefaultDateTypeAdapter: DefaultDateTypeAdapter(java.lang.Class,java.lang.String)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: okhttp3.internal.platform.AndroidPlatform$CloseGuard get()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapSingleObserver: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver: void onComplete()
androidx.appcompat.widget.SearchView: void onVoiceClicked()
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
io.reactivex.internal.util.EndConsumerHelper: EndConsumerHelper()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
androidx.appcompat.view.menu.BaseMenuPresenter: void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: ObservableWindow$WindowExactObserver(io.reactivex.Observer,long,int)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.content.Context,android.os.Handler,int)
io.reactivex.internal.util.NotificationLite: io.reactivex.disposables.Disposable getDisposable(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: char getShortcut()
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.bind.TypeAdapters$25: TypeAdapters$25()
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver(io.reactivex.SingleObserver,io.reactivex.SingleSource)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder disableHtmlEscaping()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowTitleEnabled(boolean)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)
com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: android.content.Context getActionBarThemedContext()
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getExitFadeDuration()
okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: DeferredScalarSubscription(org.reactivestreams.Subscriber)
androidx.core.view.NestedScrollingChild: void stopNestedScroll()
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription: FlowableRange$RangeConditionalSubscription(io.reactivex.internal.fuseable.ConditionalSubscriber,int,int)
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
com.appspa.update.utils.ApkUtils: boolean isSystemApplication(android.content.pm.PackageManager,java.lang.String)
io.reactivex.internal.operators.observable.ObservableGenerate: void subscribeActual(io.reactivex.Observer)
io.reactivex.plugins.RxJavaPlugins: org.reactivestreams.Subscriber onSubscribe(io.reactivex.Flowable,org.reactivestreams.Subscriber)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: void onNext(java.lang.Object)
com.appspa.update.service.DownloadService: android.app.NotificationManager access$400(com.appspa.update.service.DownloadService)
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
okhttp3.internal.platform.Platform: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void disposeInner()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
io.reactivex.internal.operators.single.SingleContains$ContainsSingleObserver: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()
androidx.fragment.app.FragmentController: void dispatchStart()
io.reactivex.internal.observers.DeferredScalarDisposable: void error(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: void onError(java.lang.Throwable)
io.reactivex.disposables.CompositeDisposable: void dispose()
androidx.appcompat.widget.Toolbar$2: Toolbar$2(androidx.appcompat.widget.Toolbar)
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterSubscriber: void onComplete()
com.zhy.http.okhttp.utils.Platform: void execute(java.lang.Runnable)
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: void cancel()
com.appspa.update._AppSpace: boolean isPrompterShow(java.lang.String)
com.google.gson.JsonStreamParser: JsonStreamParser(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: void onError(java.lang.Throwable)
androidx.collection.CircularArray: CircularArray(int)
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: void cancel()
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView: boolean needsDividerAfter()
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm: int checkRtl(java.lang.CharSequence,int,int)
okhttp3.HttpUrl: java.util.List encodedPathSegments()
io.reactivex.internal.subscribers.QueueDrainSubscriberPad0: QueueDrainSubscriberPad0()
io.reactivex.internal.operators.maybe.MaybeToPublisher: org.reactivestreams.Publisher apply(io.reactivex.MaybeSource)
okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
androidx.appcompat.widget.ListPopupWindow: java.lang.Object getSelectedItem()
androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int,int,int)
io.reactivex.internal.schedulers.AbstractDirectTask: AbstractDirectTask(java.lang.Runnable)
androidx.viewpager.widget.ViewPager: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()
androidx.appcompat.app.AppCompatDelegateImpl$7: AppCompatDelegateImpl$7(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.widget.DecorToolbar: int getVisibility()
androidx.versionedparcelable.VersionedParcelStream: boolean readBoolean()
androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)
okhttp3.Cache$CacheResponseBody$1: void close()
io.reactivex.internal.observers.LambdaObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.schedulers.Schedulers$SingleTask: Schedulers$SingleTask()
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.bind.CollectionTypeAdapterFactory: CollectionTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)
io.reactivex.internal.functions.Functions$MaxRequestSubscription: void accept(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: void onComplete()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationStart(android.view.View)
androidx.core.graphics.PathSegment: float getStartFraction()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int,java.lang.Object[])
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: void onComplete()
androidx.annotation.InspectableProperty$FlagEntry: java.lang.String name()
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: ComputationScheduler$FixedSchedulerPool(int,java.util.concurrent.ThreadFactory)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setPromptText(java.lang.CharSequence)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object[] newArray(int)
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent[] getIntents()
androidx.appcompat.view.menu.ListMenuPresenter: void setItemIndexOffset(int)
io.reactivex.internal.operators.maybe.MaybeFromCompletable: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: SingleTimer$TimerDisposable(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: void cancel()
androidx.core.view.ScrollingView: int computeHorizontalScrollOffset()
androidx.appcompat.view.WindowCallbackWrapper: void onAttachedToWindow()
io.reactivex.internal.functions.Functions$JustValue: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy: CacheAndRemoteDistinctStrategy()
androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: void subscribeNext()
androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: void onComplete()
androidx.appcompat.app.AppCompatDelegateImpl$5: void onDetachedFromWindow()
androidx.core.view.ViewCompat: void setRotationY(android.view.View,float)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object removeShortcuts(java.util.List)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setProgress(float)
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void fail(java.lang.Throwable,org.reactivestreams.Subscriber,io.reactivex.internal.fuseable.SimpleQueue)
androidx.lifecycle.LiveData$ObserverWrapper: void detachObserver()
com.appspa.update.proxy.impl.DefaultUpdateChecker: void onAfterCheck()
androidx.appcompat.widget.Toolbar$2: void run()
io.reactivex.internal.util.MergerBiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.text.util.LinkifyCompat$1: LinkifyCompat$1()
com.google.gson.internal.reflect.ReflectionAccessor: com.google.gson.internal.reflect.ReflectionAccessor getInstance()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getXml(int)
androidx.collection.ArraySet$1: ArraySet$1(androidx.collection.ArraySet)
androidx.viewpager.widget.ViewPager: void onAttachedToWindow()
com.appspa.update.service.DownloadService$FileDownloadCallBack$4: DownloadService$FileDownloadCallBack$4(com.appspa.update.service.DownloadService$FileDownloadCallBack,java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription: void slowPath(long)
com.appspa.update.widget.WeakFileDownloadListener: boolean onCompleted(java.io.File)
androidx.appcompat.app.AppCompatDialog: android.view.View findViewById(int)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21$1: FragmentTransitionCompat21$1(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl: ThreadStackFactoryImpl$ThreadCounterImpl()
androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
okhttp3.CipherSuite: java.lang.String javaName()
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,okio.Source[],long[])
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void afterDownstream()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void innerValue(boolean,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)
androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)
okhttp3.HttpUrl: boolean percentEncoded(java.lang.String,int,int)
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.http2.Http2Reader: int lengthWithoutPadding(int,byte,short)
androidx.appcompat.widget.ListPopupWindow: void show()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: void onComplete()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence)
com.xuexiang.xhttp2.model.XHttpRequest: java.lang.String getUrl(java.lang.Class)
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: java.lang.Integer poll()
io.reactivex.observers.SafeObserver: void onError(java.lang.Throwable)
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityEventCompat: void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
androidx.appcompat.widget.PopupMenu: android.view.View$OnTouchListener getDragToOpenListener()
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: void dispose()
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[])
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: void onNext(java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: android.os.Parcelable onSaveInstanceState()
androidx.loader.app.LoaderManagerImpl: LoaderManagerImpl(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: void cancel()
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)
com.appspa.update.widget.NumberProgressBar: void setProgress(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.subscribers.TestSubscriber: TestSubscriber(org.reactivestreams.Subscriber,long)
com.xuexiang.xhttp2.model.HttpParams: com.xuexiang.xhttp2.model.HttpParams put(java.lang.String,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.widget.LinearLayoutCompat: void onDraw(android.graphics.Canvas)
com.google.gson.JsonPrimitive: java.math.BigInteger getAsBigInteger()
io.reactivex.internal.functions.Functions$ClassFilter: boolean test(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void onComplete()
androidx.appcompat.widget.ActivityChooserModel: void persistHistoricalDataIfNeeded()
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: AppCompatTextHelper$ApplyTextViewCallback(androidx.appcompat.widget.AppCompatTextHelper,int,int)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: void cancel()
androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.appcompat.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
androidx.versionedparcelable.VersionedParcel: char[] readCharArray(char[],int)
androidx.appcompat.app.AppCompatDelegateImpl: void attachBaseContext(android.content.Context)
androidx.core.view.DragStartHelper: boolean onLongClick(android.view.View)
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewAttachedToWindow(android.view.View)
io.reactivex.subjects.PublishSubject$PublishDisposable: void dispose()
com.xuexiang.xhttp2.cache.stategy.OnlyCacheStrategy: io.reactivex.Observable execute(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,long,io.reactivex.Observable,java.lang.reflect.Type)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void onSuccess(okhttp3.ResponseBody)
androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)
com.zhy.http.okhttp.cookie.store.MemoryCookieStore: MemoryCookieStore()
io.reactivex.Flowable: io.reactivex.Flowable switchIfEmpty(org.reactivestreams.Publisher)
androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
androidx.appcompat.widget.ResourcesWrapper: int getColor(int)
androidx.core.app.JobIntentService$JobWorkEnqueuer: JobIntentService$JobWorkEnqueuer(android.content.Context,android.content.ComponentName,int)
androidx.core.widget.ContentLoadingProgressBar: void onAttachedToWindow()
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)
retrofit2.Invocation: java.lang.reflect.Method method()
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: ParallelReduce$ParallelReduceSubscriber(org.reactivestreams.Subscriber,java.lang.Object,io.reactivex.functions.BiFunction)
com.appspa.update.UpdateManager$Builder: void update()
com.jakewharton.disklrucache.DiskLruCache: void deleteIfExists(java.io.File)
androidx.fragment.app.Fragment: void setNextAnim(int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getContentDescription()
androidx.core.content.ContextCompat: java.io.File[] getObbDirs(android.content.Context)
androidx.appcompat.view.menu.MenuBuilder$Callback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
com.google.gson.JsonDeserializer: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: int requestFusion(int)
androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()
androidx.fragment.app.FragmentManagerState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop: void accept(java.lang.Object)
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
io.reactivex.schedulers.TestScheduler$TestWorker: boolean isDisposed()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void execute()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDropdownItemCount()
androidx.annotation.InspectableProperty$FlagEntry: int mask()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged()
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void innerComplete(io.reactivex.internal.subscribers.InnerQueuedSubscriber)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.http1.Http1Codec$ChunkedSource: void readChunkSize()
androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase)
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation)
androidx.fragment.app.FragmentController: void dispatchPause()
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: void onComplete()
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
androidx.appcompat.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)
com.google.gson.JsonPrimitive: long getAsLong()
androidx.core.os.LocaleListCompatWrapper: LocaleListCompatWrapper(java.util.Locale[])
okhttp3.Cookie$Builder: okhttp3.Cookie build()
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription: void drain()
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)
org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: void onNext(java.lang.Object)
com.xuexiang.xhttp2.cache.RxCache$1: io.reactivex.ObservableSource apply(io.reactivex.Observable)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: ActionMenuItemView$ActionMenuItemForwardingListener(androidx.appcompat.view.menu.ActionMenuItemView)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver: void onComplete()
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
retrofit2.ParameterHandler$Tag: ParameterHandler$Tag(java.lang.Class)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.observers.BasicFuseableObserver: boolean beforeDownstream()
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void cancelAll()
androidx.appcompat.app.WindowDecorActionBar: void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.core.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeZipIterable: void subscribeActual(io.reactivex.MaybeObserver)
com.appspa.update.AppSpace: com.appspa.update.AppSpace setOnUpdateFailureListener(com.appspa.update.listener.OnUpdateFailureListener)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: java.lang.Object poll()
com.xuexiang.xhttp2.https.HttpsUtils$MyTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.String getName()
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.app.AppCompatDelegate: void markStopped(androidx.appcompat.app.AppCompatDelegate)
okio.Timeout: long timeoutNanos()
com.xuexiang.xhttp2.annotation.NetMethod: java.lang.String url()
okio.RealBufferedSource$1: RealBufferedSource$1(okio.RealBufferedSource)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasExpandedActionView()
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState()
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader: com.xuexiang.xhttp2.subsciber.impl.OnProgressCancelListener access$000(com.xuexiang.xhttp2.subsciber.ProgressDialogLoader)
okhttp3.Dispatcher: void enqueue(okhttp3.RealCall$AsyncCall)
androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object)
okhttp3.MediaType: java.lang.String subtype()
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: void onComplete()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: boolean isEmpty()
androidx.appcompat.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsIfNeeded()
com.google.gson.TypeAdapter: void toJson(java.io.Writer,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(java.lang.CharSequence)
okhttp3.internal.cache2.Relay$RelaySource: void close()
io.reactivex.internal.operators.flowable.FlowableSingleSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: boolean hasMipMap()
androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: void remove(io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: long getItemId(int)
androidx.appcompat.widget.RtlSpacingHelper: int getEnd()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()
okhttp3.Route: java.net.InetSocketAddress socketAddress()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEmpty()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewCollapsed()
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: SingleDoFinally$DoFinallyObserver(io.reactivex.SingleObserver,io.reactivex.functions.Action)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okio.RealBufferedSource: okio.Timeout timeout()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
io.reactivex.subjects.PublishSubject$PublishDisposable: void onNext(java.lang.Object)
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
io.reactivex.internal.subscribers.BoundedSubscriber: void request(long)
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1: LinkedHashTreeMap$EntrySet$1(com.google.gson.internal.LinkedHashTreeMap$EntrySet)
androidx.appcompat.widget.TintContextWrapper: TintContextWrapper(android.content.Context)
androidx.fragment.app.FragmentManagerImpl$4: FragmentManagerImpl$4(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColorized(boolean)
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: void onComplete()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: com.xuexiang.xhttp2.callback.CallBack access$000(com.xuexiang.xhttp2.subsciber.DownloadSubscriber)
androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)
com.appspa.update.proxy.impl.DefaultPrompterProxyImpl: void backgroundDownload()
com.xuexiang.xhttp2.subsciber.BaseSubscriber: BaseSubscriber()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getActionSymbolicName(int)
androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)
com.google.gson.internal.$Gson$Types: java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: ObservableGenerate$GeneratorDisposable(io.reactivex.Observer,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer,java.lang.Object)
io.reactivex.internal.subscriptions.SubscriptionArbiter: boolean isCancelled()
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
androidx.appcompat.app.AlertController$AlertParams$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
io.reactivex.internal.util.AppendOnlyLinkedArrayList: void add(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.core.app.NotificationCompatSideChannelService: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.appcompat.widget.ListPopupWindow: boolean isModal()
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: void dispose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.appcompat.app.AlertController: boolean canTextInput(android.view.View)
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation)
androidx.appcompat.view.menu.MenuAdapter: boolean getForceShowIcon()
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: void onSuccess(java.lang.Object)
okhttp3.HttpUrl: java.util.Set queryParameterNames()
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient: void changeCursor(android.database.Cursor)
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
io.reactivex.disposables.CompositeDisposable: void dispose(io.reactivex.internal.util.OpenHashSet)
androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.fragment.app.Fragment$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.reactivex.internal.operators.observable.ObservableReplay$Node: ObservableReplay$Node(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
androidx.viewpager.widget.PagerTabStrip$2: void onClick(android.view.View)
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
androidx.appcompat.view.CollapsibleActionView: void onActionViewCollapsed()
androidx.core.text.PrecomputedTextCompat: char charAt(int)
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeAmb: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.view.ScrollingView: int computeVerticalScrollOffset()
androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)
com.zhy.http.okhttp.OkHttpUtils: void sendFailResultCallback(okhttp3.Call,java.lang.Exception,com.zhy.http.okhttp.callback.Callback,int)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void onError(java.lang.Throwable)
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
com.xuexiang.xhttp2.cache.core.BaseDiskCache: BaseDiskCache()
androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)
androidx.appcompat.view.menu.MenuBuilder: MenuBuilder(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: java.lang.Object index()
com.google.gson.JsonDeserializationContext: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okio.BufferedSource source()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float)
androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: ComputationScheduler$EventLoopWorker(io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void otherError(java.lang.Throwable)
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
androidx.core.os.LocaleListInterface: java.lang.Object getLocaleList()
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: void onError(java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: boolean readField(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.app.ToolbarActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerAfter()
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: boolean isDisposed()
retrofit2.OkHttpCall: okhttp3.Call getRawCall()
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: MaybeIsEmpty$IsEmptyMaybeObserver(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable[] values()
com.google.gson.internal.bind.TimeTypeAdapter: TimeTypeAdapter()
androidx.appcompat.widget.DropDownListView: boolean isInTouchMode()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.cache.DiskLruCache$3: void remove()
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: void cancel()
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
com.xuexiang.xhttp2.subsciber.CallBackSubscriber: void onSuccess(java.lang.Object)
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()
androidx.appcompat.widget.SearchView: void onSearchClicked()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: void run()
androidx.appcompat.widget.SwitchCompat: void jumpDrawablesToCurrentState()
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber: ParallelFilterTry$BaseFilterSubscriber(io.reactivex.functions.Predicate,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: ObservableGroupJoin$LeftRightEndObserver(io.reactivex.internal.operators.observable.ObservableGroupJoin$JoinSupport,boolean,int)
org.aspectj.internal.lang.reflect.StringToType: StringToType()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShowAsActionFlags(int)
com.appspa.update.widget.UpdateDialog: com.appspa.update.widget.UpdateDialog setIPrompterProxy(com.appspa.update.proxy.IPrompterProxy)
io.reactivex.internal.operators.flowable.FlowableReplay$Node: FlowableReplay$Node(java.lang.Object,long)
androidx.fragment.app.FragmentHostCallback: boolean onShouldShowRequestPermissionRationale(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.appspa.demo.utils.NotifyUtils: void openNotifyPermissionSetting(android.content.Context)
okhttp3.internal.http2.Http2Reader: int readMedium(okio.BufferedSource)
io.reactivex.observers.DisposableCompletableObserver: DisposableCompletableObserver()
okhttp3.Cookie: long parseExpires(java.lang.String,int,int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: FlowableBufferTimed$BufferExactBoundedSubscriber(org.reactivestreams.Subscriber,java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,int,boolean,io.reactivex.Scheduler$Worker)
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: void dispose()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.graphics.drawable.DrawableContainer: int getOpacity()
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: void dispose()
androidx.core.content.pm.ActivityInfoCompat: ActivityInfoCompat()
com.xuexiang.xhttp2.cache.stategy.NoStrategy: io.reactivex.Observable execute(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,long,io.reactivex.Observable,java.lang.reflect.Type)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
io.reactivex.disposables.CompositeDisposable: void clear()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void onNext(java.lang.Object)
okhttp3.OkHttpClient$1: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
androidx.core.view.ViewPropertyAnimatorCompat$2: ViewPropertyAnimatorCompat$2(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: void releasePermission()
io.reactivex.internal.util.MergerBiFunction: java.util.List apply(java.util.List,java.util.List)
io.reactivex.observables.GroupedObservable: GroupedObservable(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void setNavigationMode(int)
com.appspa.update.R$interpolator: R$interpolator()
com.google.gson.FieldNamingPolicy$1: FieldNamingPolicy$1(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: void drain()
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: void onError(java.lang.Throwable)
okio.SegmentedByteString: void write(okio.Buffer)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: void onNext(java.lang.Object)
androidx.core.os.OperationCanceledException: OperationCanceledException(java.lang.String)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void disposeInner()
androidx.fragment.app.FragmentFactory: FragmentFactory()
androidx.core.widget.NestedScrollView: void ensureGlows()
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable: void subscribeActual(io.reactivex.CompletableObserver)
com.xuexiang.xhttp2.annotation.RequestParams: long cacheTime()
okio.Buffer: long writeAll(okio.Source)
androidx.appcompat.view.SupportActionModeWrapper: android.view.Menu getMenu()
androidx.appcompat.app.ToolbarActionBar: boolean isTitleTruncated()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: void dispose()
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: void cancel()
io.reactivex.internal.schedulers.SchedulerPoolFactory$SystemPropertyAccessor: java.lang.Object apply(java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionCancel(android.transition.Transition)
com.appspa.update.utils.ColorUtils: boolean isColorDark(int)
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair: boolean releaseSlot()
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void onError(java.lang.Throwable)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: void request(long)
okhttp3.Dispatcher: void executed(okhttp3.RealCall)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean requestIsUnrepeatable(java.io.IOException,okhttp3.Request)
androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)
androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)
io.reactivex.internal.observers.QueueDrainObserver: void fastPathEmit(java.lang.Object,boolean,io.reactivex.disposables.Disposable)
androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)
androidx.appcompat.widget.ResourceManagerInternal: ResourceManagerInternal()
io.reactivex.internal.operators.parallel.ParallelFilter: void subscribe(org.reactivestreams.Subscriber[])
androidx.appcompat.widget.ViewUtils: ViewUtils()
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: boolean isDisposed()
androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)
androidx.drawerlayout.widget.DrawerLayout: android.view.View findOpenDrawer()
com.xuexiang.xhttp2.cache.RxCache$Builder: android.content.Context access$000(com.xuexiang.xhttp2.cache.RxCache$Builder)
androidx.fragment.app.FragmentTransition$4: FragmentTransition$4(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect)
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: void onComplete()
androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuItemImpl: boolean requestsActionButton()
androidx.core.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingApplicationIcon()
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: java.lang.Object enterTransform(java.lang.Object)
com.google.gson.DefaultDateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.BasicIntQueueDisposable: boolean isEmpty()
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: void onSuccess(java.lang.Object)
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getOpacity()
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void onComplete()
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
okhttp3.Cache$1: void update(okhttp3.Response,okhttp3.Response)
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: void onSubscribe(org.reactivestreams.Subscription)
okio.ByteString: int lastIndexOf(okio.ByteString)
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: RequestBuilder$ContentTypeOverridingRequestBody(okhttp3.RequestBody,okhttp3.MediaType)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: boolean offer(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable[] values()
androidx.customview.R$color: R$color()
androidx.appcompat.view.menu.MenuPopupHelper: void setGravity(int)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnError: void accept(java.lang.Object)
okhttp3.internal.http1.Http1Codec: okio.Sink newChunkedSink()
okio.Okio$2: void close()
androidx.viewpager.widget.PagerAdapter: java.lang.CharSequence getPageTitle(int)
androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)
androidx.core.provider.FontRequest: int getCertificatesArrayResId()
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: ProgressLoadingSubscriber()
com.google.gson.internal.LinkedTreeMap: java.lang.Object remove(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String)
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$NextObserver: CompletableAndThenCompletable$NextObserver(java.util.concurrent.atomic.AtomicReference,io.reactivex.CompletableObserver)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.xuexiang.xhttp2.model.HttpParams: void put(java.lang.String,java.io.InputStream,java.lang.String,com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack)
androidx.viewpager.widget.PagerTabStrip: PagerTabStrip(android.content.Context,android.util.AttributeSet)
io.reactivex.disposables.ReferenceDisposable: void dispose()
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback: void onFontRetrieved(android.graphics.Typeface)
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerClosed(android.view.View)
androidx.appcompat.view.menu.ActionMenuItem: ActionMenuItem(android.content.Context,int,int,int,int,java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ActionMenuPresenter: boolean hideSubMenus()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)
com.google.gson.JsonElement: java.lang.String getAsString()
io.reactivex.internal.operators.observable.ObservableReplay$ReplayBufferSupplier: ObservableReplay$ReplayBufferSupplier(int)
io.reactivex.disposables.SubscriptionDisposable: void onDisposed(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()
androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: MaybeDoOnEvent$DoOnEventMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.BiConsumer)
com.google.gson.stream.JsonWriter: void newline()
com.appspa.update.entity.UpdateEntity$1: com.appspa.update.entity.UpdateEntity createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.appspa.update.entity.PromptEntity: float getHeightRatio()
com.appspa.update.widget.UpdateDialogFragment: void showInstallButton()
androidx.core.graphics.PathParser: boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)
androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()
androidx.appcompat.widget.AppCompatHintHelper: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View)
com.appspa.demo.custom.CustomUpdateParser: com.appspa.update.entity.UpdateEntity parseJson(java.lang.String)
io.reactivex.internal.operators.observable.ObservableReplay$DisposeConsumer: ObservableReplay$DisposeConsumer(io.reactivex.internal.operators.observable.ObserverResourceWrapper)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
io.reactivex.exceptions.CompositeException$WrappedPrintStream: CompositeException$WrappedPrintStream(java.io.PrintStream)
com.xuexiang.xhttp2.cache.RxCache$3: java.lang.Boolean execute()
androidx.versionedparcelable.VersionedParcel: int[] readIntArray(int[],int)
io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt: io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt[] values()
androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: void onComplete()
okhttp3.Headers: java.lang.String value(int)
androidx.loader.content.Loader: void onForceLoad()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: void onComplete()
io.reactivex.internal.subscriptions.SubscriptionArbiter: void drainLoop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.flowable.FlowableError: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()
androidx.versionedparcelable.VersionedParcelStream: VersionedParcelStream(java.io.InputStream,java.io.OutputStream)
okhttp3.internal.http1.Http1Codec: okio.Sink createRequestBody(okhttp3.Request,long)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: FlowableInternalHelper$RequestMax(java.lang.String,int)
io.reactivex.internal.observers.InnerQueuedObserver: void setDone()
com.appspa.update.widget.UpdateDialogFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
io.reactivex.processors.UnicastProcessor: UnicastProcessor(int,java.lang.Runnable)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void innerComplete(io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver)
androidx.appcompat.widget.TooltipCompatHandler: boolean onLongClick(android.view.View)
com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelRunOn$MultiWorkerCallback: void onWorker(int,io.reactivex.Scheduler$Worker)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController: android.view.ViewGroup resolvePanel(android.view.View,android.view.View)
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: FlowableTakeUntilPredicate$InnerSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Predicate)
okio.Buffer: void readFully(byte[])
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object frameworkGet(android.view.View)
androidx.core.os.ConfigurationCompat: ConfigurationCompat()
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: void setVerticalOffset(int)
io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver: CompletableTimeout$TimeOutObserver(io.reactivex.disposables.CompositeDisposable,java.util.concurrent.atomic.AtomicBoolean,io.reactivex.CompletableObserver)
io.reactivex.internal.subscribers.FutureSubscriber: boolean cancel(boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasFocus()
io.reactivex.subjects.SingleSubject$SingleDisposable: boolean isDisposed()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Region getTransparentRegion()
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isInTouchMode()
com.google.gson.JsonArray: boolean getAsBoolean()
io.reactivex.subjects.SerializedSubject: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: void innerComplete(io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver)
okhttp3.internal.ws.RealWebSocket$1: void run()
androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()
okio.Buffer: okio.ByteString snapshot(int)
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: void run()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int lookForSelectablePosition(int,boolean)
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,java.lang.CharSequence)
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initIoScheduler(java.util.concurrent.Callable)
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void dispose()
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: void request(long)
androidx.fragment.app.DialogFragment: int getTheme()
androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: void onComplete()
io.reactivex.internal.functions.Functions$ActionConsumer: void accept(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator: boolean win(int)
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)
androidx.core.view.ViewCompat$5: ViewCompat$5(int,java.lang.Class,int)
androidx.appcompat.view.menu.CascadingMenuPopup$1: void onGlobalLayout()
androidx.appcompat.app.AlertController: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable)
okhttp3.internal.http1.Http1Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.appspa.update.utils.FileUtils: boolean isPublicPath(java.io.File)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: void onComplete()
com.google.gson.internal.LinkedTreeMap$KeySet$1: LinkedTreeMap$KeySet$1(com.google.gson.internal.LinkedTreeMap$KeySet)
com.google.gson.FieldNamingPolicy$5: FieldNamingPolicy$5(java.lang.String,int)
androidx.appcompat.widget.ActionMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.resources.R$integer: R$integer()
androidx.collection.LongSparseArray: java.lang.Object putIfAbsent(long,java.lang.Object)
androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: void disposeResourceAfter()
androidx.appcompat.widget.AppCompatDrawableManager: AppCompatDrawableManager()
com.appspa.update.widget.WeakFileDownloadListener: WeakFileDownloadListener(com.appspa.update.widget.IDownloadEventHandler)
io.reactivex.internal.operators.flowable.FlowableSkip: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.observers.BasicFuseableObserver: void afterDownstream()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
android.support.v4.os.IResultReceiver$Stub: android.os.IBinder asBinder()
com.google.gson.JsonPrimitive: com.google.gson.JsonPrimitive deepCopy()
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void disposeOther()
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: void onNext(java.lang.Object)
io.reactivex.subscribers.DisposableSubscriber: DisposableSubscriber()
retrofit2.BuiltInConverters$ToStringConverter: java.lang.Object convert(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)
okio.RealBufferedSink: okio.BufferedSink writeHexadecimalUnsignedLong(long)
androidx.core.graphics.TypefaceCompatApi24Impl: TypefaceCompatApi24Impl()
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.app.Person: java.lang.String getKey()
androidx.appcompat.graphics.drawable.DrawableContainer$1: void run()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: BaseTestConsumer$TestWaitStrategy(java.lang.String,int)
io.reactivex.internal.subscriptions.BasicQueueSubscription: void cancel()
okhttp3.Request: okhttp3.Headers headers()
io.reactivex.internal.operators.flowable.FlowableFromPublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
androidx.core.graphics.PathSegment: android.graphics.PointF getEnd()
androidx.customview.widget.ViewDragHelper$1: float getInterpolation(float)
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context)
com.appspa.demo.R$bool: R$bool()
androidx.fragment.app.FragmentFactory: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getEnterFadeDuration()
com.google.gson.internal.$Gson$Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray getCapturedKeys()
com.zhy.http.okhttp.builder.PostFormBuilder: PostFormBuilder()
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: ObservablePublish$PublishObserver(java.util.concurrent.atomic.AtomicReference)
androidx.core.widget.TextViewCompat: int getMinLines(android.widget.TextView)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle: void subscribeActual(io.reactivex.SingleObserver)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ZipIterableFunction: java.lang.Object apply(java.lang.Object)
com.jakewharton.disklrucache.DiskLruCache: java.io.Writer access$000(com.jakewharton.disklrucache.DiskLruCache)
androidx.loader.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)
okhttp3.internal.http1.Http1Codec$ChunkedSource: void close()
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.google.gson.stream.JsonWriter: void string(java.lang.String)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: void setActionBarDescription(int)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void innerComplete()
okhttp3.ConnectionPool: void put(okhttp3.internal.connection.RealConnection)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.viewpager.widget.PagerTabStrip: void setBackgroundColor(int)
io.reactivex.internal.operators.observable.ObservableTakeWhile: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.core.view.GestureDetectorCompat: boolean isLongpressEnabled()
com.xuexiang.xhttp2.model.ApiResult: java.lang.Object getData()
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: ObservableRange$RangeDisposable(io.reactivex.Observer,long,long)
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableRetryWhen: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableSerialized: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)
okhttp3.internal.io.FileSystem$1: FileSystem$1()
androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: boolean isEmpty()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)
androidx.core.view.ViewCompat: float getPivotX(android.view.View)
androidx.loader.content.CursorLoader: void deliverResult(java.lang.Object)
androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)
androidx.core.app.NotificationCompatExtras: NotificationCompatExtras()
androidx.appcompat.widget.DecorContentParent: void setWindowCallback(android.view.Window$Callback)
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
io.reactivex.Notification: io.reactivex.Notification createOnError(java.lang.Throwable)
okhttp3.CertificatePinner$Pin: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.NamedRunnable: void run()
okhttp3.internal.http1.Http1Codec$AbstractSource: Http1Codec$AbstractSource(okhttp3.internal.http1.Http1Codec)
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: void innerComplete(io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setBot(boolean)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver: MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver(io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setBadgeIconType(int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: void onNext(java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()
io.reactivex.internal.disposables.DisposableHelper: boolean dispose(java.util.concurrent.atomic.AtomicReference)
androidx.core.app.NotificationCompat$WearableExtender: NotificationCompat$WearableExtender()
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler single()
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: boolean isDisposed()
okio.Segment: Segment(byte[],int,int,boolean,boolean)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: void drop()
org.aspectj.internal.lang.reflect.SignaturePatternImpl: java.lang.String asString()
androidx.loader.content.CursorLoader: java.lang.Object loadInBackground()
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
com.appspa.update._AppSpace: void setCheckUrlStatus(java.lang.String,boolean)
com.appspa.update.widget.UpdateDialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: ObservableCount$CountObserver(io.reactivex.Observer)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
com.jakewharton.disklrucache.DiskLruCache: boolean remove(java.lang.String)
io.reactivex.subjects.SingleSubject: SingleSubject()
androidx.appcompat.app.ActionBar: android.view.View getCustomView()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleToFlowable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action build()
io.reactivex.subscribers.DefaultSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.DecorToolbar: void setCollapsible(boolean)
io.reactivex.internal.operators.observable.ObservableFromUnsafeSource: void subscribeActual(io.reactivex.Observer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScreenReaderFocusable()
com.xuexiang.xhttp2.utils.Utils: java.lang.String getExtPicturesPath()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: long getItemId(int)
androidx.appcompat.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.Fragment: void noteStateNotSaved()
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableFromCallable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener: boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent)
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: void onNext(java.lang.Object)
io.reactivex.observers.ResourceMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getUserDisplayName()
okhttp3.internal.http.HttpHeaders: int skipWhitespace(java.lang.String,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: DiskLruCache$Editor$FaultHidingOutputStream(com.jakewharton.disklrucache.DiskLruCache$Editor,java.io.OutputStream,com.jakewharton.disklrucache.DiskLruCache$1)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: void drain()
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void drain()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: void onComplete()
io.reactivex.subscribers.DefaultSubscriber: void request(long)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context)
androidx.appcompat.widget.DecorToolbar: void setHomeButtonEnabled(boolean)
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintList(android.content.res.ColorStateList)
com.appspa.update.service.DownloadService: void access$500(com.appspa.update.service.DownloadService,com.appspa.update.entity.DownloadEntity)
androidx.collection.ArrayMap: java.util.Collection values()
androidx.appcompat.view.menu.CascadingMenuPopup: int getInitialMenuPosition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean isStateful()
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: FlowableMergeWithMaybe$MergeWithObserver(org.reactivestreams.Subscriber)
com.google.gson.stream.JsonScope: JsonScope()
androidx.versionedparcelable.VersionedParcelStream: void writeFloat(float)
androidx.customview.widget.ViewDragHelper: int computeAxisDuration(int,int,int)
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.AppCompatBackgroundHelper: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()
io.reactivex.internal.subscriptions.EmptySubscription: int requestFusion(int)
androidx.appcompat.widget.ActionBarOverlayLayout$3: void run()
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
com.google.gson.internal.bind.JsonTreeWriter$1: void close()
io.reactivex.internal.functions.Functions$EmptyAction: java.lang.String toString()
androidx.appcompat.widget.Toolbar: void addChildrenForExpandedActionView()
io.reactivex.internal.operators.observable.ObservableGroupBy$State: ObservableGroupBy$State(int,io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver,java.lang.Object,boolean)
androidx.appcompat.view.ActionMode$Callback: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: boolean isEmpty()
androidx.appcompat.view.menu.MenuWrapperICS: void setQwertyMode(boolean)
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: int requestFusion(int)
androidx.viewpager.widget.PagerTabStrip: void setDrawFullUnderline(boolean)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isTitleTruncated()
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: BlockingFlowableIterable$BlockingFlowableIterator(int)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: java.lang.Object[] newArray(int)
androidx.core.view.InputDeviceCompat: InputDeviceCompat()
androidx.core.os.LocaleListPlatformWrapper: LocaleListPlatformWrapper(android.os.LocaleList)
com.google.gson.Gson$3: Gson$3()
androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver: MaybeTimeoutMaybe$TimeoutOtherMaybeObserver(io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: FlowableConcatMap$BaseConcatMapSubscriber(io.reactivex.functions.Function,int)
io.reactivex.internal.schedulers.ImmediateThinScheduler$ImmediateThinWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.core.provider.SelfDestructiveThread: int getGeneration()
com.google.gson.internal.bind.TypeAdapters$7: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
retrofit2.Platform: int defaultConverterFactoriesSize()
com.google.gson.DefaultDateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: void cancel()
com.appspa.update.entity.UpdateError: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl: java.lang.String getTypeString(java.lang.String,java.lang.Class[])
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object set(int,java.lang.Object)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeToFlowable: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context)
androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(char[],int,int)
androidx.fragment.app.Fragment$SavedState: Fragment$SavedState(android.os.Bundle)
io.reactivex.subscribers.ResourceSubscriber: void onStart()
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.jakewharton.disklrucache.DiskLruCache$Entry: DiskLruCache$Entry(com.jakewharton.disklrucache.DiskLruCache,java.lang.String,com.jakewharton.disklrucache.DiskLruCache$1)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: void signalConsumer()
com.appspa.update.entity.DownloadEntity: com.appspa.update.entity.DownloadEntity setDownloadUrl(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void toggle()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: void run()
io.reactivex.internal.operators.flowable.FlowableFromCallable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: void onComplete()
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$ValueType valueType()
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: boolean isDisposed()
androidx.core.view.NestedScrollingChild2: boolean hasNestedScrollingParent(int)
io.reactivex.internal.schedulers.SchedulerWhen: boolean isDisposed()
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays()
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
io.reactivex.subjects.SerializedSubject: void subscribeActual(io.reactivex.Observer)
androidx.core.app.ShareCompat$IntentReader: ShareCompat$IntentReader(android.app.Activity)
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: FlowableMapNotification$MapNotificationSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
io.reactivex.internal.disposables.EmptyDisposable: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: boolean isDisposed()
androidx.core.app.NotificationCompat$Style: NotificationCompat$Style()
androidx.appcompat.view.menu.MenuPopup: MenuPopup()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: void cancel()
io.reactivex.internal.observers.BlockingBaseObserver: void onComplete()
io.reactivex.internal.functions.Functions$Array2Func: Functions$Array2Func(io.reactivex.functions.BiFunction)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
androidx.lifecycle.MediatorLiveData$Source: void plug()
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.BasicFuseableObserver: boolean isEmpty()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.lifecycle.OnLifecycleEvent: androidx.lifecycle.Lifecycle$Event value()
com.appspa.update.widget.UpdateDialogFragment: void reloadView()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Configuration getConfiguration()
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: void spValue(java.lang.Object)
com.xuexiang.xhttp2.model.ApiResult: com.xuexiang.xhttp2.model.ApiResult setCode(int)
androidx.core.content.res.ResourcesCompat: void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()
io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask: FlowableReplay$ScheduledReplayBufferTask(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(int)
androidx.appcompat.app.WindowDecorActionBar: int getNavigationItemCount()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getError()
org.aspectj.lang.reflect.AjTypeSystem: AjTypeSystem()
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: void cancel()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.ColorStateList getColorStateList(int)
androidx.collection.SparseArrayCompat: void setValueAt(int,java.lang.Object)
androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)
retrofit2.Retrofit: retrofit2.Converter nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.core.view.ViewCompat: void setTranslationY(android.view.View,float)
com.google.gson.internal.ConstructorConstructor$7: ConstructorConstructor$7(com.google.gson.internal.ConstructorConstructor)
androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: void onComplete()
androidx.appcompat.view.SupportMenuInflater$MenuState: void setItem(android.view.MenuItem)
com.appspa.demo.http.OKHttpUpdateHttpService$2: OKHttpUpdateHttpService$2(com.appspa.demo.http.OKHttpUpdateHttpService,java.lang.String,java.lang.String,com.appspa.update.proxy.IUpdateHttpService$DownloadCallback)
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: void onCancelProgress()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
androidx.appcompat.widget.AbsActionBarView: void animateToVisibility(int)
retrofit2.RequestBuilder: void addPathParam(java.lang.String,java.lang.String,boolean)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: void onError(java.lang.Throwable)
androidx.annotation.RequiresPermission: java.lang.String[] anyOf()
io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair: int tryAcquireSlot()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
com.appspa.update.entity.PromptEntity: com.appspa.update.entity.PromptEntity setButtonTextColor(int)
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.lifecycle.Transformations$2: void onChanged(java.lang.Object)
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: MapTypeAdapterFactory$Adapter(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor)
io.reactivex.internal.observers.FutureObserver: boolean isCancelled()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)
com.google.gson.JsonStreamParser: java.lang.Object next()
okhttp3.Cache$1: okhttp3.Response get(okhttp3.Request)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: java.lang.Object getInputContentInfo()
androidx.appcompat.R$id: R$id()
androidx.appcompat.widget.ActionBarOverlayLayout: void draw(android.graphics.Canvas)
retrofit2.ParameterHandler$Body: ParameterHandler$Body(java.lang.reflect.Method,int,retrofit2.Converter)
okhttp3.internal.http2.Settings: int getHeaderTableSize()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)
io.reactivex.internal.util.ListAddBiConsumer: java.lang.Object apply(java.lang.Object,java.lang.Object)
androidx.lifecycle.ViewModel: void onCleared()
com.appspa.update.widget.NumberProgressBar: float getProgressTextSize()
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken)
io.reactivex.internal.operators.single.SingleCache$CacheDisposable: boolean isDisposed()
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getIntrinsicHeight()
androidx.fragment.app.FragmentTransitionImpl: java.lang.String findKeyForValue(java.util.Map,java.lang.String)
okio.Buffer: boolean request(long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: void cancel()
androidx.appcompat.widget.DecorToolbar: boolean isTitleTruncated()
androidx.arch.core.executor.ArchTaskExecutor$1: void execute(java.lang.Runnable)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isChecked()
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void cancelAll()
io.reactivex.internal.operators.observable.ObservableReplay$ScheduledReplaySupplier: ObservableReplay$ScheduledReplaySupplier(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.app.NotificationCompat$MessagingStyle: boolean isGroupConversation()
androidx.appcompat.widget.ActivityChooserView: boolean isShowingPopup()
androidx.core.os.CancellationSignal: void throwIfCanceled()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: io.reactivex.subscribers.TestSubscriber$EmptySubscriber valueOf(java.lang.String)
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
androidx.appcompat.app.ActionBar: void setHomeButtonEnabled(boolean)
com.appspa.demo.entity.CustomResult: CustomResult()
androidx.core.provider.FontsContractCompat$FontFamilyResult: FontsContractCompat$FontFamilyResult(int,androidx.core.provider.FontsContractCompat$FontInfo[])
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableLastSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: boolean isDisposed()
io.reactivex.internal.subscribers.QueueDrainSubscriber: void requested(long)
androidx.customview.widget.ExploreByTouchHelper: ExploreByTouchHelper(android.view.View)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
com.xuexiang.xhttp2.utils.ApiUtils$1: ApiUtils$1()
androidx.appcompat.widget.SwitchCompat: void onLayout(boolean,int,int,int,int)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy valueOf(java.lang.String)
androidx.core.content.res.ResourcesCompat$FontCallback$2: void run()
com.google.gson.ExclusionStrategy: boolean shouldSkipField(com.google.gson.FieldAttributes)
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.subscriptions.SubscriptionHelper: void reportMoreProduced(long)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: void setDisposable(io.reactivex.disposables.Disposable)
org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl: java.lang.String toString()
androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.appcompat.widget.ActionMenuPresenter: void onSubUiVisibilityChanged(boolean)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.lifecycle.FullLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)
androidx.customview.widget.FocusStrategy: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
androidx.appcompat.widget.Toolbar: void postShowOverflowMenu()
org.aspectj.runtime.CFlow: CFlow(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.ViewCompat: void compatOffsetLeftAndRight(android.view.View,int)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
io.reactivex.internal.observers.BlockingMultiObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelOffset(int)
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: boolean isDisposed()
okhttp3.HttpUrl$Builder: java.lang.String toString()
okhttp3.OkHttpClient: java.util.List interceptors()
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
androidx.core.view.ViewParentCompat: ViewParentCompat()
com.google.gson.stream.JsonWriter: boolean isLenient()
io.reactivex.internal.functions.Functions$ArrayListCapacityCallable: java.lang.Object call()
retrofit2.Utils: java.lang.reflect.Type getParameterLowerBound(int,java.lang.reflect.ParameterizedType)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: boolean isEmpty()
io.reactivex.internal.util.NotificationLite: java.lang.Throwable getError(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager()
androidx.core.app.NotificationCompat$Extender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void innerComplete(int,boolean)
androidx.appcompat.view.menu.SubMenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: boolean isDisposed()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean flagActionItems()
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: void onComplete()
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: com.google.gson.JsonElement serialize(java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.functions.Functions$ListSorter: java.util.List apply(java.util.List)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: void cancel()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getBarLength()
androidx.activity.ComponentActivity$2: ComponentActivity$2(androidx.activity.ComponentActivity)
com.zhy.http.okhttp.request.CountingRequestBody: CountingRequestBody(okhttp3.RequestBody,com.zhy.http.okhttp.request.CountingRequestBody$Listener)
androidx.collection.LruCache: void resize(int)
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()
androidx.collection.ArraySet: java.lang.Object[] toArray()
okhttp3.MediaType: java.lang.String type()
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: void run()
io.reactivex.internal.subscribers.FutureSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: void cancel()
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: void disposeInner()
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: void onComplete()
androidx.appcompat.app.WindowDecorActionBar: void removeTab(androidx.appcompat.app.ActionBar$Tab)
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void fail(java.lang.Throwable,io.reactivex.Observer,io.reactivex.internal.queue.SpscLinkedArrayQueue)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: FlowableWithLatestFromMany$WithLatestInnerSubscriber(io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber,int)
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable create(io.reactivex.Flowable,java.util.concurrent.Callable)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: FlowableAny$AnySubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Predicate)
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void registerListeningView(android.view.View)
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void errorAll(io.reactivex.Observer)
com.appspa.update.logs.LogcatLogger: LogcatLogger()
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: int hashCode()
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcelable)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: void onError(java.lang.Throwable)
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
com.google.gson.Gson$5: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,io.reactivex.internal.queue.SpscLinkedArrayQueue)
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: SingleZipArray$ZipSingleObserver(io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator,int)
androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(android.content.Context,java.lang.String)
org.aspectj.runtime.reflect.StringMaker: void addThrows(java.lang.StringBuffer,java.lang.Class[])
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: void innerComplete(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup getSubDecor()
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: FlowableTimeoutTimed$TimeoutSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb: ActionBarDrawerToggleHoneycomb()
retrofit2.HttpException: java.lang.String message()
androidx.appcompat.view.menu.MenuDialogHelper: void show(android.os.IBinder)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: int requestFusion(int)
androidx.core.app.ActivityRecreator$1: void run()
androidx.appcompat.app.ActionBar$Tab: int getPosition()
retrofit2.ParameterHandler$RelativeUrl: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
androidx.customview.view.AbsSavedState$1: AbsSavedState$1()
androidx.appcompat.app.ActionBar$Tab: java.lang.CharSequence getContentDescription()
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: void onNext(java.lang.Object)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.appspa.update.utils.PatchUtils: PatchUtils()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: void onAccessibilityStateChanged(boolean)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: ObservableScalarXMap$ScalarDisposable(io.reactivex.Observer,java.lang.Object)
androidx.core.util.LogWriter: void close()
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface,int)
androidx.appcompat.widget.ActionMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver: void onError(java.lang.Throwable)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableGroupBy$EvictionAction: void accept(java.lang.Object)
okio.Timeout: boolean hasDeadline()
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: FlowableConcatWithMaybe$ConcatWithSubscriber(org.reactivestreams.Subscriber,io.reactivex.MaybeSource)
io.reactivex.internal.util.HalfSerializer: void onNext(org.reactivestreams.Subscriber,java.lang.Object,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
io.reactivex.subjects.AsyncSubject$AsyncDisposable: AsyncSubject$AsyncDisposable(io.reactivex.Observer,io.reactivex.subjects.AsyncSubject)
com.xuexiang.xhttp2.cache.RxCache: io.reactivex.Observable save(java.lang.String,java.lang.Object)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme getTheme()
okio.Buffer$2: java.lang.String toString()
com.google.gson.internal.LinkedHashTreeMap$AvlIterator: LinkedHashTreeMap$AvlIterator()
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionViewExpanded()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void drain()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence)
okhttp3.CacheControl: int minFreshSeconds()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
androidx.appcompat.app.ActionBar: void setTitle(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
retrofit2.RequestBuilder: okhttp3.Request$Builder get()
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: ObservableMergeWithMaybe$MergeWithObserver$OtherObserver(io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.fragment.app.Fragment$1: Fragment$1(androidx.fragment.app.Fragment)
com.google.gson.FieldNamingPolicy$6: FieldNamingPolicy$6(java.lang.String,int)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onMapSharedElements(java.util.List,java.util.Map)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: int hashCode()
com.google.gson.internal.bind.MapTypeAdapterFactory: MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: MaybeZipArray$ZipMaybeObserver(io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator,int)
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: void onComplete()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: boolean isListening()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean getBooleanProperty(int)
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: ObservableToList$ToListObserver(io.reactivex.Observer,java.util.Collection)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: void onError(java.lang.Throwable)
com.appspa.update.widget.UpdateDialogActivity: void showUpdateButton()
retrofit2.adapter.rxjava2.Result: Result(retrofit2.Response,java.lang.Throwable)
androidx.appcompat.view.menu.ListMenuPresenter: void saveHierarchyState(android.os.Bundle)
androidx.appcompat.app.ActionBar: boolean isHideOnContentScrollEnabled()
androidx.fragment.app.FragmentManagerImpl: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
androidx.appcompat.widget.AppCompatPopupWindow: void setSupportOverlapAnchor(boolean)
androidx.fragment.app.FragmentManagerImpl: void addBackStackState(androidx.fragment.app.BackStackRecord)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: InnerQueuedSubscriber(io.reactivex.internal.subscribers.InnerQueuedSubscriberSupport,int)
io.reactivex.subjects.CompletableSubject: void remove(io.reactivex.subjects.CompletableSubject$CompletableDisposable)
androidx.appcompat.app.ActionBar: boolean requestFocus()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
io.reactivex.internal.schedulers.ScheduledRunnable: void dispose()
androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
io.reactivex.internal.schedulers.DisposeOnCancel: boolean cancel(boolean)
androidx.appcompat.widget.AppCompatSeekBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: boolean isDisposed()
androidx.collection.MapCollections$KeySet: int size()
androidx.core.app.RemoteActionCompat: java.lang.CharSequence getContentDescription()
androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void complete()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableCache: void onComplete()
okhttp3.MultipartBody: java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: void cancel()
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(int)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: android.view.View requireView()
androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)
com.appspa.update.service.DownloadService: void stop(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
androidx.appcompat.widget.AppCompatTextHelper: void setTextSize(int,float)
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)
androidx.appcompat.app.AlertController: void installContent()
androidx.appcompat.widget.DecorContentParent: boolean hasLogo()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: int getViewHorizontalDragRange(android.view.View)
com.google.gson.JsonArray: int hashCode()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: void select()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean isStateful()
androidx.core.widget.PopupWindowCompat: PopupWindowCompat()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setFilterBitmap(boolean)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void addLast(io.reactivex.internal.operators.observable.ObservableReplay$Node)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: void innerComplete(io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver)
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getMin()
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: void clear()
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$EnumEntry[] enumMapping()
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
androidx.vectordrawable.R$string: R$string()
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableReduceWithSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.view.SupportActionModeWrapper: boolean isTitleOptional()
io.reactivex.internal.operators.observable.ObservableGroupBy$State: void onError(java.lang.Throwable)
io.reactivex.internal.util.ExceptionHelper$Termination: java.lang.Throwable fillInStackTrace()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: void onComplete()
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
okhttp3.internal.http.HttpDate$1: java.text.DateFormat initialValue()
androidx.collection.LruCache: void evictAll()
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: ObservableSwitchMapCompletable$SwitchMapCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Function,boolean)
androidx.core.view.MenuItemCompat$1: boolean onMenuItemActionCollapse(android.view.MenuItem)
io.reactivex.internal.operators.completable.CompletableError: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void drain()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeStepGranularity()
com.appspa.update.utils.FileUtils: android.net.Uri getDownloadContentUri(android.content.Context,java.io.File)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.MaybeObserver onSubscribe(io.reactivex.Maybe,io.reactivex.MaybeObserver)
com.xuexiang.xhttp2.cache.model.CacheResult: boolean isCache()
androidx.appcompat.app.AppCompatDelegate: void onSaveInstanceState(android.os.Bundle)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: void cancel()
com.appspa.demo.activity.MainActivity: void onClick(android.view.View)
androidx.fragment.app.FragmentManagerImpl: void completeShowHideFragment(androidx.fragment.app.Fragment)
androidx.collection.ContainerHelpers: int idealIntArraySize(int)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: io.reactivex.internal.fuseable.SimplePlainQueue getOrCreateQueue()
io.reactivex.internal.functions.Functions$FalsePredicate: Functions$FalsePredicate()
androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
io.reactivex.internal.operators.observable.ObservableDoOnLifecycle: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.versionedparcelable.VersionedParcel: void writeException(java.lang.Exception,int)
io.reactivex.internal.operators.flowable.FlowableDoFinally: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)
androidx.core.internal.view.SupportMenuItem: void setShowAsAction(int)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void run()
io.reactivex.Scheduler$DisposeTask: void run()
com.xuexiang.xhttp2.transform.func.ApiResultFunc: void handleApiResult(java.lang.Class,java.lang.Class,com.xuexiang.xhttp2.model.ApiResult)
androidx.core.view.MotionEventCompat: int getSource(android.view.MotionEvent)
io.reactivex.internal.subscribers.FutureSubscriber: java.lang.Object get()
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb: android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: void onNext(java.lang.Object)
androidx.core.view.WindowInsetsCompat: int getStableInsetRight()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber: void onError(java.lang.Throwable)
io.reactivex.observers.TestObserver: boolean isDisposed()
okio.RealBufferedSource: long readLong()
okio.GzipSource: void checkEqual(java.lang.String,int,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresOverflow()
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.subscriptions.SubscriptionHelper: void reportSubscriptionSet()
okhttp3.internal.connection.RouteSelector: boolean hasNext()
androidx.appcompat.app.ActionBar: int getNavigationMode()
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling valueOf(java.lang.String)
com.xuexiang.xhttp2.cache.core.LruMemoryCache: LruMemoryCache(int)
com.xuexiang.xhttp2.cache.RxCache$2: java.lang.Object execute()
androidx.core.graphics.TypefaceCompatApi21Impl: java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()
androidx.interpolator.R: R()
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: void emitLoop()
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.subjects.BehaviorSubject: void onNext(java.lang.Object)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Response execute()
com.google.gson.internal.bind.TypeAdapters$12: java.lang.Number read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: void request(long)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: void onResponse(retrofit2.Call,retrofit2.Response)
androidx.appcompat.view.menu.MenuDialogHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.graphics.ColorUtils: void RGBToLAB(int,int,int,double[])
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context)
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: FlowableRangeLong$BaseRangeSubscription(long,long)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: void innerError(io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver,java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow: int buildDropDown()
io.reactivex.internal.observers.FutureSingleObserver: boolean isDisposed()
retrofit2.ParameterHandler$Headers: ParameterHandler$Headers(java.lang.reflect.Method,int)
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.functions.Functions$Array5Func: java.lang.Object apply(java.lang.Object[])
io.reactivex.internal.operators.flowable.FlowableIntervalRange: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean equals(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: FlowableWindow$WindowSkipSubscriber(org.reactivestreams.Subscriber,long,long,int)
okio.ForwardingTimeout: boolean hasDeadline()
androidx.appcompat.app.AppCompatDelegate: void setCompatVectorFromResourcesEnabled(boolean)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleBiGenerator: java.lang.Object apply(java.lang.Object,io.reactivex.Emitter)
com.google.gson.internal.bind.SqlDateTypeAdapter: SqlDateTypeAdapter()
androidx.fragment.app.Fragment: boolean isStateSaved()
com.appspa.update.service.DownloadService$FileDownloadCallBack: void access$700(com.appspa.update.service.DownloadService$FileDownloadCallBack,java.io.File)
androidx.core.text.PrecomputedTextCompat$Params$Builder: PrecomputedTextCompat$Params$Builder(android.text.TextPaint)
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: void dispose()
androidx.collection.LongSparseArray: void setValueAt(int,java.lang.Object)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()
okhttp3.Handshake: int hashCode()
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void cancel(java.lang.Object)
okhttp3.Headers: boolean equals(java.lang.Object)
retrofit2.RequestFactory: RequestFactory(retrofit2.RequestFactory$Builder)
com.google.gson.internal.LinkedTreeMap$EntrySet: int size()
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
androidx.fragment.app.FragmentTransitionImpl$3: void run()
androidx.appcompat.widget.DecorContentParent: boolean hasIcon()
com.xuexiang.xhttp2.cache.stategy.NoStrategy: NoStrategy()
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowReserved()
androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
androidx.core.util.Pools$SimplePool: boolean isInPool(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getLiveRegion()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getShortLabel()
androidx.customview.widget.ExploreByTouchHelper$1: ExploreByTouchHelper$1()
io.reactivex.schedulers.TestScheduler$TestWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)
io.reactivex.internal.subscriptions.AsyncSubscription: boolean setResource(io.reactivex.disposables.Disposable)
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: int length()
androidx.appcompat.app.ActionBar: int getNavigationItemCount()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()
androidx.viewpager.widget.ViewPager: void populate()
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.PushObserver$1: boolean onRequest(int,java.util.List)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver(io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber)
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: void dispose()
androidx.core.app.RemoteInput: java.lang.String getResultKey()
io.reactivex.internal.queue.SpscArrayQueue: int calcElementOffset(long)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
retrofit2.Platform: java.util.List defaultConverterFactories()
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
okio.ForwardingTimeout: okio.ForwardingTimeout setDelegate(okio.Timeout)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: void dispose()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: void dispose()
io.reactivex.internal.operators.single.SingleDoOnSuccess: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: void clear()
io.reactivex.internal.disposables.ArrayCompositeDisposable: boolean isDisposed()
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: void dispose()
androidx.core.view.NestedScrollingParent2: void onStopNestedScroll(android.view.View,int)
androidx.core.app.NotificationCompat$WearableExtender: int getCustomSizePreset()
androidx.core.util.Pair: int hashCode()
io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create()
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber: FlowableFilter$FilterConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Predicate)
okio.RealBufferedSink: okio.BufferedSink writeShort(int)
okio.RealBufferedSource: boolean exhausted()
io.reactivex.internal.operators.observable.ObservableCache: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableElementAtMaybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.graphics.ColorUtils: void blendHSL(float[],float[],float,float[])
androidx.core.widget.NestedScrollView: boolean inChild(int,int)
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: void dispose()
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)
androidx.appcompat.widget.SwitchCompat: void cancelPositionAnimator()
org.aspectj.lang.internal.lang.PlaceHolder: PlaceHolder()
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: void cancel(io.reactivex.internal.queue.SpscLinkedArrayQueue,io.reactivex.internal.queue.SpscLinkedArrayQueue)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: void onComplete()
androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void drainLoop()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.util.EndConsumerHelper: void reportDoubleSubscription(java.lang.Class)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
okhttp3.Route: boolean requiresTunnel()
androidx.core.app.Person: androidx.core.app.Person$Builder toBuilder()
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: void onSuccess(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()
io.reactivex.internal.schedulers.IoScheduler$ThreadWorker: void setExpirationTime(long)
org.aspectj.internal.lang.reflect.StringToType$1: java.lang.reflect.Type[] getActualTypeArguments()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: AccessibilityWindowInfoCompat(java.lang.Object)
io.reactivex.internal.operators.single.SingleDoOnEvent: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: void onError(java.lang.Throwable)
androidx.loader.content.Loader: java.lang.String toString()
androidx.fragment.app.FragmentTransitionImpl: void removeTarget(java.lang.Object,android.view.View)
io.reactivex.internal.operators.single.SingleDoOnDispose: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: void dispose()
androidx.core.view.ViewParentCompat: int[] getTempNestedScrollConsumed()
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: ObservableAny$AnyObserver(io.reactivex.Observer,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: boolean isDisposed()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: int getChangingConfigurations()
androidx.appcompat.app.AlertController$ButtonHandler: AlertController$ButtonHandler(android.content.DialogInterface)
io.reactivex.internal.observers.BasicIntQueueDisposable: boolean isDisposed()
com.google.gson.internal.Excluder: boolean excludeClassChecks(java.lang.Class)
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
androidx.appcompat.widget.ListPopupWindow: void setWidth(int)
com.appspa.update.proxy.impl.DefaultUpdateChecker: DefaultUpdateChecker()
androidx.core.view.ViewCompat: void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable: int compareTo(java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getNumericShortcut()
androidx.fragment.app.FragmentManagerImpl: void performPendingDeferredStart(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: void onNext(java.lang.Object)
androidx.appcompat.app.ActionBar: void setLogo(int)
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: void dispose()
okhttp3.Headers: Headers(okhttp3.Headers$Builder)
androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)
com.xuexiang.xhttp2.cache.core.CacheCore: CacheCore(com.xuexiang.xhttp2.cache.core.ICache)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: ObservableConcatMapSingle$ConcatMapSingleMainObserver(io.reactivex.Observer,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDownPanel(int,android.view.KeyEvent)
androidx.core.app.ActivityRecreator: boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity)
io.reactivex.internal.disposables.DisposableHelper: boolean trySet(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)
com.google.gson.reflect.TypeToken: java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
com.xuexiang.xhttp2.model.ExpiredInfo: com.xuexiang.xhttp2.model.ExpiredInfo setCode(int)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)
okhttp3.Headers: Headers(java.lang.String[])
okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection,boolean)
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: void setResource(io.reactivex.disposables.Disposable)
androidx.customview.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)
okio.GzipSource: long read(okio.Buffer,long)
androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void request(long)
androidx.collection.ArraySet: int indexOf(java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentAction(int)
androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)
okhttp3.ResponseBody$1: long contentLength()
com.xuexiang.xhttp2.cookie.CookieManager: java.util.List loadForRequest(okhttp3.HttpUrl)
androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void innerError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void cancel(java.lang.String,int,java.lang.String)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
com.appspa.demo.http.OKHttpUpdateHttpService$1: void onResponse(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: FlowableConcatArray$ConcatArraySubscriber(org.reactivestreams.Publisher[],boolean,org.reactivestreams.Subscriber)
androidx.versionedparcelable.VersionedParcelStream: void writeStrongInterface(android.os.IInterface)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: void cancel()
androidx.core.content.pm.ShortcutInfoCompat: ShortcutInfoCompat()
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo)
org.aspectj.runtime.internal.CFlowCounter: org.aspectj.runtime.internal.cflowstack.ThreadStackFactory getThreadLocalStackFactory()
io.reactivex.internal.schedulers.AbstractDirectTask: boolean isDisposed()
androidx.core.content.IntentCompat: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean isStateful()
okhttp3.Headers: java.lang.String get(java.lang.String)
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(java.lang.Object)
androidx.lifecycle.MediatorLiveData: void removeSource(androidx.lifecycle.LiveData)
androidx.appcompat.widget.DecorToolbar: void initIndeterminateProgress()
okhttp3.internal.http2.Http2Writer: void dataFrame(int,byte,okio.Buffer,int)
androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)
io.reactivex.internal.functions.Functions$Array6Func: java.lang.Object apply(java.lang.Object[])
androidx.core.view.accessibility.AccessibilityEventCompat: int getAction(android.view.accessibility.AccessibilityEvent)
io.reactivex.observers.SerializedObserver: SerializedObserver(io.reactivex.Observer,boolean)
io.reactivex.subjects.MaybeSubject: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setGravity(int)
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: void onNext(java.lang.Object)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()
androidx.versionedparcelable.VersionedParcel: android.os.Bundle readBundle()
androidx.appcompat.widget.Toolbar: void ensureContentInsets()
io.reactivex.internal.queue.MpscLinkedQueue: io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode lvProducerNode()
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: void doBeforeTextChanged(android.widget.AutoCompleteTextView)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver(io.reactivex.MaybeObserver)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void request(long)
io.reactivex.internal.observers.DisposableLambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.proxy.impl.DefaultUpdateParser: com.appspa.update.entity.UpdateEntity parseDefaultUpperFormatJson(org.json.JSONObject)
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: void onComplete()
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
com.xuexiang.xhttp2.cache.RxCache: io.reactivex.Observable load(java.lang.reflect.Type,java.lang.String,long)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: void drain()
androidx.appcompat.view.menu.MenuBuilder: void changeMenuMode()
io.reactivex.internal.subscribers.LambdaSubscriber: void onNext(java.lang.Object)
com.xuexiang.xhttp2.cache.core.BaseDiskCache: boolean save(java.lang.String,java.lang.Object)
androidx.appcompat.view.SupportActionModeWrapper: SupportActionModeWrapper(android.content.Context,androidx.appcompat.view.ActionMode)
androidx.viewpager.widget.PagerTitleStrip: void setTextColor(int)
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: void dispose()
androidx.core.provider.SelfDestructiveThread$ReplyCallback: void onReply(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeIntArray(int[],int)
androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
androidx.appcompat.app.ActionBar: java.lang.CharSequence getTitle()
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: void request(long)
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl11: org.aspectj.runtime.internal.cflowstack.ThreadCounter getNewThreadCounter()
com.jakewharton.disklrucache.DiskLruCache$Entry: java.io.File getCleanFile(int)
androidx.core.app.NotificationCompat$WearableExtender: java.util.List getActions()
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: boolean isDisposed()
androidx.collection.LruCache: java.lang.Object remove(java.lang.Object)
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)
com.appspa.update._AppSpace: java.util.Map access$000()
androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState[] newArray(int)
org.aspectj.runtime.reflect.JoinPointImpl$StaticPartImpl: org.aspectj.lang.Signature getSignature()
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldInheritContext(android.view.ViewParent)
com.google.gson.internal.bind.util.ISO8601Utils: int parseInt(java.lang.String,int,int)
androidx.versionedparcelable.VersionedParcelStream: void writeDouble(double)
androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int hashCode()
androidx.appcompat.view.menu.ExpandedMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)
androidx.appcompat.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: void subscribeNext()
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void remove(io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription)
androidx.versionedparcelable.VersionedParcelStream: void writeBundle(android.os.Bundle)
okio.Buffer: long indexOf(byte,long,long)
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap)
androidx.appcompat.widget.SearchView: void onSubmitQuery()
androidx.core.content.IntentCompat: IntentCompat()
com.jakewharton.disklrucache.DiskLruCache$1: java.lang.Object call()
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float,float,float)
okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()
androidx.appcompat.widget.PopupMenu$2: PopupMenu$2(androidx.appcompat.widget.PopupMenu)
io.reactivex.internal.operators.flowable.FlowableTakeLast: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.maybe.MaybeToObservable: io.reactivex.MaybeObserver create(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableDebounceTimed: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.functions.Functions$BooleanSupplierPredicateReverse: boolean test(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: void run()
com.zhy.http.okhttp.request.OkHttpRequest: OkHttpRequest(java.lang.String,java.lang.Object,java.util.Map,java.util.Map,int)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: void onComplete()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.flowables.ConnectableFlowable onAssembly(io.reactivex.flowables.ConnectableFlowable)
androidx.core.app.RemoteActionCompat: RemoteActionCompat(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
com.google.gson.stream.JsonWriter: void beforeName()
androidx.core.util.LogWriter: LogWriter(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: FlowableCreate$LatestAsyncEmitter(org.reactivestreams.Subscriber)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: void dispose()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.view.menu.StandardMenuPopup: StandardMenuPopup(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void onClick(android.content.DialogInterface,int)
androidx.appcompat.widget.AppCompatImageHelper: void setImageResource(int)
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener: void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)
io.reactivex.internal.util.OpenHashSet: boolean removeEntry(int,java.lang.Object[],int)
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: CompletableUsing$UsingObserver(io.reactivex.CompletableObserver,java.lang.Object,io.reactivex.functions.Consumer,boolean)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: void request(long)
androidx.core.app.NotificationCompat: android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String)
androidx.viewpager.widget.ViewPager: void endFakeDrag()
com.google.gson.internal.LinkedTreeMap$EntrySet: LinkedTreeMap$EntrySet(com.google.gson.internal.LinkedTreeMap)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: void onNext(java.lang.Object)
com.appspa.update._AppSpace: java.lang.String getApkCacheDir()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.cursoradapter.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
com.google.gson.internal.bind.TreeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.app.ActionBar: void setDisplayShowTitleEnabled(boolean)
io.reactivex.internal.operators.maybe.MaybePeek: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.view.menu.CascadingMenuPopup$2: CascadingMenuPopup$2(androidx.appcompat.view.menu.CascadingMenuPopup)
io.reactivex.internal.operators.single.SingleCreate$Emitter: boolean tryOnError(java.lang.Throwable)
androidx.core.os.LocaleListInterface: int indexOf(java.util.Locale)
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: void onComplete()
androidx.fragment.app.BackStackRecord: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
androidx.core.app.AppLaunchChecker: void onActivityCreate(android.app.Activity)
okhttp3.MediaType: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View,int)
androidx.viewpager.widget.ViewPager: void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
retrofit2.KotlinExtensions$await$2$2: void onFailure(retrofit2.Call,java.lang.Throwable)
com.xuexiang.xhttp2.XHttp: java.io.File getCacheDirectory()
androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver: FlowableMergeWithSingle$MergeWithObserver$OtherObserver(io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver)
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: boolean isDisposed()
androidx.customview.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentManagerImpl: void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.core.view.ViewCompat$AccessibilityViewProperty: void frameworkSet(android.view.View,java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$3: FragmentManagerImpl$3(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment)
androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
io.reactivex.internal.disposables.SequentialDisposable: SequentialDisposable(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)
io.reactivex.internal.disposables.ListCompositeDisposable: boolean add(io.reactivex.disposables.Disposable)
androidx.loader.content.Loader: void reset()
androidx.versionedparcelable.VersionedParcelStream: VersionedParcelStream(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void innerSuccess(io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: void onComplete()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionCancel(android.transition.Transition)
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction$WorkerCompletable: SchedulerWhen$CreateWorkerFunction$WorkerCompletable(io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction,io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction)
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: void onError(java.lang.Throwable)
androidx.loader.content.AsyncTaskLoader$LoadTask: java.lang.Object doInBackground(java.lang.Object[])
androidx.fragment.app.FragmentPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setChecked(boolean)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.reactivex.observers.ResourceCompletableObserver: ResourceCompletableObserver()
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.functions.Functions$HashSetCallable: java.lang.Object call()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void cancel()
androidx.appcompat.widget.TintTypedArray: boolean getValue(int,android.util.TypedValue)
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError: void drain()
androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: void add(okhttp3.HttpUrl,okhttp3.Cookie)
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: void doAfter()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: ObservableWithLatestFromMany$WithLatestInnerObserver(io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver,int)
androidx.appcompat.widget.SearchView$8: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.core.view.WindowInsetsCompat: boolean isConsumed()
androidx.appcompat.view.ActionMode: void finish()
com.zhy.http.okhttp.OkHttpUtils: com.zhy.http.okhttp.OkHttpUtils getInstance()
io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: void onComplete()
androidx.fragment.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.versionedparcelable.ParcelImpl: ParcelImpl(androidx.versionedparcelable.VersionedParcelable)
io.reactivex.internal.operators.single.SingleZipIterable: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: boolean isDisposed()
com.appspa.update.entity.UpdateEntity: boolean isHasUpdate()
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: void onComplete()
androidx.appcompat.app.AlertController: void setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableTimer: ObservableTimer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.loader.content.ModernAsyncTask: void execute(java.lang.Runnable)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
io.reactivex.internal.schedulers.AbstractDirectTask: java.lang.Runnable getWrappedRunnable()
androidx.core.text.PrecomputedTextCompat: PrecomputedTextCompat(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: ObservableReplay$ReplayObserver(io.reactivex.internal.operators.observable.ObservableReplay$ReplayBuffer)
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: void onError(java.lang.Throwable)
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: TypeAdapters$EnumTypeAdapter(java.lang.Class)
io.reactivex.internal.queue.SpscLinkedArrayQueue: int size()
okhttp3.internal.http1.Http1Codec: void flushRequest()
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context)
com.xuexiang.xhttp2.exception.ServerException: ServerException(int,java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: FlowableObserveOn$ObserveOnConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.Scheduler$Worker,boolean,int)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: void onNext(java.lang.Object)
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.reflect.Field getOverrideField()
io.reactivex.internal.util.QueueDrainHelper: boolean postCompleteRequest(long,org.reactivestreams.Subscriber,java.util.Queue,java.util.concurrent.atomic.AtomicLong,io.reactivex.functions.BooleanSupplier)
com.google.gson.internal.bind.TypeAdapters$13: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.queue.SpscArrayQueue: int calcElementOffset(long,int)
io.reactivex.internal.subscribers.LambdaSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
androidx.fragment.app.FragmentTransitionImpl: void addTarget(java.lang.Object,android.view.View)
androidx.loader.content.ModernAsyncTask: void onCancelled(java.lang.Object)
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Response)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.annotation.Dimension: int unit()
com.appspa.update.widget.UpdateDialogActivity: boolean onKeyDown(int,android.view.KeyEvent)
okhttp3.FormBody: java.lang.String encodedValue(int)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)
androidx.fragment.app.FragmentPagerAdapter: android.os.Parcelable saveState()
com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: MaybeConcatArrayDelayError$ConcatMaybeObserver(org.reactivestreams.Subscriber,io.reactivex.MaybeSource[])
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet,int)
androidx.core.internal.view.SupportMenuItem: int getNumericModifiers()
androidx.appcompat.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: void dispose()
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder asBinder()
io.reactivex.internal.util.BlockingHelper: BlockingHelper()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumHeight()
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: void dispose()
androidx.fragment.app.FragmentTabHost$TabInfo: FragmentTabHost$TabInfo(java.lang.String,java.lang.Class,android.os.Bundle)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
androidx.appcompat.app.ToolbarActionBar: void removeAllTabs()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.cache.RxCache: io.reactivex.ObservableTransformer transformer(com.xuexiang.xhttp2.cache.model.CacheMode,java.lang.reflect.Type)
androidx.core.view.ViewCompat$1: ViewCompat$1(androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.lifecycle.ClassesInfoCache$MethodReference: ClassesInfoCache$MethodReference(int,java.lang.reflect.Method)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean overridesItemVisibility()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.gson.internal.bind.TypeAdapters$26$1: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean getPadding(android.graphics.Rect)
okhttp3.internal.http2.Http2Codec: void cancel()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setGapSize(float)
androidx.appcompat.widget.DecorToolbar: void saveHierarchyState(android.util.SparseArray)
androidx.customview.widget.ExploreByTouchHelper: void invalidateRoot()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: CompletableMergeDelayErrorArray$MergeInnerCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.disposables.CompositeDisposable,io.reactivex.internal.util.AtomicThrowable,java.util.concurrent.atomic.AtomicInteger)
androidx.appcompat.app.NavItemSelectedListener: void onNothingSelected(android.widget.AdapterView)
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: ObservableCreate$SerializedEmitter(io.reactivex.ObservableEmitter)
com.google.gson.internal.LinkedHashTreeMap$KeySet: java.util.Iterator iterator()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void clear()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: void onComplete()
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String getCacheControl(java.lang.String,java.lang.String)
io.reactivex.internal.operators.observable.ObservableGroupBy$State: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: void drain()
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void drain()
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat getIcon()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.reactivex.disposables.SerialDisposable: boolean isDisposed()
androidx.core.provider.SelfDestructiveThread$2: SelfDestructiveThread$2(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setText(int)
androidx.core.provider.FontsContractCompat$3: void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
okio.RealBufferedSource: okio.Buffer buffer()
org.aspectj.runtime.reflect.StringMaker: void addSignature(java.lang.StringBuffer,java.lang.Class[])
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)
androidx.drawerlayout.widget.DrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
okhttp3.ResponseBody: void close()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Response)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.ColorUtils: int LABToColor(double,double,double)
androidx.appcompat.app.AppCompatDelegateImpl: void dismissPopups()
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: boolean isDisposed()
com.appspa.demo.R$drawable: R$drawable()
androidx.appcompat.app.AppCompatDelegateImpl: void setTitle(java.lang.CharSequence)
okio.Options: java.lang.Object get(int)
androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.appcompat.widget.AppCompatImageHelper: android.content.res.ColorStateList getSupportImageTintList()
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
androidx.appcompat.widget.ActivityChooserModel: boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord)
androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeightWithMargins(android.view.View)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int hashCode()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface)
androidx.annotation.InspectableProperty: int attributeId()
androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()
com.zhy.http.okhttp.OkHttpUtils: OkHttpUtils(okhttp3.OkHttpClient)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle)
androidx.appcompat.widget.TintTypedArray: TintTypedArray(android.content.Context,android.content.res.TypedArray)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.LiveData$ObserverWrapper: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.appspa.update.utils.FileUtils: java.lang.String getExtDCIMPath()
androidx.appcompat.app.WindowDecorActionBar: void dispatchMenuVisibilityChanged(boolean)
androidx.appcompat.widget.ActivityChooserModel: int getHistorySize()
androidx.appcompat.view.menu.ListMenuItemView: boolean showsIcon()
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver(io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver)
androidx.appcompat.app.ToolbarActionBar: android.view.Window$Callback getWrappedWindowCallback()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
androidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: void dispose()
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: TreeTypeAdapter$GsonContextImpl(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)
androidx.appcompat.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
androidx.appcompat.app.WindowDecorActionBar$2: void onAnimationEnd(android.view.View)
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: boolean tryOnError(java.lang.Throwable)
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
io.reactivex.Observable: io.reactivex.Single singleOrError()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getActionItems()
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: void cancelAndClear()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
androidx.core.app.JobIntentService$CommandProcessor: void onCancelled(java.lang.Void)
io.reactivex.internal.operators.flowable.FlowableDefer: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: InputContentInfoCompat$InputContentInfoCompatApi25Impl(java.lang.Object)
retrofit2.OkHttpCall: retrofit2.Response execute()
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: void onNext(java.lang.Object)
io.reactivex.subscribers.ResourceSubscriber: void dispose()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: boolean offer(java.lang.Object,java.lang.Object)
io.reactivex.Notification: io.reactivex.Notification createOnComplete()
androidx.fragment.app.ListFragment: void setSelection(int)
androidx.appcompat.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.Util$2: Util$2(java.lang.String,boolean)
io.reactivex.internal.subscribers.QueueDrainSubscriber: QueueDrainSubscriber(org.reactivestreams.Subscriber,io.reactivex.internal.fuseable.SimplePlainQueue)
androidx.appcompat.widget.ActionBarOverlayLayout: void postRemoveActionBarHideOffset()
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView$OnQueryTextListener: boolean onQueryTextSubmit(java.lang.String)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: void onComplete()
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)
okio.ByteString: okio.ByteString read(java.io.InputStream,int)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: ObservableFlattenIterable$FlattenIterableObserver(io.reactivex.Observer,io.reactivex.functions.Function)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: int getStart()
io.reactivex.internal.operators.observable.ObservableDistinct: void subscribeActual(io.reactivex.Observer)
androidx.core.graphics.TypefaceCompatBaseImpl: long getUniqueKey(android.graphics.Typeface)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: FlowableWithLatestFromMany$WithLatestFromSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int)
androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: void onComplete()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder withModifiers(int[])
okhttp3.internal.NamedRunnable: NamedRunnable(java.lang.String,java.lang.Object[])
io.reactivex.internal.operators.parallel.ParallelRunOn: void subscribe(org.reactivestreams.Subscriber[])
androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(int)
okhttp3.RequestBody$3: long contentLength()
androidx.drawerlayout.widget.DrawerLayout: boolean isInBoundsOfChild(float,float,android.view.View)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$SingletonArrayFunc: ObservableWithLatestFromMany$SingletonArrayFunc(io.reactivex.internal.operators.observable.ObservableWithLatestFromMany)
androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: void onNext(java.lang.Object)
androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Boolean)
com.google.gson.Gson$5: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.DropDownListView: boolean touchModeDrawsInPressedStateCompat()
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: boolean isDisposed()
androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int)
io.reactivex.internal.schedulers.InstantPeriodicTask: InstantPeriodicTask(java.lang.Runnable,java.util.concurrent.ExecutorService)
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: void onNext(java.lang.Object)
androidx.collection.ArraySet: boolean contains(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableTimeInterval: void subscribeActual(io.reactivex.Observer)
okhttp3.EventListener$2: okhttp3.EventListener create(okhttp3.Call)
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.ListView getListView()
io.reactivex.internal.operators.flowable.FlowableAmb: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: boolean isDisposed()
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: void soNext(io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
okio.AsyncTimeout: void timedOut()
okhttp3.OkHttpClient: int writeTimeoutMillis()
androidx.core.widget.NestedScrollView: boolean isFillViewport()
androidx.cursoradapter.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void requestOne()
androidx.appcompat.widget.ToolbarWidgetWrapper: void saveHierarchyState(android.util.SparseArray)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver: void onNext(java.lang.Object)
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
okhttp3.internal.http2.Http2Stream: void receiveHeaders(java.util.List)
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams(int)
com.google.gson.internal.$Gson$Types: int indexOf(java.lang.Object[],java.lang.Object)
androidx.fragment.app.BackStackState: BackStackState(android.os.Parcel)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)
androidx.versionedparcelable.VersionedParcelStream: void closeField()
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean isGreaterThanZero(float)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.request.DeleteRequest delete(java.lang.String)
com.xuexiang.xhttp2.logs.HttpLog: void e(java.lang.String)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: ActivityChooserModel$HistoricalRecord(java.lang.String,long,float)
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerOuter: io.reactivex.ObservableSource apply(java.lang.Object)
io.reactivex.processors.PublishProcessor: void onNext(java.lang.Object)
androidx.appcompat.view.SupportActionModeWrapper: android.view.MenuInflater getMenuInflater()
io.reactivex.internal.operators.completable.CompletableDoOnEvent$DoOnEvent: CompletableDoOnEvent$DoOnEvent(io.reactivex.internal.operators.completable.CompletableDoOnEvent,io.reactivex.CompletableObserver)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter: java.lang.Object apply(java.lang.Object)
com.google.gson.internal.LinkedTreeMap$EntrySet: void clear()
io.reactivex.internal.subscribers.BoundedSubscriber: void onNext(java.lang.Object)
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: void cancel()
com.appspa.update.entity.DownloadEntity: com.appspa.update.entity.DownloadEntity setTip(java.lang.String)
androidx.core.widget.AutoScrollHelper: void requestStop()
okio.Buffer: long read(okio.Buffer,long)
com.google.gson.internal.bind.ObjectTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.appcompat.app.ActionBar$Tab: android.view.View getCustomView()
androidx.appcompat.widget.Toolbar: void ensureNavButtonView()
io.reactivex.disposables.RunnableDisposable: void onDisposed(java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: void setContentView(int)
io.reactivex.subjects.UnicastSubject: void drainFused(io.reactivex.Observer)
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
io.reactivex.internal.operators.single.SingleAmb: void subscribeActual(io.reactivex.SingleObserver)
retrofit2.Utils$WildcardTypeImpl: Utils$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])
io.reactivex.internal.disposables.SequentialDisposable: boolean update(io.reactivex.disposables.Disposable)
androidx.core.R$integer: R$integer()
androidx.collection.MapCollections$KeySet: int hashCode()
androidx.core.os.MessageCompat: MessageCompat()
com.appspa.update.proxy.impl.DefaultUpdateParser: com.appspa.update.entity.UpdateEntity parseDefaultLowerFormatJson(org.json.JSONObject)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
io.reactivex.internal.operators.completable.CompletableCache: boolean add(io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache)
com.appspa.update.entity.UpdateEntity: boolean isIgnorable()
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationStart(android.view.View)
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.lifecycle.ReportFragment: void onStop()
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.reactivex.internal.subscriptions.ScalarSubscription: void request(long)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: boolean isDisposed()
io.reactivex.schedulers.Timed: int hashCode()
com.appspa.update.proxy.impl.DefaultUpdateDownloader: boolean access$002(com.appspa.update.proxy.impl.DefaultUpdateDownloader,boolean)
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
androidx.appcompat.widget.TooltipCompatHandler$2: TooltipCompatHandler$2(androidx.appcompat.widget.TooltipCompatHandler)
androidx.appcompat.app.AlertController: boolean onKeyUp(int,android.view.KeyEvent)
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: void onNext(java.lang.Object)
io.reactivex.internal.schedulers.IoScheduler$ThreadWorker: long getExpirationTime()
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet,int)
com.xuexiang.xhttp2.XHttp$2: void accept(java.lang.Throwable)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDisplayOptions()
io.reactivex.internal.subscribers.BoundedSubscriber: boolean hasCustomOnError()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
com.appspa.update.listener.impl.DefaultUpdateFailureListener: void onFailure(com.appspa.update.entity.UpdateError)
com.google.gson.internal.LinkedHashTreeMap$EntrySet: void clear()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)
com.appspa.update.listener.impl.DefaultInstallListener: boolean checkApkFile(com.appspa.update.entity.DownloadEntity,java.io.File)
androidx.appcompat.widget.AbsActionBarView: void dismissPopupMenus()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)
androidx.core.graphics.TypefaceCompat: java.lang.String createResourceUid(android.content.res.Resources,int,int)
androidx.fragment.app.FragmentManagerViewModel$1: FragmentManagerViewModel$1()
androidx.viewpager.R$dimen: R$dimen()
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
com.zhy.http.okhttp.BuildConfig: BuildConfig()
io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver: void onNext(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void updateDensity(android.content.res.Resources)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setColor(int)
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: void subscribeNext()
androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: ExecutorScheduler$ExecutorWorker$InterruptibleRunnable(java.lang.Runnable,io.reactivex.internal.disposables.DisposableContainer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
androidx.viewpager.R: R()
androidx.core.content.SharedPreferencesCompat$EditorCompat: SharedPreferencesCompat$EditorCompat()
androidx.fragment.app.FragmentManager: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
androidx.annotation.RequiresFeature: java.lang.String enforcement()
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.internal.schedulers.ScheduledRunnable scheduleActual(java.lang.Runnable,long,java.util.concurrent.TimeUnit,io.reactivex.internal.disposables.DisposableContainer)
androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)
androidx.fragment.app.FragmentManagerViewModel: boolean removeRetainedFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setTextSizeInternal(int,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void innerError(java.lang.Throwable)
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: java.lang.Object poll()
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.ColorFilter getColorFilter()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void drainFused()
androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
com.google.gson.internal.bind.TypeAdapters$18: TypeAdapters$18()
androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)
io.reactivex.schedulers.TestScheduler: TestScheduler()
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: void onCancelProgress()
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl11: org.aspectj.runtime.internal.cflowstack.ThreadStack getNewThreadStack()
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver: boolean isDisposed()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: CallEnqueueObservable$CallCallback(retrofit2.Call,io.reactivex.Observer)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: java.lang.Object getInputContentInfo()
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.zhy.http.okhttp.OkHttpUtils$1: void onFailure(okhttp3.Call,java.io.IOException)
io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintStream)
com.xuexiang.xhttp2.model.HttpParams: void clear()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
com.xuexiang.xhttp2.utils.ApiUtils: com.xuexiang.xhttp2.utils.ApiUtils$IRequestHandler getDefaultRequestHandler()
okhttp3.internal.platform.AndroidPlatform$CloseGuard: java.lang.Object createAndOpen(java.lang.String)
androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int,int)
com.google.gson.internal.ConstructorConstructor$4: ConstructorConstructor$4(com.google.gson.internal.ConstructorConstructor)
io.reactivex.Notification: java.lang.Throwable getError()
com.google.gson.internal.LinkedTreeMap: void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean)
io.reactivex.Observable: io.reactivex.Observable retryWhen(io.reactivex.functions.Function)
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: int size()
androidx.viewpager.widget.ViewPager: boolean isDecorView(android.view.View)
io.reactivex.internal.operators.observable.ObservableMap: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void innerError(io.reactivex.internal.subscribers.InnerQueuedSubscriber,java.lang.Throwable)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence)
io.reactivex.observers.ResourceObserver: void onStart()
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: void onError(java.lang.Throwable)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.core.graphics.BitmapCompat: BitmapCompat()
okhttp3.Cache$CacheRequestImpl$1: void close()
com.appspa.update._AppSpace: boolean isAutoMode()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: void trim()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean getPadding(android.graphics.Rect)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
okhttp3.internal.ws.RealWebSocket$CancelRunnable: void run()
com.zhy.http.okhttp.builder.HeadBuilder: com.zhy.http.okhttp.request.RequestCall build()
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Object)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)
androidx.appcompat.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)
io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver: int requestFusion(int)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionResume(android.transition.Transition)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$6: BaseTestConsumer$TestWaitStrategy$6(java.lang.String,int)
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableJust: void subscribeActual(org.reactivestreams.Subscriber)
com.xuexiang.xhttp2.https.HttpsUtils$SSLParams: HttpsUtils$SSLParams()
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.cache.model.CacheMode getCacheMode()
androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)
androidx.appcompat.widget.TintTypedArray: android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback)
androidx.core.app.NotificationCompatJellybean: int getActionCount(android.app.Notification)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationFailed()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient: void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)
androidx.core.util.Pair: java.lang.String toString()
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: void onComplete()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isAccessibilityFocused()
androidx.appcompat.widget.WithHint: java.lang.CharSequence getHint()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void dispose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean onStateChanged(int[])
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
androidx.core.view.ViewCompat: void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
androidx.fragment.app.ListFragment$2: ListFragment$2(androidx.fragment.app.ListFragment)
androidx.core.text.PrecomputedTextCompat$Params: int hashCode()
io.reactivex.internal.operators.flowable.FlowableRetryWhen$RetryWhenSubscriber: void onComplete()
androidx.fragment.app.FragmentController: void dispatchDestroy()
io.reactivex.internal.operators.single.SingleContains$ContainsSingleObserver: void onSuccess(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void applyTheme(android.content.res.Resources$Theme)
okio.RealBufferedSink$1: void write(byte[],int,int)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: void onComplete()
io.reactivex.internal.functions.Functions$ToMapKeySelector: void accept(java.util.Map,java.lang.Object)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: void drain()
androidx.core.view.ViewCompat: void jumpDrawablesToCurrentState(android.view.View)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.core.view.ViewCompat: boolean canScrollVertically(android.view.View,int)
io.reactivex.internal.operators.single.SingleDefer: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: void onNext(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: AppCompatDelegateImpl$PanelFeatureState$SavedState$1()
com.google.gson.Gson: boolean htmlSafe()
io.reactivex.Single: Single()
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver: CompletableHide$HideCompletableObserver(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void drainLoop()
com.google.gson.internal.bind.TypeAdapters$25: java.util.Currency read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: void getValueForDensity(int,int,android.util.TypedValue,boolean)
io.reactivex.internal.operators.observable.ObservableReplay: void resetIf(io.reactivex.disposables.Disposable)
com.appspa.update.widget.UpdateDialog: void handleProgress(float)
okio.Segment: okio.Segment sharedCopy()
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcelable)
com.google.gson.reflect.TypeToken: TypeToken(java.lang.reflect.Type)
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: void showProgress()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: CompletableFutureCallAdapterFactory$ResponseCallAdapter(java.lang.reflect.Type)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.collection.LruCache: LruCache(int)
androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
io.reactivex.Observable: io.reactivex.Observable error(java.lang.Throwable)
androidx.viewpager.widget.PagerTitleStrip: void updateTextPositions(int,float,boolean)
androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)
io.reactivex.internal.operators.observable.ObservableScalarXMap: boolean tryScalarXMapSubscribe(io.reactivex.ObservableSource,io.reactivex.Observer,io.reactivex.functions.Function)
androidx.core.app.JobIntentService$WorkEnqueuer: void enqueueWork(android.content.Intent)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Boolean)
androidx.core.view.KeyEventDispatcher: boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
io.reactivex.internal.functions.Functions$EmptyConsumer: void accept(java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter: void setItemLimit(int)
com.google.gson.internal.bind.TypeAdapters$24: java.util.UUID read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: boolean isEmpty()
androidx.core.widget.TextViewCompat$OreoCallback: TextViewCompat$OreoCallback(android.view.ActionMode$Callback,android.widget.TextView)
com.xuexiang.xhttp2.annotation.NetMethod: long cacheTime()
retrofit2.Utils: boolean hasUnresolvableType(java.lang.reflect.Type)
com.appspa.update.AppSpace: AppSpace()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: void onComplete()
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: java.lang.Object apply(java.lang.Object)
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy: boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent)
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuBuilder: void dispatchRestoreInstanceState(android.os.Bundle)
androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationEnd(android.view.animation.Animation)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: ObservableConcatMap$SourceObserver(io.reactivex.Observer,io.reactivex.functions.Function,int)
io.reactivex.Scheduler$DisposeTask: Scheduler$DisposeTask(java.lang.Runnable,io.reactivex.Scheduler$Worker)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getSelectionMode()
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: void cancel()
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: java.lang.Object poll()
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.SqlDateTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.Streams$AppendableWriter: void close()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: void complete()
com.google.gson.internal.bind.TypeAdapters$13: TypeAdapters$13()
androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
io.reactivex.annotations.BackpressureKind: io.reactivex.annotations.BackpressureKind[] values()
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: void onComplete()
androidx.appcompat.view.menu.ActionMenuItem: boolean hasSubMenu()
io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair: ParallelReduceFull$SlotPair()
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
androidx.collection.SparseArrayCompat: void gc()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: void onError(java.lang.Throwable)
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
androidx.core.app.JobIntentService$CompatWorkEnqueuer: void serviceProcessingStarted()
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: boolean isDisposed()
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy[] values()
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ListPopupWindow getListPopupWindow()
androidx.core.view.ViewCompat: void setLayoutDirection(android.view.View,int)
retrofit2.ParameterHandler$RawPart: ParameterHandler$RawPart()
androidx.customview.R$style: R$style()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
io.reactivex.internal.operators.flowable.FlowableReplay$DefaultUnboundedFactory: FlowableReplay$DefaultUnboundedFactory()
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription: FlowablePublishMulticast$MulticastSubscription(org.reactivestreams.Subscriber,io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor)
com.google.gson.internal.LinkedHashTreeMap: void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver: boolean isDisposed()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableCreate$DropAsyncEmitter: FlowableCreate$DropAsyncEmitter(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void cancel()
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
io.reactivex.internal.functions.Functions$Array8Func: java.lang.Object apply(java.lang.Object)
com.zhy.http.okhttp.callback.Callback: void inProgress(float,long,int)
io.reactivex.parallel.ParallelFlowable: ParallelFlowable()
androidx.appcompat.view.ActionMode$Callback: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
com.google.gson.JsonObject: com.google.gson.JsonObject deepCopy()
okio.RealBufferedSource: long readAll(okio.Sink)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.appspa.update.utils.ApkUtils: android.content.Intent getInstallAppIntent(java.io.File)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: ObservableObserveOn$ObserveOnObserver(io.reactivex.Observer,io.reactivex.Scheduler$Worker,boolean,int)
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
androidx.versionedparcelable.VersionedParcel: float[] readFloatArray()
com.xuexiang.xhttp2.cache.core.LruDiskCache: boolean doClear()
androidx.core.os.CancellationSignal$OnCancelListener: void onCancel()
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void onNext(java.lang.Object)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
androidx.viewpager.widget.ViewPager$SavedState$1: ViewPager$SavedState$1()
androidx.fragment.app.Fragment: void initLifecycle()
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setDownLoadEntity(com.appspa.update.entity.DownloadEntity)
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SamplerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.loader.content.ModernAsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List)
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: ObservableConcatMap$ConcatMapDelayErrorObserver(io.reactivex.Observer,io.reactivex.functions.Function,int,boolean)
com.appspa.update.service.DownloadService: android.os.IBinder onBind(android.content.Intent)
com.appspa.update.utils.DialogUtils: boolean isSoftInputShow(android.view.ViewGroup)
com.google.gson.internal.ConstructorConstructor: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: ObservableBufferTimed$BufferExactUnboundedObserver(io.reactivex.Observer,java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.appcompat.widget.ActionBarOverlayLayout: void postAddActionBarHideOffset()
androidx.collection.ArraySet: ArraySet(int)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver(io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber)
androidx.fragment.app.FragmentTabHost: androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: void request(long)
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: void run()
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: void onComplete()
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: void subscribeNext()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: int requestFusion(int)
com.xuexiang.xhttp2.transform.func.HttpResponseThrowableFunc: io.reactivex.Observable apply(java.lang.Throwable)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
okhttp3.internal.connection.StreamAllocation: void release(okhttp3.internal.connection.RealConnection)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean)
com.xuexiang.xhttp2.model.XHttpRequest: java.lang.String toString()
androidx.fragment.app.FragmentActivity: FragmentActivity(int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEnabled(int)
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable)
com.xuexiang.xhttp2.cache.key.Strings: java.lang.String arrayToString(java.lang.Object[])
androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context)
retrofit2.ParameterHandler: retrofit2.ParameterHandler iterable()
okio.Okio: okio.Source source(java.io.File)
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: void onNext(java.lang.Object)
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: boolean hasNext()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.core.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)
androidx.core.app.TaskStackBuilder: android.content.Intent editIntentAt(int)
androidx.versionedparcelable.VersionedParcelParcel: void writeLong(long)
androidx.fragment.app.FragmentManagerImpl$2: void run()
io.reactivex.internal.operators.flowable.FlowableMapNotification: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.exceptions.CompositeException: void printStackTrace(java.io.PrintWriter)
androidx.appcompat.view.menu.MenuPresenter$Callback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: void drain()
androidx.core.view.ScrollingView: int computeVerticalScrollExtent()
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int)
androidx.appcompat.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle: CompletableToSingle$ToSingle(io.reactivex.internal.operators.completable.CompletableToSingle,io.reactivex.SingleObserver)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onEnd()
androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
org.aspectj.runtime.internal.CFlowStack: org.aspectj.runtime.internal.cflowstack.ThreadStackFactory getThreadLocalStackFactory()
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: MaybeIgnoreElement$IgnoreMaybeObserver(io.reactivex.MaybeObserver)
com.xuexiang.xhttp2.cache.RxCache$3: java.lang.Object execute()
androidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
io.reactivex.internal.operators.parallel.ParallelSortedJoin: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayPublisher: FlowableReplay$ReplayPublisher(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable)
io.reactivex.observers.ResourceMaybeObserver: void onStart()
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: void onError(java.lang.Throwable)
androidx.viewpager.widget.ViewPager: int getCurrentItem()
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean cancel(java.util.concurrent.atomic.AtomicReference)
androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearPages()
androidx.appcompat.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver: void onComplete()
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
androidx.customview.view.AbsSavedState$2: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void innerSuccess(io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableRetryWhen$RetryWhenSubscriber: FlowableRetryWhen$RetryWhenSubscriber(org.reactivestreams.Subscriber,io.reactivex.processors.FlowableProcessor,org.reactivestreams.Subscription)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void writeResponseBodyToDisk29Api(java.lang.String,java.lang.String,okhttp3.ResponseBody)
androidx.collection.ArrayMap$1: void colClear()
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
android.support.v4.app.INotificationSideChannel$Stub: android.os.IBinder asBinder()
io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber: java.lang.Object poll()
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void dispose()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: void innerError(io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver,java.lang.Throwable)
androidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: void onSuccess(java.lang.Object)
androidx.appcompat.app.AppCompatDialog: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: void dispose()
com.appspa.update.proxy.impl.DefaultUpdateDownloader: void access$100(com.appspa.update.proxy.impl.DefaultUpdateDownloader,com.appspa.update.service.DownloadService$DownloadBinder,com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: void onError(java.lang.Throwable)
com.google.gson.internal.bind.TypeAdapters$22: java.net.URI read(com.google.gson.stream.JsonReader)
okhttp3.internal.http2.Http2Stream: void receiveFin()
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: void dispose()
androidx.appcompat.app.ActionBar: boolean closeOptionsMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: boolean hasNext()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: void onNext(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
com.appspa.update._AppSpace: com.appspa.update.proxy.IUpdateHttpService getIUpdateHttpService()
retrofit2.Retrofit: retrofit2.Converter nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])
androidx.appcompat.view.menu.MenuBuilder: void clear()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)
com.appspa.update.entity.DownloadEntity: DownloadEntity(android.os.Parcel)
com.google.gson.internal.bind.TypeAdapters$6: java.lang.Number read(com.google.gson.stream.JsonReader)
com.xuexiang.xhttp2.cache.RxCache$Builder: com.xuexiang.xhttp2.cache.RxCache$Builder cacheTime(long)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: void onComplete()
androidx.appcompat.widget.ActivityChooserView$3: ActivityChooserView$3(androidx.appcompat.widget.ActivityChooserView)
io.reactivex.internal.schedulers.ImmediateThinScheduler$ImmediateThinWorker: boolean isDisposed()
org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: void onSubscribe(java.util.concurrent.Flow$Subscription)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void consumedOne(boolean)
io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: java.lang.Object poll()
androidx.fragment.app.FragmentTransition$1: FragmentTransition$1(java.util.ArrayList)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache: CompletableCache$InnerCompletableCache(io.reactivex.internal.operators.completable.CompletableCache,io.reactivex.CompletableObserver)
androidx.collection.CircularArray: void doubleCapacity()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isStateful()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayFunction: org.reactivestreams.Publisher apply(io.reactivex.Flowable)
androidx.core.view.PointerIconCompat: PointerIconCompat(java.lang.Object)
okio.Pipe$PipeSink: void close()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: void accept(io.reactivex.Observer,java.util.Collection)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean canApplyTheme()
io.reactivex.internal.operators.completable.CompletableDelay$Delay: void onComplete()
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver: void onComplete()
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: void onComplete()
retrofit2.adapter.rxjava2.ResultObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.subscriptions.SubscriptionArbiter: void request(long)
androidx.lifecycle.Observer: void onChanged(java.lang.Object)
androidx.appcompat.widget.ForwardingListener: boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: void onError(java.lang.Throwable)
androidx.core.content.res.TypedArrayUtils: boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
okio.RealBufferedSource: void close()
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void subscribeMore(int)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources getResources()
okhttp3.internal.platform.JdkWithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
okhttp3.OkHttpClient$1: java.io.IOException timeoutExit(okhttp3.Call,java.io.IOException)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getHorizontalOffset()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: void onComplete()
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(int,int)
io.reactivex.Notification: boolean equals(java.lang.Object)
io.reactivex.subjects.ReplaySubject$TimedNode: ReplaySubject$TimedNode(java.lang.Object,long)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function toFunction(io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.observable.ObservableTimeout: void subscribeActual(io.reactivex.Observer)
okhttp3.internal.platform.Android10Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.appspa.update.widget.NumberProgressBar: void setProgressTextVisibility(com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapSingleObserver: MaybeFlatMapSingleElement$FlatMapSingleObserver(java.util.concurrent.atomic.AtomicReference,io.reactivex.MaybeObserver)
androidx.core.widget.NestedScrollView: void initVelocityTrackerIfNotExists()
androidx.vectordrawable.animated.R: R()
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
com.zhy.http.okhttp.callback.BitmapCallback: BitmapCallback()
com.appspa.update.entity.UpdateEntity: void writeToParcel(android.os.Parcel,int)
androidx.fragment.R$style: R$style()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setTargetVelocity(float,float)
okio.ByteString: boolean rangeEquals(int,byte[],int,int)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: void onComplete()
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
androidx.arch.core.executor.DefaultTaskExecutor$1: DefaultTaskExecutor$1(androidx.arch.core.executor.DefaultTaskExecutor)
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: void complete()
androidx.cursoradapter.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
androidx.core.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean)
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: boolean isNavigationVisible()
io.reactivex.internal.queue.SpscLinkedArrayQueue: int calcDirectOffset(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)
androidx.appcompat.view.menu.MenuView$ItemView: void setTitle(java.lang.CharSequence)
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager,int)
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError: void accept(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: MaybeFlatMapBiSelector$FlatMapBiMainObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void close()
androidx.core.graphics.ColorUtils: void LABToXYZ(double,double,double,double[])
androidx.fragment.app.ListFragment: long getSelectedItemId()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast: void onError(java.lang.Throwable)
androidx.versionedparcelable.ParcelUtils: void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream)
androidx.appcompat.widget.Toolbar: boolean hasExpandedActionView()
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: ObservableIgnoreElementsCompletable$IgnoreObservable(io.reactivex.CompletableObserver)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEvent(android.view.View,int)
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier valueOf(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void boundaryError(io.reactivex.disposables.Disposable,java.lang.Throwable)
com.xuexiang.xhttp2.cache.stategy.FirstCacheStategy: FirstCacheStategy()
io.reactivex.internal.operators.observable.ObservableOnErrorNext: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)
io.reactivex.internal.subscriptions.AsyncSubscription: void dispose()
androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)
okio.Okio$2: okio.Timeout timeout()
androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: void onNext(java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)
com.xuexiang.xhttp2.https.HttpsUtils$UnSafeTrustManager: HttpsUtils$UnSafeTrustManager()
androidx.fragment.app.ListFragment$1: void run()
okio.Buffer: okio.BufferedSink writeShort(int)
io.reactivex.exceptions.CompositeException: CompositeException(java.lang.Iterable)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: void onError(java.lang.Throwable)
androidx.loader.content.ModernAsyncTask: boolean isCancelled()
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
com.xuexiang.xhttp2.cache.stategy.NoStrategy$1: com.xuexiang.xhttp2.cache.model.CacheResult apply(java.lang.Object)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$1: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: boolean isDisposed()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void invalidateDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Reader: void close()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,java.util.concurrent.atomic.AtomicReference)
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean done()
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterConditionalSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.drawerlayout.widget.DrawerLayout$1: DrawerLayout$1(androidx.drawerlayout.widget.DrawerLayout)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: int getNextAnim()
com.appspa.update.service.DownloadService$FileDownloadCallBack$3: void run()
io.reactivex.internal.operators.observable.ObservableCollect: void subscribeActual(io.reactivex.Observer)
androidx.core.view.ViewCompat: int getLabelFor(android.view.View)
okhttp3.internal.http.HttpHeaders: long stringToLong(java.lang.String)
com.appspa.update.utils.UpdateUtils: android.graphics.Bitmap drawable2Bitmap(android.graphics.drawable.Drawable)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.appcompat.widget.ResourcesWrapper: int getInteger(int)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void dispose()
com.appspa.update.entity.DownloadEntity$1: java.lang.Object createFromParcel(android.os.Parcel)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: void onNext(java.lang.Object)
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: SingleFlatMapIterableObservable$FlatMapIterableObserver(io.reactivex.Observer,io.reactivex.functions.Function)
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(android.content.Context,android.content.pm.ShortcutInfo)
androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber: BlockingFlowableMostRecent$MostRecentSubscriber(java.lang.Object)
retrofit2.ParameterHandler$Path: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.gson.FieldAttributes: FieldAttributes(java.lang.reflect.Field)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: ObservableWindowBoundarySelector$WindowBoundaryMainObserver(io.reactivex.Observer,io.reactivex.ObservableSource,io.reactivex.functions.Function,int)
okhttp3.HttpUrl$Builder: void pop()
androidx.appcompat.app.ToolbarActionBar: androidx.appcompat.app.ActionBar$Tab newTab()
okhttp3.internal.http1.Http1Codec$AbstractSource: long read(okio.Buffer,long)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: java.lang.Object poll()
androidx.core.app.NotificationCompatBuilder: void removeSoundAndVibration(android.app.Notification)
androidx.appcompat.app.ActionBar: void hide()
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: void clear()
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$2: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void innerNext(io.reactivex.internal.subscribers.InnerQueuedSubscriber,java.lang.Object)
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.app.NotificationCompat$MessagingStyle: void addCompatExtras(android.os.Bundle)
io.reactivex.internal.operators.completable.CompletableFromRunnable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: CompletableDoFinally$DoFinallyObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Action)
androidx.appcompat.widget.TintTypedArray: int getColor(int,int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.LinkedTreeMap$Node: com.google.gson.internal.LinkedTreeMap$Node last()
androidx.appcompat.widget.SearchView: void launchIntent(android.content.Intent)
io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: void accept(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat: float getRotationX(android.view.View)
retrofit2.Utils: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: boolean accept(org.reactivestreams.Subscriber,java.util.Collection)
com.xuexiang.xhttp2.model.HttpHeaders: long getLastModified(java.lang.String)
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: void cancel()
androidx.versionedparcelable.VersionedParcel: long readLong()
androidx.appcompat.widget.ActivityChooserView$Callbacks: void notifyOnDismissListener()
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1: java.lang.Object[] newArray(int)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: void cancel()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: boolean isDisposed()
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(int,int)
io.reactivex.internal.operators.parallel.ParallelFilterTry$BaseFilterSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: FlowableCreate$BufferAsyncEmitter(org.reactivestreams.Subscriber,int)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver(io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onChanged()
androidx.versionedparcelable.VersionedParcel: void writeStrongInterface(android.os.IInterface,int)
com.appspa.update.R$bool: R$bool()
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
androidx.fragment.app.FragmentStatePagerAdapter: void startUpdate(android.view.ViewGroup)
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String getDataMimeType()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
io.reactivex.internal.operators.completable.CompletableCreate: void subscribeActual(io.reactivex.CompletableObserver)
com.zhy.http.okhttp.OkHttpUtils: com.zhy.http.okhttp.OkHttpUtils initClient(okhttp3.OkHttpClient)
androidx.core.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
com.google.gson.internal.LinkedHashTreeMap: void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)
io.reactivex.internal.operators.single.SingleCreate$Emitter: void setCancellable(io.reactivex.functions.Cancellable)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.observers.ForEachWhileObserver: ForEachWhileObserver(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()
okhttp3.OkHttpClient$1: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: MaybeCreate$Emitter(io.reactivex.MaybeObserver)
com.jakewharton.disklrucache.DiskLruCache: void renameTo(java.io.File,java.io.File,boolean)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)
androidx.loader.content.Loader: void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: java.util.List getFieldNames(java.lang.reflect.Field)
com.appspa.update.R$anim: R$anim()
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: ObservableBuffer$BufferSkipObserver(io.reactivex.Observer,int,int,java.util.concurrent.Callable)
io.reactivex.internal.subscriptions.BasicQueueSubscription: boolean offer(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: void onComplete()
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: void setFuture(io.reactivex.disposables.Disposable)
com.appspa.update.entity.DownloadEntity: com.appspa.update.entity.DownloadEntity setWholeMd5(java.lang.String)
okhttp3.RealCall: okhttp3.Response getResponseWithInterceptorChain()
com.google.gson.stream.JsonWriter: void setSerializeNulls(boolean)
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
io.reactivex.internal.observers.CallbackCompletableObserver: void onComplete()
io.reactivex.disposables.FutureDisposable: void dispose()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String)
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
io.reactivex.internal.util.Pow2: int roundToPowerOfTwo(int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
androidx.core.provider.FontsContractCompat$1: java.lang.Object call()
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: FlowableReplay$BoundedReplayBuffer()
androidx.appcompat.widget.TooltipPopup: TooltipPopup(android.content.Context)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: boolean isDisposed()
retrofit2.BuiltInConverters$VoidResponseBodyConverter: BuiltInConverters$VoidResponseBodyConverter()
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.subscribers.BlockingFirstSubscriber: void onError(java.lang.Throwable)
com.google.gson.internal.LinkedTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void clearMenuPresenters()
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: IoScheduler$EventLoopWorker(io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool)
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ItemDelayFunction: java.lang.Object apply(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: int requestFusion(int)
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.LinkedTreeMap$EntrySet: boolean remove(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: int getApplyableNightMode()
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: ObservableSkipLastTimed$SkipLastTimedObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,boolean)
io.reactivex.internal.subscriptions.EmptySubscription: void cancel()
okio.RealBufferedSink: long writeAll(okio.Source)
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getBigContentView()
androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void error(java.lang.Throwable)
androidx.appcompat.view.menu.BaseMenuPresenter: int getId()
io.reactivex.internal.subscriptions.AsyncSubscription: boolean isDisposed()
androidx.core.view.ScrollingView: int computeHorizontalScrollRange()
com.appspa.update.entity.UpdateEntity: java.lang.String getVersionName()
androidx.core.view.MenuCompat: void setShowAsAction(android.view.MenuItem,int)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$TimedReplay: java.lang.Object call()
com.appspa.update.proxy.impl.DefaultUpdateDownloader: void cancelDownload()
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: void dispose()
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: void cancel()
androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.View)
androidx.fragment.app.DialogFragment: void onDetach()
okio.AsyncTimeout: void enter()
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnNext: void run()
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void drain()
retrofit2.Converter$Factory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void drain()
com.appspa.update.widget.UpdateDialogActivity: com.appspa.update.entity.PromptEntity getPromptEntity()
androidx.fragment.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
com.zhy.http.okhttp.request.RequestCall: okhttp3.Call getCall()
androidx.fragment.app.FragmentActivity: void onStart()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: ListPopupWindow$PopupScrollListener(androidx.appcompat.widget.ListPopupWindow)
io.reactivex.internal.operators.parallel.ParallelMap: int parallelism()
androidx.core.view.TintableBackgroundView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.app.WindowDecorActionBar: void configureTab(androidx.appcompat.app.ActionBar$Tab,int)
retrofit2.BuiltInConverters$RequestBodyConverter: java.lang.Object convert(java.lang.Object)
com.appspa.demo.R$style: R$style()
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: void onComplete()
com.google.gson.JsonArray: JsonArray()
androidx.fragment.app.Fragment$2: Fragment$2(androidx.fragment.app.Fragment)
androidx.appcompat.app.ToolbarActionBar: void setTitle(java.lang.CharSequence)
androidx.versionedparcelable.ParcelField: java.lang.String defaultValue()
androidx.core.view.ViewCompat: void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: boolean isDisposed()
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: void onComplete()
io.reactivex.subjects.MaybeSubject: void remove(io.reactivex.subjects.MaybeSubject$MaybeDisposable)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean showOverflowMenu()
androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
com.appspa.update.widget.UpdateDialog: void clearIPrompterProxy()
okhttp3.Cookie: int dateCharacterOffset(java.lang.String,int,int,boolean)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: void onNext(io.reactivex.Notification)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: boolean isDisposed()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)
androidx.collection.LongSparseArray: boolean remove(long,java.lang.Object)
io.reactivex.internal.functions.ObjectHelper: int compare(int,int)
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: void write(int)
androidx.fragment.app.FragmentManagerImpl: int reverseTransit(int)
androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.lifecycle.ComputableLiveData: ComputableLiveData(java.util.concurrent.Executor)
com.appspa.update.proxy.impl.DefaultUpdateDownloader: DefaultUpdateDownloader()
io.reactivex.internal.observers.EmptyCompletableObserver: EmptyCompletableObserver()
io.reactivex.Observable: void subscribe(io.reactivex.Observer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.google.gson.internal.LinkedHashTreeMap$KeySet: int size()
com.xuexiang.xhttp2.cache.RxCache: com.xuexiang.xhttp2.cache.stategy.IStrategy loadStrategy(com.xuexiang.xhttp2.cache.model.CacheMode)
okio.Buffer: void write(okio.Buffer,long)
com.google.gson.internal.LinkedHashTreeMap$Node: LinkedHashTreeMap$Node(com.google.gson.internal.LinkedHashTreeMap$Node,java.lang.Object,int,com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)
okhttp3.internal.platform.AndroidPlatform: boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object[] newArray(int)
androidx.versionedparcelable.VersionedParcel: void writeCollection(java.util.Collection)
androidx.versionedparcelable.VersionedParcelParcel: android.os.Bundle readBundle()
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: ObservableThrottleFirstTimed$DebounceTimedObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: SearchView$SearchAutoComplete$1(androidx.appcompat.widget.SearchView$SearchAutoComplete)
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: void onComplete()
io.reactivex.Scheduler$Worker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int,int)
androidx.fragment.app.FragmentTransition: android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean)
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: SingleDelayWithPublisher$OtherSubscriber(io.reactivex.SingleObserver,io.reactivex.SingleSource)
androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle()
io.reactivex.internal.operators.completable.CompletableHide: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: void onComplete()
okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
io.reactivex.internal.operators.flowable.FlowableTake: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String binarySearchBytes(byte[],byte[][],int)
com.zhy.http.okhttp.request.PostFileRequest: okhttp3.RequestBody buildRequestBody()
com.xuexiang.xhttp2.cache.core.LruDiskCache: boolean isExpiry(java.lang.String,long)
androidx.fragment.app.SuperNotCalledException: SuperNotCalledException(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.SwitchCompat$1: java.lang.Object get(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: void onError(java.lang.Throwable)
io.reactivex.subscribers.SerializedSubscriber: void request(long)
com.zhy.http.okhttp.request.PostFormRequest$1: PostFormRequest$1(com.zhy.http.okhttp.request.PostFormRequest,com.zhy.http.okhttp.callback.Callback)
androidx.core.widget.PopupMenuCompat: PopupMenuCompat()
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void runSync()
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ActionBarContextView: void animateToVisibility(int)
io.reactivex.internal.observers.FutureSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.TypeAdapters$14: java.lang.Object read(com.google.gson.stream.JsonReader)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.savedstate.Recreator: Recreator(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.widget.TintableCompoundButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
io.reactivex.parallel.ParallelFailureHandling: ParallelFailureHandling(java.lang.String,int)
com.zhy.http.okhttp.cookie.store.SerializableHttpCookie: SerializableHttpCookie(okhttp3.Cookie)
com.xuexiang.xhttp2.utils.PathUtils: java.lang.String getDownloadPathById(android.content.Context,long)
androidx.versionedparcelable.VersionedParcel: android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean tryEmitScalar(java.util.concurrent.Callable)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.disposables.ArrayCompositeDisposable: void dispose()
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: ObservableToListSingle$ToListObserver(io.reactivex.SingleObserver,java.util.Collection)
okhttp3.internal.platform.Platform: Platform()
io.reactivex.internal.observers.DeferredScalarObserver: DeferredScalarObserver(io.reactivex.Observer)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$1: void accept(java.lang.Long)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: void onComplete()
androidx.core.graphics.TypefaceCompatApi28Impl: TypefaceCompatApi28Impl()
io.reactivex.internal.disposables.ArrayCompositeDisposable: io.reactivex.disposables.Disposable replaceResource(int,io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
retrofit2.KotlinExtensions$await$2$2: KotlinExtensions$await$2$2(kotlinx.coroutines.CancellableContinuation)
okio.SegmentedByteString: java.lang.String utf8()
com.appspa.update.service.DownloadService: void setUpNotification(com.appspa.update.entity.DownloadEntity)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: void request(long)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getIntrinsicWidth()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void request()
androidx.core.app.NotificationCompat: java.util.List getInvisibleActions(android.app.Notification)
androidx.appcompat.app.ActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
com.google.gson.internal.bind.TypeAdapters$9: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.fragment.app.FragmentPagerAdapter: long getItemId(int)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.ActionMode: android.view.Menu getMenu()
com.google.gson.internal.bind.TypeAdapters$27: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean addInner(io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver)
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: ParcelableCompat$ParcelableCompatCreatorHoneycombMR2(androidx.core.os.ParcelableCompatCreatorCallbacks)
okhttp3.internal.cache.CacheStrategy: boolean isCacheable(okhttp3.Response,okhttp3.Request)
okhttp3.internal.cache.CacheInterceptor: boolean isContentSpecificHeader(java.lang.String)
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: void onComplete()
okhttp3.internal.http2.Http2Connection$Listener$1: void onStream(okhttp3.internal.http2.Http2Stream)
androidx.viewpager.widget.PagerTitleStrip: void onMeasure(int,int)
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: void run()
okhttp3.ResponseBody$1: ResponseBody$1(okhttp3.MediaType,long,okio.BufferedSource)
androidx.drawerlayout.widget.DrawerLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
androidx.fragment.app.Fragment: android.content.Context requireContext()
androidx.core.widget.TintableCompoundDrawablesView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: FlowableDetach$DetachSubscriber(org.reactivestreams.Subscriber)
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerOpened(android.view.View)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
androidx.appcompat.app.ActionBarDrawerToggle: boolean isDrawerIndicatorEnabled()
okhttp3.Cookie: long expiresAt()
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.subscriptions.SubscriptionHelper: void cancel()
okhttp3.CacheControl: int maxAgeSeconds()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat(android.view.View$AccessibilityDelegate)
androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setIsIgnorable(boolean)
io.reactivex.internal.observers.DisposableLambdaObserver: boolean isDisposed()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Method getTextViewMethod(java.lang.String)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: void innerError(java.lang.Throwable)
androidx.collection.MapCollections: int colGetSize()
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver: void onError(java.lang.Throwable)
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object getKey()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer: void replay(io.reactivex.processors.ReplayProcessor$ReplaySubscription)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(double)
com.google.gson.internal.ConstructorConstructor$13: java.lang.Object construct()
io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver: void onComplete()
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentTransaction: void addOp(androidx.fragment.app.FragmentTransaction$Op)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.util.concurrent.CompletableFuture adapt(retrofit2.Call)
com.appspa.update.logs.UpdateLog: UpdateLog()
androidx.appcompat.app.ToolbarActionBar: java.lang.CharSequence getTitle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)
com.xuexiang.xhttp2.R$style: R$style()
okhttp3.internal.http2.Http2Connection: void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode)
io.reactivex.internal.operators.single.SingleDoFinally: void subscribeActual(io.reactivex.SingleObserver)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor getCursor()
com.xuexiang.xhttp2.annotation.ParamKey: java.lang.String key()
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
androidx.core.app.JobIntentService: boolean doStopCurrentWork()
androidx.appcompat.widget.ForwardingListener: ForwardingListener(android.view.View)
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext: ObservableDelay$DelayObserver$OnNext(io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver,java.lang.Object)
io.reactivex.internal.util.VolatileSizeArrayList: boolean equals(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.schedulers.AbstractDirectTask: void dispose()
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: void cancel()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void onNext(java.lang.Object)
okio.SegmentedByteString: int segment(int)
com.google.gson.internal.bind.TypeAdapters$27: TypeAdapters$27()
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: ActionBarDrawerToggle$ToolbarCompatDelegate(androidx.appcompat.widget.Toolbar)
androidx.customview.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.app.ActionBar$Tab: java.lang.Object getTag()
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener: boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrieved(android.graphics.Typeface)
androidx.appcompat.app.AppCompatDelegate: void setDefaultNightMode(int)
io.reactivex.internal.observers.DeferredScalarDisposable: void dispose()
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: void dispose()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)
io.reactivex.internal.operators.observable.ObservableGroupBy$State: void dispose()
okhttp3.internal.Util: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
okhttp3.Cache$CacheRequestImpl$1: Cache$CacheRequestImpl$1(okhttp3.Cache$CacheRequestImpl,okio.Sink,okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
androidx.core.app.TaskStackBuilder: android.content.Intent[] getIntents()
com.xuexiang.xhttp2.model.HttpHeaders: void put(java.lang.String,java.lang.String)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundaryObserver: ObservableBufferBoundarySupplier$BufferBoundaryObserver(io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
com.appspa.update.proxy.impl.DefaultUpdateChecker: void onCheckError(java.lang.String,com.appspa.update.proxy.IUpdateProxy,java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void cancelAll()
androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)
okio.SegmentedByteString: okio.ByteString substring(int,int)
androidx.versionedparcelable.VersionedParcel: void writeSerializable(java.io.Serializable,int)
com.appspa.update.widget.UpdateDialogActivity: void showInstallButton()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.core.widget.NestedScrollView: boolean pageScroll(int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
androidx.loader.content.ModernAsyncTask: void onPreExecute()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: SingleSubscribeOn$SubscribeOnObserver(io.reactivex.SingleObserver,io.reactivex.SingleSource)
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence)
androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.app.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Object)
androidx.annotation.RestrictTo$Scope: RestrictTo$Scope(java.lang.String,int)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(androidx.drawerlayout.widget.DrawerLayout$LayoutParams)
com.appspa.update.logs.LogcatLogger: void logSub(int,java.lang.String,java.lang.String)
androidx.core.view.ActionProvider$SubUiVisibilityListener: void onSubUiVisibilityChanged(boolean)
com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node first()
com.google.gson.internal.Primitives: boolean isPrimitive(java.lang.reflect.Type)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: boolean isDisposed()
io.reactivex.internal.queue.MpscLinkedQueue: boolean isEmpty()
androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: void onSuccess(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)
androidx.core.view.NestedScrollingParent2: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
io.reactivex.internal.util.VolatileSizeArrayList: boolean addAll(java.util.Collection)
com.xuexiang.xhttp2.utils.Utils: java.lang.String getRelativePath(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean onStateChanged(int[])
io.reactivex.internal.observers.BlockingBaseObserver: void dispose()
androidx.appcompat.app.AlertController$1: void onClick(android.view.View)
androidx.core.os.CancellationSignal: void cancel()
io.reactivex.internal.disposables.DisposableHelper: void reportDisposableSet()
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)
okio.Buffer: void require(long)
okhttp3.RequestBody$2: RequestBody$2(okhttp3.MediaType,int,byte[],int)
com.appspa.update.service.DownloadService: void initNotification()
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: boolean isDisposed()
com.appspa.demo.http.OKHttpUpdateHttpService$1: void onResponse(java.lang.Object,int)
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: ParallelReduceFull$ParallelReduceFullMainSubscriber(org.reactivestreams.Subscriber,int,io.reactivex.functions.BiFunction)
androidx.appcompat.widget.ActivityChooserView$3: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void request(long)
androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()
com.xuexiang.xhttp2.utils.RequestBodyUtils$1: okhttp3.MediaType contentType()
io.reactivex.internal.util.VolatileSizeArrayList: boolean remove(java.lang.Object)
androidx.customview.widget.FocusStrategy: java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.functions.BiFunction instance()
androidx.core.view.DisplayCutoutCompat: int hashCode()
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3: java.lang.Object apply(java.lang.Object)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
okhttp3.internal.connection.RealConnection$1: RealConnection$1(okhttp3.internal.connection.RealConnection,boolean,okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.StreamAllocation)
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: MpscLinkedQueue$LinkedQueueNode(java.lang.Object)
com.xuexiang.xhttp2.cache.core.CacheCore: java.lang.Object load(java.lang.reflect.Type,java.lang.String,long)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()
io.reactivex.internal.operators.observable.ObservableFromArray: void subscribeActual(io.reactivex.Observer)
androidx.fragment.app.FragmentManagerNonConfig: java.util.Map getChildNonConfigs()
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnSubscriber: ParallelRunOn$RunOnSubscriber(org.reactivestreams.Subscriber,int,io.reactivex.internal.queue.SpscArrayQueue,io.reactivex.Scheduler$Worker)
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: boolean isDisposed()
androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: void onError(java.lang.Throwable)
io.reactivex.internal.observers.InnerQueuedObserver: void dispose()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
com.appspa.update.utils.UpdateUtils: boolean isIgnoreVersion(android.content.Context,java.lang.String)
com.appspa.update.entity.PromptEntity$1: java.lang.Object[] newArray(int)
androidx.loader.R$attr: R$attr()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutTask: void run()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: int requestFusion(int)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: ParallelDoOnNextTry$ParallelDoOnNextSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Consumer,io.reactivex.functions.BiFunction)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void clearMutated()
androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)
androidx.appcompat.view.menu.MenuDialogHelper: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void onNext(java.lang.Object)
androidx.viewpager.widget.PagerTitleStrip: void setTextSpacing(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTimeInterval: void subscribeActual(org.reactivestreams.Subscriber)
com.zhy.http.okhttp.utils.Platform$Android$MainThreadExecutor: void execute(java.lang.Runnable)
io.reactivex.internal.observers.DisposableLambdaObserver: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void removeAnimatorSetListener()
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: java.lang.String toString()
androidx.core.content.pm.ShortcutManagerCompat: ShortcutManagerCompat()
retrofit2.CallAdapter$Factory: java.lang.Class getRawType(java.lang.reflect.Type)
com.zhy.http.okhttp.request.CountingRequestBody: void writeTo(okio.BufferedSink)
okhttp3.RealCall: java.lang.String toLoggableString()
io.reactivex.internal.operators.flowable.FlowableMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompat$WearableExtender: java.lang.Object clone()
androidx.viewpager.R$attr: R$attr()
com.google.gson.internal.bind.TimeTypeAdapter: java.sql.Time read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: ObservableHide$HideDisposable(io.reactivex.Observer)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: void cancel()
androidx.core.text.util.FindAddress: java.lang.String findAddress(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar: void hideForActionMode()
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMaxTextSize()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: int getX()
androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)
androidx.fragment.app.BackStackRecord: int commitAllowingStateLoss()
com.google.gson.JsonArray: com.google.gson.JsonElement get(int)
androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)
okhttp3.internal.http.CallServerInterceptor$CountingSink: void write(okio.Buffer,long)
io.reactivex.internal.util.NotificationLite$ErrorNotification: boolean equals(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: void dispose()
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper valueOf(java.lang.String)
androidx.appcompat.view.ActionMode: java.lang.Object getTag()
androidx.core.graphics.drawable.WrappedDrawableApi14: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.appcompat.widget.TooltipPopup: android.view.View getAppRootView(android.view.View)
com.appspa.update.widget.WeakFileDownloadListener: void onStart()
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundResource(int)
androidx.appcompat.app.AppCompatDialog: void setTitle(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getAddedCount()
com.google.gson.JsonPrimitive: float getAsFloat()
androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)
com.zhy.http.okhttp.request.PostFormRequest: okhttp3.Request buildRequest(okhttp3.RequestBody)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: void run()
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: void dispose()
com.appspa.update.entity.PromptEntity: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$SubjectWork: ObservableWindowTimed$WindowSkipObserver$SubjectWork(io.reactivex.subjects.UnicastSubject,boolean)
io.reactivex.internal.operators.maybe.MaybeObserveOn: void subscribeActual(io.reactivex.MaybeObserver)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2: void onAnimationStart(android.animation.Animator)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean isShowing()
retrofit2.OkHttpCall: okhttp3.Call createRawCall()
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
androidx.core.view.ViewCompat: void enableAccessibleClickableSpanSupport(android.view.View)
io.reactivex.processors.SerializedProcessor: void onError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: java.lang.Object next()
androidx.appcompat.app.AlertController$AlertParams$3: AlertController$AlertParams$3(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController)
androidx.collection.CircularArray: int size()
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void otherComplete()
okio.ByteString: okio.ByteString sha256()
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: void onError(java.lang.Throwable)
androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: NotificationCompatSideChannelService$NotificationSideChannelStub(androidx.core.app.NotificationCompatSideChannelService)
okhttp3.Address: int hashCode()
androidx.loader.content.ModernAsyncTask: java.lang.Object get()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentInvalid(boolean)
androidx.cursoradapter.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()
com.google.gson.DefaultDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: void dispose()
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)
androidx.lifecycle.Transformations$2$1: void onChanged(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void onReceive(android.content.Context,android.content.Intent)
androidx.appcompat.widget.ActionMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
okhttp3.CertificatePinner: int hashCode()
okhttp3.HttpUrl: java.lang.String redact()
io.reactivex.internal.operators.observable.ObservableMap$MapObserver: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: FlowableWindowBoundary$WindowBoundaryMainSubscriber(org.reactivestreams.Subscriber,int)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setVersion(double)
okhttp3.internal.http.HttpHeaders: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
androidx.appcompat.view.WindowCallbackWrapper: void onDetachedFromWindow()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: void onComplete()
retrofit2.Invocation: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl$2: AppCompatDelegateImpl$2(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
io.reactivex.internal.subscribers.FutureSubscriber: FutureSubscriber()
androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent getIntent()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setFilterBitmap(boolean)
com.xuexiang.xhttp2.request.BaseRequest: java.lang.String getUrl()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.FieldNamingStrategy: java.lang.String translateName(java.lang.reflect.Field)
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void innerNext(io.reactivex.internal.observers.InnerQueuedObserver,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeFloat(float,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)
com.google.gson.internal.bind.TypeAdapters$26: TypeAdapters$26()
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.ViewPropertyAnimatorCompat: void cancel()
androidx.appcompat.view.menu.MenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.NestedScrollingParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspotBounds(int,int,int,int)
com.zhy.http.okhttp.request.PostFormRequest: okhttp3.RequestBody wrapRequestBody(okhttp3.RequestBody,com.zhy.http.okhttp.callback.Callback)
io.reactivex.internal.disposables.ListCompositeDisposable: ListCompositeDisposable()
okio.Buffer: okio.Buffer writeUtf8CodePoint(int)
io.reactivex.schedulers.Schedulers$NewThreadTask: Schedulers$NewThreadTask()
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
androidx.customview.widget.ExploreByTouchHelper: boolean isVisibleToUser(android.graphics.Rect)
com.xuexiang.xhttp2.transform.func.CacheResultFunc: CacheResultFunc()
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.content.pm.ShortcutInfoCompat: java.util.Set getCategories()
androidx.core.app.NotificationBuilderWithBuilderAccessor: android.app.Notification$Builder getBuilder()
androidx.drawerlayout.widget.DrawerLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)
androidx.core.graphics.TypefaceCompatBaseImpl: TypefaceCompatBaseImpl()
com.google.gson.JsonObject: com.google.gson.JsonElement createJsonElement(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: void onNext(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$21: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context)
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.google.gson.internal.JsonReaderInternalAccess: void promoteNameToValue(com.google.gson.stream.JsonReader)
androidx.customview.widget.ViewDragHelper: float clampMag(float,float,float)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
io.reactivex.subjects.SingleSubject: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.app.NotificationCompat$Action: boolean getShowsUserInterface()
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: BlockingObservableNext$NextIterator(io.reactivex.ObservableSource,io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver)
androidx.appcompat.widget.DecorToolbar: int getNavigationMode()
io.reactivex.internal.operators.observable.ObservableWindowTimed: void subscribeActual(io.reactivex.Observer)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void truncateFinal()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()
com.xuexiang.xhttp2.utils.Utils: boolean isNetworkAvailable(android.content.Context)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver: MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver(io.reactivex.MaybeObserver)
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ActivityChooserView$4: boolean onForwardingStarted()
androidx.fragment.app.ListFragment: ListFragment()
okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)
androidx.core.app.AppLaunchChecker: AppLaunchChecker()
okhttp3.internal.platform.Platform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: boolean isDisposed()
androidx.appcompat.app.ToolbarActionBar: android.view.View getCustomView()
androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)
io.reactivex.internal.schedulers.NewThreadWorker: NewThreadWorker(java.util.concurrent.ThreadFactory)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: ToolbarActionBar$ActionMenuPresenterCallback(androidx.appcompat.app.ToolbarActionBar)
androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)
okhttp3.internal.http2.Huffman: void addCode(int,int,byte)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.loader.content.Loader: void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentTabHost$SavedState: FragmentTabHost$SavedState(android.os.Parcelable)
okhttp3.RequestBody: RequestBody()
com.google.gson.internal.bind.SqlDateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.util.QueueDrainHelper: void postComplete(org.reactivestreams.Subscriber,java.util.Queue,java.util.concurrent.atomic.AtomicLong,io.reactivex.functions.BooleanSupplier)
com.appspa.update.service.DownloadService$FileDownloadCallBack$3: DownloadService$FileDownloadCallBack$3(com.appspa.update.service.DownloadService$FileDownloadCallBack,java.io.File)
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: boolean isDisposed()
androidx.core.view.accessibility.AccessibilityRecordCompat: java.util.List getText()
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void innerComplete()
com.google.gson.internal.Excluder$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
androidx.appcompat.app.AppCompatDelegate: void invalidateOptionsMenu()
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: ActionMenuView$MenuBuilderCallback(androidx.appcompat.widget.ActionMenuView)
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.exception.ApiExceptionHandler: com.xuexiang.xhttp2.exception.ApiException handleException(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableScalarXMap: FlowableScalarXMap()
androidx.appcompat.app.WindowDecorActionBar: void setTitle(int)
okio.RealBufferedSource$1: java.lang.String toString()
androidx.appcompat.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBufferTask: FlowableReplay$ReplayBufferTask(int)
io.reactivex.processors.SerializedProcessor: void onComplete()
okhttp3.Cache$Entry: boolean isHttps()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void clearColorFilter()
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver: void onError(java.lang.Throwable)
okhttp3.internal.http2.Http2Connection: void writeSynReset(int,okhttp3.internal.http2.ErrorCode)
okhttp3.Response: int code()
androidx.appcompat.view.menu.MenuPopupHelper: void dismiss()
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferBoundaryObserver: void onComplete()
okhttp3.Cache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.loader.R$string: R$string()
com.jakewharton.disklrucache.DiskLruCache: boolean journalRebuildRequired()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: LoaderManagerImpl$LoaderInfo(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: void dispose(java.lang.Object)
com.appspa.update.proxy.impl.DefaultUpdateDownloader: boolean isStaticHtmlUrl(com.appspa.update.entity.UpdateEntity)
okio.AsyncTimeout$2: long read(okio.Buffer,long)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)
okio.ByteString: java.lang.String utf8()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper: int access$000(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper)
okio.HashingSink: void write(okio.Buffer,long)
com.google.gson.JsonParser: JsonParser()
androidx.core.view.PointerIconCompat: java.lang.Object getPointerIcon()
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean areAllItemsEnabled()
androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)
androidx.appcompat.widget.ActionMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
org.aspectj.internal.lang.reflect.StringToType$1: java.lang.reflect.Type getOwnerType()
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)
androidx.core.util.LogWriter: void write(char[],int,int)
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)
androidx.appcompat.app.WindowDecorActionBar: void setLogo(int)
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: boolean isDisposed()
androidx.versionedparcelable.ParcelUtils: void putVersionedParcelableList(android.os.Bundle,java.lang.String,java.util.List)
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)
com.google.gson.internal.bind.TypeAdapters$22: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.fragment.app.Fragment: boolean isRemoving()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void applyTheme(android.content.res.Resources$Theme)
androidx.appcompat.view.menu.ListMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: void dispose()
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAvoidBackgroundClipping()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutTask: FlowableTimeoutTimed$TimeoutTask(long,io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSupport)
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: void onError(java.lang.Throwable)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory)
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: void cancel()
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: void onNext(java.lang.Object)
androidx.core.app.ActivityRecreator$2: void run()
androidx.viewpager.widget.PagerTabStrip: void setBackgroundResource(int)
androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.Object)
androidx.appcompat.view.menu.MenuPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: MpscLinkedQueue$LinkedQueueNode()
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void write(okio.Buffer,long)
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
com.zhy.http.okhttp.builder.GetBuilder: com.zhy.http.okhttp.request.RequestCall build()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.subjects.AsyncSubject: void onNext(java.lang.Object)
androidx.appcompat.R$string: R$string()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void loadFromAttributes(android.util.AttributeSet,int)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener: void onPrepareListView(android.widget.ListView)
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: void dispose()
okhttp3.FormBody: okhttp3.MediaType contentType()
androidx.core.internal.view.SupportMenuItem: boolean expandActionView()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: boolean isEmpty()
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: void onError(java.lang.Throwable)
io.reactivex.android.schedulers.AndroidSchedulers$1: AndroidSchedulers$1()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.xuexiang.xhttp2.cache.RxCache$Builder: long access$400(com.xuexiang.xhttp2.cache.RxCache$Builder)
androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: FlowableConcatMapSingle$ConcatMapSingleSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
androidx.loader.content.Loader: Loader(android.content.Context)
androidx.fragment.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.zhy.http.okhttp.cookie.store.SerializableHttpCookie: okhttp3.Cookie getCookie()
androidx.core.app.ShareCompat: java.lang.String getCallingPackage(android.app.Activity)
androidx.appcompat.graphics.drawable.DrawableContainer: int getCurrentIndex()
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setShowNotification(boolean)
androidx.appcompat.widget.ForwardingListener: boolean onTouchObserved(android.view.MotionEvent)
okio.Timeout$1: void throwIfReached()
io.reactivex.internal.operators.single.SingleDelay$Delay$OnSuccess: SingleDelay$Delay$OnSuccess(io.reactivex.internal.operators.single.SingleDelay$Delay,java.lang.Object)
com.appspa.update.proxy.impl.DefaultUpdateChecker: void access$000(com.appspa.update.proxy.impl.DefaultUpdateChecker,java.lang.String,java.lang.String,com.appspa.update.proxy.IUpdateProxy)
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: void request(long)
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.widget.NumberProgressBar: void setReachedBarColor(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getColumnSpan()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void access$100(io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver,java.lang.Object,boolean,io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast: void onNext(java.lang.Object)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancel(java.lang.String,int,java.lang.String)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
com.appspa.demo.http.OKHttpUpdateHttpService: void download(java.lang.String,java.lang.String,java.lang.String,com.appspa.update.proxy.IUpdateHttpService$DownloadCallback)
com.xuexiang.xhttp2.request.BaseBodyRequest: okhttp3.MultipartBody$Part addFile(java.lang.String,com.xuexiang.xhttp2.model.HttpParams$FileWrapper)
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: void innerNext(java.lang.Object)
androidx.appcompat.widget.SearchView$9: SearchView$9(androidx.appcompat.widget.SearchView)
androidx.appcompat.app.AppCompatDelegate: boolean applyDayNight()
com.xuexiang.xhttp2.request.PutRequest: io.reactivex.Observable generateRequest()
com.google.gson.internal.bind.TypeAdapters$35: TypeAdapters$35(java.lang.Class,com.google.gson.TypeAdapter)
io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver: void onNext(java.lang.Object)
io.reactivex.internal.queue.SpscLinkedArrayQueue: void resize(java.util.concurrent.atomic.AtomicReferenceArray,long,int,java.lang.Object,long)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
okhttp3.internal.connection.StreamAllocation: void release()
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
androidx.appcompat.app.AlertController: void setupView()
androidx.appcompat.view.menu.ActionMenuItem: int getAlphabeticModifiers()
androidx.activity.ComponentActivity$3: ComponentActivity$3(androidx.activity.ComponentActivity)
androidx.appcompat.view.menu.ActionMenuItem: boolean requiresOverflow()
io.reactivex.subscribers.DisposableSubscriber: boolean isDisposed()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
io.reactivex.internal.functions.Functions$NotificationOnError: void accept(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void clearMutated()
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void drainAsync()
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void getBoundsInScreen(android.graphics.Rect)
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent valueOf(java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getOpacity()
io.reactivex.internal.functions.Functions$EmptyConsumer: Functions$EmptyConsumer()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ScrollingTabContainerView: void performCollapse()
io.reactivex.internal.operators.completable.CompletableFromUnsafeSource: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)
androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
okhttp3.internal.http2.Header: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: boolean add(io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
io.reactivex.internal.operators.maybe.MaybeToPublisher: io.reactivex.functions.Function instance()
androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream(int)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: boolean isDisposed()
androidx.collection.ArraySet$1: java.util.Map colGetMap()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentController: boolean execPendingActions()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: void cancel()
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap getBitmap()
androidx.core.app.TaskStackBuilder$SupportParentable: android.content.Intent getSupportParentActivityIntent()
androidx.appcompat.view.StandaloneActionMode: android.view.Menu getMenu()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$SingletonArrayFunc: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: java.lang.Object poll()
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: void runFinally()
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)
androidx.appcompat.widget.TintTypedArray: int getIndexCount()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber: void onError(java.lang.Throwable)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(java.lang.Object)
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseIfNoNewStreams()
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int)
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.Response: okhttp3.Response$Builder newBuilder()
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: void emitNext(java.lang.Object,long)
androidx.appcompat.widget.ScrollingTabContainerView: void animateToVisibility(int)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.app.AlertController: void setTitle(java.lang.CharSequence)
org.aspectj.runtime.reflect.SignatureImpl: int getModifiers()
androidx.viewpager.widget.ViewPager: boolean performDrag(float)
com.google.gson.internal.LinkedHashTreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ActivityChooserModel: void setActivitySorter(androidx.appcompat.widget.ActivityChooserModel$ActivitySorter)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
retrofit2.ServiceMethod: retrofit2.ServiceMethod parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method)
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ExecutorService access$400()
okhttp3.Headers: java.lang.String toString()
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String[] getStringArray(int)
io.reactivex.internal.operators.flowable.FlowableFromIterable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)
androidx.fragment.app.Fragment$3: void run()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: void otherError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver: boolean isDisposed()
androidx.core.os.LocaleListPlatformWrapper: int size()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void drainLoop()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
androidx.savedstate.SavedStateRegistryController: SavedStateRegistryController(androidx.savedstate.SavedStateRegistryOwner)
androidx.customview.widget.ExploreByTouchHelper$2: androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int)
com.xuexiang.xhttp2.model.ApiResult: com.xuexiang.xhttp2.model.ApiResult setData(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerStateChanged(int)
com.google.gson.internal.LazilyParsedNumber: java.lang.Object writeReplace()
com.xuexiang.xhttp2.callback.CallClazzProxy: java.lang.reflect.Type getType()
org.aspectj.runtime.internal.CFlowCounter: CFlowCounter()
okio.RealBufferedSink: okio.BufferedSink write(byte[])
io.reactivex.observers.SafeObserver: void onComplete()
okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setUri(java.lang.String)
com.appspa.update.proxy.impl.DefaultUpdateChecker: void processCheckResult(java.lang.String,com.appspa.update.proxy.IUpdateProxy)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
io.reactivex.internal.util.ListAddBiConsumer: java.util.List apply(java.util.List,java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
com.google.gson.internal.LinkedHashTreeMap$Node: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeTextType()
androidx.fragment.app.FragmentManagerImpl: void popBackStack()
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.ListView getListView()
androidx.core.provider.FontsContractCompat$FontRequestCallback: FontsContractCompat$FontRequestCallback()
okhttp3.CacheControl: boolean isPrivate()
io.reactivex.observers.TestObserver$EmptyObserver: io.reactivex.observers.TestObserver$EmptyObserver valueOf(java.lang.String)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void onSuccess(java.lang.Object)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()
androidx.core.widget.EdgeEffectCompat: boolean onPull(float,float)
androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.provider.FontsContractCompat$4$1: void run()
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind[] values()
androidx.savedstate.SavedStateRegistry: void unregisterSavedStateProvider(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.viewpager.widget.PagerTabStrip: boolean getDrawFullUnderline()
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: void onComplete()
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: java.lang.Object poll()
io.reactivex.Observable: io.reactivex.Observable create(io.reactivex.ObservableOnSubscribe)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void onComplete()
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: void onComplete()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initSingleScheduler(java.util.concurrent.Callable)
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getContentUri()
com.appspa.update.widget.BaseDialog: BaseDialog(android.content.Context,int,int)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
io.reactivex.internal.operators.observable.ObservableScalarXMap: ObservableScalarXMap()
io.reactivex.internal.operators.observable.ObservableSampleTimed: void subscribeActual(io.reactivex.Observer)
io.reactivex.processors.UnicastProcessor: void onNext(java.lang.Object)
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadStackImpl: ThreadStackFactoryImpl$ThreadStackImpl(org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$1)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void otherError(java.lang.Throwable)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
io.reactivex.processors.UnicastProcessor: void onError(java.lang.Throwable)
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
androidx.appcompat.widget.ActionMenuPresenter$SavedState: int describeContents()
androidx.appcompat.app.ActionBar$OnNavigationListener: boolean onNavigationItemSelected(int,long)
com.jakewharton.disklrucache.DiskLruCache: void readJournalLine(java.lang.String)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean)
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: CompletableCreate$Emitter(io.reactivex.CompletableObserver)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(androidx.fragment.app.FragmentActivity)
androidx.appcompat.widget.DropDownListView: boolean isFocused()
androidx.fragment.app.FragmentTransition: boolean supportsTransition()
io.reactivex.internal.operators.single.SingleCache: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: void dispose()
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void showForSystem()
androidx.core.app.JobIntentService: boolean isStopped()
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.Toolbar$1: Toolbar$1(androidx.appcompat.widget.Toolbar)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void computeBitmapSize()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature getSignature()
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnNext: void accept(java.lang.Object)
com.appspa.update.widget.UpdateDialogFragment: void handleProgress(float)
androidx.lifecycle.FullLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.fragment.R$string: R$string()
com.xuexiang.xhttp2.cache.RxCache$1: RxCache$1(com.xuexiang.xhttp2.cache.RxCache,com.xuexiang.xhttp2.cache.model.CacheMode,java.lang.reflect.Type,com.xuexiang.xhttp2.cache.stategy.IStrategy)
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: okhttp3.Request addGetParamsSign(okhttp3.Request)
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: ObservableRetryBiPredicate$RetryBiObserver(io.reactivex.Observer,io.reactivex.functions.BiPredicate,io.reactivex.internal.disposables.SequentialDisposable,io.reactivex.ObservableSource)
io.reactivex.internal.observers.FutureObserver: java.lang.Object get()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper: SharedPreferencesCompat$EditorCompat$Helper()
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
androidx.lifecycle.ComputableLiveData$1: ComputableLiveData$1(androidx.lifecycle.ComputableLiveData)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void drainFused()
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isStateful()
androidx.appcompat.widget.ActivityChooserView: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
androidx.appcompat.widget.TooltipCompatHandler$1: void run()
com.google.gson.internal.UnsafeAllocator: java.lang.Object newInstance(java.lang.Class)
okio.ByteString: okio.ByteString decodeHex(java.lang.String)
com.appspa.update.UpdateManager: com.appspa.update.entity.UpdateEntity refreshParams(com.appspa.update.entity.UpdateEntity)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: boolean isDisposed()
androidx.appcompat.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
retrofit2.Utils$WildcardTypeImpl: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
io.reactivex.internal.operators.flowable.BlockingFlowableLatest: java.util.Iterator iterator()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)
androidx.cursoradapter.widget.CursorFilter: CursorFilter(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient)
com.google.gson.internal.bind.TypeAdapters$6: TypeAdapters$6()
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: boolean isDisposed()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int,int)
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
androidx.core.view.ViewCompat: android.graphics.Rect getEmptyTempRect()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagBackward()
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Function,io.reactivex.functions.BiPredicate)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: void onComplete()
okhttp3.Response: okhttp3.ResponseBody body()
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void completion()
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
io.reactivex.internal.operators.flowable.FlowableJoin: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.MenuPopupHelper: void show()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: void drain()
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: ObservableJoin$JoinDisposable(io.reactivex.Observer,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentManager$BackStackEntry: int getId()
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe: void subscribeActual(io.reactivex.Observer)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean()
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder asBinder()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.viewpager.widget.PagerTitleStrip: void setNonPrimaryAlpha(float)
androidx.appcompat.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()
androidx.appcompat.view.menu.ActionMenuItemView: void setShortcut(boolean,char)
androidx.appcompat.widget.ActivityChooserModel: int getHistoryMaxSize()
io.reactivex.internal.queue.MpscLinkedQueue: io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode lvConsumerNode()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$CompletionTask: void run()
com.zhy.http.okhttp.request.OkHttpRequest: okhttp3.RequestBody wrapRequestBody(okhttp3.RequestBody,com.zhy.http.okhttp.callback.Callback)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(javax.crypto.Cipher)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
io.reactivex.internal.operators.flowable.FlowableInternalHelper: FlowableInternalHelper()
okhttp3.internal.ws.RealWebSocket$2: void onFailure(okhttp3.Call,java.io.IOException)
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: void onAfterTerminate()
androidx.appcompat.widget.AppCompatTextHelper: android.content.res.ColorStateList getCompoundDrawableTintList()
androidx.core.content.res.TypedArrayUtils: int getAttr(android.content.Context,int,int)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: void run()
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: void complete()
android.support.v4.os.ResultReceiver: int describeContents()
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: int size(io.reactivex.subjects.ReplaySubject$TimedNode)
io.reactivex.internal.operators.flowable.FlowableOnErrorNext$OnErrorNextSubscriber: void onComplete()
androidx.core.app.AppComponentFactory: android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String)
retrofit2.HttpServiceMethod$CallAdapted: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState[] newArray(int)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void cancel()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: void onSubscribe(org.reactivestreams.Subscription)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancelAll(java.lang.String)
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: void request(long)
androidx.versionedparcelable.VersionedParcel: void setOutputField(int)
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void cancel(int)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)
androidx.core.app.SharedElementCallback: void onRejectSharedElements(java.util.List)
androidx.lifecycle.FullLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
io.reactivex.internal.observers.FutureSingleObserver: java.lang.Object get(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.subscribers.DefaultSubscriber: void onStart()
androidx.core.widget.ContentLoadingProgressBar: void onDetachedFromWindow()
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: void trimFinal()
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
retrofit2.OkHttpCall$1: void onFailure(okhttp3.Call,java.io.IOException)
com.appspa.update.widget.NumberProgressBar: int getProgress()
io.reactivex.BackpressureStrategy: BackpressureStrategy(java.lang.String,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
androidx.core.view.inputmethod.InputConnectionCompat$2: InputConnectionCompat$2(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: void request(long)
androidx.lifecycle.Lifecycling: Lifecycling()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.PorterDuff$Mode getTickMarkTintMode()
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: boolean offer(java.lang.Object,java.lang.Object)
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: void onComplete()
com.google.gson.internal.LinkedHashTreeMap: boolean containsKey(java.lang.Object)
io.reactivex.internal.functions.Functions$EmptyAction: void run()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
androidx.appcompat.view.menu.CascadingMenuPopup: void setVerticalOffset(int)
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: FlowableDoOnEach$DoOnEachConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)
io.reactivex.internal.observers.FutureSingleObserver: boolean cancel(boolean)
com.appspa.update._AppSpace: boolean getCheckUrlStatus(java.lang.String)
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapter delegate()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: void dispose()
androidx.appcompat.app.AppCompatActivity: void onDestroy()
io.reactivex.internal.operators.flowable.FlowableCache: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterator: SingleInternalHelper$ToFlowableIterator(java.util.Iterator)
androidx.appcompat.app.AlertDialog: android.widget.ListView getListView()
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: FlowableCountSingle$CountSubscriber(io.reactivex.SingleObserver)
io.reactivex.observers.TestObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber: FlowableFilter$FilterSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: ObservableGroupBy$GroupByObserver(io.reactivex.Observer,io.reactivex.functions.Function,io.reactivex.functions.Function,int,boolean)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(androidx.core.content.pm.ShortcutInfoCompat)
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: void error(java.lang.Throwable)
androidx.core.app.AppComponentFactory: AppComponentFactory()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.Scheduler)
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: void dispose()
okhttp3.OkHttpClient$1: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
androidx.fragment.app.FragmentManager: void popBackStack(int,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean expandActionView()
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: DiskLruCache$Editor$FaultHidingOutputStream(com.jakewharton.disklrucache.DiskLruCache$Editor,java.io.OutputStream)
androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void accept(io.reactivex.Observer,java.lang.Object)
org.reactivestreams.FlowAdapters$FlowToReactiveSubscription: FlowAdapters$FlowToReactiveSubscription(org.reactivestreams.Subscription)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: FontResourcesParserCompat$FontFamilyFilesResourceEntry(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])
androidx.appcompat.app.AlertDialog: void setView(android.view.View,int,int,int,int)
androidx.versionedparcelable.VersionedParcel: void writeDoubleArray(double[])
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver$OnComplete: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getItemId()
androidx.appcompat.view.menu.StandardMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ActivityChooserModel getDataModel()
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: boolean hasError()
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationStart(android.animation.Animator)
com.appspa.update.widget.UpdateDialogActivity: void handleProgress(float)
androidx.appcompat.view.menu.MenuBuilder: void removeItemAt(int)
io.reactivex.internal.util.NotificationLite: org.reactivestreams.Subscription getSubscription(java.lang.Object)
io.reactivex.exceptions.MissingBackpressureException: MissingBackpressureException(java.lang.String)
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
io.reactivex.subjects.UnicastSubject: UnicastSubject(int,boolean)
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableNever: FlowableNever()
retrofit2.Utils: java.lang.RuntimeException parameterError(java.lang.reflect.Method,java.lang.Throwable,int,java.lang.String,java.lang.Object[])
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver: void onNext(java.lang.Object)
io.reactivex.schedulers.Schedulers$IOTask: io.reactivex.Scheduler call()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.gson.JsonElement: com.google.gson.JsonElement deepCopy()
androidx.arch.core.executor.ArchTaskExecutor$2: ArchTaskExecutor$2()
androidx.core.widget.PopupMenuCompat: android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: boolean isDisposed()
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: SingleDoAfterTerminate$DoAfterTerminateObserver(io.reactivex.SingleObserver,io.reactivex.functions.Action)
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: void drain()
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: FlowableFlatMap$InnerSubscriber(io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber,long)
androidx.appcompat.widget.AppCompatTextClassifierHelper: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.app.WindowDecorActionBar: void setHomeAsUpIndicator(int)
androidx.appcompat.view.menu.CascadingMenuPopup: void setShowTitle(boolean)
androidx.collection.CircularArray: java.lang.Object popFirst()
androidx.appcompat.view.StandaloneActionMode: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.customview.widget.ViewDragHelper$2: ViewDragHelper$2(androidx.customview.widget.ViewDragHelper)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
androidx.core.app.JobIntentService$CompatJobEngine: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe: void subscribeActual(io.reactivex.Observer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getRowCount()
io.reactivex.processors.PublishProcessor$PublishSubscription: void request(long)
androidx.lifecycle.viewmodel.R: R()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void recycle()
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription: void fastPath()
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
androidx.core.R$string: R$string()
androidx.appcompat.view.menu.CascadingMenuPopup: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.app.RemoteInput: java.util.Set getAllowedDataTypes()
androidx.appcompat.widget.ActionBarContextView: void closeMode()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: void onComplete()
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: void onComplete()
com.zhy.http.okhttp.utils.Exceptions: Exceptions()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: io.reactivex.internal.fuseable.SimplePlainQueue access$100(io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver)
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl11: ThreadStackFactoryImpl11()
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: void onComplete()
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
androidx.appcompat.widget.DrawableUtils: DrawableUtils()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
com.zhy.http.okhttp.utils.Platform: com.zhy.http.okhttp.utils.Platform get()
androidx.core.R$dimen: R$dimen()
androidx.appcompat.widget.ActivityChooserView$1: void onChanged()
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.util.QueueDrainHelper: boolean checkTerminated(boolean,boolean,io.reactivex.Observer,boolean,io.reactivex.internal.fuseable.SimpleQueue,io.reactivex.disposables.Disposable,io.reactivex.internal.util.ObservableQueueDrain)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: void onError(java.lang.Throwable)
okio.RealBufferedSource: int readInt()
androidx.viewpager.widget.ViewPager: void initViewPager()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: ViewCompat$AccessibilityPaneVisibilityManager()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUpPanel(int,android.view.KeyEvent)
com.appspa.update.utils.UpdateUtils: android.util.DisplayMetrics getDisplayMetrics(android.content.Context)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: void onComplete()
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int getChangingConfigurations()
io.reactivex.internal.operators.observable.ObservableReplay: ObservableReplay(io.reactivex.ObservableSource,io.reactivex.ObservableSource,java.util.concurrent.atomic.AtomicReference,io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier)
io.reactivex.internal.observers.BasicIntQueueDisposable: boolean offer(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
androidx.appcompat.view.ActionMode: void setTitle(int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)
com.appspa.update.widget.BaseDialog: void show()
com.xuexiang.xhttp2.utils.Utils: android.net.Uri getFileUri(java.lang.String,java.lang.String,okhttp3.MediaType)
androidx.customview.widget.ViewDragHelper: void captureChildView(android.view.View,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: RoundedBitmapDrawable(android.content.res.Resources,android.graphics.Bitmap)
com.appspa.update.widget.UpdateDialog: void onInstallApk()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void dispose()
androidx.core.view.ViewPropertyAnimatorCompat: long getDuration()
com.appspa.update.AppSpace: android.content.Context getContext()
androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservablePublishAlt: void subscribeActual(io.reactivex.Observer)
androidx.lifecycle.FullLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: void signalConsumer()
androidx.appcompat.app.ToolbarActionBar: void populateOptionsMenu()
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStarted()
com.appspa.update.widget.UpdateDialog: void onAttachedToWindow()
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
androidx.viewpager.widget.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void completeAll()
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
io.reactivex.internal.observers.FutureObserver: boolean isDone()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getGapSize()
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: void onComplete()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet,int)
androidx.core.app.RemoteInput: java.lang.String getExtraResultsKeyForData(java.lang.String)
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void update(androidx.core.app.ActivityOptionsCompat)
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
io.reactivex.internal.operators.observable.ObservableReplay$ReplaySource: ObservableReplay$ReplaySource(java.util.concurrent.atomic.AtomicReference,io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
com.appspa.update.utils.ShellUtils$CommandResult: ShellUtils$CommandResult(int,java.lang.String,java.lang.String)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: void flush()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void computeContentWidth()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationMode(int)
okhttp3.Request: java.lang.String method()
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
androidx.core.app.JobIntentService$WorkEnqueuer: JobIntentService$WorkEnqueuer(android.content.ComponentName)
androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)
androidx.appcompat.view.StandaloneActionMode: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintContentIntentLaunchesActivity()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void complete()
okhttp3.ConnectionSpec: java.util.List cipherSuites()
io.reactivex.internal.disposables.EmptyDisposable: int requestFusion(int)
androidx.core.app.NotificationCompatJellybean: java.lang.Object[] getActionObjectsLocked(android.app.Notification)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver: void onNext(java.lang.Object)
okio.SegmentedByteString: java.lang.Object writeReplace()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement peek()
okio.SegmentedByteString: java.lang.String base64()
com.appspa.update.utils.UpdateUtils: boolean checkNetwork()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
okio.InflaterSource: long read(okio.Buffer,long)
io.reactivex.internal.operators.flowable.FlowableReplay: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.ConstructorConstructor$3: java.lang.Object construct()
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
androidx.appcompat.view.menu.MenuView$ItemView: void setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.subscriptions.SubscriptionArbiter: void drain()
androidx.drawerlayout.widget.DrawerLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: void onComplete()
com.xuexiang.xhttp2.callback.CallClazzProxy: CallClazzProxy(java.lang.reflect.Type)
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.appspa.demo.utils.NotifyUtils: NotifyUtils()
com.google.gson.JsonArray: short getAsShort()
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: void dispose()
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.Fragment getItem(int)
androidx.core.provider.FontsContractCompat$4$1: FontsContractCompat$4$1(androidx.core.provider.FontsContractCompat$4)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow: int getPromptPosition()
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)
androidx.collection.CircularArray: java.lang.Object get(int)
okio.GzipSource: void close()
androidx.fragment.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)
com.google.gson.JsonObject: int hashCode()
okhttp3.HttpUrl: int hashCode()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.lifecycle.MethodCallsLogger: boolean approveCall(java.lang.String,int)
com.appspa.update.service.DownloadService$FileDownloadCallBack: void onStart()
io.reactivex.internal.operators.maybe.MaybeToPublisher: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.observers.InnerQueuedObserver: boolean isDisposed()
androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)
androidx.core.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: void innerComplete()
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: void onError(java.lang.Throwable)
io.reactivex.processors.MulticastProcessor: void onNext(java.lang.Object)
androidx.appcompat.view.ContextThemeWrapper: void setTheme(int)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void subscribe(org.reactivestreams.Subscriber)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
retrofit2.Retrofit: java.lang.Object create(java.lang.Class)
com.google.gson.internal.LazilyParsedNumber: boolean equals(java.lang.Object)
com.google.gson.stream.JsonWriter: void setHtmlSafe(boolean)
androidx.appcompat.view.menu.MenuPopupHelper: void showPopup(int,int,boolean,boolean)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setPerson(androidx.core.app.Person)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()
io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction: java.lang.Object apply(java.lang.Object)
androidx.core.view.NestedScrollingChild: void setNestedScrollingEnabled(boolean)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[])
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: void onNext(java.lang.Object)
okhttp3.internal.http1.Http1Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb: androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: void onError(java.lang.Throwable)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.graphics.Canvas)
com.xuexiang.xhttp2.callback.CallBack: CallBack()
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setIsAutoInstall(boolean)
com.appspa.update.widget.UpdateDialogFragment: void show(androidx.fragment.app.FragmentManager,com.appspa.update.entity.UpdateEntity,com.appspa.update.proxy.IPrompterProxy,com.appspa.update.entity.PromptEntity)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo: ActionBarDrawerToggleHoneycomb$SetIndicatorInfo(android.app.Activity)
org.aspectj.runtime.reflect.AdviceSignatureImpl: java.lang.String toAdviceName(java.lang.String)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: void dispose()
com.zhy.http.okhttp.cookie.CookieJarImpl: java.util.List loadForRequest(okhttp3.HttpUrl)
androidx.activity.ComponentActivity: void onBackPressed()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withLayer()
androidx.core.app.ActivityCompat: void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.View getActionView()
io.reactivex.internal.operators.parallel.ParallelMapTry: int parallelism()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: FastOutSlowInInterpolator()
androidx.appcompat.app.AppCompatDelegateImpl$5: void onAttachedFromWindow()
androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: MaybeObserveOn$ObserveOnMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.Scheduler)
androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
io.reactivex.Flowable: int bufferSize()
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable: void subscribeActual(io.reactivex.Observer)
okhttp3.CipherSuite: java.util.List forJavaNames(java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: int getHorizontalOffset()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void applyButtonTint()
io.reactivex.internal.subscribers.FutureSubscriber: java.lang.Object get(long,java.util.concurrent.TimeUnit)
retrofit2.ParameterHandler$Body: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.appcompat.view.menu.MenuPresenter: int getId()
io.reactivex.internal.util.NotificationLite: boolean acceptFull(java.lang.Object,io.reactivex.Observer)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isStateful()
androidx.core.provider.FontsContractCompat$1: FontsContractCompat$1(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String)
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: SingleFlatMapCompletable$FlatMapCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Function)
androidx.core.view.WindowInsetsCompat: boolean hasStableInsets()
com.google.gson.JsonNull: com.google.gson.JsonNull deepCopy()
androidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall,retrofit2.Callback)
androidx.core.content.res.ResourcesCompat$FontCallback$2: ResourcesCompat$FontCallback$2(androidx.core.content.res.ResourcesCompat$FontCallback,int)
com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.util.UUID)
androidx.appcompat.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: void onComplete()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)
androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroups(java.util.List)
com.zhy.http.okhttp.callback.Callback: void onBefore(okhttp3.Request,int)
androidx.drawerlayout.widget.DrawerLayout: boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View)
androidx.appcompat.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: FlowableLimit$LimitSubscriber(org.reactivestreams.Subscriber,long)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void drainLoop()
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: java.util.List get(okhttp3.HttpUrl)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int)
com.appspa.update.UpdateManager: void doCheck()
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: void onComplete()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.SwitchCompat: void onMeasure(int,int)
com.xuexiang.xhttp2.cache.key.Strings: java.lang.String byteToString(java.lang.Byte)
okhttp3.internal.cache.DiskLruCache$Editor$1: DiskLruCache$Editor$1(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink)
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
androidx.appcompat.app.ActionBarDrawerToggle: void setActionBarDescription(int)
androidx.core.view.OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.appspa.update.utils.UpdateUtils: java.lang.String getDiskCacheDir(android.content.Context,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.core.view.NestedScrollingParent2: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String toJSONString()
retrofit2.RequestFactory$Builder: void validateResolvableType(int,java.lang.reflect.Type)
androidx.appcompat.app.ToolbarActionBar: boolean closeOptionsMenu()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: FingerprintManagerCompat$1(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: void onComplete()
androidx.customview.widget.ViewDragHelper: android.view.View getCapturedView()
androidx.appcompat.app.WindowDecorActionBar: void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: void onError(java.lang.Throwable)
com.appspa.update.widget.UpdateDialogFragment: void setDialogTheme(int,int,int)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: ObservableBuffer$BufferExactObserver(io.reactivex.Observer,int,java.util.concurrent.Callable)
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)
io.reactivex.internal.functions.Functions$Array5Func: java.lang.Object apply(java.lang.Object)
okhttp3.internal.platform.AndroidPlatform: void log(int,java.lang.String,java.lang.Throwable)
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: ObservableOnErrorNext$OnErrorNextObserver(io.reactivex.Observer,io.reactivex.functions.Function,boolean)
okhttp3.RequestBody$2: long contentLength()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.view.menu.MenuPopup: void setEpicenterBounds(android.graphics.Rect)
com.xuexiang.xhttp2.model.ExpiredInfo: ExpiredInfo(int)
okhttp3.CacheControl: boolean noStore()
okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence)
androidx.appcompat.widget.ListPopupWindow: boolean onKeyUp(int,android.view.KeyEvent)
androidx.collection.ArraySet: boolean removeAll(androidx.collection.ArraySet)
androidx.fragment.app.FragmentManagerImpl: void setBackStackIndex(int,androidx.fragment.app.BackStackRecord)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: int hashCode()
androidx.customview.widget.ViewDragHelper: void clearMotionHistory(int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()
androidx.collection.SparseArrayCompat: void putAll(androidx.collection.SparseArrayCompat)
io.reactivex.internal.operators.single.SingleDelay$Delay: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription: void slowPath(long)
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: void onComplete()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setBarThickness(float)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean hasSubMenu()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View)
androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: void onNext(java.lang.Object)
com.google.gson.JsonIOException: JsonIOException(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$35$1: TypeAdapters$35$1(com.google.gson.internal.bind.TypeAdapters$35,java.lang.Class)
androidx.cursoradapter.widget.CursorAdapter: java.lang.Object getItem(int)
com.appspa.demo.App$1: void onFailure(com.appspa.update.entity.UpdateError)
androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.widget.DropDownListView: void updateSelectorStateCompat()
androidx.core.app.NotificationManagerCompat: int getImportance()
io.reactivex.subscribers.SerializedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.vectordrawable.graphics.drawable.Animatable2Compat: void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
io.reactivex.internal.operators.mixed.ScalarXMapZHelper: ScalarXMapZHelper()
okhttp3.OkHttpClient$1: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setPrettyPrinting()
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap getBitmap()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)
com.google.gson.internal.ConstructorConstructor$12: java.lang.Object construct()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
androidx.viewpager.widget.ViewPager: void removeNonDecorViews()
com.xuexiang.xhttp2.transform.func.ApiResultFunc: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableScan: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.LinkedHashTreeMap$Node: LinkedHashTreeMap$Node()
io.reactivex.internal.observers.BasicFuseableObserver: BasicFuseableObserver(io.reactivex.Observer)
io.reactivex.internal.disposables.ListCompositeDisposable: void dispose()
androidx.appcompat.widget.PopupMenu$2: void onDismiss()
androidx.appcompat.widget.LinearLayoutCompat: void layoutHorizontal(int,int,int,int)
retrofit2.Platform$Android: java.util.concurrent.Executor defaultCallbackExecutor()
com.google.gson.internal.JsonReaderInternalAccess: JsonReaderInternalAccess()
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: void complete()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)
io.reactivex.internal.util.LinkedArrayList: java.lang.String toString()
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: io.reactivex.internal.queue.SpscLinkedArrayQueue getOrCreateQueue()
io.reactivex.internal.observers.BlockingObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.ForEachWhileObserver: void dispose()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeTextType()
io.reactivex.internal.observers.BlockingObserver: boolean isDisposed()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setPersons(androidx.core.app.Person[])
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: MenuItemWrapperICS$ActionProviderWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
androidx.appcompat.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleBiGenerator: java.lang.Object apply(java.lang.Object,io.reactivex.Emitter)
androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)
androidx.appcompat.widget.ActivityChooserModel: ActivityChooserModel(android.content.Context,java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: void dispose()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.drawable.Drawable getIcon()
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: void onComplete()
io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object)
io.reactivex.internal.util.NotificationLite$ErrorNotification: int hashCode()
androidx.collection.CircularArray: void addFirst(java.lang.Object)
androidx.fragment.app.Fragment$4: Fragment$4(androidx.fragment.app.Fragment)
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
io.reactivex.internal.util.VolatileSizeArrayList: VolatileSizeArrayList(int)
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(int,java.lang.CharSequence,android.app.PendingIntent)
io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber: void onNext(java.lang.Object)
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
androidx.fragment.app.BackStackRecord: void commitNowAllowingStateLoss()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.observable.ObservableObserveOn: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableConcatMap: void subscribeActual(io.reactivex.Observer)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List)
io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: TrampolineScheduler$SleepingRunnable(java.lang.Runnable,io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker,long)
androidx.appcompat.widget.AppCompatTextClassifierHelper: AppCompatTextClassifierHelper(android.widget.TextView)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: void onTimeout(long)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: void innerSuccess(java.lang.Object,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.appcompat.app.AlertController: void manageScrollIndicators(android.view.View,android.view.View,android.view.View)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: DropDownListView$ResolveHoverRunnable(androidx.appcompat.widget.DropDownListView)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: void dispose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber: io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator getIterable()
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean)
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: void onNext(java.lang.Object)
okio.RealBufferedSink: void close()
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionPause(android.transition.Transition)
io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable: boolean isDisposed()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void recycle()
okhttp3.internal.platform.OptionalMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void dispose()
androidx.appcompat.widget.ResourcesWrapper: ResourcesWrapper(android.content.res.Resources)
androidx.core.app.NotificationCompat$WearableExtender: int getContentAction()
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: void dispose()
androidx.core.os.LocaleListCompatWrapper: java.util.Locale get(int)
com.appspa.update.widget.UpdateDialog: void initTheme(int,int,int,float,float)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber: void onNext(java.lang.Object)
androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)
androidx.collection.ArraySet$1: void colClear()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
io.reactivex.plugins.RxJavaPlugins: boolean onBeforeBlocking()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int,boolean)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerBefore()
com.appspa.update.utils.DialogUtils: DialogUtils()
okio.Buffer: long readAll(okio.Sink)
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: void onTimeout(long)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: void requestMore(long)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getGroupId()
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.fragment.app.FragmentStatePagerAdapter: FragmentStatePagerAdapter(androidx.fragment.app.FragmentManager,int)
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)
androidx.loader.R$integer: R$integer()
androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void dispose()
androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.view.menu.MenuBuilder: void clearHeader()
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getViewTypeCount()
androidx.core.widget.AutoScrollHelper: boolean shouldAnimate()
com.google.gson.JsonObject: com.google.gson.JsonArray getAsJsonArray(java.lang.String)
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: void dispose()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)
com.appspa.update.proxy.impl.DefaultUpdateChecker$2: void onSuccess(java.lang.String)
com.google.gson.FieldNamingPolicy$2: java.lang.String translateName(java.lang.reflect.Field)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void disposeAll()
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void next()
io.reactivex.internal.operators.single.SingleFlatMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
retrofit2.converter.gson.GsonRequestBodyConverter: GsonRequestBodyConverter(com.google.gson.Gson,com.google.gson.TypeAdapter)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionEnd(android.transition.Transition)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: FlowableConcatMapCompletable$ConcatMapCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Function,io.reactivex.internal.util.ErrorMode,int)
com.zhy.http.okhttp.OkHttpUtils: void cancelTag(java.lang.Object)
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: void subscribeActual()
okhttp3.internal.ws.WebSocketWriter$FrameSink: void flush()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver$ConsumerIndexHolder: ObservableWindowTimed$WindowExactBoundedObserver$ConsumerIndexHolder(long,io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver)
androidx.appcompat.R$dimen: R$dimen()
com.google.gson.stream.JsonReader: boolean isLenient()
com.google.gson.internal.LinkedHashTreeMap: boolean equal(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentController: int getActiveFragmentsCount()
io.reactivex.internal.operators.completable.CompletableEmpty: CompletableEmpty()
com.appspa.demo.http.OKHttpUpdateHttpService$2: void onError(okhttp3.Call,java.lang.Exception,int)
io.reactivex.internal.operators.observable.ObservableTake: ObservableTake(io.reactivex.ObservableSource,long)
androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder,int)
androidx.appcompat.view.menu.ListMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable checkIconCache(java.lang.String)
com.zhy.http.okhttp.builder.PostFileBuilder: PostFileBuilder()
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: void onError(java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: void onError(java.lang.Throwable)
io.reactivex.disposables.ReferenceDisposable: ReferenceDisposable(java.lang.Object)
androidx.customview.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)
androidx.core.widget.TextViewCompat: TextViewCompat()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: void onError(java.lang.Throwable)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()
androidx.core.widget.NestedScrollView: boolean canScroll()
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber: void onComplete()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.core.graphics.PathSegment: int hashCode()
androidx.core.view.inputmethod.InputConnectionCompat: boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
com.xuexiang.xhttp2.model.HttpParams: void put(java.lang.String,java.lang.Object,java.lang.String,okhttp3.MediaType,com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack)
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableBuffer: void subscribeActual(io.reactivex.Observer)
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Headers)
androidx.loader.content.Loader: void onReset()
org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor: void onComplete()
io.reactivex.android.plugins.RxAndroidPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)
io.reactivex.FlowableSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.LinkedHashTreeMap$EntrySet: LinkedHashTreeMap$EntrySet(com.google.gson.internal.LinkedHashTreeMap)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: boolean createBuffer()
androidx.versionedparcelable.VersionedParcelize: int[] deprecatedIds()
androidx.appcompat.widget.TooltipCompatHandler$2: void run()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableBufferTimed: void subscribeActual(io.reactivex.Observer)
org.aspectj.internal.lang.reflect.AjTypeImpl: java.lang.String toString()
com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: void onNext(java.lang.Object)
io.reactivex.internal.observers.BiConsumerSingleObserver: void onSuccess(java.lang.Object)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
io.reactivex.internal.operators.observable.ObservableAll: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: SingleFlatMap$SingleFlatMapCallback(io.reactivex.SingleObserver,io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: void onError(java.lang.Throwable)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl: java.lang.Object initialValue()
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
okio.RealBufferedSink: okio.BufferedSink writeIntLe(int)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
androidx.fragment.app.DialogFragment$1: DialogFragment$1(androidx.fragment.app.DialogFragment)
androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput fromBundle(android.os.Bundle)
org.aspectj.internal.lang.reflect.AjTypeImpl: boolean equals(java.lang.Object)
androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)
retrofit2.Response: java.lang.String toString()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean getPadding(android.graphics.Rect)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: void dispose()
androidx.annotation.InspectableProperty: java.lang.String name()
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void innerClose(boolean,io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver)
io.reactivex.subjects.UnicastSubject: void onError(java.lang.Throwable)
android.support.v4.os.ResultReceiver$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.view.inputmethod.EditorInfoCompat: EditorInfoCompat()
androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)
androidx.appcompat.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)
org.aspectj.internal.lang.reflect.DeclareParentsImpl: boolean isExtends()
androidx.appcompat.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()
io.reactivex.internal.subscribers.StrictSubscriber: StrictSubscriber(org.reactivestreams.Subscriber)
okhttp3.internal.http2.Settings: Settings()
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void onNext(java.lang.Object)
androidx.core.internal.view.SupportMenuItem: boolean requiresOverflow()
androidx.core.content.res.ComplexColorCompat: ComplexColorCompat(android.graphics.Shader,android.content.res.ColorStateList,int)
androidx.viewpager.widget.PagerTabStrip: void setTextSpacing(int)
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)
com.appspa.update.utils.UpdateUtils: boolean isPrivateApkCacheDir(com.appspa.update.entity.UpdateEntity)
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: void onComplete()
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: BehaviorSubject$BehaviorDisposable(io.reactivex.Observer,io.reactivex.subjects.BehaviorSubject)
androidx.appcompat.app.WindowDecorActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(android.view.View)
androidx.core.view.ViewCompat: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: void onAnimationEnd(android.view.View)
okio.AsyncTimeout: void scheduleTimeout(okio.AsyncTimeout,long,boolean)
io.reactivex.internal.util.NotificationLite: java.lang.Object subscription(org.reactivestreams.Subscription)
okhttp3.EventListener: void callEnd(okhttp3.Call)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
androidx.customview.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)
com.zhy.http.okhttp.request.PostFormRequest: java.lang.String guessMimeType(java.lang.String)
io.reactivex.internal.operators.parallel.ParallelFromPublisher: void subscribe(org.reactivestreams.Subscriber[])
androidx.appcompat.widget.ShareActionProvider: android.view.View onCreateActionView()
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.SearchView$2: void run()
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: void onError(java.lang.Throwable)
com.zhy.http.okhttp.callback.Callback$1: java.lang.Object parseNetworkResponse(okhttp3.Response,int)
io.reactivex.disposables.ReferenceDisposable: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void innerSuccess(io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableMapPublisher: FlowableMapPublisher(org.reactivestreams.Publisher,io.reactivex.functions.Function)
io.reactivex.internal.subscribers.BoundedSubscriber: BoundedSubscriber(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer,int)
com.appspa.update.entity.UpdateEntity: boolean hasPatch()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAutoMirrored(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: AppCompatDelegateImpl$PanelMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
okio.InflaterSource: boolean refill()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void onComplete()
com.google.gson.internal.bind.TypeAdapters$22: void write(com.google.gson.stream.JsonWriter,java.net.URI)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setEnterFadeDuration(int)
com.xuexiang.xhttp2.interceptor.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.internal.subscriptions.EmptySubscription: boolean offer(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: void run()
io.reactivex.internal.subscriptions.EmptySubscription: boolean isEmpty()
androidx.appcompat.graphics.drawable.StateListDrawable: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: MaybeDelayOtherPublisher$DelayMaybeObserver(io.reactivex.MaybeObserver,org.reactivestreams.Publisher)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: void onComplete()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AlertController: android.widget.ListView getListView()
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: java.lang.Object getValue()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasWindowFocus()
io.reactivex.exceptions.CompositeException$WrappedPrintStream: void println(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
androidx.viewpager.R$integer: R$integer()
com.google.gson.internal.UnsafeAllocator: void assertInstantiable(java.lang.Class)
androidx.versionedparcelable.VersionedParcelStream: android.os.Bundle readBundle()
androidx.collection.MapCollections: java.util.Set getEntrySet()
com.appspa.update._AppSpace: java.util.Map access$100()
io.reactivex.subjects.PublishSubject: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.viewpager.widget.PagerAdapter: android.os.Parcelable saveState()
com.google.gson.internal.LinkedHashTreeMap$KeySet$1: java.lang.Object next()
io.reactivex.internal.operators.observable.ObservableSingleMaybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.view.ActionMode$Callback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
com.appspa.update._AppSpace: com.appspa.update.proxy.IUpdateParser getIUpdateParser()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
org.reactivestreams.Subscription: void cancel()
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: void dispose(java.lang.Object)
io.reactivex.processors.PublishProcessor: void remove(io.reactivex.processors.PublishProcessor$PublishSubscription)
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: void run()
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.EmptyCompletableObserver: boolean isDisposed()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: AccessibilityDelegateCompat$AccessibilityDelegateAdapter(androidx.core.view.AccessibilityDelegateCompat)
androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()
androidx.core.graphics.ColorUtils: void colorToXYZ(int,double[])
com.appspa.update.service.DownloadService: void onDestroy()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTint(int)
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: ViewPropertyAnimatorCompatSet()
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: boolean isDisposed()
io.reactivex.internal.util.QueueDrainHelper: io.reactivex.internal.fuseable.SimpleQueue createQueue(int)
okhttp3.RequestBody$1: okhttp3.MediaType contentType()
androidx.core.widget.ScrollerCompat: void abortAnimation()
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: boolean isDisposed()
com.google.gson.reflect.TypeToken: int hashCode()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: void complete(io.reactivex.subjects.UnicastSubject)
okhttp3.internal.Util: Util()
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: void onNext(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
io.reactivex.internal.operators.flowable.FlowableEmpty: FlowableEmpty()
okio.Buffer: okio.ByteString readByteString()
androidx.appcompat.app.ActionBar$Tab: void select()
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: void addFinal(java.lang.Object)
com.xuexiang.xhttp2.cache.converter.GsonDiskConverter: java.lang.Object load(java.io.InputStream,java.lang.reflect.Type)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.String get(int)
io.reactivex.internal.util.EndConsumerHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable,java.lang.Class)
androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String[],java.lang.String)
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
com.appspa.update.entity.PromptEntity: float getWidthRatio()
com.xuexiang.xhttp2.interceptor.BaseExpiredInterceptor: okhttp3.Response onAfterRequest(okhttp3.Response,okhttp3.Interceptor$Chain,java.lang.String)
androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.schedulers.NewThreadWorker: void dispose()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void access$000(io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver,java.lang.Object,boolean,io.reactivex.disposables.Disposable)
io.reactivex.internal.subscribers.FutureSubscriber: void onComplete()
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.single.SingleCache$CacheDisposable: SingleCache$CacheDisposable(io.reactivex.SingleObserver,io.reactivex.internal.operators.single.SingleCache)
androidx.appcompat.app.ActionBar: java.lang.CharSequence getSubtitle()
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: io.reactivex.Notification takeNext()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: void handleMessage(android.os.Message)
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat getIcon()
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: FlowableReplay$ReplaySubscriber(io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBuffer)
io.reactivex.subjects.ReplaySubject: void onComplete()
androidx.appcompat.app.ActionBar: void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
retrofit2.ParameterHandler$Query: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.core.content.res.GrowingArrayUtils: GrowingArrayUtils()
com.google.gson.internal.bind.JsonTreeReader$1: void close()
retrofit2.Utils: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)
io.reactivex.internal.observers.DeferredScalarDisposable: boolean isDisposed()
androidx.core.os.TraceCompat: void endSection()
com.zhy.http.okhttp.OkHttpUtils$3: OkHttpUtils$3(com.zhy.http.okhttp.OkHttpUtils,com.zhy.http.okhttp.callback.Callback,java.lang.Object,int)
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.graphics.drawable.Drawable getBackground()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)
io.reactivex.internal.operators.flowable.FlowablePublishAlt: void subscribeActual(org.reactivestreams.Subscriber)
com.xuexiang.xhttp2.R: R()
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
io.reactivex.disposables.Disposable: void dispose()
androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.loader.content.Loader: boolean isReset()
com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.functions.Functions$FalsePredicate: boolean test(java.lang.Object)
io.reactivex.internal.schedulers.SchedulerPoolFactory: void tryPutIntoPool(boolean,java.util.concurrent.ScheduledExecutorService)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: ObservableSequenceEqualSingle$EqualCoordinator(io.reactivex.SingleObserver,int,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate)
androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()
io.reactivex.internal.schedulers.NewThreadScheduler: NewThreadScheduler()
io.reactivex.internal.schedulers.SchedulerWhen$SubscribedDisposable: void dispose()
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: void createWorkers(int,io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport$WorkerCallback)
androidx.collection.LruCache: java.lang.Object get(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: AppCompatDelegateImpl$ActionMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
io.reactivex.Observable: io.reactivex.Observable compose(io.reactivex.ObservableTransformer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
io.reactivex.internal.subscriptions.BasicQueueSubscription: void clear()
com.appspa.update.widget.NumberProgressBar: boolean getProgressTextVisibility()
androidx.appcompat.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)
androidx.appcompat.widget.SearchView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.view.WindowInsetsCompat: boolean hasInsets()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SimpleGenerator: java.lang.Object apply(java.lang.Object,io.reactivex.Emitter)
com.appspa.update.UpdateManager: void startDownload(com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl: int getModifiers()
androidx.core.content.res.ComplexColorCompat: boolean willDraw()
io.reactivex.internal.operators.flowable.FlowableFlatMap: io.reactivex.FlowableSubscriber subscribe(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isEnabled()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.core.os.CancellationSignal: boolean isCanceled()
androidx.core.provider.SelfDestructiveThread: java.lang.Object postAndWait(java.util.concurrent.Callable,int)
androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
okhttp3.internal.cache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])
com.appspa.demo.http.OKHttpUpdateHttpService$1: void onError(okhttp3.Call,java.lang.Exception,int)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$2: BaseStrategy$3$2(com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3,java.lang.Object)
androidx.fragment.app.FragmentManagerNonConfig: boolean isRetaining(androidx.fragment.app.Fragment)
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.content.Context getActionBarThemedContext()
io.reactivex.internal.operators.observable.ObservableTakeLastTimed: void subscribeActual(io.reactivex.Observer)
androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)
io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean,int)
io.reactivex.observers.TestObserver$EmptyObserver: void onComplete()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int measureContentWidth()
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: ObservableTakeWhile$TakeWhileObserver(io.reactivex.Observer,io.reactivex.functions.Predicate)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence)
retrofit2.ParameterHandler$PartMap: ParameterHandler$PartMap(java.lang.reflect.Method,int,retrofit2.Converter,java.lang.String)
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
androidx.appcompat.widget.DecorContentParent: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)
androidx.customview.widget.ExploreByTouchHelper$2: int size(androidx.collection.SparseArrayCompat)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hasIcon()
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: void onNext(java.lang.Object)
retrofit2.Utils$GenericArrayTypeImpl: int hashCode()
androidx.loader.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean)
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
com.google.gson.internal.bind.TypeAdapters$17: TypeAdapters$17()
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer()
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.subjects.SerializedSubject: void onError(java.lang.Throwable)
okhttp3.internal.http2.Http2Connection$3: Http2Connection$3(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[])
androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()
retrofit2.Retrofit: Retrofit(okhttp3.Call$Factory,okhttp3.HttpUrl,java.util.List,java.util.List,java.util.concurrent.Executor,boolean)
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: SingleDoOnDispose$DoOnDisposeObserver(io.reactivex.SingleObserver,io.reactivex.functions.Action)
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int)
androidx.lifecycle.ViewModel: void clear()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void onChange()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable getCurrent()
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: Http2Codec$StreamFinishingSource(okhttp3.internal.http2.Http2Codec,okio.Source)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: FastOutLinearInInterpolator()
androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(int)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: boolean isEmpty()
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
retrofit2.Utils: Utils()
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeTask: MaybeSubscribeOn$SubscribeTask(io.reactivex.MaybeObserver,io.reactivex.MaybeSource)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber: FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber(io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.observable.ObservableGroupBy$State: boolean isDisposed()
androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)
okio.Buffer: okio.Buffer write(byte[],int,int)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: FlowableSequenceEqualSingle$EqualCoordinator(io.reactivex.SingleObserver,int,io.reactivex.functions.BiPredicate)
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
io.reactivex.internal.subscribers.BlockingFirstSubscriber: BlockingFirstSubscriber()
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()
androidx.appcompat.app.WindowDecorActionBar: void cleanupTabs()
androidx.versionedparcelable.VersionedParcelParcel: void writeFloat(float)
androidx.fragment.app.FragmentTabHost: FragmentTabHost(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: void onTimeout(long)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: void onError(java.lang.Throwable)
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void dispose()
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: ObservableMergeWithSingle$MergeWithObserver(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableRefCount: void clearTimer(io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection)
io.reactivex.processors.ReplayProcessor$TimedNode: ReplayProcessor$TimedNode(java.lang.Object,long)
androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
okhttp3.internal.http2.Http2: java.lang.String formatFlags(byte,byte)
androidx.appcompat.widget.PopupMenu$3: boolean onForwardingStarted()
androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)
androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()
io.reactivex.internal.observers.BasicIntQueueDisposable: boolean offer(java.lang.Object,java.lang.Object)
androidx.customview.widget.FocusStrategy: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
okio.ForwardingTimeout: void throwIfReached()
com.google.gson.DefaultDateTypeAdapter: DefaultDateTypeAdapter(int,int)
androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)
androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()
io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent: SingleDoOnEvent$DoOnEvent(io.reactivex.internal.operators.single.SingleDoOnEvent,io.reactivex.SingleObserver)
retrofit2.Converter$Factory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.fragment.app.FragmentManagerImpl: void restoreSaveState(android.os.Parcelable)
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: FlowableMaterialize$MaterializeSubscriber(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompat$Action$WearableExtender: void setFlag(int,boolean)
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: void dispose()
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: java.lang.String getAnnotationAsText()
androidx.appcompat.graphics.drawable.StateListDrawable: boolean isStateful()
androidx.fragment.app.FragmentTabHost: android.os.Parcelable onSaveInstanceState()
androidx.core.provider.FontsContractCompat$4$2: FontsContractCompat$4$2(androidx.core.provider.FontsContractCompat$4)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)
io.reactivex.processors.ReplayProcessor$ReplaySubscription: ReplayProcessor$ReplaySubscription(org.reactivestreams.Subscriber,io.reactivex.processors.ReplayProcessor)
androidx.appcompat.graphics.drawable.StateListDrawable: int getStateDrawableIndex(int[])
androidx.appcompat.widget.DropDownListView: boolean hasFocus()
androidx.appcompat.widget.AppCompatSeekBarHelper: void setTickMarkTintList(android.content.res.ColorStateList)
androidx.customview.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)
androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: boolean isDisposed()
androidx.loader.content.CursorLoader: CursorLoader(android.content.Context)
okio.ByteString: okio.ByteString substring(int)
androidx.customview.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)
androidx.drawerlayout.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void onError(java.lang.Throwable)
com.appspa.update.UpdateManager: java.lang.String getUrl()
androidx.versionedparcelable.ParcelUtils: java.util.List getVersionedParcelableList(android.os.Bundle,java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: ObservableFlatMap$MergeObserver(io.reactivex.Observer,io.reactivex.functions.Function,boolean,int,int)
androidx.fragment.app.FragmentTabHost: void onTabChanged(java.lang.String)
androidx.appcompat.widget.SearchView$6: boolean onKey(android.view.View,int,android.view.KeyEvent)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: void onComplete()
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
io.reactivex.internal.subscribers.FutureSubscriber: boolean isCancelled()
androidx.appcompat.widget.SwitchCompat: void applyThumbTint()
io.reactivex.internal.observers.SubscriberCompletableObserver: void cancel()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.model.HttpParams: void removeFile(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: void request(long)
io.reactivex.subscribers.TestSubscriber: void onStart()
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: void request(long)
com.google.gson.Gson: void toJson(com.google.gson.JsonElement,java.lang.Appendable)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.viewpager.widget.PagerTitleStrip: void setGravity(int)
io.reactivex.internal.schedulers.TrampolineScheduler: TrampolineScheduler()
org.aspectj.runtime.reflect.SignatureImpl: java.lang.Class[] extractTypes(int)
com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: void onComplete()
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.FieldNamingPolicy: java.lang.String modifyString(char,java.lang.String,int)
com.google.gson.JsonObject: com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
io.reactivex.internal.operators.observable.ObservableWindow: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.completable.CompletableAmb$Amb: CompletableAmb$Amb(java.util.concurrent.atomic.AtomicBoolean,io.reactivex.disposables.CompositeDisposable,io.reactivex.CompletableObserver)
io.reactivex.internal.operators.parallel.ParallelConcatMap: void subscribe(org.reactivestreams.Subscriber[])
okio.DeflaterSink: void finishDeflate()
com.xuexiang.xhttp2.https.HttpsUtils: HttpsUtils()
androidx.appcompat.widget.AppCompatDrawableManager: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
okio.ByteString: int lastIndexOf(okio.ByteString,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)
androidx.fragment.app.ListFragment: void setListShown(boolean,boolean)
com.google.gson.internal.JavaVersion: int determineMajorJavaVersion()
retrofit2.Utils: okhttp3.ResponseBody buffer(okhttp3.ResponseBody)
androidx.core.graphics.BitmapCompat: void setHasMipMap(android.graphics.Bitmap,boolean)
retrofit2.ParameterHandler$2: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$FragmentTag: FragmentManagerImpl$FragmentTag()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampDownDuration(int)
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: void run()
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: ObservableElementAtSingle$ElementAtObserver(io.reactivex.SingleObserver,long,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnConditionalSubscriber: ParallelRunOn$RunOnConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,int,io.reactivex.internal.queue.SpscArrayQueue,io.reactivex.Scheduler$Worker)
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: java.lang.Object leaveTransform(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: void accept(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuPopup: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.app.ActionBar: void setHomeActionContentDescription(int)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void onComplete()
androidx.core.widget.ContentLoadingProgressBar$2: ContentLoadingProgressBar$2(androidx.core.widget.ContentLoadingProgressBar)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] getParticipants()
io.reactivex.exceptions.CompositeException: void appendStackTrace(java.lang.StringBuilder,java.lang.Throwable,java.lang.String)
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.xuexiang.xhttp2.request.GetRequest: io.reactivex.Observable generateRequest()
androidx.appcompat.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)
androidx.fragment.app.FragmentManagerImpl: void burpActive()
io.reactivex.internal.observers.InnerQueuedObserver: void onNext(java.lang.Object)
io.reactivex.observers.ResourceCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.Fragment: int getTargetRequestCode()
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: void onNext(java.lang.Object)
com.google.gson.internal.bind.ObjectTypeAdapter$1: ObjectTypeAdapter$1()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
com.xuexiang.xhttp2.utils.TypeUtils: java.lang.reflect.Type getGenericType(java.lang.reflect.ParameterizedType,int)
androidx.fragment.app.FragmentManager: int getBackStackEntryCount()
okio.Buffer: okio.Buffer writeDecimalLong(long)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void findExpandedIndex()
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter nullValue()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$1: RetryExceptionFunc$1(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc)
io.reactivex.internal.util.AtomicThrowable: java.lang.Throwable terminate()
com.xuexiang.xhttp2.annotation.RequestParams: boolean accessToken()
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
org.aspectj.lang.reflect.DeclareAnnotation$Kind: org.aspectj.lang.reflect.DeclareAnnotation$Kind valueOf(java.lang.String)
io.reactivex.Flowable: Flowable()
org.aspectj.runtime.reflect.Factory: java.lang.Class class$(java.lang.String)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundaryObserver: void onComplete()
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: FlowableGroupJoin$LeftRightSubscriber(io.reactivex.internal.operators.flowable.FlowableGroupJoin$JoinSupport,boolean)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver(io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context)
androidx.collection.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
okhttp3.internal.platform.JdkWithJettyBootPlatform: JdkWithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
com.google.gson.JsonArray: void add(java.lang.Number)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void innerComplete(io.reactivex.internal.observers.InnerQueuedObserver)
androidx.fragment.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
androidx.appcompat.widget.DecorToolbar: void animateToVisibility(int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.functions.Functions: io.reactivex.functions.Consumer emptyConsumer()
io.reactivex.subjects.PublishSubject: void onComplete()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: ActivityCompat$SharedElementCallback21Impl$1(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener)
com.google.gson.internal.bind.TypeAdapters$29: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.single.SingleFromCallable: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
com.xuexiang.xhttp2.model.HttpParams: HttpParams()
androidx.appcompat.widget.SearchView: void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
io.reactivex.internal.observers.ResumeSingleObserver: void onError(java.lang.Throwable)
com.jakewharton.disklrucache.DiskLruCache$Entry: DiskLruCache$Entry(com.jakewharton.disklrucache.DiskLruCache,java.lang.String)
io.reactivex.internal.disposables.CancellableDisposable: CancellableDisposable(io.reactivex.functions.Cancellable)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: SingleUsing$UsingSingleObserver(io.reactivex.SingleObserver,java.lang.Object,boolean,io.reactivex.functions.Consumer)
androidx.viewpager.widget.PagerTabStrip: void onDraw(android.graphics.Canvas)
androidx.appcompat.widget.ShareActionProvider: boolean hasSubMenu()
io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver: java.lang.Object poll()
androidx.appcompat.widget.TintTypedArray: java.lang.String getNonResourceString(int)
okhttp3.FormBody: FormBody(java.util.List,java.util.List)
io.reactivex.internal.operators.observable.ObservableReplay: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void request(long)
androidx.appcompat.app.ToolbarActionBar: ToolbarActionBar(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback)
androidx.fragment.app.Fragment: void onResume()
androidx.appcompat.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void onStart()
androidx.appcompat.app.ToolbarActionBar: void setDisplayOptions(int,int)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.subjects.UnicastSubject: boolean failedFast(io.reactivex.internal.fuseable.SimpleQueue,io.reactivex.Observer)
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: boolean isDisposed()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: void request(long)
retrofit2.adapter.rxjava2.RxJava2CallAdapter: java.lang.Object adapt(retrofit2.Call)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setIUpdateHttpService(com.appspa.update.proxy.IUpdateHttpService)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Boolean)
androidx.loader.content.AsyncTaskLoader$LoadTask: AsyncTaskLoader$LoadTask(androidx.loader.content.AsyncTaskLoader)
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: FlowableReplay$SizeAndTimeBoundReplayBuffer(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.app.ToolbarActionBar: void removeTabAt(int)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: void onError(java.lang.Throwable)
com.google.gson.JsonPrimitive: boolean isPrimitiveOrString(java.lang.Object)
androidx.collection.LongSparseArray: LongSparseArray(int)
androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable: void subscribeActual(io.reactivex.Observer)
androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)
androidx.core.app.NavUtils: NavUtils()
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: void onError(java.lang.Throwable)
okhttp3.Route: boolean equals(java.lang.Object)
androidx.appcompat.resources.R$string: R$string()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStarted(android.app.Activity)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initNewThreadScheduler(java.util.concurrent.Callable)
androidx.appcompat.view.menu.ShowableListMenu: android.widget.ListView getListView()
androidx.collection.CircularIntArray: boolean isEmpty()
io.reactivex.android.R: R()
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: boolean checkTerminated(boolean,boolean)
androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)
androidx.fragment.app.FragmentManagerImpl$3$1: FragmentManagerImpl$3$1(androidx.fragment.app.FragmentManagerImpl$3)
androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)
androidx.appcompat.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)
com.xuexiang.xhttp2.https.DefaultHostnameVerifier: DefaultHostnameVerifier()
com.appspa.demo.http.OKHttpUpdateHttpService$2: void inProgress(float,long,int)
com.xuexiang.xhttp2.cache.RxCache: com.xuexiang.xhttp2.cache.core.CacheCore access$1300(com.xuexiang.xhttp2.cache.RxCache)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
io.reactivex.android.MainThreadDisposable: boolean isDisposed()
androidx.core.graphics.ColorUtils: void colorToHSL(int,float[])
androidx.appcompat.app.AlertDialog: void setMessage(java.lang.CharSequence)
androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()
io.reactivex.internal.disposables.SequentialDisposable: void dispose()
io.reactivex.internal.operators.flowable.FlowableRetryPredicate: void subscribeActual(org.reactivestreams.Subscriber)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter open(int,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: void cancel()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
okio.RealBufferedSink: void flush()
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: ObservableGroupJoin$LeftRightObserver(io.reactivex.internal.operators.observable.ObservableGroupJoin$JoinSupport,boolean)
androidx.appcompat.view.ActionBarPolicy: ActionBarPolicy(android.content.Context)
androidx.vectordrawable.R$styleable: R$styleable()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: void onNext(java.lang.Object)
com.google.gson.stream.JsonReader: void endArray()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void drawableStateChanged()
com.appspa.update.utils.FileUtils: boolean isSpace(java.lang.String)
androidx.appcompat.widget.SearchView: void updateCloseButton()
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: boolean isDisposed()
okhttp3.FormBody: long contentLength()
androidx.appcompat.view.menu.MenuAdapter: void setForceShowIcon(boolean)
androidx.core.net.TrafficStatsCompat: void clearThreadStatsTag()
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void innerNext()
androidx.core.app.JobIntentService$GenericWorkItem: android.content.Intent getIntent()
androidx.appcompat.app.AppCompatDialog: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.core.content.res.ColorStateListInflaterCompat: ColorStateListInflaterCompat()
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance()
okhttp3.Cache$1: void trackConditionalCacheHit()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: ObservableFlatMapCompletable$FlatMapCompletableMainObserver(io.reactivex.Observer,io.reactivex.functions.Function,boolean)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
androidx.versionedparcelable.VersionedParcelStream: void writeByteArray(byte[])
androidx.annotation.InspectableProperty$EnumEntry: java.lang.String name()
com.appspa.update.widget.UpdateDialogFragment: void initListeners()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.Region getTransparentRegion()
io.reactivex.exceptions.ProtocolViolationException: ProtocolViolationException(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.ViewCompat: float getX(android.view.View)
com.google.gson.internal.GsonBuildConfig: GsonBuildConfig()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void onError(java.lang.Throwable)
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: android.graphics.drawable.Drawable getThemeUpIndicator()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver: void onSuccess(java.lang.Object)
androidx.annotation.RequiresPermission$Read: androidx.annotation.RequiresPermission value()
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: void dispose()
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(int,int)
io.reactivex.disposables.CompositeDisposable: boolean delete(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: void onComplete()
io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
androidx.core.graphics.drawable.IconCompat: int getType()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStopped()
okio.ByteString: int compareTo(java.lang.Object)
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
org.aspectj.internal.lang.reflect.PerClauseImpl: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: void cancel()
io.reactivex.internal.operators.completable.CompletableDelay$Delay: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: DatagramSocketWrapper$DatagramSocketImplWrapper(java.net.DatagramSocket,java.io.FileDescriptor)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void onClick(android.view.View)
io.reactivex.internal.operators.single.SingleOnErrorReturn: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.subscriptions.ScalarSubscription: boolean isCancelled()
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: void run()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver: void onSuccess(java.lang.Object)
androidx.appcompat.app.AppCompatDialogFragment: AppCompatDialogFragment()
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
io.reactivex.observers.DisposableObserver: void dispose()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: WindowDecorActionBar$TabImpl(androidx.appcompat.app.WindowDecorActionBar)
androidx.appcompat.app.WindowDecorActionBar: int getHideOffset()
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void innerNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void drain()
androidx.appcompat.widget.ActionMenuView: void onMeasureExactFormat(int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.appcompat.widget.AppCompatProgressBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(java.util.Locale)
androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast: void onError(java.lang.Throwable)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.Object adapt(retrofit2.Call)
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: void onNext(java.lang.Object)
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: void dismissProgress()
androidx.core.widget.EdgeEffectCompat: EdgeEffectCompat(android.content.Context)
io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver: void onComplete()
androidx.core.app.ShareCompat$IntentBuilder: android.app.Activity getActivity()
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: void run()
androidx.core.internal.view.SupportMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)
androidx.core.graphics.PathSegment: float getEndFraction()
retrofit2.OptionalConverterFactory$OptionalConverter: OptionalConverterFactory$OptionalConverter(retrofit2.Converter)
com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.math.BigInteger)
com.xuexiang.xhttp2.cache.model.CacheResult: CacheResult()
androidx.core.widget.NestedScrollView: void onMeasure(int,int)
com.zhy.http.okhttp.request.PostFormRequest: void addParams(okhttp3.MultipartBody$Builder)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: boolean isDisposed()
com.google.gson.internal.bind.TypeAdapters$27: java.util.Calendar read(com.google.gson.stream.JsonReader)
io.reactivex.internal.disposables.DisposableHelper: boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: void onNext(io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber,java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat x(float)
androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()
io.reactivex.Scheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)
androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View)
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: void onComplete()
androidx.core.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)
androidx.annotation.RequiresPermission: java.lang.String value()
io.reactivex.subscribers.ResourceSubscriber: boolean isDisposed()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: void drain()
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)
androidx.appcompat.widget.SuggestionsAdapter: void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.zhy.http.okhttp.builder.OkHttpRequestBuilder: com.zhy.http.okhttp.builder.OkHttpRequestBuilder url(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$5: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: boolean isEmpty()
okhttp3.HttpUrl: int defaultPort(java.lang.String)
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: void onComplete()
com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableState: WrappedDrawableState(androidx.core.graphics.drawable.WrappedDrawableState)
androidx.appcompat.widget.AppCompatTextHelper: void autoSizeText()
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: void dispose()
org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: void onError(java.lang.Throwable)
androidx.core.provider.SelfDestructiveThread$2$1: SelfDestructiveThread$2$1(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: void setShowAsAction(int)
io.reactivex.internal.operators.observable.ObservableCount: void subscribeActual(io.reactivex.Observer)
androidx.core.app.Person: java.lang.CharSequence getName()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.lifecycle.FullLifecycleObserverAdapter: FullLifecycleObserverAdapter(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)
androidx.core.view.LayoutInflaterCompat: LayoutInflaterCompat()
io.reactivex.subjects.MaybeSubject: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.app.ActionBar: void setCustomView(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isChecked()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$2: void run()
io.reactivex.internal.disposables.ArrayCompositeDisposable: boolean setResource(int,io.reactivex.disposables.Disposable)
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
com.google.gson.JsonArray: java.util.Iterator iterator()
androidx.core.widget.NestedScrollView: boolean isSmoothScrollingEnabled()
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$1: BaseStrategy$1(com.xuexiang.xhttp2.cache.stategy.BaseStrategy)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: DrawerArrowDrawable(android.content.Context)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
io.reactivex.observers.DisposableMaybeObserver: void onStart()
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void drainAsync()
io.reactivex.internal.functions.Functions: io.reactivex.functions.Function justFunction(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setImportant(boolean)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void request(long)
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest onMainThread(boolean)
androidx.collection.SparseArrayCompat: java.lang.Object replace(int,java.lang.Object)
com.appspa.update.logs.UpdateLog: void e(java.lang.Throwable)
com.google.gson.internal.reflect.UnsafeReflectionAccessor: boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject)
androidx.core.app.ActivityCompat: void recreate(android.app.Activity)
androidx.lifecycle.Lifecycling: androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: void onComplete()
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: void dispose()
io.reactivex.subscribers.TestSubscriber: void onComplete()
com.appspa.demo.R$layout: R$layout()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)
androidx.annotation.GuardedBy: java.lang.String value()
com.jakewharton.disklrucache.DiskLruCache: boolean access$200(com.jakewharton.disklrucache.DiskLruCache)
io.reactivex.internal.operators.flowable.FlowableRefCount: void clearTimer(io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection)
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName)
okhttp3.internal.http2.PushObserver$1: PushObserver$1()
io.reactivex.internal.subscribers.BasicFuseableSubscriber: boolean beforeDownstream()
io.reactivex.internal.operators.single.SingleDelayWithObservable: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: FlowableDelay$DelaySubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker,boolean)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void request(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()
androidx.core.util.Pools: Pools()
io.reactivex.internal.operators.flowable.FlowableSamplePublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: AnimatedStateListDrawableCompat$AnimationDrawableTransition(android.graphics.drawable.AnimationDrawable,boolean,boolean)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(int)
com.google.gson.internal.bind.TypeAdapters$14: TypeAdapters$14()
okio.RealBufferedSource: java.io.InputStream inputStream()
com.appspa.update.widget.UpdateDialogActivity: void initWindowStyle()
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableWindow: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: void onComplete()
androidx.collection.LongSparseArray: boolean replace(long,java.lang.Object,java.lang.Object)
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()
com.google.gson.internal.ConstructorConstructor: ConstructorConstructor(java.util.Map)
com.appspa.update.UpdateManager: android.content.Context getContext()
androidx.drawerlayout.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getOpacity()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: boolean isDisposed()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setCheckable(boolean)
com.appspa.update.widget.WeakFileDownloadListener: void onProgress(float,long)
androidx.core.app.NotificationCompat$BigPictureStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
io.reactivex.subjects.UnicastSubject: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
io.reactivex.internal.observers.BlockingObserver: BlockingObserver(java.util.Queue)
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: void onError(java.lang.Throwable)
androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.appcompat.app.ToolbarActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int)
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask execute(java.lang.Object[])
androidx.fragment.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.drawerlayout.widget.DrawerLayout: void onDetachedFromWindow()
androidx.appcompat.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)
androidx.vectordrawable.graphics.drawable.AndroidResources: AndroidResources()
androidx.loader.content.Loader: void onContentChanged()
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: ObservableDebounce$DebounceObserver$DebounceInnerObserver(io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver,long,java.lang.Object)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.Number)
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest threadType(java.lang.String)
io.reactivex.internal.subscribers.StrictSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainEmitLast: void run()
io.reactivex.observers.DefaultObserver: DefaultObserver()
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: void onError(java.lang.Throwable)
com.google.gson.reflect.TypeToken: boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)
androidx.appcompat.widget.SearchView$2: SearchView$2(androidx.appcompat.widget.SearchView)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayCallable: java.lang.Object call()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver: CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver(io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver)
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: void runSync()
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void drain()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: java.lang.Object poll()
androidx.appcompat.widget.ListPopupWindow$3: ListPopupWindow$3(androidx.appcompat.widget.ListPopupWindow)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
io.reactivex.observers.SafeObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter: FlowableCreate$MissingEmitter(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder getBuilder()
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: void cancel()
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DecorToolbar: void setCustomView(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setNumber(int)
okio.ForwardingSource: java.lang.String toString()
androidx.appcompat.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)
androidx.core.internal.view.SupportMenuItem: boolean collapseActionView()
androidx.appcompat.widget.ActivityChooserView$1: void onInvalidated()
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$4: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2: AnimatedVectorDrawableCompat$2(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
com.google.gson.TypeAdapter: java.lang.Object fromJsonTree(com.google.gson.JsonElement)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.SearchView: android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void innerComplete()
retrofit2.SkipCallbackExecutorImpl: int hashCode()
androidx.core.os.LocaleListCompat: int size()
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.request.GetRequest get(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: void dispose()
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: void onError(java.lang.Throwable)
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: void onComplete()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: boolean isDisposed()
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: void cancel()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapSingleObserver: MaybeFlatMapSingle$FlatMapSingleObserver(java.util.concurrent.atomic.AtomicReference,io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: FlowableObserveOn$BaseObserveOnSubscriber(io.reactivex.Scheduler$Worker,boolean,int)
androidx.appcompat.app.ToolbarActionBar: int getHeight()
io.reactivex.internal.operators.flowable.FlowableAll: void subscribeActual(org.reactivestreams.Subscriber)
androidx.viewpager.widget.ViewPager: void sortChildDrawingOrder()
androidx.fragment.app.Fragment: void postponeEnterTransition()
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: void onComplete()
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: FlowableCount$CountSubscriber(org.reactivestreams.Subscriber)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable(android.content.res.Resources,android.graphics.Bitmap)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: ObservableFlatMapSingle$FlatMapSingleObserver(io.reactivex.Observer,io.reactivex.functions.Function,boolean)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.TooltipCompatHandler$1: TooltipCompatHandler$1(androidx.appcompat.widget.TooltipCompatHandler)
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: void onComplete()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: void read(com.google.gson.stream.JsonReader,java.lang.Object)
okio.Buffer: okio.ByteString snapshot()
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.google.gson.internal.Excluder: boolean isStatic(java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: void clear()
com.appspa.demo.R$attr: R$attr()
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: okhttp3.Request addPostParamsSign(okhttp3.Request)
com.google.gson.LongSerializationPolicy: LongSerializationPolicy(java.lang.String,int)
com.jakewharton.disklrucache.DiskLruCache$Snapshot: void close()
androidx.appcompat.widget.ActionMenuPresenter: boolean flagActionItems()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
com.jakewharton.disklrucache.DiskLruCache: DiskLruCache(java.io.File,int,int,long)
androidx.core.content.res.TypedArrayUtils: TypedArrayUtils()
com.xuexiang.xhttp2.annotation.RequestParams: long timeout()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat)
okhttp3.Cache: void trackConditionalCacheHit()
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void clearScalarQueue()
com.google.gson.internal.bind.ObjectTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.single.SingleContains$ContainsSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.RemoteActionCompat: void setEnabled(boolean)
com.appspa.update.service.DownloadService: androidx.core.app.NotificationCompat$Builder access$200(com.appspa.update.service.DownloadService)
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: void dispose()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void openComplete(io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber)
androidx.appcompat.view.menu.ShowableListMenu: boolean isShowing()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
com.appspa.demo.R$anim: R$anim()
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: void onError(java.lang.Throwable)
retrofit2.RequestFactory$Builder: RequestFactory$Builder(retrofit2.Retrofit,java.lang.reflect.Method)
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: void onError(java.lang.Throwable)
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
androidx.cursoradapter.widget.CursorAdapter: int getCount()
androidx.core.app.NotificationCompat$Action$WearableExtender: NotificationCompat$Action$WearableExtender(androidx.core.app.NotificationCompat$Action)
androidx.core.view.GravityCompat: GravityCompat()
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.CompletableAndThenObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void innerError(int,java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void request(long)
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void onComplete()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: void onComplete()
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentById(int)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void disposeBoundary()
androidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
androidx.core.app.ShareCompat: void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder)
com.appspa.update.service.DownloadService: void access$000(com.appspa.update.service.DownloadService,com.appspa.update.entity.UpdateEntity,com.appspa.update.service.DownloadService$FileDownloadCallBack)
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: ObservableSkipLast$SkipLastObserver(io.reactivex.Observer,int)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean flagActionItems()
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void otherError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: void onComplete()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: StateListDrawable$StateListState(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: void onComplete()
androidx.core.view.NestedScrollingParent: void onNestedPreScroll(android.view.View,int,int,int[])
io.reactivex.internal.operators.single.SingleDelayWithPublisher: void subscribeActual(io.reactivex.SingleObserver)
retrofit2.ParameterHandler$PartMap: void apply(retrofit2.RequestBuilder,java.util.Map)
com.google.gson.JsonObject: com.google.gson.JsonElement deepCopy()
androidx.appcompat.app.ToolbarActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: boolean isDisposed()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse(okhttp3.HttpUrl,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.gson.JsonElement: boolean isJsonArray()
io.reactivex.internal.subscribers.BoundedSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: void dispose()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber(io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber)
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: void dispose()
androidx.core.app.JobIntentService: boolean onStopCurrentWork()
androidx.fragment.app.BackStackRecord: int getBreadCrumbTitleRes()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError: void drainLoop()
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableReplay$DisposeConsumer: void accept(java.lang.Object)
io.reactivex.internal.functions.Functions$EmptyLongConsumer: Functions$EmptyLongConsumer()
androidx.core.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void onComplete()
androidx.core.provider.SelfDestructiveThread$2$1: void run()
io.reactivex.subjects.ReplaySubject$ReplayDisposable: boolean isDisposed()
androidx.appcompat.app.AlertController$3: AlertController$3(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
androidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()
okhttp3.internal.http1.Http1Codec: okhttp3.Headers readHeaders()
androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec()
io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber: int requestFusion(int)
androidx.appcompat.widget.ListPopupWindow: boolean isInputMethodNotNeeded()
androidx.appcompat.view.SupportMenuInflater$MenuState: void resetGroup()
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void innerComplete(io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver)
io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate: ObjectHelper$BiObjectPredicate()
androidx.vectordrawable.animated.R$color: R$color()
retrofit2.ParameterHandler$Header: ParameterHandler$Header(java.lang.String,retrofit2.Converter)
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: Streams$AppendableWriter$CurrentWrite()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.appcompat.widget.Toolbar: int getChildVerticalGravity(int)
androidx.fragment.app.FragmentManagerViewModel: FragmentManagerViewModel(boolean)
com.google.gson.LongSerializationPolicy$1: com.google.gson.JsonElement serialize(java.lang.Long)
androidx.collection.ArraySet: int hashCode()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast: void onComplete()
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)
androidx.core.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)
io.reactivex.internal.operators.observable.ObservableLastMaybe: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: boolean isDisposed()
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: DrawerLayout$AccessibilityDelegate(androidx.drawerlayout.widget.DrawerLayout)
com.xuexiang.xhttp2.cache.RxCache: java.lang.String access$1000(com.xuexiang.xhttp2.cache.RxCache)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: FlowableRepeatWhen$WhenReceiver(org.reactivestreams.Publisher)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int,int)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.core.text.BidiFormatter: boolean isRtl(java.lang.CharSequence)
retrofit2.KotlinExtensions$await$4$2: KotlinExtensions$await$4$2(kotlinx.coroutines.CancellableContinuation)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getRemoteInputs()
androidx.core.view.ViewCompat: void setLabelFor(android.view.View,int)
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: void onComplete()
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()
androidx.core.widget.NestedScrollView: boolean fullScroll(int)
androidx.appcompat.widget.DrawableUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
io.reactivex.internal.functions.Functions$Array9Func: java.lang.Object apply(java.lang.Object[])
retrofit2.Platform: java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[])
androidx.lifecycle.LifecycleRegistry$ObserverWithState: LifecycleRegistry$ObserverWithState(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: MaybeDoAfterSuccess$DoAfterObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Consumer)
androidx.core.provider.FontsContractCompat$3: FontsContractCompat$3(java.lang.String)
retrofit2.ParameterHandler$1: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setDirection(int)
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: void request(long)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.observers.InnerQueuedObserver: void onComplete()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$NextObserver: void onComplete()
com.google.gson.stream.JsonWriter: int peek()
androidx.loader.app.LoaderManagerImpl: void destroyLoader(int)
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: FlowableSkipUntil$SkipUntilMainSubscriber(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableReplay$DefaultUnboundedFactory: java.lang.Object call()
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: void dispose()
androidx.appcompat.view.menu.StandardMenuPopup: boolean flagActionItems()
androidx.viewpager.widget.ViewPager$ViewPositionComparator: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundaryObserver: void onNext(java.lang.Object)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceDisconnected(android.content.ComponentName)
androidx.versionedparcelable.VersionedParcel: void writeCollection(java.util.Collection,int)
androidx.viewpager.widget.ViewPager: void clearOnPageChangeListeners()
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerStateChanged(int)
io.reactivex.processors.AsyncProcessor: void remove(io.reactivex.processors.AsyncProcessor$AsyncSubscription)
io.reactivex.internal.util.NotificationLite: boolean isError(java.lang.Object)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableDematerialize: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.MotionEventCompat: MotionEventCompat()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.collection.CircularArray: boolean isEmpty()
androidx.appcompat.view.menu.MenuWrapperICS: void close()
androidx.core.widget.NestedScrollView: boolean arrowScroll(int)
androidx.appcompat.widget.ActivityChooserModel: void setIntent(android.content.Intent)
androidx.loader.R$color: R$color()
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest params(java.util.Map)
androidx.core.view.ViewCompat: void bindTempDetach()
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: void onError(java.lang.Throwable)
androidx.appcompat.app.AlertController: void setMessage(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuAdapter: void notifyDataSetChanged()
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: void dispose()
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(int,int)
androidx.core.content.res.TypedArrayUtils: android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast: void onComplete()
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: boolean performClick()
com.xuexiang.xhttp2.model.ApiResult: ApiResult()
androidx.fragment.app.FragmentManagerImpl: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.BaseMenuPresenter: void updateMenuView(boolean)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAntiAlias(boolean)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: boolean checkTerminate()
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: void addFinal(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterSubscriber: ParallelFilter$ParallelFilterSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver: void onComplete()
io.reactivex.internal.operators.single.SingleDoOnSuccess$DoOnSuccess: void onError(java.lang.Throwable)
androidx.loader.content.CursorLoader: android.net.Uri getUri()
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: boolean hasNext()
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator: void request(long)
com.appspa.demo.R$dimen: R$dimen()
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver: void onComplete()
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()
androidx.core.provider.FontsContractCompat$4$7: FontsContractCompat$4$7(androidx.core.provider.FontsContractCompat$4,int)
com.appspa.update.entity.UpdateEntity$1: java.lang.Object[] newArray(int)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$5: DownloadSubscriber$5(com.xuexiang.xhttp2.subsciber.DownloadSubscriber)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: boolean tryOnError(java.lang.Throwable)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.viewpager.widget.ViewPager$3: void run()
com.appspa.update.widget.NumberProgressBar: int getSuggestedMinimumHeight()
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String get(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.schedulers.IoScheduler: void start()
com.xuexiang.xhttp2.transform.func.ApiResultFunc: com.xuexiang.xhttp2.model.ApiResult parseApiResult(java.lang.String,com.xuexiang.xhttp2.model.ApiResult)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int)
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterSubscriber: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: void drain()
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: void next()
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: void onError(java.lang.Throwable)
androidx.core.os.LocaleListCompat: int hashCode()
io.reactivex.internal.observers.BlockingMultiObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.appcompat.widget.DropDownListView: void drawableStateChanged()
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: ActionBarDrawerToggle$FrameworkActionBarDelegate(android.app.Activity)
androidx.appcompat.widget.DecorToolbar: boolean hasEmbeddedTabs()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: void onComplete()
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.transform.func.CacheResultFunc: java.lang.Object apply(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar$3: WindowDecorActionBar$3(androidx.appcompat.app.WindowDecorActionBar)
androidx.core.provider.FontsContractCompat$4$6: void run()
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: void dispose()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: void onComplete()
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.utils.ColorUtils: int colorDeep(int)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: FlowableMergeWithSingle$MergeWithObserver(org.reactivestreams.Subscriber)
androidx.appcompat.app.ActionBarDrawerToggle: boolean isDrawerSlideAnimationEnabled()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void run()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: int requestFusion(int)
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(android.content.Context,int)
io.reactivex.subjects.UnicastSubject: UnicastSubject(int,java.lang.Runnable,boolean)
io.reactivex.internal.subscribers.StrictSubscriber: void onError(java.lang.Throwable)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
androidx.appcompat.app.ToolbarActionBar: void onDestroy()
com.zhy.http.okhttp.OkHttpUtils$2: void run()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: boolean isDisposed()
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
androidx.collection.ArraySet: java.util.Iterator iterator()
androidx.activity.ComponentActivity$1: ComponentActivity$1(androidx.activity.ComponentActivity)
androidx.appcompat.widget.DropDownListView: void drawSelectorCompat(android.graphics.Canvas)
io.reactivex.internal.util.ExceptionHelper: java.lang.Exception throwIfThrowable(java.lang.Throwable)
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
androidx.fragment.app.Fragment: void performStart()
io.reactivex.disposables.ActionDisposable: void onDisposed(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeDouble(double,int)
com.appspa.update.proxy.impl.DefaultUpdateChecker$2: void onError(java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
androidx.collection.ArraySet: int indexOfNull()
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.DeferredScalarObserver: void onNext(java.lang.Object)
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
androidx.fragment.app.Fragment$SavedState$1: java.lang.Object[] newArray(int)
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError: ObservableDelay$DelayObserver$OnError(io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver,java.lang.Throwable)
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: void onNext(java.lang.Object)
okhttp3.HttpUrl: void pathSegmentsToString(java.lang.StringBuilder,java.util.List)
androidx.appcompat.widget.DecorToolbar: boolean showOverflowMenu()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: ObservableSkipUntil$SkipUntil(io.reactivex.internal.operators.observable.ObservableSkipUntil,io.reactivex.internal.disposables.ArrayCompositeDisposable,io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver,io.reactivex.observers.SerializedObserver)
androidx.appcompat.view.menu.MenuItemImpl: boolean invoke()
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage()
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean supportsAutoSizeText()
retrofit2.ParameterHandler$Header: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.gson.internal.UnsafeAllocator$3: UnsafeAllocator$3(java.lang.reflect.Method)
io.reactivex.Flowable: io.reactivex.Flowable defaultIfEmpty(java.lang.Object)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac getMac()
android.support.v4.os.ResultReceiver$1: ResultReceiver$1()
retrofit2.Retrofit$1: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: int requestFusion(int)
io.reactivex.internal.util.NotificationLite: boolean acceptFull(java.lang.Object,org.reactivestreams.Subscriber)
androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: int getGranularity()
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: void shutdown()
com.appspa.update.entity.PromptEntity: com.appspa.update.entity.PromptEntity setWidthRatio(float)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: FlowableSequenceEqual$EqualCoordinator(org.reactivestreams.Subscriber,int,io.reactivex.functions.BiPredicate)
androidx.versionedparcelable.VersionedParcel: boolean[] readBooleanArray()
androidx.drawerlayout.R: R()
com.appspa.update.utils.FileUtils: java.lang.String getExtDownloadsPath()
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionStart(android.transition.Transition)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableThrottleLatest: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: ObservableCache$CacheDisposable(io.reactivex.Observer,io.reactivex.internal.operators.observable.ObservableCache)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: java.lang.Object enterTransform(java.lang.Object)
retrofit2.OkHttpCall: void cancel()
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.subjects.PublishSubject: void onError(java.lang.Throwable)
androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)
okhttp3.internal.Util: java.util.Map immutableMap(java.util.Map)
androidx.appcompat.widget.SearchView: android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()
com.google.gson.Gson: com.google.gson.stream.JsonReader newJsonReader(java.io.Reader)
androidx.core.app.RemoteActionCompat: void setShouldShowIcon(boolean)
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: void onNext(java.lang.Object)
androidx.core.provider.FontsContractCompat$4$8: void run()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void request(long)
androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.functions.Functions$NaturalComparator: int compare(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: void dispose()
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void drain()
okhttp3.Cache: void close()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable: void subscribeActual(io.reactivex.CompletableObserver)
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
com.google.gson.internal.bind.TypeAdapters$22: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.appspa.update.entity.DownloadEntity: java.lang.String getWholeMd5()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: androidx.core.app.RemoteInput getRemoteInput()
io.reactivex.internal.util.ConnectConsumer: ConnectConsumer()
okhttp3.HttpUrl$Builder: java.lang.String canonicalizeHost(java.lang.String,int,int)
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: boolean checkTerminated(boolean,boolean,io.reactivex.Observer,boolean,io.reactivex.internal.operators.observable.ObservableZip$ZipObserver)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()
androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)
io.reactivex.processors.ReplayProcessor: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: void onComplete()
io.reactivex.internal.subscriptions.SubscriptionArbiter: void setSubscription(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Activity,boolean)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber: void onComplete()
com.google.gson.internal.bind.TypeAdapters$9: TypeAdapters$9()
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.KeyEventDispatcher: boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)
androidx.appcompat.widget.PopupMenu: void inflate(int)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)
androidx.collection.ArraySet: void ensureCapacity(int)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver(io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver)
com.google.gson.internal.bind.TypeAdapters$29: void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)
com.google.gson.JsonParseException: JsonParseException(java.lang.String,java.lang.Throwable)
okio.InflaterSource: InflaterSource(okio.BufferedSource,java.util.zip.Inflater)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void onNext(java.lang.Object)
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
com.google.gson.internal.JavaVersion: JavaVersion()
androidx.appcompat.widget.AppCompatImageHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
com.appspa.update.widget.UpdateDialog: void handleStart()
androidx.savedstate.R: R()
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: boolean isDisposed()
com.google.gson.JsonStreamParser: void remove()
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: void onComplete()
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] getMetrics()
com.google.gson.internal.bind.ArrayTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableFromFuture: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void innerComplete(io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver)
com.zhy.http.okhttp.request.CountingRequestBody: long contentLength()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: boolean hasError()
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: boolean isDisposed()
com.appspa.update.service.DownloadService$FileDownloadCallBack: boolean canRefreshProgress(int)
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber$Request: FlowableSubscribeOn$SubscribeOnSubscriber$Request(org.reactivestreams.Subscription,long)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Void)
androidx.fragment.app.FragmentActivity$HostCallbacks: java.lang.Object onGetHost()
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: void onComplete()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.google.gson.reflect.TypeToken: java.lang.String toString()
com.appspa.update.service.DownloadService$FileDownloadCallBack$2: void run()
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: boolean isDisposed()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: void onError(java.lang.Throwable)
androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)
androidx.appcompat.app.ActionBar: int getHideOffset()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float)
androidx.core.widget.AutoScrollHelper: void cancelTargetTouch()
androidx.core.widget.NestedScrollView: void stopNestedScroll()
androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(int)
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformHeight(int,int)
androidx.appcompat.widget.SearchView$1: SearchView$1(androidx.appcompat.widget.SearchView)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)
org.aspectj.runtime.reflect.CodeSignatureImpl: java.lang.Class[] getExceptionTypes()
okio.RealBufferedSource: void readFully(byte[])
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver$InnerObserver: void onComplete()
androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.appcompat.app.AlertController: void setView(android.view.View,int,int,int,int)
com.appspa.update.widget.UpdateDialogActivity: void initView()
androidx.core.text.util.LinkifyCompat: void addLinkMovementMethod(android.widget.TextView)
io.reactivex.internal.operators.maybe.MaybeFromRunnable: void subscribeActual(io.reactivex.MaybeObserver)
androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoaderReset(androidx.loader.content.Loader)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onError(java.lang.Throwable)
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: void run()
androidx.core.app.RemoteInput: RemoteInput(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set)
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: ObservableUnsubscribeOn$UnsubscribeObserver(io.reactivex.Observer,io.reactivex.Scheduler)
androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: void run()
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationError(int,java.lang.CharSequence)
androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: boolean isEmpty()
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: void disposeExcept(int)
androidx.appcompat.widget.DecorContentParent: void initFeature(int)
androidx.fragment.app.FragmentManagerImpl: void cleanupExec()
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()
io.reactivex.internal.operators.single.SingleContains: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.annotation.IntRange: long to()
com.appspa.update.widget.NumberProgressBar: NumberProgressBar(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeConcatIterable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
androidx.appcompat.widget.ForwardingListener: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: android.view.View onCreateActionView(android.view.MenuItem)
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
androidx.versionedparcelable.VersionedParcel$1: java.lang.Class resolveClass(java.io.ObjectStreamClass)
androidx.appcompat.view.menu.ActionMenuItem: char getAlphabeticShortcut()
androidx.lifecycle.LifecycleRegistry: void sync()
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionEnd(android.transition.Transition)
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
io.reactivex.internal.functions.Functions$ToMultimapKeyValueSelector: void accept(java.util.Map,java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: void animateToVisibility(int)
androidx.appcompat.app.ToolbarActionBar: void setDisplayShowHomeEnabled(boolean)
androidx.core.app.NotificationCompat$WearableExtender: android.graphics.Bitmap getBackground()
androidx.fragment.app.DialogFragment: boolean isCancelable()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void onError(java.lang.Throwable)
io.reactivex.Scheduler$PeriodicDirectTask: void run()
org.aspectj.runtime.reflect.JoinPointImpl$StaticPartImpl: java.lang.String toString(org.aspectj.runtime.reflect.StringMaker)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()
io.reactivex.internal.schedulers.ScheduledRunnable: ScheduledRunnable(java.lang.Runnable,io.reactivex.internal.disposables.DisposableContainer)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: void dispose()
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView: boolean needsDividerBefore()
androidx.core.app.NotificationCompat$Style: android.app.Notification build()
com.google.gson.Gson$3: java.lang.Object read(com.google.gson.stream.JsonReader)
retrofit2.BuiltInConverters$VoidResponseBodyConverter: java.lang.Void convert(okhttp3.ResponseBody)
androidx.appcompat.widget.TooltipCompatHandler: void setTooltipText(android.view.View,java.lang.CharSequence)
io.reactivex.internal.util.EmptyComponent: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: void dispose()
androidx.core.util.Preconditions: Preconditions()
com.xuexiang.xhttp2.model.XHttpRequest: com.xuexiang.xhttp2.annotation.RequestParams getRequestParams()
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: void cleanup()
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
okio.ByteString: void readObject(java.io.ObjectInputStream)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void dispose()
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void onComplete()
androidx.loader.content.ModernAsyncTask$1: java.lang.Thread newThread(java.lang.Runnable)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: ReflectiveTypeAdapterFactory$1(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,boolean,boolean,java.lang.reflect.Field,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.appcompat.view.menu.StandardMenuPopup$1: StandardMenuPopup$1(androidx.appcompat.view.menu.StandardMenuPopup)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: void cleanup()
androidx.drawerlayout.widget.DrawerLayout: void onAttachedToWindow()
com.google.gson.internal.bind.TypeAdapters$11: TypeAdapters$11()
okhttp3.FormBody: java.lang.String encodedName(int)
io.reactivex.internal.observers.FutureSingleObserver: java.lang.Object get()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void subscribe(io.reactivex.ObservableSource[],int)
okhttp3.internal.cache.DiskLruCache$1: void run()
io.reactivex.subjects.BehaviorSubject: void remove(io.reactivex.subjects.BehaviorSubject$BehaviorDisposable)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: void onAnimationEnd(android.graphics.drawable.Drawable)
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: FlowableRepeatWhen$WhenSourceSubscriber(org.reactivestreams.Subscriber,io.reactivex.processors.FlowableProcessor,org.reactivestreams.Subscription)
androidx.fragment.app.Fragment: void onStart()
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
io.reactivex.internal.operators.parallel.ParallelConcatMap: int parallelism()
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void run()
androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: boolean isDisposed()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
androidx.core.telephony.mbms.MbmsHelper: MbmsHelper()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
com.google.gson.JsonElement: int getAsInt()
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
androidx.fragment.app.FragmentStatePagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()
androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getAlpha()
io.reactivex.schedulers.Schedulers: io.reactivex.Scheduler computation()
okio.Buffer: okio.BufferedSink writeByte(int)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View,int)
com.google.gson.stream.JsonReader: java.lang.String nextName()
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.StandardMenuPopup: void setHorizontalOffset(int)
com.xuexiang.xhttp2.reflect.TypeException: TypeException(java.lang.String,java.lang.Throwable)
okhttp3.internal.http2.Http2Writer: void connectionPreface()
androidx.core.app.RemoteActionCompat: boolean isEnabled()
com.google.gson.internal.bind.util.ISO8601Utils: boolean checkOffset(java.lang.String,int,char)
androidx.appcompat.widget.AppCompatRatingBar: void onMeasure(int,int)
io.reactivex.internal.operators.flowable.FlowableReplay$ConnectableFlowableReplay: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
io.reactivex.internal.observers.CallbackCompletableObserver: boolean hasCustomOnError()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: boolean isDisposed()
androidx.appcompat.view.SupportActionModeWrapper: java.lang.Object getTag()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: int requestFusion(int)
io.reactivex.schedulers.Schedulers$IOTask: Schedulers$IOTask()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()
androidx.core.app.NotificationManagerCompat: boolean useSideChannelForNotification(android.app.Notification)
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: ObservableZip$ZipCoordinator(io.reactivex.Observer,io.reactivex.functions.Function,int,boolean)
com.appspa.update.widget.UpdateDialogFragment: void dismissDialog()
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void listen(int)
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: void drain()
androidx.versionedparcelable.VersionedParcel: java.lang.Object[] readArray(java.lang.Object[])
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)
androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: ScrollingTabContainerView$TabView(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: void onComplete()
androidx.fragment.app.FragmentManagerImpl: void handleOnBackPressed()
okhttp3.CipherSuite$1: CipherSuite$1()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void drain()
androidx.appcompat.widget.Toolbar: void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
io.reactivex.internal.operators.observable.ObservableUsing: void subscribeActual(io.reactivex.Observer)
androidx.core.view.ViewCompat: void setTranslationZ(android.view.View,float)
okhttp3.Route: java.lang.String toString()
com.google.gson.JsonObject: com.google.gson.JsonObject getAsJsonObject(java.lang.String)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)
androidx.viewpager.widget.ViewPager$PagerObserver: ViewPager$PagerObserver(androidx.viewpager.widget.ViewPager)
okhttp3.internal.http2.Http2Connection: long access$208(okhttp3.internal.http2.Http2Connection)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: FlowableOnBackpressureError$BackpressureErrorSubscriber(org.reactivestreams.Subscriber)
okio.Okio$2: long read(okio.Buffer,long)
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: ReplaySubject$SizeAndTimeBoundReplayBuffer(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.util.EmptyComponent: io.reactivex.internal.util.EmptyComponent[] values()
com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Object,java.lang.Object)
com.google.gson.FieldAttributes: java.lang.Class getDeclaringClass()
androidx.core.os.LocaleListCompatWrapper: java.lang.String toLanguageTags()
androidx.core.os.ParcelCompat: ParcelCompat()
io.reactivex.internal.functions.Functions$TimestampFunction: io.reactivex.schedulers.Timed apply(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)
androidx.core.app.JobIntentService: void ensureProcessorRunningLocked(boolean)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: java.lang.String toString()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy: io.reactivex.Observable execute(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,long,io.reactivex.Observable,java.lang.reflect.Type)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person)
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadCounterImpl$Counter: ThreadStackFactoryImpl$ThreadCounterImpl$Counter()
androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)
androidx.fragment.app.FragmentTransitionImpl$2: FragmentTransitionImpl$2(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
io.reactivex.subscribers.SerializedSubscriber: void cancel()
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: void dispose()
com.google.gson.stream.JsonReader: void beginArray()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[])
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: FlowableTakeLastTimed$TakeLastTimedSubscriber(org.reactivestreams.Subscriber,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,boolean)
androidx.loader.content.Loader: void forceLoad()
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void bind(java.net.InetAddress,int)
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: boolean isDisposed()
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getCurrent()
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: void dispose()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
androidx.core.app.NotificationCompat: int getActionCount(android.app.Notification)
com.zhy.http.okhttp.log.LoggerInterceptor: boolean isText(okhttp3.MediaType)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast: void run()
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: FlowableFromArray$BaseArraySubscription(java.lang.Object[])
androidx.appcompat.widget.ListPopupWindow: int getInputMethodMode()
androidx.core.app.ActivityCompat: void finishAfterTransition(android.app.Activity)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
okhttp3.OkHttpClient: java.net.Proxy proxy()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableTakePublisher: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()
com.google.gson.stream.JsonReader$1: JsonReader$1()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
androidx.appcompat.widget.ActivityChooserView$4: ActivityChooserView$4(androidx.appcompat.widget.ActivityChooserView,android.view.View)
okhttp3.Cache: Cache(java.io.File,long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
com.google.gson.internal.LinkedHashTreeMap$AvlIterator: com.google.gson.internal.LinkedHashTreeMap$Node next()
androidx.fragment.app.FragmentManagerImpl: void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.appcompat.widget.ActionBarOverlayLayout$1: ActionBarOverlayLayout$1(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: void onComplete()
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.widget.ScrollerCompat: boolean springBack(int,int,int,int,int,int)
okhttp3.internal.http.StatusLine: java.lang.String toString()
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: java.lang.String bodyToString(okhttp3.Request)
androidx.fragment.app.Fragment: boolean isMenuVisible()
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: boolean isDisposed()
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String)
androidx.appcompat.view.menu.BaseMenuWrapper: BaseMenuWrapper(android.content.Context)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
com.appspa.update._AppSpace$1: _AppSpace$1(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: FlowableRetryBiPredicate$RetryBiSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.BiPredicate,io.reactivex.internal.subscriptions.SubscriptionArbiter,org.reactivestreams.Publisher)
androidx.appcompat.widget.AppCompatSpinner: int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: FlowableFlatMap$MergeSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int,int)
androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.text.util.FindAddress: boolean isValidLocationName(java.lang.String)
io.reactivex.processors.AsyncProcessor: void onNext(java.lang.Object)
androidx.appcompat.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
io.reactivex.subjects.BehaviorSubject$BehaviorDisposable: boolean test(java.lang.Object)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask$DisposeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.view.ViewGroupCompat: ViewGroupCompat()
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
io.reactivex.internal.queue.MpscLinkedQueue: io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode lpConsumerNode()
androidx.versionedparcelable.VersionedParcel$ParcelException: VersionedParcel$ParcelException(java.lang.Throwable)
com.xuexiang.xhttp2.request.PutRequest: PutRequest(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldHideActionBarOnFling(float,float)
io.reactivex.internal.operators.observable.ObservableSkipLastTimed: void subscribeActual(io.reactivex.Observer)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
androidx.appcompat.widget.ActivityChooserView$2: ActivityChooserView$2(androidx.appcompat.widget.ActivityChooserView)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: void otherComplete()
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnComplete: void run()
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: boolean isEmpty()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Field getTextViewField(java.lang.String)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: boolean isDisposed()
androidx.appcompat.app.ToolbarActionBar: void setLogo(int)
io.reactivex.internal.util.AtomicThrowable: boolean isTerminated()
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: ObservableDebounceTimed$DebounceTimedObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: void onNext(java.lang.Object)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: long contentLength()
androidx.fragment.app.FragmentManagerImpl: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void startFirstTimeout(org.reactivestreams.Publisher)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: boolean accept(org.reactivestreams.Subscriber,java.util.Collection)
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,int)
androidx.versionedparcelable.VersionedParcel: java.util.Collection readCollection(java.util.Collection)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable: boolean isDisposed()
androidx.core.widget.TextViewCompat$OreoCallback: void recomputeProcessTextMenuItems(android.view.Menu)
androidx.core.view.MarginLayoutParamsCompat: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.widget.SearchView$5: void onClick(android.view.View)
androidx.core.provider.SelfDestructiveThread: boolean isRunning()
com.google.gson.internal.LinkedTreeMap: void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)
com.jakewharton.disklrucache.DiskLruCache$Entry: boolean access$600(com.jakewharton.disklrucache.DiskLruCache$Entry)
androidx.appcompat.view.menu.MenuBuilder: void removeItem(int)
androidx.drawerlayout.widget.DrawerLayout: boolean isContentView(android.view.View)
androidx.appcompat.app.ActionBar: void setHideOffset(int)
androidx.loader.content.AsyncTaskLoader: void onCanceled(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.View getActionView()
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: FlowableUsing$UsingSubscriber(org.reactivestreams.Subscriber,java.lang.Object,io.reactivex.functions.Consumer,boolean)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.http.HttpHeaders: int skipUntil(java.lang.String,int,java.lang.String)
androidx.vectordrawable.animated.R$styleable: R$styleable()
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: void otherError(java.lang.Throwable)
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,android.view.View)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void onSubscribe(io.reactivex.disposables.Disposable)
retrofit2.ParameterHandler$Tag: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$2: com.xuexiang.xhttp2.cache.model.CacheResult apply(java.lang.Boolean)
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: void showProgress()
androidx.appcompat.widget.AppCompatPopupWindow: AppCompatPopupWindow(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context)
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: void flush()
androidx.core.provider.FontsContractCompat: java.util.List convertToByteArrayList(android.content.pm.Signature[])
io.reactivex.subscribers.TestSubscriber: void onNext(java.lang.Object)
retrofit2.RequestFactory$Builder: okhttp3.Headers parseHeaders(java.lang.String[])
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: void writeTo(okio.BufferedSink)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)
io.reactivex.internal.operators.observable.ObservableJust: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: void onNext(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setFilterBitmap(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: AccessibilityNodeInfoCompat$RangeInfoCompat(java.lang.Object)
com.google.gson.internal.bind.TimeTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.viewpager.widget.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.SwitchCompat: void applyTrackTint()
androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: void cancel()
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle)
androidx.appcompat.view.menu.ListMenuPresenter: android.os.Parcelable onSaveInstanceState()
com.appspa.update.widget.NumberProgressBar: void setMax(int)
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: boolean isDisposed()
okio.RealBufferedSink$1: java.lang.String toString()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void run()
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.cache.DiskLruCache$3: java.lang.Object next()
io.reactivex.Scheduler$PeriodicDirectTask: Scheduler$PeriodicDirectTask(java.lang.Runnable,io.reactivex.Scheduler$Worker)
com.google.gson.annotations.Expose: boolean deserialize()
androidx.appcompat.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.widget.SearchView$3: void onFocusChange(android.view.View,boolean)
androidx.cursoradapter.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)
androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: void clear()
io.reactivex.internal.operators.maybe.MaybeCache: void remove(io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable)
androidx.core.app.ActivityRecreator$1: ActivityRecreator$1(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer: ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer(io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver,java.util.Collection)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getAlpha()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void disposeOther()
io.reactivex.internal.operators.observable.ObservableAnySingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState()
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void innerComplete(io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver)
androidx.core.os.LocaleListCompatWrapper: int hashCode()
androidx.cursoradapter.widget.SimpleCursorAdapter: void findColumns(android.database.Cursor,java.lang.String[])
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)
androidx.drawerlayout.R$drawable: R$drawable()
okio.ByteString: int lastIndexOf(byte[],int)
io.reactivex.schedulers.Schedulers$IOTask: java.lang.Object call()
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.appspa.update.widget.UpdateDialogActivity: void dismissDialog()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setInputType(int)
androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()
io.reactivex.subjects.CompletableSubject: boolean add(io.reactivex.subjects.CompletableSubject$CompletableDisposable)
androidx.core.app.NotificationManagerCompat$CancelTask: NotificationManagerCompat$CancelTask(java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: boolean defaultIsRtl()
androidx.appcompat.view.menu.MenuPresenter$Callback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: LinkedTreeMap$LinkedTreeMapIterator(com.google.gson.internal.LinkedTreeMap)
io.reactivex.internal.operators.single.SingleZipArray$ZipSingleObserver: void onSuccess(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: int getOrder()
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: void onComplete()
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)
androidx.appcompat.app.ToolbarActionBar: void show()
androidx.core.app.NotificationManagerCompat: void deleteNotificationChannel(java.lang.String)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void clear()
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: void setDisposable(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: void onError(java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegate: void onPostCreate(android.os.Bundle)
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onPageSelected(int)
androidx.fragment.app.Fragment$SavedState$1: androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(java.security.Signature)
androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)
androidx.core.widget.ListViewCompat: ListViewCompat()
androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.util.concurrent.atomic.AtomicReferenceArray lvNextBufferAndUnlink(java.util.concurrent.atomic.AtomicReferenceArray,int)
io.reactivex.internal.operators.observable.ObservableDetach: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator: void subscribe(io.reactivex.ObservableSource[])
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.core.app.ShareCompat$IntentReader: androidx.core.app.ShareCompat$IntentReader from(android.app.Activity)
androidx.core.text.util.FindAddress: java.util.regex.MatchResult matchState(java.lang.String,int)
androidx.core.view.inputmethod.InputContentInfoCompat: java.lang.Object unwrap()
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: void dispose()
androidx.appcompat.widget.ActionBarOverlayLayout: void addActionBarHideOffset()
androidx.appcompat.widget.ListPopupWindow: void setSelection(int)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: AppCompatDelegateImpl$AutoNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: void dispose()
com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: ObservableZipIterable$ZipIterableObserver(io.reactivex.Observer,java.util.Iterator,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: FlowableSwitchIfEmpty$SwitchIfEmptySubscriber(org.reactivestreams.Subscriber,org.reactivestreams.Publisher)
io.reactivex.internal.operators.observable.ObservableSkip: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableOnErrorNext: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.stream.JsonReader: char readEscapeCharacter()
com.appspa.update.utils.DialogUtils: boolean showWindow(android.app.Activity,android.view.Window,com.appspa.update.utils.DialogUtils$IWindowShower)
com.google.gson.TypeAdapter: TypeAdapter()
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
androidx.core.util.PatternsCompat: PatternsCompat()
androidx.core.view.ViewCompat: int combineMeasuredStates(int,int)
io.reactivex.internal.operators.completable.CompletableUsing: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable: void subscribeActual(io.reactivex.Observer)
okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,io.reactivex.internal.fuseable.SimpleQueue)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
io.reactivex.subscribers.SerializedSubscriber: SerializedSubscriber(org.reactivestreams.Subscriber,boolean)
okhttp3.internal.cache.DiskLruCache: void readJournal()
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: void onComplete()
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int)
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: void onComplete()
okhttp3.HttpUrl: java.lang.String percentDecode(java.lang.String,int,int,boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: void onNext(java.lang.Object)
io.reactivex.internal.functions.Functions$ArrayListCapacityCallable: java.util.List call()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: java.lang.Object getInputContentInfo()
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.AppCompatTextHelper: void onSetTextAppearance(android.content.Context,int)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.gson.internal.reflect.UnsafeReflectionAccessor: UnsafeReflectionAccessor()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: void request(long)
io.reactivex.internal.operators.flowable.FlowableIgnoreElements: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.RtlSpacingHelper: void setDirection(boolean)
androidx.core.view.MenuItemCompat$1: boolean onMenuItemActionExpand(android.view.MenuItem)
okhttp3.Cookie: int hashCode()
com.appspa.update.UpdateManager$Builder: com.appspa.update.UpdateManager$Builder param(java.lang.String,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void cancel()
okhttp3.internal.ws.RealWebSocket$2: void onResponse(okhttp3.Call,okhttp3.Response)
com.xuexiang.xhttp2.cache.RxCache: com.xuexiang.xhttp2.cache.converter.IDiskConverter access$2000(com.xuexiang.xhttp2.cache.RxCache)
com.google.gson.JsonArray: com.google.gson.JsonElement deepCopy()
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy: io.reactivex.Observable loadCache(com.xuexiang.xhttp2.cache.RxCache,java.lang.reflect.Type,java.lang.String,long,boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Enum)
androidx.core.view.NestedScrollingChild: boolean startNestedScroll(int)
okhttp3.ConnectionSpec: boolean isTls()
okhttp3.Cookie$Builder: Cookie$Builder()
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: void onSuccess(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
androidx.core.os.ParcelCompat: boolean readBoolean(android.os.Parcel)
androidx.core.view.ActionProvider: void subUiVisibilityChanged(boolean)
com.appspa.update.widget.UpdateDialogFragment: void clearIPrompterProxy()
androidx.appcompat.app.ToolbarActionBar: void setHomeActionContentDescription(java.lang.CharSequence)
androidx.drawerlayout.widget.DrawerLayout: void computeScroll()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: void cancel()
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: void onError(com.xuexiang.xhttp2.exception.ApiException)
io.reactivex.internal.schedulers.IoScheduler$ThreadWorker: IoScheduler$ThreadWorker(java.util.concurrent.ThreadFactory)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void run()
com.google.gson.internal.bind.TypeAdapters$1: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.customview.widget.FocusStrategy: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)
io.reactivex.internal.functions.Functions$TimestampFunction: java.lang.Object apply(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest: FlowableOnBackpressureLatest(io.reactivex.Flowable)
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeCreate: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.internal.http2.Http2Codec: void finishRequest()
com.google.gson.stream.JsonReader: int nextInt()
androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback()
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: void dispose()
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: boolean isDisposed()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setMipMap(boolean)
com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: FlowableToList$ToListSubscriber(org.reactivestreams.Subscriber,java.util.Collection)
androidx.appcompat.widget.ResourcesWrapper: void getValue(java.lang.String,android.util.TypedValue,boolean)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: void run()
androidx.cursoradapter.widget.CursorAdapter: boolean hasStableIds()
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: void dispose()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable: void dispose()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.util.VolatileSizeArrayList: java.util.ListIterator listIterator(int)
okhttp3.internal.ws.WebSocketWriter$FrameSink: void close()
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItem: int getItemId()
androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)
com.appspa.update._AppSpace: com.appspa.update.proxy.IUpdateDownloader getIUpdateDownLoader()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)
retrofit2.ParameterHandler$QueryName: ParameterHandler$QueryName(retrofit2.Converter,boolean)
io.reactivex.internal.observers.DeferredScalarDisposable: void complete()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: boolean isDisposed()
com.appspa.update.widget.NumberProgressBar: int getMax()
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: CursorAdapter$MyDataSetObserver(androidx.cursoradapter.widget.CursorAdapter)
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: void onComplete()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setConstantSize(boolean)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
androidx.core.view.DragStartHelper$1: boolean onLongClick(android.view.View)
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: void setDisposable(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber: FlowableSamplePublisher$SamplerSubscriber(io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$Cancellation: FlowableUnsubscribeOn$UnsubscribeSubscriber$Cancellation(io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber)
androidx.core.internal.view.SupportMenu: void setGroupDividerEnabled(boolean)
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription,long)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: void setBundle(android.os.Bundle)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: boolean isCancelled()
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowShortcut()
androidx.appcompat.widget.TintTypedArray: android.util.TypedValue peekValue(int)
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: void subscribeNext()
androidx.core.app.JobIntentService: void onDestroy()
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)
androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getContentDescription()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
androidx.loader.app.LoaderManager: void markForRedelivery()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(int)
com.google.gson.internal.bind.DateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: boolean isDisposed()
okio.Buffer: okio.Buffer emitCompleteSegments()
androidx.core.app.ShareCompat$IntentReader: int getStreamCount()
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: void dispose()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.xuexiang.xhttp2.https.HttpsUtils$UnSafeTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()
com.appspa.update.R$dimen: R$dimen()
androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])
org.aspectj.internal.lang.reflect.AdviceImpl: org.aspectj.lang.reflect.AjType[] getParameterTypes()
okhttp3.HttpUrl: java.lang.String scheme()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onComplete()
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.appspa.update.widget.NumberProgressBar: void setUnreachedBarHeight(float)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: void onError(java.lang.Throwable)
io.reactivex.schedulers.Timed: boolean equals(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList createDisabledStateList(int,int)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: void onComplete()
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: void innerComplete(io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver)
okhttp3.internal.http2.Http2Writer: void writeMedium(okio.BufferedSink,int)
io.reactivex.internal.observers.DeferredScalarDisposable: void complete(java.lang.Object)
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
io.reactivex.subscribers.TestSubscriber: void cancel()
androidx.appcompat.widget.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
androidx.appcompat.widget.ResourcesWrapper: boolean getBoolean(int)
androidx.fragment.app.Fragment: int getNextTransition()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: void startTimeout(long)
io.reactivex.internal.util.VolatileSizeArrayList: boolean containsAll(java.util.Collection)
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable()
okio.ForwardingSink: okio.Timeout timeout()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(android.view.accessibility.AccessibilityNodeInfo)
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: int access$200(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getContentDescription()
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int)
com.jakewharton.disklrucache.Util: void closeQuietly(java.io.Closeable)
com.appspa.update.logs.LogcatLogger: java.lang.String getStackTraceString(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.RtlSpacingHelper: int getLeft()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: FlowableDebounceTimed$DebounceTimedSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: void onComplete()
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: boolean isDisposed()
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
com.google.gson.internal.reflect.ReflectionAccessor: ReflectionAccessor()
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAlpha(int)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: MaybeZipArray$ZipCoordinator(io.reactivex.MaybeObserver,int,io.reactivex.functions.Function)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
androidx.lifecycle.LiveData: int getVersion()
okio.SegmentedByteString: int size()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: void dispose()
io.reactivex.internal.operators.observable.ObserverResourceWrapper: ObserverResourceWrapper(io.reactivex.Observer)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)
io.reactivex.Observable: io.reactivex.Completable ignoreElements()
androidx.appcompat.view.menu.CascadingMenuPopup: int getNextMenuPosition(int)
androidx.appcompat.widget.Toolbar: boolean shouldCollapse()
okio.InflaterSource: void close()
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUp(int,android.view.KeyEvent)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.TintTypedArray: int length()
io.reactivex.subscribers.SafeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: void request(long)
com.appspa.update.widget.NumberProgressBar: void calculateDrawRectF()
androidx.fragment.app.FragmentController: void dispatchReallyStop()
io.reactivex.internal.observers.BlockingFirstObserver: BlockingFirstObserver()
com.google.gson.stream.JsonWriter: JsonWriter(java.io.Writer)
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
io.reactivex.subjects.PublishSubject: PublishSubject()
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
com.xuexiang.xhttp2.cache.core.LruDiskCache: java.lang.Object doLoad(java.lang.reflect.Type,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: void runAsync()
com.appspa.demo.R$id: R$id()
androidx.appcompat.widget.ActivityChooserModel: boolean readHistoricalDataIfNeeded()
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.app.AppCompatDialog: void onStop()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
com.xuexiang.xhttp2.cache.RxCache$4: java.lang.Boolean execute()
okhttp3.internal.http1.Http1Codec: okio.Source newFixedLengthSource(long)
androidx.appcompat.widget.AlertDialogLayout: void forceUniformWidth(int,int)
androidx.core.app.NotificationCompat$MessagingStyle: android.text.style.TextAppearanceSpan makeFontColorSpan(int)
androidx.appcompat.app.ToolbarActionBar: java.lang.CharSequence getSubtitle()
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.appspa.update.entity.UpdateEntity: int getVersionCode()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(boolean)
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker$AppendToQueueTask: TrampolineScheduler$TrampolineWorker$AppendToQueueTask(io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker,io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable)
androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object[] newArray(int)
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable: void subscribeActual(io.reactivex.CompletableObserver)
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
androidx.appcompat.app.WindowDecorActionBar: void enableContentAnimations(boolean)
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.SubMenu addSubMenuItem()
com.google.gson.internal.bind.TypeAdapters$32: java.lang.String toString()
io.reactivex.internal.operators.single.SingleCache: void onSuccess(java.lang.Object)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
okio.Buffer$1: void close()
androidx.appcompat.app.WindowDecorActionBar: void setLogo(android.graphics.drawable.Drawable)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setStringConversionColumn(int)
com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: void subscribeNext()
androidx.customview.widget.FocusStrategy: java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void innerNext()
retrofit2.OkHttpCall$NoContentResponseBody: long contentLength()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
androidx.collection.LongSparseArray: LongSparseArray()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getArrowHeadLength()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isRunning()
okhttp3.internal.platform.Platform: boolean isAndroid()
androidx.fragment.app.Fragment$SavedState: Fragment$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.google.gson.internal.LinkedTreeMap$EntrySet: java.util.Iterator iterator()
androidx.appcompat.app.ToolbarActionBar: void dispatchMenuVisibilityChanged(boolean)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: boolean isDisposed()
androidx.appcompat.widget.TooltipPopup: void show(android.view.View,int,int,boolean,java.lang.CharSequence)
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor: boolean isItalic(java.lang.Object)
androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()
okhttp3.Cache$1: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
io.reactivex.internal.operators.flowable.FlowableConcatMap: void subscribeActual(org.reactivestreams.Subscriber)
retrofit2.KotlinExtensions$await$4$2: void onResponse(retrofit2.Call,retrofit2.Response)
okio.AsyncTimeout$2: okio.Timeout timeout()
retrofit2.Retrofit: void validateServiceInterface(java.lang.Class)
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: void onComplete()
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
androidx.core.provider.FontsContractCompat: boolean equalsByteArrayList(java.util.List,java.util.List)
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerSlide(android.view.View,float)
com.google.gson.Gson$2: Gson$2(com.google.gson.Gson)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void onComplete()
com.google.gson.JsonPrimitive: double getAsDouble()
com.xuexiang.xhttp2.utils.RxSchedulers: RxSchedulers()
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver: void onError(java.lang.Throwable)
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast: void complete()
androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)
androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)
androidx.collection.SparseArrayCompat: int indexOfValue(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver: void onError(java.lang.Throwable)
androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()
com.xuexiang.xhttp2.cache.RxCache: long access$1100(com.xuexiang.xhttp2.cache.RxCache)
androidx.appcompat.app.AlertController: void centerButton(android.widget.Button)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast: void subscribeActual(org.reactivestreams.Subscriber)
androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(android.view.View)
com.xuexiang.xhttp2.XHttpProxy: java.util.Map getParamsMap(java.lang.reflect.Method,java.lang.Object[],com.xuexiang.xhttp2.annotation.NetMethod)
androidx.appcompat.view.SupportActionModeWrapper: void setTag(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters: TypeAdapters()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)
androidx.appcompat.view.menu.MenuView$ItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: void onNext(java.lang.Object)
com.xuexiang.xhttp2.utils.PathUtils: java.lang.String getFilePathByUri(android.net.Uri)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: void onSuccess(java.lang.Object)
androidx.viewpager.widget.ViewPager$2: float getInterpolation(float)
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: void endOfInput(java.io.IOException)
com.google.gson.internal.LinkedHashTreeMap: void clear()
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: io.reactivex.internal.queue.SpscLinkedArrayQueue getOrCreateQueue()
io.reactivex.Observable: io.reactivex.Observable map(io.reactivex.functions.Function)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterConditionalSubscriber: ParallelFilter$ParallelFilterConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Predicate)
androidx.core.math.MathUtils: double clamp(double,double,double)
androidx.versionedparcelable.VersionedParcel: long[] readLongArray()
androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader getLoader(int)
androidx.appcompat.widget.ListPopupWindow: boolean onKeyDown(int,android.view.KeyEvent)
androidx.core.os.LocaleListCompatWrapper: boolean equals(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCache: void replay(io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable)
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
io.reactivex.internal.observers.BlockingObserver: void onComplete()
com.jakewharton.disklrucache.StrictLineReader: java.lang.String readLine()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.xuexiang.xhttp2.logs.LogcatLogger: void logSub(int,java.lang.String,java.lang.String)
io.reactivex.internal.operators.single.SingleDelay$Delay$OnError: SingleDelay$Delay$OnError(io.reactivex.internal.operators.single.SingleDelay$Delay,java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: void cancel()
retrofit2.OptionalConverterFactory$OptionalConverter: java.lang.Object convert(java.lang.Object)
androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()
io.reactivex.processors.UnicastProcessor: void drainRegular(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void drain()
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.LinkedHashTreeMap$EntrySet: boolean contains(java.lang.Object)
com.google.gson.internal.LinkedHashTreeMap: LinkedHashTreeMap(java.util.Comparator)
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: void trimHead()
androidx.fragment.app.FragmentManagerImpl: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews)
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: void onError(java.lang.Throwable)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.Object getTag()
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: void subscribe(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void setOther(org.reactivestreams.Subscription)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.xuexiang.xhttp2.cache.core.LruMemoryCache: boolean remove(java.lang.String)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale: TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: void request(long)
com.appspa.update.proxy.impl.DefaultPrompterProxyImpl: void cancelDownload()
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: ScrollingTabContainerView$VisibilityAnimListener(androidx.appcompat.widget.ScrollingTabContainerView)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: void dispose()
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: void onSuccess(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeList(java.util.List,int)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.reactivex.internal.operators.single.SingleDelay: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitleCondensed()
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: void onComplete()
androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(androidx.core.graphics.PathParser$PathDataNode)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.lifecycle.LiveData: void onInactive()
com.zhy.http.okhttp.callback.FileCallBack: java.io.File parseNetworkResponse(okhttp3.Response,int)
androidx.core.app.RemoteActionCompat: RemoteActionCompat(androidx.core.app.RemoteActionCompat)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void dispose()
okhttp3.RealCall: okhttp3.Request request()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: boolean add(io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber)
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: void dispose()
androidx.fragment.app.BackStackRecord: BackStackRecord(androidx.fragment.app.FragmentManagerImpl)
com.appspa.update.widget.UpdateDialog: void installApp()
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: FlowableSingle$SingleElementSubscriber(org.reactivestreams.Subscriber,java.lang.Object,boolean)
androidx.appcompat.R$styleable: R$styleable()
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: void disposeExcept(int)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.Request: java.lang.Object tag(java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: void subscribeNext()
androidx.vectordrawable.animated.R$layout: R$layout()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: void dispose()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: DrawableContainer$BlockInvalidateCallback()
io.reactivex.internal.observers.LambdaObserver: boolean hasCustomOnError()
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: void dispose()
androidx.appcompat.R$attr: R$attr()
okhttp3.Cache$2: java.lang.Object next()
com.xuexiang.xhttp2.XHttpSDK: XHttpSDK()
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getQuantityText(int,int)
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()
androidx.viewpager.widget.ViewPager: void fakeDragBy(float)
androidx.appcompat.app.ActionBar: void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: void onNext(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
androidx.appcompat.app.ToolbarActionBar: void setNavigationMode(int)
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest headers(java.lang.String,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: void onComplete()
okio.Buffer: okio.Segment writableSegment(int)
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.DecorToolbar: int getDropdownSelectedPosition()
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(androidx.appcompat.widget.ActionMenuView$LayoutParams)
androidx.core.widget.NestedScrollView: void addView(android.view.View)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: void onComplete()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
androidx.core.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.appcompat.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
androidx.appcompat.widget.SuggestionsAdapter: SuggestionsAdapter(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleDoOnError$DoOnError: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AlertController$CheckedItemAdapter: long getItemId(int)
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: MaybeToFlowable$MaybeToFlowableSubscriber(org.reactivestreams.Subscriber)
io.reactivex.internal.functions.Functions$Array9Func: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeMap: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getAlphabeticModifiers()
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription: void fastPath()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: boolean isDisposed()
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: boolean isDisposed()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setChangingConfigurations(int)
io.reactivex.Scheduler$PeriodicDirectTask: void dispose()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: void cancelAll()
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void onError(java.lang.Throwable)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
io.reactivex.internal.subscriptions.SubscriptionHelper: void request(long)
com.xuexiang.xhttp2.XHttp$3: void accept(java.lang.Boolean)
androidx.versionedparcelable.ParcelField: int value()
io.reactivex.internal.observers.BlockingBaseObserver: BlockingBaseObserver()
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.drawerlayout.widget.DrawerLayout: void requestLayout()
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay()
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
com.appspa.update._AppSpace: boolean isGet()
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean replace(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription)
okhttp3.internal.cache.DiskLruCache$2: DiskLruCache$2(okhttp3.internal.cache.DiskLruCache,okio.Sink)
okio.Buffer: okio.Buffer buffer()
com.xuexiang.xhttp2.model.XHttpRequest: java.lang.String getBaseUrl()
androidx.collection.CircularIntArray: void clear()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)
androidx.core.net.TrafficStatsCompat: void tagSocket(java.net.Socket)
androidx.fragment.R$drawable: R$drawable()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onLevelChange(int)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: long read(okio.Buffer,long)
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void run()
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: AppCompatDelegateImpl$AutoNightModeManager$1(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)
io.reactivex.internal.subscribers.QueueDrainSubscriber: int leave(int)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)
androidx.core.view.ViewCompat: int getAvailableActionIdFromResources(android.view.View)
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: BuiltInConverters$BufferingResponseBodyConverter()
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: void onComplete()
io.reactivex.subjects.MaybeSubject: void onComplete()
okhttp3.internal.http2.Settings: int size()
com.appspa.update.service.DownloadService$DownloadBinder: void start(com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void innerError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean isSpinEnabled()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.appcompat.app.AlertController: void setButtonPanelLayoutHint(int)
okhttp3.ConnectionPool$1: void run()
io.reactivex.subjects.SerializedSubject: void onComplete()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
androidx.core.os.LocaleListCompatWrapper: java.lang.Object getLocaleList()
androidx.appcompat.view.menu.StandardMenuPopup: android.os.Parcelable onSaveInstanceState()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: boolean isDisposed()
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
com.appspa.update.widget.NumberProgressBar: int getUnreachedBarColor()
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod)
androidx.core.app.NotificationCompat$Style: int calculateTopPadding()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void start()
androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.appspa.update.utils.ApkUtils: boolean install(android.content.Context,java.io.File)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void boundaryError(io.reactivex.disposables.Disposable,java.lang.Throwable)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.WindowDecorActionBar: float getElevation()
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: void setDisposable(io.reactivex.disposables.Disposable)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
okhttp3.RealCall: java.lang.Object clone()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence)
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper: ToolbarActionBar$ToolbarCallbackWrapper(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback)
com.zhy.http.okhttp.request.OtherRequest: OtherRequest(okhttp3.RequestBody,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,java.util.Map,java.util.Map,int)
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: void onSuccess(java.lang.Object)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
okhttp3.internal.ws.WebSocketReader: void readHeader()
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
android.support.v4.app.INotificationSideChannel$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: void run()
retrofit2.Utils: void checkNotPrimitive(java.lang.reflect.Type)
retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)
com.xuexiang.xhttp2.XHttp$1: void accept(java.lang.Boolean)
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: ObservableRepeatUntil$RepeatUntilObserver(io.reactivex.Observer,io.reactivex.functions.BooleanSupplier,io.reactivex.internal.disposables.SequentialDisposable,io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: void dispose()
com.google.gson.JsonNull: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver: FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver(io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)
okio.Base64: java.lang.String encodeUrl(byte[])
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: void cancel()
androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)
androidx.core.content.SharedPreferencesCompat$EditorCompat: void apply(android.content.SharedPreferences$Editor)
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: void run()
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: void request(long)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: void dispose()
io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(int)
okhttp3.internal.cache.DiskLruCache: void processJournal()
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
com.appspa.update.widget.UpdateDialog: UpdateDialog(android.content.Context)
androidx.collection.LongSparseArray: boolean containsKey(long)
androidx.drawerlayout.widget.DrawerLayout: boolean includeChildForAccessibility(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.fragment.app.FragmentManagerImpl: void dispatchPause()
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationEnd(android.view.View)
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void dispose()
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
io.reactivex.internal.operators.parallel.ParallelReduce: void subscribe(org.reactivestreams.Subscriber[])
com.appspa.update._AppSpace: boolean isFileValid(java.lang.String,java.io.File)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable()
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: void setWaiting()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: boolean isDisposed()
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence formatUrl(java.lang.CharSequence)
com.xuexiang.xhttp2.cache.key.DefaultCacheKeyCreator: DefaultCacheKeyCreator()
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeTimer$TimerDisposable: void setFuture(io.reactivex.disposables.Disposable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getTextSelectionEnd()
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask$DisposeObserver: CompletableTimeout$DisposeTask$DisposeObserver(io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask)
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: MaybeUsing$UsingObserver(io.reactivex.MaybeObserver,java.lang.Object,io.reactivex.functions.Consumer,boolean)
io.reactivex.internal.functions.Functions$EmptyLongConsumer: void accept(long)
androidx.core.R: R()
androidx.appcompat.view.ActionBarPolicy: int getMaxActionButtons()
io.reactivex.android.schedulers.HandlerScheduler: io.reactivex.Scheduler$Worker createWorker()
androidx.appcompat.view.menu.MenuPopupHelper: boolean isShowing()
io.reactivex.schedulers.TestScheduler: io.reactivex.Scheduler$Worker createWorker()
io.reactivex.internal.operators.flowable.FlowableCollectSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void setCancellable(io.reactivex.functions.Cancellable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence[] getTextArray(int)
org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: boolean isError()
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: BuiltInConverters$StreamingResponseBodyConverter()
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: FlowableWindow$WindowOverlapSubscriber(org.reactivestreams.Subscriber,long,long,int)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void cancel()
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleToFlowable$SingleToFlowableObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$UIHandler: void handleMessage(android.os.Message)
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.util.Map read(com.google.gson.stream.JsonReader)
okio.ByteString: boolean startsWith(okio.ByteString)
androidx.appcompat.app.ActionBar: boolean openOptionsMenu()
androidx.appcompat.widget.SwitchCompat: void animateThumbToCheckedState(boolean)
retrofit2.adapter.rxjava2.RxJava2CallAdapter: java.lang.reflect.Type responseType()
okhttp3.internal.io.FileSystem$1: long size(java.io.File)
androidx.fragment.app.DialogFragment: void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void update()
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: void cancel()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
com.google.gson.Gson$FutureTypeAdapter: void setDelegate(com.google.gson.TypeAdapter)
androidx.core.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: boolean tryOnError(java.lang.Throwable)
androidx.appcompat.view.menu.StandardMenuPopup: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: AppCompatDelegateImpl$ActionBarDrawableToggleImpl(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.collection.SimpleArrayMap: void allocArrays(int)
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: void onNext(java.lang.Object)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: boolean tryOnError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: boolean setOther(io.reactivex.disposables.Disposable)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: ObservableCreate$CreateEmitter(io.reactivex.Observer)
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: void replay(io.reactivex.subjects.ReplaySubject$ReplayDisposable)
androidx.collection.SimpleArrayMap: SimpleArrayMap(androidx.collection.SimpleArrayMap)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getItemViewType(int)
androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)
okio.AsyncTimeout$2: void close()
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: void dispose()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: void run()
okhttp3.internal.cache.CacheInterceptor$1: void close()
com.appspa.update.R$xml: R$xml()
androidx.collection.LruCache: java.util.Map snapshot()
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: boolean offer(java.lang.Object)
androidx.collection.ArraySet$1: int colGetSize()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.viewpager.widget.ViewPager: void endDrag()
io.reactivex.processors.MulticastProcessor$MulticastSubscription: void request(long)
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: void dispose()
androidx.appcompat.app.ToolbarActionBar: void setHomeButtonEnabled(boolean)
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object get(int)
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)
com.google.gson.internal.LinkedTreeMap$KeySet: boolean contains(java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int)
com.xuexiang.xhttp2.XHttp: int getRetryDelay()
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
androidx.appcompat.view.menu.ActionMenuItemView: void onClick(android.view.View)
androidx.core.graphics.ColorUtils: float circularInterpolate(float,float,float)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: void onComplete()
okhttp3.HttpUrl: HttpUrl(okhttp3.HttpUrl$Builder)
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout()
retrofit2.Retrofit: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean isCircular()
okio.Buffer: short readShort()
com.appspa.update.service.DownloadService: void onCreate()
io.reactivex.disposables.Disposables: Disposables()
com.xuexiang.xhttp2.cache.stategy.OnlyRemoteStrategy: io.reactivex.Observable execute(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,long,io.reactivex.Observable,java.lang.reflect.Type)
androidx.appcompat.app.AppCompatDelegateImpl$6: void run()
com.appspa.update.entity.UpdateError: void init(android.content.Context)
androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: ObservableConcatWithSingle$ConcatWithObserver(io.reactivex.Observer,io.reactivex.SingleSource)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerOuter: org.reactivestreams.Publisher apply(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: void dispose()
androidx.appcompat.view.menu.MenuPresenter: boolean flagActionItems()
io.reactivex.subjects.CompletableSubject$CompletableDisposable: void dispose()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: java.lang.Object leaveTransform(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.MenuItem getItem()
io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription: FlowableCache$CacheSubscription(org.reactivestreams.Subscriber,io.reactivex.internal.operators.flowable.FlowableCache)
io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable: java.lang.Object call()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void show(int,int)
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: void clear()
com.appspa.update.proxy.impl.DefaultUpdatePrompter: void showPrompt(com.appspa.update.entity.UpdateEntity,com.appspa.update.proxy.IUpdateProxy,com.appspa.update.entity.PromptEntity)
okhttp3.OkHttpClient: okhttp3.internal.cache.InternalCache internalCache()
androidx.core.widget.AutoScrollHelper: void scrollTargetBy(int,int)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver: void onComplete()
androidx.loader.app.LoaderManager: boolean hasRunningLoaders()
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: void onNext(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void onComplete()
androidx.appcompat.widget.SearchView$OnSuggestionListener: boolean onSuggestionClick(int)
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: boolean isDisposed()
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
io.reactivex.internal.operators.observable.ObservableConcatWithSingle$ConcatWithObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.interceptor.BaseResponseInterceptor: BaseResponseInterceptor()
androidx.viewpager.widget.ViewPager: void onDetachedFromWindow()
okhttp3.ResponseBody: java.lang.String string()
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
io.reactivex.internal.schedulers.SchedulerWhen: io.reactivex.Scheduler$Worker createWorker()
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String toString()
com.google.gson.JsonArray: long getAsLong()
androidx.appcompat.widget.AppCompatImageButton: boolean hasOverlappingRendering()
androidx.core.view.ViewGroupCompat: int getLayoutMode(android.view.ViewGroup)
androidx.fragment.app.BackStackRecord: boolean interactsWith(int)
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: io.reactivex.FlowableEmitter serialize()
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: void onComplete()
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.CascadingMenuPopup: void updateMenuView(boolean)
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
io.reactivex.internal.functions.Functions$EmptyConsumer: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterConditionalSubscriber: int requestFusion(int)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver(io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1(retrofit2.Call)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void innerError(java.lang.Throwable)
com.xuexiang.xhttp2.interceptor.BaseExpiredInterceptor: BaseExpiredInterceptor()
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: void dispose()
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void cancelAll()
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: boolean isDisposed()
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setEnabled(boolean)
io.reactivex.Scheduler$Worker: Scheduler$Worker()
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void cancel()
androidx.viewpager.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: void onError(java.lang.Throwable)
androidx.core.graphics.TypefaceCompat: TypefaceCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
retrofit2.Retrofit$Builder: Retrofit$Builder(retrofit2.Platform)
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription[] values()
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String)
com.zhy.http.okhttp.request.CountingRequestBody$CountingSink: CountingRequestBody$CountingSink(com.zhy.http.okhttp.request.CountingRequestBody,okio.Sink)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder from(android.content.Context)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: int requestFusion(int)
okhttp3.internal.http2.Http2Connection: java.util.concurrent.ScheduledExecutorService access$500(okhttp3.internal.http2.Http2Connection)
androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: ObservableTimeout$TimeoutObserver(io.reactivex.Observer,io.reactivex.functions.Function)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
com.appspa.demo.App: App()
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)
androidx.fragment.app.Fragment: void performStop()
com.google.gson.internal.LinkedTreeMap: boolean containsKey(java.lang.Object)
androidx.appcompat.widget.TintTypedArray: java.lang.String getString(int)
com.google.gson.JsonPrimitive: int getAsInt()
androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat: boolean isRound()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver: void onSuccess(java.lang.Object)
androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)
androidx.appcompat.widget.ListPopupWindow: void setAnchorView(android.view.View)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: void dispose()
androidx.core.app.RemoteActionCompat: android.app.PendingIntent getActionIntent()
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber: java.lang.Object poll()
androidx.appcompat.app.WindowDecorActionBar: boolean requestFocus()
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void drainLoop()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean refresh()
com.zhy.http.okhttp.cookie.store.SerializableHttpCookie: void readObject(java.io.ObjectInputStream)
okhttp3.internal.http2.Http2Stream: void waitForIo()
androidx.appcompat.widget.ActivityChooserView: void updateAppearance()
androidx.appcompat.app.AppCompatDelegate: void onPostResume()
okhttp3.Cookie: boolean hostOnly()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isHeading()
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler initMainThreadScheduler(java.util.concurrent.Callable)
com.google.gson.internal.Primitives: void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)
androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void otherSuccess(java.lang.Object)
io.reactivex.processors.MulticastProcessor: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.single.SingleDetach: void subscribeActual(io.reactivex.SingleObserver)
androidx.loader.content.AsyncTaskLoader: void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver: void dispose()
com.google.gson.JsonElement: java.lang.Boolean getAsBooleanWrapper()
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: boolean isDisposed()
androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$2: void run()
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.fragment.app.FragmentManagerImpl: void detachFragment(androidx.fragment.app.Fragment)
okhttp3.ConnectionPool: long cleanup(long)
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void evictExpiredWorkers()
io.reactivex.observers.DisposableObserver: void onStart()
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: FlowableCreate$BaseEmitter(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterSubscriber: FlowableDoAfterNext$DoAfterSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Consumer)
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor)
io.reactivex.internal.schedulers.SchedulerWhen$OnCompletedAction: SchedulerWhen$OnCompletedAction(java.lang.Runnable,io.reactivex.CompletableObserver)
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int)
androidx.versionedparcelable.VersionedParcel: int[] readIntArray()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapIntoIterable: java.lang.Object apply(java.lang.Object)
androidx.loader.content.Loader: void stopLoading()
okhttp3.internal.ws.WebSocketWriter: okio.Sink newMessageSink(int,long)
androidx.appcompat.widget.AppCompatPopupWindow: void init(android.content.Context,android.util.AttributeSet,int,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
com.appspa.update.R$style: R$style()
com.google.gson.JsonPrimitive: byte getAsByte()
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: boolean isDisposed()
androidx.vectordrawable.animated.R$integer: R$integer()
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
io.reactivex.internal.operators.observable.ObservableGroupBy$State: boolean checkTerminated(boolean,boolean,io.reactivex.Observer,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View)
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: void cancel()
com.appspa.update.widget.UpdateDialogFragment: void handleError(java.lang.Throwable)
com.google.gson.Gson$2: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: void innerComplete()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: void request(long)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: ObservableRepeatWhen$RepeatWhenObserver(io.reactivex.Observer,io.reactivex.subjects.Subject,io.reactivex.ObservableSource)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: void replay(io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription)
androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)
io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber: void cancel()
io.reactivex.internal.subscribers.BoundedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void fail(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: void onError(java.lang.Throwable)
com.appspa.update.proxy.impl.DefaultUpdateChecker$1: void onSuccess(java.lang.String)
androidx.appcompat.widget.ActivityChooserView: void onAttachedToWindow()
androidx.loader.content.ModernAsyncTask: void onCancelled()
androidx.appcompat.widget.ActionMenuPresenter: void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
okio.Okio$1: void write(okio.Buffer,long)
io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: void accept(java.lang.Throwable)
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.appcompat.view.menu.ActionMenuItem: androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
com.appspa.update.utils.FileUtils: FileUtils()
androidx.appcompat.widget.SuggestionsAdapter: void setQueryRefinement(int)
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: FlowableSkip$SkipSubscriber(org.reactivestreams.Subscriber,long)
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver(io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int)
androidx.appcompat.view.menu.MenuWrapperICS: int size()
androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)
io.reactivex.internal.operators.flowable.FlowableLimit: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.connection.StreamAllocation: java.lang.String toString()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)
androidx.appcompat.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: void onError(java.lang.Throwable)
androidx.core.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.util.ArrayList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: BlockingFlowableNext$NextSubscriber()
com.appspa.update.entity.PromptEntity$1: java.lang.Object createFromParcel(android.os.Parcel)
okhttp3.Response: okhttp3.Request request()
io.reactivex.internal.operators.flowable.FlowableFilter: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.observers.SerializedObserver: void dispose()
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification)
androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)
androidx.versionedparcelable.ParcelUtils: void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable)
org.aspectj.runtime.reflect.SignatureImpl: java.lang.ClassLoader getLookupClassLoader()
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: void onError(java.lang.Throwable)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: boolean canScroll()
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription: FlowableFromArray$ArraySubscription(org.reactivestreams.Subscriber,java.lang.Object[])
io.reactivex.internal.operators.single.SingleMap$MapSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)
com.appspa.update.utils.PatchUtils: int patch(java.lang.String,java.lang.String,java.lang.String)
androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: MaybeToSingle$ToSingleMaybeSubscriber(io.reactivex.SingleObserver,java.lang.Object)
com.appspa.update.widget.UpdateDialog: void initWindow(float,float)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
io.reactivex.processors.BehaviorProcessor: boolean add(io.reactivex.processors.BehaviorProcessor$BehaviorSubscription)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: boolean isDisposed()
com.xuexiang.xhttp2.utils.ApiUtils: int getSuccessCode()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: AccessibilityNodeInfoCompat$CollectionItemInfoCompat(java.lang.Object)
androidx.appcompat.widget.SearchView: void updateSearchAutoComplete()
androidx.appcompat.widget.AppCompatSpinner$2: void onGlobalLayout()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampUpDuration(int)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$6: void accept(java.lang.Throwable)
okhttp3.internal.cache.DiskLruCache: void initialize()
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: void dispose()
retrofit2.Retrofit: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void onError(java.lang.Throwable)
okhttp3.TlsVersion: java.util.List forJavaNames(java.lang.String[])
io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.TypeAdapters$12: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.ConstructorConstructor$11: java.lang.Object construct()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$SingletonArrayFunc: java.lang.Object apply(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$10: java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader)
androidx.core.widget.NestedScrollView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.activity.R$dimen: R$dimen()
androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder(android.os.IBinder,int)
androidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)
androidx.lifecycle.LiveData$1: void run()
androidx.viewpager.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.reactivex.exceptions.Exceptions: java.lang.RuntimeException propagate(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: void onError(java.lang.Throwable)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setName(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow(int,int)
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: void dispatch()
androidx.viewpager.widget.ViewPager: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: void innerSuccess(java.lang.Object,int)
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: boolean isDisposed()
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
io.reactivex.internal.util.AppendOnlyLinkedArrayList: boolean accept(org.reactivestreams.Subscriber)
androidx.collection.ArraySet: boolean remove(java.lang.Object)
okhttp3.internal.cache2.Relay$RelaySource: long read(okio.Buffer,long)
com.google.gson.JsonIOException: JsonIOException(java.lang.Throwable)
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: AppCompatResources$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration)
androidx.core.view.accessibility.AccessibilityRecordCompat: void recycle()
io.reactivex.internal.operators.single.SingleAmb$AmbSingleObserver: SingleAmb$AmbSingleObserver(io.reactivex.SingleObserver,io.reactivex.disposables.CompositeDisposable,java.util.concurrent.atomic.AtomicBoolean)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription: ParallelJoin$JoinSubscription(org.reactivestreams.Subscriber,int,int)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedTimedReplay: java.lang.Object call()
androidx.appcompat.view.menu.MenuPresenter: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void dispose()
com.zhy.http.okhttp.request.PostFormRequest: void addParams(okhttp3.FormBody$Builder)
androidx.annotation.Size: long value()
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ActivityChooserView$Callbacks: void onDismiss()
io.reactivex.internal.operators.single.SingleOnErrorReturn$OnErrorReturn: void onError(java.lang.Throwable)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,int)
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: MaybePeek$MaybePeekObserver(io.reactivex.MaybeObserver,io.reactivex.internal.operators.maybe.MaybePeek)
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: void onComplete()
androidx.core.provider.SelfDestructiveThread$3: void run()
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: void subscribeNext()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getRowSpan()
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: void onError(java.lang.Throwable)
okhttp3.internal.http2.Http2Codec: void flushRequest()
com.xuexiang.xhttp2.model.HttpParams: com.xuexiang.xhttp2.model.HttpParams put(com.xuexiang.xhttp2.model.HttpParams)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$2: DownloadSubscriber$2(com.xuexiang.xhttp2.subsciber.DownloadSubscriber)
com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: boolean isDisposed()
com.appspa.update.utils.UpdateUtils: boolean startActivity(android.content.Intent)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean)
androidx.viewpager.widget.ViewPager: void enableLayers(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.collection.CircularIntArray: int get(int)
androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void requestStop()
androidx.core.widget.TextViewCompat: void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
androidx.appcompat.app.ActionBarDrawerToggle: android.view.View$OnClickListener getToolbarNavigationClickListener()
com.google.gson.Gson: java.lang.String toJson(java.lang.Object)
com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: void dispose()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)
com.appspa.update.widget.UpdateDialogFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.reactivex.internal.util.NotificationLite: boolean isComplete(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: boolean isDisposed()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.core.text.ICUCompat: java.lang.String addLikelySubtags(java.util.Locale)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationCancel(android.view.View)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.DownloadEntity getCurDownloadEntity()
com.appspa.update.proxy.impl.DefaultPrompterProxyImpl: DefaultPrompterProxyImpl(com.appspa.update.proxy.IUpdateProxy)
androidx.core.widget.ContentLoadingProgressBar: void show()
androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)
androidx.viewpager.R$string: R$string()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean defaultIsRtl()
io.reactivex.internal.operators.maybe.MaybeTimer: void subscribeActual(io.reactivex.MaybeObserver)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$1: void accept(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasCharSequenceList(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void cancelAllBut(int)
okhttp3.internal.cache2.Relay: void writeHeader(okio.ByteString,long,long)
io.reactivex.internal.util.HashMapSupplier: java.lang.Object call()
androidx.versionedparcelable.CustomVersionedParcelable: void onPostParceling()
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver: void onSuccess(java.lang.Object)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2(retrofit2.Call)
io.reactivex.internal.util.AtomicThrowable: AtomicThrowable()
io.reactivex.internal.subscribers.BlockingSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: void cancel()
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver: void dispose()
com.appspa.update.service.DownloadService$DownloadBinder: void stop(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.Toolbar$3: Toolbar$3(androidx.appcompat.widget.Toolbar)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: boolean isDisposed()
androidx.core.provider.SelfDestructiveThread: void onDestruction()
okhttp3.internal.http1.Http1Codec$ChunkedSink: void write(okio.Buffer,long)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void onQueryRefine(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: AccessibilityClickableSpanCompat(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)
io.reactivex.internal.operators.flowable.FlowableFromIterable: FlowableFromIterable(java.lang.Iterable)
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: java.lang.Object getItem(int)
androidx.loader.content.CursorLoader: void setSelection(java.lang.String)
io.reactivex.internal.operators.parallel.ParallelCollect: void reportError(org.reactivestreams.Subscriber[],java.lang.Throwable)
io.reactivex.internal.disposables.EmptyDisposable: void error(java.lang.Throwable,io.reactivex.Observer)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setText(int)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.gson.stream.JsonReader: void skipUnquotedValue()
retrofit2.CallAdapter$Factory: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowPending()
androidx.core.os.LocaleListPlatformWrapper: java.util.Locale getFirstMatch(java.lang.String[])
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: void request(long)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterConditionalSubscriber: FlowableDoAfterNext$DoAfterConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Consumer)
androidx.appcompat.view.menu.ActionMenuItem: boolean isActionViewExpanded()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: ObservableBufferExactBoundary$BufferExactBoundaryObserver(io.reactivex.Observer,java.util.concurrent.Callable,io.reactivex.ObservableSource)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void onNext(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.functions.Function asFunction()
androidx.fragment.app.BackStackRecord: boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)
androidx.core.view.ViewCompat: void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: ObservableAnySingle$AnyObserver(io.reactivex.SingleObserver,io.reactivex.functions.Predicate)
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)
io.reactivex.internal.operators.observable.ObservableCreate: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleFlatMapMaybe: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: void dispose()
androidx.appcompat.app.AlertController$AlertParams$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.fragment.app.FragmentContainer: FragmentContainer()
com.google.gson.Gson$2: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ListPopupWindow: void setPopupClipToScreenEnabled(boolean)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedFling(float,float,boolean)
io.reactivex.internal.operators.maybe.MaybeToObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleDelayWithCompletable: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.graphics.ColorUtils: int calculateMinimumAlpha(int,int,float)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: ActionMenuPresenter$OverflowMenuButton$1(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter)
com.zhy.http.okhttp.request.PostFormRequest$1: void onRequestProgress(long,long)
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)
io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource,int,boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
com.appspa.update.UpdateManager: void backgroundDownload()
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: boolean isDisposed()
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
okhttp3.EventListener$1: EventListener$1()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: AutoScrollHelper$ScrollAnimationRunnable(androidx.core.widget.AutoScrollHelper)
okhttp3.HttpUrl: java.lang.String toString()
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: JobIntentService$JobServiceEngineImpl$WrapperWorkItem(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem)
io.reactivex.android.schedulers.AndroidSchedulers$1: java.lang.Object call()
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level[] values()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.appcompat.widget.AppCompatSpinner$1: AppCompatSpinner$1(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: void clear()
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: void drain()
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: CompletableAndThenPublisher$AndThenPublisherSubscriber(org.reactivestreams.Subscriber,org.reactivestreams.Publisher)
okhttp3.Address: okhttp3.Dns dns()
okio.ByteString: int indexOf(okio.ByteString,int)
com.xuexiang.xhttp2.callback.SimpleCallBack: void onCompleted()
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
io.reactivex.internal.operators.flowable.FlowablePublish$FlowablePublisher: void subscribe(org.reactivestreams.Subscriber)
org.aspectj.lang.SoftException: java.lang.Throwable getWrappedThrowable()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerSlide(android.view.View,float)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
okhttp3.HttpUrl: void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
androidx.core.text.util.LinkifyCompat: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
io.reactivex.internal.functions.Functions$NaturalObjectComparator: Functions$NaturalObjectComparator()
com.google.gson.internal.LinkedTreeMap: int size()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)
androidx.appcompat.widget.ListPopupWindow: void dismiss()
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.ActionBarPolicy: int getTabContainerHeight()
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.google.gson.Gson: com.google.gson.TypeAdapter doubleAdapter(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getCurrent()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot()
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: void dispose()
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getArrowShaftLength()
androidx.cursoradapter.widget.CursorAdapter: void changeCursor(android.database.Cursor)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.view.ViewGroupCompat: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableTakeLastOne: void subscribeActual(io.reactivex.Observer)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)
androidx.appcompat.app.AlertController: void setView(int)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent getReadPendingIntent()
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: boolean isDisposed()
com.xuexiang.xhttp2.XHttp: boolean isInStrictMode()
androidx.core.widget.EdgeEffectCompat: void finish()
androidx.core.widget.TextViewCompat$OreoCallback: java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: java.io.InputStream getInputStream()
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.customview.widget.ViewDragHelper: boolean isValidPointerForActionMove(int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void drain()
androidx.fragment.app.FragmentTransitionImpl: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
androidx.core.widget.AutoScrollHelper: boolean isEnabled()
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
com.google.gson.JsonPrimitive: boolean isString()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)
androidx.fragment.app.Fragment$OnStartEnterTransitionListener: void onStartEnterTransition()
androidx.core.os.LocaleListInterface: java.util.Locale getFirstMatch(java.lang.String[])
com.appspa.update.service.DownloadService: void bindService(android.content.ServiceConnection)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderView(android.view.View)
com.appspa.update.utils.ColorUtils: ColorUtils()
androidx.appcompat.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)
io.reactivex.exceptions.CompositeException: CompositeException(java.lang.Throwable[])
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)
io.reactivex.Flowable: void subscribe(org.reactivestreams.Subscriber)
androidx.appcompat.widget.Toolbar$1: boolean onMenuItemClick(android.view.MenuItem)
androidx.fragment.app.FragmentManagerImpl: void dispatchActivityCreated()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onGlobalLayout()
androidx.appcompat.R$style: R$style()
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: void dispose()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: void innerError(java.lang.Throwable)
okhttp3.Cache$1: Cache$1(okhttp3.Cache)
androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)
androidx.loader.content.ModernAsyncTask$3: void done()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void cancel()
androidx.appcompat.resources.R$drawable: R$drawable()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryOpenSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$Completion: void run()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void updateCircularCornerRadius()
io.reactivex.internal.disposables.DisposableHelper: void dispose()
io.reactivex.internal.observers.CallbackCompletableObserver: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getWindowId()
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationCancel(android.animation.Animator)
io.reactivex.Observable: io.reactivex.Observable concatArray(io.reactivex.ObservableSource[])
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener: void onAttachedFromWindow()
androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: boolean isDisposed()
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.appspa.update._AppSpace: void setIsPrompterShow(java.lang.String,boolean)
com.appspa.update.service.DownloadService: void access$800(com.appspa.update.service.DownloadService)
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: void cancelAll()
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: ObservableFromPublisher$PublisherSubscriber(io.reactivex.Observer)
com.appspa.update.logs.LogcatLogger: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)
androidx.loader.app.LoaderManager: LoaderManager()
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: void innerComplete(int)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: ObservableRetryWhen$RepeatWhenObserver(io.reactivex.Observer,io.reactivex.subjects.Subject,io.reactivex.ObservableSource)
com.google.gson.internal.ConstructorConstructor$3: ConstructorConstructor$3(com.google.gson.internal.ConstructorConstructor,java.lang.reflect.Constructor)
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
androidx.fragment.app.Fragment: boolean isHidden()
com.xuexiang.xhttp2.cache.RxCache$Builder: com.xuexiang.xhttp2.cache.RxCache build()
androidx.core.app.NotificationCompat$WearableExtender: int getGravity()
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: void error(java.lang.Throwable)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
com.zhy.http.okhttp.utils.Platform$Android: Platform$Android()
androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)
androidx.fragment.app.FragmentManagerImpl: void attachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setDither(boolean)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver: CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver(io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber)
androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)
androidx.customview.view.AbsSavedState$2: AbsSavedState$2()
io.reactivex.internal.operators.observable.ObservableAllSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: int clampViewPositionHorizontal(android.view.View,int,int)
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.subscribers.SerializedSubscriber: SerializedSubscriber(org.reactivestreams.Subscriber)
io.reactivex.observers.DisposableObserver: DisposableObserver()
com.google.gson.internal.LinkedTreeMap$1: LinkedTreeMap$1()
androidx.appcompat.view.SupportActionModeWrapper: boolean getTitleOptionalHint()
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: io.reactivex.processors.ReplayProcessor$TimedNode getHead()
androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getOpacity()
okhttp3.Response: Response(okhttp3.Response$Builder)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: void dispose()
androidx.versionedparcelable.VersionedParcel: double[] readDoubleArray(double[],int)
okio.Okio: okio.Sink sink(java.io.OutputStream)
okio.Buffer: int write(java.nio.ByteBuffer)
com.appspa.update.entity.PromptEntity: int getButtonTextColor()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: FlowableWindowTimed$WindowSkipSubscriber(org.reactivestreams.Subscriber,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker,int)
androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()
androidx.appcompat.widget.DecorContentParent: void restoreToolbarHierarchyState(android.util.SparseArray)
com.xuexiang.xhttp2.exception.ApiExceptionHandler: ApiExceptionHandler()
androidx.collection.SparseArrayCompat: void removeAtRange(int,int)
androidx.collection.ArrayMap: ArrayMap(androidx.collection.SimpleArrayMap)
androidx.core.view.NestedScrollingChild2: boolean startNestedScroll(int,int)
io.reactivex.processors.UnicastProcessor: UnicastProcessor(int,java.lang.Runnable,boolean)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: AnimatorInflaterCompat$PathDataEvaluator(androidx.core.graphics.PathParser$PathDataNode[])
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
io.reactivex.processors.PublishProcessor$PublishSubscription: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFromPublisher: void subscribeActual(io.reactivex.Observer)
com.xuexiang.xhttp2.logs.HttpLog: void i(java.lang.String)
androidx.core.internal.view.SupportMenuItem: boolean requiresActionButton()
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: void onComplete()
androidx.annotation.RequiresPermission: java.lang.String[] allOf()
okhttp3.Cookie: okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String)
org.aspectj.runtime.reflect.SignatureImpl: java.lang.Class getDeclaringType()
androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean)
androidx.appcompat.widget.ActivityChooserView: void setDefaultActionButtonContentDescription(int)
androidx.appcompat.widget.SwitchCompat: float constrain(float,float,float)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void onError(com.xuexiang.xhttp2.exception.ApiException)
okio.DeflaterSink: java.lang.String toString()
androidx.core.content.res.ResourcesCompat: float getFloat(android.content.res.Resources,int)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: void onComplete()
com.jakewharton.disklrucache.StrictLineReader$1: StrictLineReader$1(com.jakewharton.disklrucache.StrictLineReader,int)
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody$CountingSink: UploadProgressRequestBody$CountingSink(com.xuexiang.xhttp2.request.body.UploadProgressRequestBody,okio.Sink)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void drain()
okhttp3.internal.cache.DiskLruCache: void delete()
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()
io.reactivex.internal.operators.observable.ObservablePublishSelector$SourceObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: ObservableSingleMaybe$SingleElementObserver(io.reactivex.MaybeObserver)
com.appspa.update.UpdateManager: boolean isAsyncParser()
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.accessibility.AccessibilityRecordCompat: int hashCode()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int,int)
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: void onComplete()
androidx.appcompat.widget.ActivityChooserView$4: boolean onForwardingStopped()
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent getReplyPendingIntent()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: void dispose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: void setActionBarDescription(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean hasSpans()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: void dispose()
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.gson.internal.bind.ObjectTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update._AppSpace: boolean isWifiOnly()
androidx.appcompat.widget.AlertDialogLayout: int resolveMinimumHeight(android.view.View)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMaxTextSize()
com.google.gson.internal.UnsafeAllocator$3: java.lang.Object newInstance(java.lang.Class)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean)
io.reactivex.internal.observers.InnerQueuedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.RealCall: java.io.IOException timeoutExit(java.io.IOException)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.core.widget.NestedScrollView: void requestLayout()
com.google.gson.stream.JsonReader: void skipValue()
androidx.loader.content.Loader: void deliverResult(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)
io.reactivex.internal.subscribers.BoundedSubscriber: void dispose()
androidx.core.widget.EdgeEffectCompat: boolean onAbsorb(int)
io.reactivex.internal.operators.observable.ObservableFromCallable: java.lang.Object call()
com.xuexiang.xhttp2.cache.core.BaseDiskCache: java.lang.Object load(java.lang.reflect.Type,java.lang.String,long)
io.reactivex.internal.observers.BlockingMultiObserver: void onComplete()
com.google.gson.internal.bind.TimeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Time)
com.appspa.demo.http.OKHttpUpdateHttpService: OKHttpUpdateHttpService()
androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)
androidx.core.widget.NestedScrollView: int clamp(int,int,int)
com.zhy.http.okhttp.callback.Callback$1: Callback$1()
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.LambdaObserver: LambdaObserver(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
androidx.appcompat.widget.DropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()
io.reactivex.internal.operators.observable.ObservableTimer: void subscribeActual(io.reactivex.Observer)
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
androidx.appcompat.app.AppCompatDelegateImpl$4: AppCompatDelegateImpl$4(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.xuexiang.xhttp2.transform.func.HttpResultFuc: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowMenuShowPending()
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endObject()
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver: void onError(java.lang.Throwable)
androidx.core.util.AtomicFile: byte[] readFully()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setExitFadeDuration(int)
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver: SingleDetach$DetachSingleObserver(io.reactivex.SingleObserver)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: void dispose()
androidx.collection.MapCollections: java.util.Set getKeySet()
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.DefaultDateTypeAdapter: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: void onError(java.lang.Throwable)
androidx.loader.R: R()
androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: void onNext(java.lang.Object)
androidx.annotation.RequiresFeature: java.lang.String name()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: void onError(java.lang.Throwable)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)
okio.RealBufferedSource: boolean rangeEquals(long,okio.ByteString,int,int)
androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream()
androidx.fragment.app.FragmentTransition: void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: void onError(java.lang.Throwable)
com.appspa.update.utils.FileUtils: boolean isPublicPath(java.lang.String)
androidx.savedstate.SavedStateRegistry: SavedStateRegistry()
com.google.gson.stream.JsonReader: void skipQuotedValue(char)
io.reactivex.internal.util.HashMapSupplier: java.util.concurrent.Callable asCallable()
io.reactivex.internal.operators.observable.ObservableSubscribeOn: ObservableSubscribeOn(io.reactivex.ObservableSource,io.reactivex.Scheduler)
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent createChooserIntent()
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: void onNext(java.lang.Object)
androidx.appcompat.app.AppCompatDialog$1: AppCompatDialog$1(androidx.appcompat.app.AppCompatDialog)
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: ActivityChooserModel$PersistHistoryAsyncTask(androidx.appcompat.widget.ActivityChooserModel)
com.xuexiang.xhttp2.cache.RxCache: com.xuexiang.xhttp2.cache.key.ICacheKeyCreator getICacheKeyCreator()
okhttp3.internal.cache.CacheInterceptor$1: okio.Timeout timeout()
com.appspa.update.entity.PromptEntity: com.appspa.update.entity.PromptEntity setTopDrawableTag(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeText()
androidx.core.view.OneShotPreDrawListener: OneShotPreDrawListener(android.view.View,java.lang.Runnable)
com.google.gson.internal.LazilyParsedNumber: float floatValue()
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest keepJson(boolean)
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: ObservableWindowBoundary$WindowBoundaryMainObserver(io.reactivex.Observer,int)
androidx.core.view.ViewCompat: void setScaleY(android.view.View,float)
androidx.fragment.app.FragmentTabHost$SavedState$1: androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: void onComplete()
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: UnicastProcessor$UnicastQueueSubscription(io.reactivex.processors.UnicastProcessor)
io.reactivex.Observable: io.reactivex.Observable error(java.util.concurrent.Callable)
com.appspa.update.widget.UpdateDialogFragment: void setIPrompterProxy(com.appspa.update.proxy.IPrompterProxy)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: void clear()
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
com.jakewharton.disklrucache.DiskLruCache$Entry: long access$1200(com.jakewharton.disklrucache.DiskLruCache$Entry)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.appcompat.app.ActionBar: void setHideOnContentScrollEnabled(boolean)
io.reactivex.internal.operators.parallel.ParallelJoin: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.AlertController$5: void run()
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)
okio.Okio$1: void flush()
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.google.gson.FieldNamingPolicy$6: java.lang.String translateName(java.lang.reflect.Field)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: MenuPopupWindow$MenuDropDownListView(android.content.Context,boolean)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: void onComplete()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
okhttp3.CacheControl: java.lang.String toString()
io.reactivex.internal.operators.completable.CompletableTimeout$TimeOutObserver: void onError(java.lang.Throwable)
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
com.google.gson.internal.bind.TypeAdapters$23: java.net.InetAddress read(com.google.gson.stream.JsonReader)
com.xuexiang.xhttp2.request.BaseRequest$6: BaseRequest$6(com.xuexiang.xhttp2.request.BaseRequest)
com.google.gson.stream.JsonReader: java.lang.String nextString()
okio.SegmentedByteString: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: FlowableUnsubscribeOn$UnsubscribeSubscriber(org.reactivestreams.Subscriber,io.reactivex.Scheduler)
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void close(io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver)
io.reactivex.internal.functions.Functions$FutureAction: void run()
androidx.core.view.ViewCompat$3: java.lang.Object frameworkGet(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void insertIconView()
com.jakewharton.disklrucache.DiskLruCache: com.jakewharton.disklrucache.DiskLruCache$Editor edit(java.lang.String)
com.google.gson.Gson: com.google.gson.GsonBuilder newBuilder()
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: void onNext(java.lang.Object)
com.xuexiang.xhttp2.cache.core.LruDiskCache: LruDiskCache(com.xuexiang.xhttp2.cache.converter.IDiskConverter,java.io.File,int,long)
com.xuexiang.xhttp2.utils.Utils: Utils()
androidx.core.view.NestedScrollingParent: void onStopNestedScroll(android.view.View)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter endArray()
androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)
androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)
androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)
com.google.gson.internal.bind.TypeAdapters$6: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void onChange()
com.google.gson.internal.bind.DateTypeAdapter: DateTypeAdapter()
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy valueOf(java.lang.String)
io.reactivex.disposables.RunnableDisposable: RunnableDisposable(java.lang.Runnable)
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
androidx.drawerlayout.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: void dispose()
androidx.appcompat.app.ToolbarActionBar: boolean isShowing()
androidx.core.view.ViewPropertyAnimatorCompat: android.view.animation.Interpolator getInterpolator()
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: boolean isEmpty()
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: boolean isEmpty()
com.xuexiang.xhttp2.model.HttpHeaders: boolean isEmpty()
androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
io.reactivex.subjects.UnicastSubject: void onNext(java.lang.Object)
com.appspa.update.widget.UpdateDialogFragment: void initView(android.view.View)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Call clone()
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String)
com.google.gson.JsonElement: java.math.BigDecimal getAsBigDecimal()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(java.lang.Object,boolean)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: void drain()
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)
androidx.appcompat.view.menu.MenuBuilder: int getOrdering(int)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(android.view.View)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: void onNext(java.lang.Object)
org.aspectj.lang.reflect.DeclareAnnotation$Kind: org.aspectj.lang.reflect.DeclareAnnotation$Kind[] values()
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: void onFailure(retrofit2.Call,java.lang.Throwable)
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: io.reactivex.internal.schedulers.IoScheduler$ThreadWorker get()
androidx.appcompat.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: SingleDelayWithObservable$OtherSubscriber(io.reactivex.SingleObserver,io.reactivex.SingleSource)
io.reactivex.internal.util.EmptyComponent: void request(long)
com.xuexiang.xhttp2.model.HttpParams: okhttp3.MediaType guessMimeType(java.lang.String)
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask: void run()
okhttp3.internal.io.FileSystem$1: boolean exists(java.io.File)
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: void dispose()
com.appspa.update.widget.BaseDialog: void performShow()
com.xuexiang.xhttp2.cache.RxCache$5: java.lang.Boolean execute()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String[] findMatchingRule(java.lang.String[])
androidx.core.content.pm.PackageInfoCompat: long getLongVersionCode(android.content.pm.PackageInfo)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getFromIndex()
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)
androidx.appcompat.app.WindowDecorActionBar: void onWindowVisibilityChanged(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)
io.reactivex.internal.observers.FutureObserver: void dispose()
androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()
io.reactivex.internal.operators.observable.ObservableRepeatWhen: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver: void onSuccess(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity(int)
androidx.viewpager.widget.ViewPager: void dispatchOnPageScrolled(int,float,int)
androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable[] values()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLevelChange(int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: MaybeDelaySubscriptionOtherPublisher$OtherSubscriber(io.reactivex.MaybeObserver,io.reactivex.MaybeSource)
com.xuexiang.xhttp2.cache.core.CacheCore: boolean remove(java.lang.String)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver: void onComplete()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()
io.reactivex.observers.SerializedObserver: SerializedObserver(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast: void run()
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterConditionalSubscriber: java.lang.Object poll()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: MaybeDelayOtherPublisher$OtherSubscriber(io.reactivex.MaybeObserver)
retrofit2.Utils: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)
androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Object)
io.reactivex.subjects.ReplaySubject: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: void onError(java.lang.Throwable)
io.reactivex.exceptions.OnErrorNotImplementedException: OnErrorNotImplementedException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.appspa.update.utils.ApkUtils: boolean installAppSilentBelow24(android.content.Context,java.lang.String)
io.reactivex.internal.schedulers.SchedulerWhen: void dispose()
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: void drain()
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: void request(long)
io.reactivex.subjects.AsyncSubject$AsyncDisposable: void dispose()
androidx.core.view.ViewCompat: void setY(android.view.View,float)
io.reactivex.subjects.BehaviorSubject: void setCurrent(java.lang.Object)
okhttp3.MultipartBody: long contentLength()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onStateChange(int[])
androidx.loader.content.ModernAsyncTask: void postResultIfNotInvoked(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(android.graphics.drawable.Drawable)
com.google.gson.Gson: com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type)
androidx.appcompat.widget.AppCompatPopupWindow: void update(android.view.View,int,int,int,int)
androidx.appcompat.app.NavItemSelectedListener: NavItemSelectedListener(androidx.appcompat.app.ActionBar$OnNavigationListener)
retrofit2.adapter.rxjava2.ResultObservable$ResultObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.Fragment: java.lang.String getTag()
androidx.appcompat.widget.DecorToolbar: void setLogo(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.zhy.http.okhttp.request.GetRequest: okhttp3.Request buildRequest(okhttp3.RequestBody)
com.google.gson.JsonArray: void addAll(com.google.gson.JsonArray)
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: void onNext(java.lang.Object)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter beginObject()
okhttp3.internal.http1.Http1Codec$FixedLengthSource: Http1Codec$FixedLengthSource(okhttp3.internal.http1.Http1Codec,long)
androidx.core.os.LocaleListCompatWrapper: java.lang.String toString()
androidx.loader.content.CursorLoader: android.database.Cursor loadInBackground()
androidx.appcompat.widget.ListPopupWindow: android.view.View getSelectedView()
androidx.fragment.app.FragmentManagerImpl: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction: java.lang.Object apply(java.lang.Object)
androidx.core.app.JobIntentService: void onHandleWork(android.content.Intent)
okio.Buffer: long readLong()
androidx.core.util.Pools$SimplePool: java.lang.Object acquire()
com.appspa.update.widget.UpdateDialogFragment: void handleStart()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int)
androidx.activity.ComponentActivity: ComponentActivity()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver: int requestFusion(int)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.core.widget.ListPopupWindowCompat: ListPopupWindowCompat()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void cancel()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: void drain()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void innerNext(io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void show(int,int)
com.zhy.http.okhttp.request.GetRequest: GetRequest(java.lang.String,java.lang.Object,java.util.Map,java.util.Map,int)
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
com.google.gson.internal.bind.TypeAdapters$25: void write(com.google.gson.stream.JsonWriter,java.util.Currency)
io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator: void cancel()
androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)
io.reactivex.internal.operators.single.SingleCreate$Emitter: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void schedule()
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: void subscribeNext()
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$1: java.lang.String apply(com.xuexiang.xhttp2.cache.model.CacheResult)
androidx.appcompat.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.xuexiang.xhttp2.request.CustomRequest: io.reactivex.Observable generateRequest()
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.QueueDrainObserver: void fastPathOrderedEmit(java.lang.Object,boolean,io.reactivex.disposables.Disposable)
androidx.core.app.ShareCompat$IntentReader: java.lang.String getSubject()
androidx.appcompat.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
io.reactivex.internal.queue.SpscArrayQueue: java.lang.Object lvElement(int)
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.String toString()
com.appspa.demo.R$styleable: R$styleable()
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: void dispose()
io.reactivex.internal.operators.single.SingleDoOnError$DoOnError: void onSuccess(java.lang.Object)
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor accessToken(boolean)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: boolean isEmpty()
com.appspa.update.utils.DialogUtils: boolean isSoftInputShow(android.view.Window)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void dispose()
androidx.appcompat.widget.DecorToolbar: void setNavigationMode(int)
androidx.collection.ArrayMap: ArrayMap(int)
androidx.core.text.TextDirectionHeuristicsCompat: int isRtlText(int)
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: void dispose()
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: SingleInternalHelper$ToFlowable(java.lang.String,int)
androidx.versionedparcelable.VersionedParcelStream: void writeInt(int)
okio.ForwardingTimeout: okio.Timeout clearDeadline()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: void onComplete()
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(java.lang.CharSequence)
okio.Segment: okio.Segment push(okio.Segment)
io.reactivex.subscribers.SafeSubscriber: void onNextNoSubscription()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: void onError(java.lang.Throwable)
androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: ObservableWindow$WindowSkipObserver(io.reactivex.Observer,long,long,int)
io.reactivex.internal.util.VolatileSizeArrayList: boolean retainAll(java.util.Collection)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()
com.xuexiang.xhttp2.callback.DownloadProgressCallBack: void onSuccess(java.lang.Object)
com.appspa.demo.R$interpolator: R$interpolator()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpStream()
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ListPopupWindow: void setModal(boolean)
okio.ByteString: okio.ByteString hmacSha512(okio.ByteString)
androidx.fragment.app.FragmentContainer: boolean onHasView()
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: boolean isDisposed()
com.xuexiang.xhttp2.request.DeleteRequest: DeleteRequest(java.lang.String)
androidx.appcompat.R$drawable: R$drawable()
io.reactivex.processors.AsyncProcessor$AsyncSubscription: void onComplete()
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
androidx.loader.content.AsyncTaskLoader: void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object)
androidx.core.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context)
androidx.core.app.NotificationCompat: java.lang.CharSequence getContentTitle(android.app.Notification)
com.appspa.update.UpdateManager: UpdateManager(com.appspa.update.UpdateManager$Builder)
okio.SegmentedByteString: java.lang.String toString()
io.reactivex.internal.observers.EmptyCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: void onNext(java.lang.Object)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String getFileSuffix(okhttp3.ResponseBody)
androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)
androidx.appcompat.widget.AppCompatTextView: void consumeTextFutureAndSetBlocking()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void disposeInner()
androidx.core.app.ActivityOptionsCompat: void update(androidx.core.app.ActivityOptionsCompat)
androidx.core.os.LocaleListCompatWrapper: int computeFirstMatchIndex(java.util.Collection,boolean)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: int hashCode()
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: void onComplete()
com.appspa.update.widget.NumberProgressBar: void setOnProgressBarListener(com.appspa.update.widget.NumberProgressBar$OnProgressBarListener)
com.xuexiang.xhttp2.request.BaseBodyRequest: io.reactivex.Observable generateRequest()
io.reactivex.disposables.CompositeDisposable: int size()
androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)
io.reactivex.Scheduler: long now(java.util.concurrent.TimeUnit)
androidx.appcompat.view.SupportMenuInflater$MenuState: void addItem()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.cookie.PersistentCookieStore: java.lang.String getCookieToken(okhttp3.Cookie)
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: void onComplete()
io.reactivex.internal.subscriptions.ScalarSubscription: boolean offer(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void start()
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
okio.Okio$3: Okio$3()
androidx.appcompat.widget.DecorToolbar: void setDisplayOptions(int)
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapIntoIterable: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: void onNext(java.lang.Object)
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object)
com.appspa.update.proxy.impl.AbstractUpdateParser: void parseJson(java.lang.String,com.appspa.update.listener.IUpdateParseCallback)
okio.SegmentedByteString: okio.ByteString hmacSha256(okio.ByteString)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: void onComplete()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: boolean isEmpty()
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.app.NotificationCompat$Action: int getIcon()
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable: java.lang.Object call()
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: void request(long)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: void onComplete()
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: SingleFlatMapObservable$FlatMapObserver(io.reactivex.Observer,io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void onSubscribe(org.reactivestreams.Subscription)
com.xuexiang.xhttp2.utils.PathUtils: java.lang.String getFilePathByUri(android.content.Context,android.net.Uri)
com.appspa.update.widget.BaseDialog$1: BaseDialog$1(com.appspa.update.widget.BaseDialog)
androidx.core.graphics.TypefaceCompatApi21Impl: void init()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: void dispose()
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest cacheKey(java.lang.String)
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: void next(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver$InnerRepeatObserver: void onComplete()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()
com.google.gson.internal.bind.TypeAdapters$17: java.math.BigDecimal read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver: void onComplete()
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
androidx.appcompat.app.ActionBar$TabListener: void onTabSelected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
io.reactivex.internal.queue.SpscLinkedArrayQueue: void soElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object)
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: io.reactivex.Notification takeNext()
io.reactivex.schedulers.TestScheduler$TestWorker: void dispose()
androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void cancel()
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: ObservableSampleTimed$SampleTimedObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: MaybeFlatMapNotification$FlatMapMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)
com.xuexiang.xhttp2.cache.RxCache: void access$900(com.xuexiang.xhttp2.cache.RxCache,com.xuexiang.xhttp2.cache.model.CacheMode)
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: boolean setResource(int,org.reactivestreams.Subscription)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.fragment.app.FragmentActivity: int allocateRequestIndex(androidx.fragment.app.Fragment)
androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler)
io.reactivex.subjects.CompletableSubject$CompletableDisposable: boolean isDisposed()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.fragment.app.FragmentManagerImpl: void popBackStack(int,int)
androidx.core.app.Person$Builder: Person$Builder(androidx.core.app.Person)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.MediaType contentType()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.bind.TypeAdapters$17: java.lang.Object read(com.google.gson.stream.JsonReader)
okhttp3.OkHttpClient: int readTimeoutMillis()
androidx.core.app.ActivityOptionsCompat: android.graphics.Rect getLaunchBounds()
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerInner: java.lang.Object apply(java.lang.Object)
androidx.core.graphics.ColorUtils: float constrain(float,float,float)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)
com.xuexiang.xhttp2.model.XHttpRequest: java.lang.reflect.Type parseReturnType()
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerInner: java.lang.Object apply(java.lang.Object)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewAttachedToWindow(android.view.View)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
io.reactivex.internal.operators.flowable.FlowableSkipWhile: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean flagActionItems()
okio.SegmentedByteString: byte getByte(int)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.app.AppCompatDelegateImpl: void setTheme(int)
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: FragmentManagerImpl$FragmentLifecycleCallbacksHolder(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
androidx.lifecycle.ClassesInfoCache$MethodReference: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRange: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: void setHorizontalOriginalOffset(int)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement get()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeContains: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
io.reactivex.processors.PublishProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)
androidx.loader.content.ModernAsyncTask: void onPostExecute(java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable getOverflowIcon()
com.appspa.update.service.DownloadService$FileDownloadCallBack$1: DownloadService$FileDownloadCallBack$1(com.appspa.update.service.DownloadService$FileDownloadCallBack)
androidx.core.os.BuildCompat: boolean isAtLeastOMR1()
io.reactivex.subjects.CompletableSubject: void subscribeActual(io.reactivex.CompletableObserver)
retrofit2.Utils: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: void request(long)
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: void cancelAll()
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)
androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterator: void remove()
com.xuexiang.xhttp2.utils.TypeUtils: java.lang.reflect.Type getParameterizedType(java.lang.reflect.Type,int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: FlowableMergeWithMaybe$MergeWithObserver$OtherObserver(io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver)
androidx.core.content.pm.PackageInfoCompat: PackageInfoCompat()
retrofit2.Converter$Factory: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
okio.RealBufferedSink$1: void flush()
androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)
androidx.viewpager.widget.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: void cancel()
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: void onComplete()
com.appspa.update.service.DownloadService$FileDownloadCallBack: void onError(java.lang.Throwable)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object removeAllShortcuts()
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty: ObservableSwitchIfEmpty(io.reactivex.ObservableSource,io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: void innerComplete(io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver)
androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)
io.reactivex.internal.operators.observable.ObservableSingleSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.util.TimeUtils: int formatDurationLocked(long,int)
io.reactivex.internal.operators.parallel.ParallelFilterTry: void subscribe(org.reactivestreams.Subscriber[])
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void onNext(java.lang.Object)
retrofit2.RequestBuilder: void addTag(java.lang.Class,java.lang.Object)
androidx.core.app.ShareCompat$IntentReader: java.lang.String getHtmlText()
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelSize(int)
okhttp3.MediaType: int hashCode()
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: void onNext(java.lang.Object)
okio.Buffer: java.lang.String readUtf8LineStrict(long)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: void onError(java.lang.Throwable)
com.google.gson.internal.Primitives: java.lang.Class unwrap(java.lang.Class)
okhttp3.internal.http2.Http2Connection: void pushResetLater(int,okhttp3.internal.http2.ErrorCode)
io.reactivex.Notification: int hashCode()
io.reactivex.schedulers.Schedulers$SingleTask: java.lang.Object call()
io.reactivex.internal.subscriptions.EmptySubscription: io.reactivex.internal.subscriptions.EmptySubscription valueOf(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: void request(long)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate()
com.google.gson.internal.bind.TypeAdapters$33: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionResume(android.transition.Transition)
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader: void setCancelable(boolean)
okio.AsyncTimeout: boolean cancelScheduledTimeout(okio.AsyncTimeout)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void onNext(java.lang.Object)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: java.lang.Object index()
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void dispose()
androidx.core.view.ViewCompat: int getMeasuredHeightAndState(android.view.View)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
okio.SegmentedByteString: int lastIndexOf(byte[],int)
androidx.fragment.app.Fragment: void onStop()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
retrofit2.ParameterHandler$Part: void apply(retrofit2.RequestBuilder,java.lang.Object)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: void disposeInner()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: FlowableFlatMapMaybe$FlatMapMaybeSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition()
com.xuexiang.xhttp2.XHttp: okhttp3.OkHttpClient$Builder getOkHttpClientBuilder()
com.xuexiang.xhttp2.utils.Utils: java.lang.String getExtDCIMPath()
io.reactivex.internal.functions.Functions$Identity: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: ObservableElementAtMaybe$ElementAtObserver(io.reactivex.MaybeObserver,long)
retrofit2.KotlinExtensions$suspendAndThrow$1: KotlinExtensions$suspendAndThrow$1(kotlin.coroutines.Continuation)
io.reactivex.internal.observers.QueueDrainSubscriberPad2: QueueDrainSubscriberPad2()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void innerClose(boolean,io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber)
androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber: void onComplete()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: void emit()
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void removeFirst()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
okhttp3.internal.connection.StreamAllocation: boolean hasMoreRoutes()
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: void onError(java.lang.Throwable)
io.reactivex.internal.observers.InnerQueuedObserver: InnerQueuedObserver(io.reactivex.internal.observers.InnerQueuedObserverSupport,int)
retrofit2.HttpServiceMethod$CallAdapted: HttpServiceMethod$CallAdapted(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: AccessibilityServiceInfoCompat()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat y(float)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
io.reactivex.internal.subscribers.LambdaSubscriber: void cancel()
androidx.fragment.app.FragmentController: void doLoaderDestroy()
androidx.appcompat.view.menu.MenuItemWrapperICS: void setExclusiveCheckable(boolean)
androidx.appcompat.app.ActionBar: void setNavigationMode(int)
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
io.reactivex.internal.operators.maybe.MaybeFromAction: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getInputType()
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: void slowPath(long)
com.xuexiang.xhttp2.cache.model.CacheMode: com.xuexiang.xhttp2.cache.model.CacheMode valueOf(java.lang.String)
io.reactivex.internal.operators.single.SingleCreate$Emitter: void setDisposable(io.reactivex.disposables.Disposable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long)
io.reactivex.internal.observers.EmptyCompletableObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex: boolean equals(java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: ToolbarWidgetWrapper$2(androidx.appcompat.widget.ToolbarWidgetWrapper,int)
com.appspa.demo.utils.SettingSPUtils: SettingSPUtils()
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void cancel()
androidx.viewpager.widget.ViewPager: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
okio.Buffer: okio.Buffer writeIntLe(int)
com.xuexiang.xhttp2.callback.DownloadProgressCallBack: void onCompleted()
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl: ThreadStackFactoryImpl()
com.appspa.update.widget.UpdateDialogFragment: com.appspa.update.entity.PromptEntity getPromptEntity()
com.appspa.update.entity.DownloadEntity: java.lang.String getDownloadUrl()
androidx.core.view.KeyEventDispatcher: android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
androidx.core.util.AtomicFile: boolean sync(java.io.FileOutputStream)
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable: void dispose()
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: void onError(java.lang.Throwable)
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: void request(long)
androidx.appcompat.app.AppCompatDelegateImpl: void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.xuexiang.xhttp2.https.HttpsUtils$MyTrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: boolean setDisposable(io.reactivex.disposables.Disposable,int)
okio.Okio$2: java.lang.String toString()
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationStart(android.view.animation.Animation)
com.appspa.update.proxy.impl.DefaultUpdateDownloader: void startDownloadService(com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
okhttp3.internal.Util$1: int compare(java.lang.String,java.lang.String)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void dispose()
okhttp3.internal.http2.Http2Stream: java.util.Deque access$000(okhttp3.internal.http2.Http2Stream)
com.appspa.update.widget.UpdateDialogFragment: void showUpdateButton()
androidx.loader.content.AsyncTaskLoader$LoadTask: void waitForLoader()
androidx.core.net.TrafficStatsCompat: void setThreadStatsTag(int)
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab newTab()
com.xuexiang.xhttp2.utils.PathUtils: boolean isGooglePhotosUri(android.net.Uri)
androidx.core.provider.FontsContractCompat$5: int compare(java.lang.Object,java.lang.Object)
org.aspectj.internal.lang.reflect.PerClauseImpl: org.aspectj.lang.reflect.PerClauseKind getKind()
androidx.loader.R$layout: R$layout()
androidx.appcompat.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)
com.appspa.update.UpdateManager: UpdateManager(com.appspa.update.UpdateManager$Builder,com.appspa.update.UpdateManager$1)
io.reactivex.internal.subscriptions.ScalarSubscription: ScalarSubscription(org.reactivestreams.Subscriber,java.lang.Object)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder)
org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: FlowAdapters$FlowToReactiveSubscriber(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: boolean cancel()
androidx.collection.LongSparseArray: boolean isEmpty()
androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.core.view.WindowInsetsCompat: int getStableInsetTop()
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: boolean isDisposed()
okio.ByteString: java.lang.String hex()
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable create(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ActionProvider getActionProvider()
com.xuexiang.xhttp2.cache.RxCache: int access$1600(com.xuexiang.xhttp2.cache.RxCache)
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: void cancelSources()
androidx.core.view.ViewCompat: void setRotationX(android.view.View,float)
androidx.core.view.ViewCompat: android.view.Display getDisplay(android.view.View)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnConditionalSubscriber: void runBackfused()
androidx.versionedparcelable.VersionedParcelStream: float readFloat()
com.google.gson.FieldNamingPolicy: java.lang.String upperCaseFirstLetter(java.lang.String)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: void dispose()
androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)
okhttp3.OkHttpClient$1: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
android.support.v4.os.ResultReceiver$1: java.lang.Object[] newArray(int)
androidx.core.os.HandlerCompat: HandlerCompat()
retrofit2.HttpException: int code()
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent getIntent()
com.xuexiang.xhttp2.utils.Utils: void closeIO(java.io.Closeable[])
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: void dispose()
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
com.appspa.update.entity.DownloadEntity: DownloadEntity()
androidx.viewpager.widget.ViewPager$1: int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo)
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getNavigationMode()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
com.appspa.demo.activity.MainActivity: void onCreate(android.os.Bundle)
androidx.appcompat.widget.ActionBarContextView: void postShowOverflowMenu()
com.zhy.http.okhttp.utils.Platform$Android$MainThreadExecutor: Platform$Android$MainThreadExecutor()
com.xuexiang.xhttp2.XHttpProxy: XHttpProxy(java.lang.String)
com.xuexiang.xhttp2.model.HttpParams: java.lang.String toString()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: FontResourcesParserCompat$FontFileResourceEntry(java.lang.String,int,boolean,java.lang.String,int,int)
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
io.reactivex.internal.operators.completable.CompletableDelay: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: void dispose()
androidx.viewpager.widget.ViewPager: boolean isGutterDrag(float,float)
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: java.lang.Object next()
android.support.v4.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: TextDirectionHeuristicsCompat$FirstStrong()
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: ViewPager$MyAccessibilityDelegate(androidx.viewpager.widget.ViewPager)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)
io.reactivex.internal.functions.Functions$JustValue: Functions$JustValue(java.lang.Object)
androidx.viewpager.widget.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: MenuItemWrapperICS$OnActionExpandListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener)
androidx.viewpager.widget.PagerTitleStrip: void updateText(int,androidx.viewpager.widget.PagerAdapter)
androidx.core.view.ViewCompat$3: ViewCompat$3(int,java.lang.Class,int)
com.xuexiang.xhttp2.model.HttpParams: com.xuexiang.xhttp2.model.HttpParams put(java.util.Map)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()
androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)
androidx.core.os.LocaleListCompatWrapper: void toLanguageTag(java.lang.StringBuilder,java.util.Locale)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit: ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit(io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver,java.util.Collection)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
com.appspa.update.UpdateManager$Builder: com.appspa.update.UpdateManager$Builder isGet(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()
androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)
io.reactivex.schedulers.Schedulers$NewThreadTask: java.lang.Object call()
androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast: void completion()
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
retrofit2.DefaultCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.lifecycle.MediatorLiveData$Source: void onChanged(java.lang.Object)
com.xuexiang.xhttp2.utils.TypeUtils: java.lang.Object newInstance(java.lang.Class,java.lang.Object[])
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String checkFileName(java.lang.String,okhttp3.ResponseBody)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)
androidx.core.widget.ContentLoadingProgressBar$1: void run()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void cancel()
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowMenuShowing()
androidx.core.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void addDurationItem(android.util.SparseIntArray,long)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(int)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)
io.reactivex.android.schedulers.AndroidSchedulers$MainHolder: AndroidSchedulers$MainHolder()
retrofit2.converter.gson.GsonRequestBodyConverter: okhttp3.RequestBody convert(java.lang.Object)
retrofit2.ParameterHandler: retrofit2.ParameterHandler array()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.loader.content.Loader: void rollbackContentChanged()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void onNext(java.lang.Object)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String toString()
androidx.fragment.app.FragmentManagerViewModel: java.lang.String toString()
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: SingleEquals$InnerObserver(int,io.reactivex.disposables.CompositeDisposable,java.lang.Object[],io.reactivex.SingleObserver,java.util.concurrent.atomic.AtomicInteger)
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: void onNext(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setCustomView(int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isQwertyMode()
io.reactivex.internal.operators.single.SingleCreate$Emitter: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.loader.content.CursorLoader: java.lang.String[] getProjection()
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: void onDrop(java.lang.Object)
androidx.appcompat.view.menu.MenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.util.ExceptionHelper: java.lang.RuntimeException wrapOrThrow(java.lang.Throwable)
io.reactivex.internal.operators.observable.BlockingObservableIterable: java.util.Iterator iterator()
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask$DisposeObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void addShortcuts(java.util.List)
androidx.appcompat.view.menu.ActionMenuItemView: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemImpl: void setCheckedInt(boolean)
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver: SingleFlatMapMaybe$FlatMapMaybeObserver(java.util.concurrent.atomic.AtomicReference,io.reactivex.MaybeObserver)
com.xuexiang.xhttp2.interceptor.HeadersInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.core.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)
retrofit2.Platform$Android: Platform$Android()
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: boolean isDisposed()
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: void onError(java.lang.Throwable)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(char[],int,int)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: java.lang.Object poll()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextHelper: int[] getAutoSizeTextAvailableSizes()
androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
androidx.core.app.ActivityCompat: void startPostponedEnterTransition(android.app.Activity)
com.appspa.update.service.DownloadService$FileDownloadCallBack: com.appspa.update.service.OnFileDownloadListener access$600(com.appspa.update.service.DownloadService$FileDownloadCallBack)
io.reactivex.subscribers.DisposableSubscriber: void cancel()
retrofit2.RequestFactory$Builder: void parseHttpMethodAndPath(java.lang.String,java.lang.String,boolean)
io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleBiGenerator: java.lang.Object apply(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: void innerError(java.lang.Throwable,int)
io.reactivex.internal.schedulers.InstantPeriodicTask: boolean isDisposed()
androidx.core.widget.CompoundButtonCompat: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.appcompat.view.menu.MenuPopup: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.internal.subscriptions.BooleanSubscription: BooleanSubscription()
androidx.core.app.NotificationManagerCompat$CancelTask: void send(android.support.v4.app.INotificationSideChannel)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)
org.aspectj.internal.lang.reflect.AjTypeImpl: java.lang.annotation.Annotation[] getDeclaredAnnotations()
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
androidx.appcompat.view.menu.MenuItemImpl: MenuItemImpl(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup)
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.versionedparcelable.VersionedParcelStream: double readDouble()
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
androidx.customview.widget.ViewDragHelper: boolean canScroll(android.view.View,boolean,int,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: void onComplete()
okio.Buffer: okio.Buffer writeUtf8(java.lang.String)
com.google.gson.internal.ConstructorConstructor$9: ConstructorConstructor$9(com.google.gson.internal.ConstructorConstructor)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void innerError(io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver,java.lang.Throwable)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)
com.xuexiang.xhttp2.cache.model.CacheMode: CacheMode(java.lang.String,int,java.lang.String)
io.reactivex.processors.UnicastProcessor: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void request(long)
androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)
io.reactivex.internal.operators.single.SingleFlatMapCompletable: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$SequentialDispose: ExecutorScheduler$ExecutorWorker$SequentialDispose(io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker,io.reactivex.internal.disposables.SequentialDisposable,java.lang.Runnable)
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: void onComplete()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getDatePartOfDateTimePattern(int)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void request(long)
androidx.appcompat.widget.PopupMenu$3: boolean onForwardingStopped()
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.Dispatcher: int runningCallsCount()
androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.widget.DropDownListView: int lookForSelectablePosition(int,boolean)
io.reactivex.internal.util.OpenHashSet: java.lang.Object[] keys()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: ExecutorScheduler$ExecutorWorker(java.util.concurrent.Executor,boolean)
com.google.gson.internal.bind.SqlDateTypeAdapter: java.sql.Date read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer: void truncate()
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: ParallelMap$ParallelMapSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl: org.aspectj.runtime.internal.cflowstack.ThreadCounter getNewThreadCounter()
org.aspectj.runtime.reflect.UnlockSignatureImpl: java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()
androidx.core.view.ViewCompat$5: boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryOpenObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: boolean isEmpty()
com.xuexiang.xhttp2.model.HttpParams: void init()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: void onComplete()
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: void onSuccess(java.lang.Object)
androidx.appcompat.view.menu.MenuDialogHelper: void onDismiss(android.content.DialogInterface)
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: boolean isDisposed()
io.reactivex.subjects.BehaviorSubject: void subscribeActual(io.reactivex.Observer)
io.reactivex.subjects.SerializedSubject: SerializedSubject(io.reactivex.subjects.Subject)
androidx.loader.app.LoaderManagerImpl: java.lang.String toString()
androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
io.reactivex.internal.observers.QueueDrainObserver: QueueDrainObserver(io.reactivex.Observer,io.reactivex.internal.fuseable.SimplePlainQueue)
io.reactivex.internal.operators.single.SingleDelayWithSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.loader.content.Loader$OnLoadCompleteListener: void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber: java.lang.Object poll()
com.google.gson.internal.bind.TypeAdapters$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$5: TypeAdapters$5()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
okio.Buffer: okio.Buffer write(okio.ByteString)
androidx.fragment.app.FragmentTabHost: void setup()
io.reactivex.observers.ResourceObserver: ResourceObserver()
androidx.appcompat.view.menu.MenuView$ItemView: void setShortcut(boolean,char)
androidx.core.widget.TextViewCompat$OreoCallback: boolean isEditable(android.widget.TextView)
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float interpolateValue(float)
com.google.gson.ExclusionStrategy: boolean shouldSkipClass(java.lang.Class)
androidx.core.app.NotificationManagerCompat$CancelTask: java.lang.String toString()
androidx.fragment.app.Fragment: void performLowMemory()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap getSampleTile()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver: boolean isDisposed()
androidx.fragment.app.Fragment: void onDetach()
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: void drain()
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Character)
okhttp3.Cache$CacheRequestImpl: Cache$CacheRequestImpl(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: FlowableBufferTimed$BufferExactUnboundedSubscriber(org.reactivestreams.Subscriber,java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.appcompat.view.menu.MenuView$ItemView: void setEnabled(boolean)
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()
androidx.interpolator.view.animation.LookupTableInterpolator: LookupTableInterpolator(float[])
androidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()
androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)
androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$10: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)
androidx.core.provider.FontRequest: java.lang.String toString()
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.ListView getListView()
okio.RealBufferedSource$1: void close()
androidx.lifecycle.Transformations$1: Transformations$1(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function)
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: void add(java.lang.Object)
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.core.graphics.TypefaceCompatApi24Impl: boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean)
androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)
okio.GzipSink: void writeFooter()
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
okio.ForwardingTimeout: okio.Timeout clearTimeout()
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String getBridgeTag()
okio.ByteString: okio.ByteString sha1()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void clearExtrasSpans()
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask: PrecomputedTextCompat$PrecomputedTextFutureTask(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack: UIProgressResponseCallBack()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
androidx.appcompat.app.ActionBar: void setIcon(int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean isEmpty()
androidx.appcompat.widget.SwitchCompat: android.text.Layout makeLayout(java.lang.CharSequence)
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink)
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: void onError(java.lang.Throwable)
com.appspa.update.service.DownloadService$DownloadBinder: void showNotification()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
androidx.lifecycle.MediatorLiveData: void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void finalOnError(java.lang.Throwable)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isStateful()
androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.appcompat.view.menu.StandardMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.widget.TooltipCompatHandler: boolean updateAnchorPos(android.view.MotionEvent)
okhttp3.Cookie: boolean persistent()
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
androidx.core.provider.FontsContractCompat$2: void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: CompletableMergeIterable$MergeCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.disposables.CompositeDisposable,java.util.concurrent.atomic.AtomicInteger)
androidx.versionedparcelable.VersionedParcel: int readInt()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: boolean isDisposed()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: boolean isDisposed()
io.reactivex.internal.schedulers.AbstractDirectTask: void setFuture(java.util.concurrent.Future)
androidx.appcompat.view.menu.MenuItemWrapperICS: MenuItemWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenuItem)
androidx.activity.R$attr: R$attr()
io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction: io.reactivex.ObservableSource apply(java.util.List)
io.reactivex.subjects.AsyncSubject: boolean add(io.reactivex.subjects.AsyncSubject$AsyncDisposable)
com.zhy.http.okhttp.request.PostFileRequest: okhttp3.RequestBody wrapRequestBody(okhttp3.RequestBody,com.zhy.http.okhttp.callback.Callback)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void onComplete()
androidx.appcompat.widget.DecorToolbar: boolean hasLogo()
org.aspectj.runtime.reflect.MethodSignatureImpl: java.lang.Class getReturnType()
androidx.appcompat.widget.DecorContentParent: void setUiOptions(int)
androidx.core.view.ViewPropertyAnimatorCompat: long getStartDelay()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError: void onError(java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: MaybeCount$CountMaybeObserver(io.reactivex.SingleObserver)
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)
com.xuexiang.xhttp2.interceptor.BaseRequestInterceptor: okhttp3.Response onAfterRequest(okhttp3.Response,okhttp3.Interceptor$Chain,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: FlowableZip$ZipSubscriber(io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator,int)
com.xuexiang.xhttp2.utils.PathUtils: java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[])
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: void dispose()
androidx.loader.content.ModernAsyncTask: void publishProgress(java.lang.Object[])
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate: void onComplete()
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.collection.ArraySet: ArraySet()
androidx.appcompat.view.menu.MenuWrapperICS: boolean performShortcut(int,android.view.KeyEvent,int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setHorizontalOriginalOffset(int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)
com.appspa.update.utils.UpdateUtils: java.lang.String getDisplayUpdateInfo(android.content.Context,com.appspa.update.entity.UpdateEntity)
androidx.core.view.accessibility.AccessibilityEventCompat: void setAction(android.view.accessibility.AccessibilityEvent,int)
com.appspa.update.widget.NumberProgressBar: void setSuffix(java.lang.String)
io.reactivex.subscribers.SerializedSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.XHttp$4: XHttp$4()
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: java.lang.Object poll()
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: void dump(java.lang.String,java.io.PrintWriter)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: boolean isEmpty()
okio.Okio: Okio()
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle: void subscribeActual(io.reactivex.SingleObserver)
okio.RealBufferedSink: okio.Timeout timeout()
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: void cancel()
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)
androidx.appcompat.widget.ActionBarContextView: boolean isTitleOptional()
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)
io.reactivex.internal.operators.flowable.FlowableScalarXMap: boolean tryScalarXMapSubscribe(org.reactivestreams.Publisher,org.reactivestreams.Subscriber,io.reactivex.functions.Function)
androidx.appcompat.view.menu.MenuPopupHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.view.NestedScrollingParentHelper: NestedScrollingParentHelper(android.view.ViewGroup)
okio.GzipSource: void updateCrc(okio.Buffer,long,long)
androidx.appcompat.widget.ForwardingListener: void onViewDetachedFromWindow(android.view.View)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$SingletonArrayFunc: FlowableWithLatestFromMany$SingletonArrayFunc(io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany)
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$InnerObserver: MaybeFlatten$FlatMapMaybeObserver$InnerObserver(io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver)
androidx.core.R$layout: R$layout()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.core.app.RemoteInput: java.lang.CharSequence getLabel()
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: boolean defaultIsRtl()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ResourceManagerInternal: void removeDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: boolean isDisposed()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isAutoMirrored()
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: void onError(java.lang.Throwable)
okhttp3.internal.http2.Settings: boolean isSet(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryInnerSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String formatMillisToGMT(long)
androidx.fragment.app.FragmentTransitionImpl: void addTargets(java.lang.Object,java.util.ArrayList)
androidx.appcompat.widget.SearchView: void onTextChanged(java.lang.CharSequence)
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: void next()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)
com.appspa.update.AppSpace: com.appspa.update.AppSpace debug(boolean)
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,byte,byte)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: void onResponse(retrofit2.Call,retrofit2.Response)
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void innerError(java.lang.Throwable)
okio.Timeout$1: Timeout$1()
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int getHorizontalOriginalOffset()
okio.Buffer: boolean rangeEquals(long,okio.ByteString)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver: SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver(io.reactivex.SingleObserver)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: ObservableTimeoutTimed$TimeoutFallbackObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker,io.reactivex.ObservableSource)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void start()
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: boolean isDisposed()
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: void onError(java.lang.Throwable)
androidx.activity.ComponentActivity$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: ArgbEvaluator()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.reactivex.internal.operators.parallel.ParallelReduceFull: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: ObservableAmb$AmbInnerObserver(io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator,int,io.reactivex.Observer)
com.google.gson.internal.bind.TypeAdapters$28: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.appspa.update.widget.NumberProgressBar: void onDraw(android.graphics.Canvas)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void onComplete()
com.xuexiang.xhttp2.cache.RxCache$3: RxCache$3(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,java.lang.Object)
io.reactivex.internal.observers.LambdaObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatSpinner: void onMeasure(int,int)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void innerError(java.lang.Throwable)
com.google.gson.stream.JsonReader: boolean nextBoolean()
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: void accept(io.reactivex.Observer,java.lang.Object)
io.reactivex.internal.operators.completable.CompletableEmpty: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl: android.graphics.drawable.Drawable getThemeUpIndicator()
androidx.customview.widget.ViewDragHelper: ViewDragHelper(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
androidx.appcompat.view.SupportMenuInflater: void inflate(int,android.view.Menu)
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: void add(java.lang.Object)
androidx.core.view.NestedScrollingParent: void onNestedScroll(android.view.View,int,int,int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean canShowOverflowMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean getPadding(android.graphics.Rect)
androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.view.menu.MenuBuilder: void close(boolean)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: ActivityChooserView$ActivityChooserViewAdapter(androidx.appcompat.widget.ActivityChooserView)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext: void subscribeActual(io.reactivex.MaybeObserver)
com.xuexiang.xhttp2.utils.ApiUtils$1: boolean isRequestSuccess(com.xuexiang.xhttp2.model.ApiResult)
androidx.arch.core.internal.SafeIterableMap$SupportRemove: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)
com.google.gson.internal.$Gson$Types: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)
io.reactivex.internal.operators.completable.CompletableSubscribeOn: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.LinearLayoutCompat createTabLayout()
com.google.gson.Gson: java.lang.String toString()
androidx.appcompat.widget.ActionBarBackgroundDrawable: int getOpacity()
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: ObservableUsing$UsingObserver(io.reactivex.Observer,java.lang.Object,io.reactivex.functions.Consumer,boolean)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: void otherComplete()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onEdgeTouched(int,int)
androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowCustomEnabled(boolean)
org.aspectj.lang.Aspects14: Aspects14()
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundaryObserver: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransitionImpl: void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor: int getWeight(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.customview.widget.ViewDragHelper: int clampMag(int,int,int)
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspot(float,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.appcompat.app.AppCompatDelegate: boolean hasWindowFeature(int)
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: void otherError(java.lang.Throwable)
androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest accessToken(boolean)
io.reactivex.internal.operators.observable.ObservableReplay$SizeBoundReplayBuffer: ObservableReplay$SizeBoundReplayBuffer(int)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBuffer: void run()
io.reactivex.processors.BehaviorProcessor: void onComplete()
androidx.appcompat.app.ToolbarActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapSupport: void innerNext(java.lang.Object)
androidx.lifecycle.LiveData: void removeObservers(androidx.lifecycle.LifecycleOwner)
org.aspectj.runtime.internal.CFlowCounter: java.lang.String getSystemPropertyWithoutSecurityException(java.lang.String,java.lang.String)
androidx.customview.R$styleable: R$styleable()
io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.viewpager.widget.PagerAdapter: void notifyDataSetChanged()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean onStateChange(int[])
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: void onNext(java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean hasSubMenu()
org.aspectj.runtime.reflect.AdviceSignatureImpl: java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable: io.reactivex.observables.ConnectableObservable call()
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
androidx.appcompat.view.menu.MenuBuilder: android.content.Context getContext()
androidx.core.graphics.ColorUtils: double[] getTempDouble3Array()
androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: void onComplete()
androidx.customview.R$id: R$id()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: void drainLoop()
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)
androidx.core.app.DialogCompat: android.view.View requireViewById(android.app.Dialog,int)
androidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementStart(java.util.List,java.util.List,java.util.List)
androidx.activity.R$color: R$color()
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet,int)
io.reactivex.subjects.SingleSubject: boolean add(io.reactivex.subjects.SingleSubject$SingleDisposable)
androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)
androidx.appcompat.app.NavItemSelectedListener: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.core.view.ViewCompat: boolean isScreenReaderFocusable(android.view.View)
com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object setValue(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.subscribers.BoundedSubscriber: void cancel()
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: MaybeOnErrorComplete$OnErrorCompleteMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Predicate)
androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
retrofit2.HttpServiceMethod: retrofit2.CallAdapter createCallAdapter(retrofit2.Retrofit,java.lang.reflect.Method,java.lang.reflect.Type,java.lang.annotation.Annotation[])
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.String toString()
com.appspa.demo.App: void initOKHttpUtils()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
io.reactivex.internal.operators.flowable.FlowableGroupBy$EvictionAction: void accept(io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast)
androidx.appcompat.widget.Toolbar: void setLogo(int)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: void drop()
io.reactivex.internal.operators.maybe.MaybeFromCallable: java.lang.Object call()
io.reactivex.subjects.MaybeSubject: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: void onComplete()
androidx.appcompat.app.AlertController: android.widget.Button getButton(int)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(int)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.appcompat.widget.DecorToolbar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
androidx.lifecycle.livedata.core.R: R()
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompat$WearableExtender: java.util.List getPages()
okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()
com.google.gson.internal.bind.TypeAdapters$23: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
com.xuexiang.xhttp2.cache.RxCache$Builder: int access$200(com.xuexiang.xhttp2.cache.RxCache$Builder)
androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()
androidx.fragment.app.FragmentState: FragmentState(androidx.fragment.app.Fragment)
com.appspa.update.AppSpace: com.appspa.update.AppSpace setIUpdateHttpService(com.appspa.update.proxy.IUpdateHttpService)
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String,java.lang.String)
androidx.core.provider.FontsContractCompat$FontInfo: FontsContractCompat$FontInfo(android.net.Uri,int,int,boolean,int)
io.reactivex.internal.operators.single.SingleDelay$Delay$OnSuccess: void run()
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: MaybeAmb$AmbMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.disposables.CompositeDisposable,java.util.concurrent.atomic.AtomicBoolean)
androidx.fragment.app.ListFragment: void setListShownNoAnimation(boolean)
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: void run()
androidx.appcompat.app.AlertDialog: void setView(android.view.View)
org.aspectj.internal.lang.reflect.AdviceImpl: org.aspectj.lang.reflect.AjType[] getExceptionTypes()
androidx.core.view.ActionProvider: void reset()
io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError: void onComplete()
androidx.appcompat.view.WindowCallbackWrapper: WindowCallbackWrapper(android.view.Window$Callback)
androidx.core.provider.FontsContractCompat$1: androidx.core.provider.FontsContractCompat$TypefaceResult call()
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable disposed()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
retrofit2.HttpServiceMethod: retrofit2.HttpServiceMethod parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method,retrofit2.RequestFactory)
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerClosed(android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean doCheck(java.lang.CharSequence,int,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
androidx.core.view.MotionEventCompat: boolean isFromSource(android.view.MotionEvent,int)
io.reactivex.internal.operators.single.SingleCreate$Emitter: boolean isDisposed()
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: ViewPager$SimpleOnPageChangeListener()
com.xuexiang.xhttp2.model.SchedulerType: SchedulerType(java.lang.String,int)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowPending()
io.reactivex.internal.util.NotificationLite$SubscriptionNotification: NotificationLite$SubscriptionNotification(org.reactivestreams.Subscription)
io.reactivex.observers.DisposableCompletableObserver: void onStart()
androidx.core.app.ShareCompat$IntentReader: java.lang.String getType()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean getPadding(android.graphics.Rect)
io.reactivex.internal.operators.flowable.FlowableBuffer: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: boolean isDisposed()
androidx.core.app.ShareCompat$IntentBuilder: ShareCompat$IntentBuilder(android.app.Activity)
androidx.core.app.NotificationCompat$Builder: android.app.Notification getNotification()
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: FragmentManagerImpl$AnimationOrAnimator(android.view.animation.Animation)
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: boolean isDisposed()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)
okhttp3.Headers: int size()
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$OutputCanceller: FlowablePublishMulticast$OutputCanceller(org.reactivestreams.Subscriber,io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor)
androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)
okio.Buffer: java.lang.Object clone()
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: void dispose()
okio.ByteString: ByteString(byte[])
com.xuexiang.xhttp2.cookie.SerializableOkHttpCookies: void readObject(java.io.ObjectInputStream)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: void onError(java.lang.Throwable)
com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.sql.Date)
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.versionedparcelable.VersionedParcelStream$1: VersionedParcelStream$1(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream)
com.google.gson.internal.bind.TypeAdapters$27: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableCache: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void clear()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
androidx.collection.ArraySet: void allocArrays(int)
androidx.appcompat.widget.PopupMenu$1: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
com.google.gson.FieldNamingPolicy: java.lang.String separateCamelCase(java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView$7: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)
io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter: void onOverflow()
androidx.viewpager.widget.PagerTabStrip: void setPadding(int,int,int,int)
com.jakewharton.disklrucache.DiskLruCache$Entry: java.lang.String access$1100(com.jakewharton.disklrucache.DiskLruCache$Entry)
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.WindowDecorActionBar: void show()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void onStart()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void onNext(java.lang.Object)
androidx.fragment.R$id: R$id()
io.reactivex.internal.observers.BasicFuseableObserver: void fail(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: void onComplete()
androidx.core.app.RemoteInput: java.lang.CharSequence[] getChoices()
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: void onError(java.lang.Throwable)
androidx.loader.app.LoaderManager: void enableDebugLogging(boolean)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void onComplete()
com.appspa.update.logs.UpdateLog: void setDebug(boolean)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: FlowableConcatMapMaybe$ConcatMapMaybeSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
androidx.collection.LongSparseArray: void removeAt(int)
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: boolean isDisposed()
okhttp3.CipherSuite: java.lang.String secondaryName(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isActionViewExpanded()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()
androidx.fragment.app.Fragment$SavedState$1: androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ListPopupWindow$2: void run()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.appcompat.app.AlertController: int selectContentView()
androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)
com.google.gson.internal.$Gson$Types: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitle()
androidx.core.app.NotificationCompat$Style: void restoreFromCompatExtras(android.os.Bundle)
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: org.aspectj.lang.reflect.DeclareAnnotation$Kind getKind()
androidx.appcompat.widget.Toolbar: boolean isCustomView(android.view.View)
androidx.core.view.MenuItemCompat: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
androidx.appcompat.widget.ActionMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
com.google.gson.JsonPrimitive: boolean getAsBoolean()
androidx.appcompat.view.menu.ListMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
io.reactivex.internal.operators.flowable.FlowableDelay: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable: io.reactivex.observables.ConnectableObservable call()
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: void clear()
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnComplete: ObservableDelay$DelayObserver$OnComplete(io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver)
androidx.core.graphics.drawable.RoundedBitmapDrawable21: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
io.reactivex.internal.schedulers.InstantPeriodicTask: void setRest(java.util.concurrent.Future)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest getRequest()
androidx.versionedparcelable.VersionedParcelParcel: void writeBundle(android.os.Bundle)
androidx.loader.content.Loader: int getId()
androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: MaybeToObservable$MaybeToObservableObserver(io.reactivex.Observer)
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: void onError(java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: int getType(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder serializeSpecialFloatingPointValues()
com.google.gson.internal.bind.TypeAdapters$15: TypeAdapters$15()
androidx.appcompat.widget.ListPopupWindow: boolean performItemClick(int)
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.utils.Md5Utils: Md5Utils()
androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasEmbeddedTabs()
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe: void subscribeActual(io.reactivex.Observer)
androidx.collection.ArraySet$1: java.lang.Object colSetValue(int,java.lang.Object)
androidx.appcompat.app.ActionBar: int getDisplayOptions()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.ToolbarActionBar: void setIcon(int)
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription: void slowPath(long)
androidx.loader.content.ModernAsyncTask$WorkerRunnable: ModernAsyncTask$WorkerRunnable()
com.xuexiang.xhttp2.XHttp$4: void accept(java.lang.Object)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel setCurrentBytes(long)
com.appspa.update.proxy.impl.DefaultPrompterProxyImpl: java.lang.String getUrl()
androidx.appcompat.view.menu.MenuPopup: void setVerticalOffset(int)
io.reactivex.internal.operators.completable.CompletableMergeIterable: void subscribeActual(io.reactivex.CompletableObserver)
com.appspa.update._AppSpace: void onUpdateError(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)
io.reactivex.Observer: void onNext(java.lang.Object)
com.appspa.update.widget.NumberProgressBar: NumberProgressBar(android.content.Context,android.util.AttributeSet,int)
okio.SegmentedByteString: okio.ByteString toAsciiUppercase()
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: void drain()
android.support.v4.os.ResultReceiver$MyRunnable: void run()
androidx.core.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.MenuItem getMenuItemWrapper(android.view.MenuItem)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
io.reactivex.internal.util.ArrayListSupplier: java.util.List apply(java.lang.Object)
com.appspa.update.utils.ApkUtils: void setSupportSilentInstall(boolean)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri getLinkUri()
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
okio.SegmentedByteString: SegmentedByteString(okio.Buffer,int)
androidx.fragment.app.FragmentActivity: void onDestroy()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition()
androidx.fragment.app.FragmentTabHost: void onDetachedFromWindow()
io.reactivex.internal.functions.Functions: java.util.concurrent.Callable justCallable(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection: FlowableRefCount$RefConnection(io.reactivex.internal.operators.flowable.FlowableRefCount)
com.google.gson.internal.bind.TypeAdapters$35$1: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
io.reactivex.internal.schedulers.SchedulerPoolFactory$SystemPropertyAccessor: java.lang.String apply(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.util.OpenHashSet: boolean add(java.lang.Object)
com.appspa.update.widget.UpdateDialogActivity: void setIPrompterProxy(com.appspa.update.proxy.IPrompterProxy)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onContentChanged()
io.reactivex.internal.operators.flowable.FlowableAll$AllSubscriber: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()
androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
io.reactivex.Notification: boolean isOnError()
okhttp3.Route: okhttp3.Address address()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription: void drainLoop()
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: FlowableSwitchMap$SwitchMapSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,boolean)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: JsonAdapterAnnotationTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)
androidx.appcompat.widget.Toolbar: void onMeasure(int,int)
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.io.Reader)
androidx.loader.content.ModernAsyncTask: java.lang.Object doInBackground(java.lang.Object[])
io.reactivex.internal.schedulers.SchedulerPoolFactory: boolean getBooleanProperty(boolean,java.lang.String,boolean,boolean,io.reactivex.functions.Function)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
androidx.appcompat.view.menu.MenuBuilder: void close()
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean deferredSetOnce(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,org.reactivestreams.Subscription)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: void onComplete()
retrofit2.BuiltInConverters$RequestBodyConverter: okhttp3.RequestBody convert(okhttp3.RequestBody)
androidx.core.app.BundleCompat$BundleCompatBaseImpl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int)
io.reactivex.parallel.ParallelFailureHandling: io.reactivex.parallel.ParallelFailureHandling apply(java.lang.Long,java.lang.Throwable)
androidx.core.view.KeyEventDispatcher: boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()
androidx.appcompat.widget.SuggestionsAdapter: void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: ObservableZip$ZipObserver(io.reactivex.internal.operators.observable.ObservableZip$ZipCoordinator,int)
com.google.gson.internal.bind.JsonTreeReader: void close()
io.reactivex.internal.observers.DeferredScalarDisposable: int requestFusion(int)
io.reactivex.internal.operators.parallel.ParallelCollect: void subscribe(org.reactivestreams.Subscriber[])
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: FlowableElementAt$ElementAtSubscriber(org.reactivestreams.Subscriber,long,java.lang.Object,boolean)
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources)
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)
androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelCollect: int parallelism()
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription: FlowableFromIterable$IteratorSubscription(org.reactivestreams.Subscriber,java.util.Iterator)
androidx.core.view.ActionProvider: void refreshVisibility()
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction: io.reactivex.Completable apply(io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction)
androidx.core.app.NotificationManagerCompat$NotifyTask: void send(android.support.v4.app.INotificationSideChannel)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.NestedScrollingChild2: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()
androidx.appcompat.app.WindowDecorActionBar: boolean isTitleTruncated()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void close(io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,java.lang.Class)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe: void subscribeActual(org.reactivestreams.Subscriber)
okio.Okio$3: okio.Timeout timeout()
androidx.appcompat.view.menu.SubMenuBuilder: void setGroupDividerEnabled(boolean)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.fragment.app.FragmentManagerImpl: void reportBackStackChanged()
androidx.core.app.ShareCompat$IntentReader: java.lang.CharSequence getText()
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: void cancel()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context)
okio.Timeout: okio.Timeout deadlineNanoTime(long)
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationEnd(android.view.View)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: void onNext(io.reactivex.CompletableSource)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
io.reactivex.disposables.ActionDisposable: ActionDisposable(io.reactivex.functions.Action)
androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
io.reactivex.schedulers.Schedulers$ComputationTask: java.lang.Object call()
com.xuexiang.xhttp2.utils.HttpUtils: boolean isPlaintext(okhttp3.MediaType)
com.google.gson.internal.LinkedTreeMap$EntrySet$1: LinkedTreeMap$EntrySet$1(com.google.gson.internal.LinkedTreeMap$EntrySet)
com.google.gson.internal.bind.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object)
androidx.core.app.BundleCompat: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
io.reactivex.observers.ResourceObserver: boolean isDisposed()
androidx.appcompat.widget.ActivityChooserModel: void setDefaultActivity(int)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(androidx.core.app.Person)
io.reactivex.subscribers.SafeSubscriber: void onError(java.lang.Throwable)
androidx.core.util.Pools$Pool: boolean release(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()
io.reactivex.internal.operators.observable.ObservableReplay$DisposeConsumer: void accept(io.reactivex.disposables.Disposable)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: void onError(java.lang.Throwable)
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
com.appspa.update.widget.NumberProgressBar: float dp2px(float)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: void run()
com.appspa.update.widget.BaseDialog: void init(android.view.View)
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: CompletableAndThenObservable$AndThenObservableObserver(io.reactivex.Observer,io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: java.lang.Object poll()
androidx.appcompat.graphics.drawable.DrawableContainer: int getAlpha()
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: void run()
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener: void onFitSystemWindows(android.graphics.Rect)
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.single.SingleInternalHelper: SingleInternalHelper()
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void innerComplete(io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber)
androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: void onNext(java.lang.Object)
com.google.gson.internal.Streams: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)
androidx.core.view.MarginLayoutParamsCompat: MarginLayoutParamsCompat()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build()
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.schedulers.ScheduledRunnable: boolean isDisposed()
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle(androidx.core.app.NotificationCompat$Builder)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: void cancel()
org.aspectj.runtime.reflect.FieldSignatureImpl: java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
com.xuexiang.xhttp2.utils.PathUtils: boolean isQQUri(android.net.Uri)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainNoLast: FlowableSamplePublisher$SampleMainNoLast(org.reactivestreams.Subscriber,org.reactivestreams.Publisher)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void innerComplete(int,boolean)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: SuggestionsAdapter$ChildViewCache(android.view.View)
com.google.gson.internal.bind.TypeAdapters$29: com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)
com.appspa.update.entity.UpdateEntity: java.lang.String getUpdateContent()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.Notification: java.lang.String toString()
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: ObservableCountSingle$CountObserver(io.reactivex.SingleObserver)
okhttp3.internal.http1.Http1Codec$FixedLengthSource: long read(okio.Buffer,long)
androidx.fragment.app.FragmentManager: boolean isStateSaved()
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void cancel()
androidx.fragment.app.FragmentController: void reportLoaderStart()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: void runFinally()
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnNext: FlowableDelay$DelaySubscriber$OnNext(io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber,java.lang.Object)
okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)
io.reactivex.internal.operators.flowable.FlowableReplay: void connect(io.reactivex.functions.Consumer)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void startListening()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)
com.xuexiang.xhttp2.cache.core.LruMemoryCache: boolean containsKey(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: ObservableDistinct$DistinctObserver(io.reactivex.Observer,io.reactivex.functions.Function,java.util.Collection)
com.xuexiang.xhttp2.utils.ApiUtils: boolean isRequestSuccess(com.xuexiang.xhttp2.model.ApiResult)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy: BaseStrategy()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.Response: okhttp3.Response networkResponse()
okio.Pipe$PipeSource: okio.Timeout timeout()
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: void onNext(java.lang.Object)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void computeScrollDelta()
retrofit2.Utils$GenericArrayTypeImpl: Utils$GenericArrayTypeImpl(java.lang.reflect.Type)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable create(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.appspa.update.entity.PromptEntity: PromptEntity(android.os.Parcel)
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: void emitFirst()
androidx.core.widget.ContentLoadingProgressBar: void hide()
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
com.appspa.update.listener.impl.DefaultInstallListener: boolean installApkFile(android.content.Context,java.io.File)
androidx.core.widget.CompoundButtonCompat: CompoundButtonCompat()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(java.lang.String)
com.google.gson.internal.PreJava9DateFormatProvider: PreJava9DateFormatProvider()
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.Throwable)
androidx.collection.ContainerHelpers: ContainerHelpers()
com.google.gson.JsonArray: java.lang.String getAsString()
com.zhy.http.okhttp.request.OkHttpRequest: int getId()
com.xuexiang.xhttp2.utils.HttpUtils: HttpUtils()
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: io.reactivex.internal.fuseable.SimplePlainQueue getOrCreateQueue()
androidx.appcompat.app.AppCompatDelegateImpl$1: AppCompatDelegateImpl$1(java.lang.Thread$UncaughtExceptionHandler)
com.appspa.update._AppSpace: com.appspa.update.proxy.IUpdateChecker getIUpdateChecker()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void onTimeoutError(long,java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: void clear()
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: SingleFlatMapPublisher$SingleFlatMapPublisherObserver(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
androidx.core.view.WindowInsetsCompat: boolean hasSystemWindowInsets()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver: void onError(java.lang.Throwable)
com.google.gson.JsonArray: void add(com.google.gson.JsonElement)
androidx.appcompat.app.ToolbarActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableUsing: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void access$000(io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber,java.lang.Object,boolean,io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: void onError(java.lang.Throwable)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte getCachedDirectionality(char)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void onRequested()
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: FlowableSkipWhile$SkipWhileSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: SingleInternalHelper$ToObservable(java.lang.String,int)
okio.ForwardingSource: ForwardingSource(okio.Source)
retrofit2.adapter.rxjava2.Result: retrofit2.adapter.rxjava2.Result error(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleDoOnSubscribe$DoOnSubscribeSingleObserver: SingleDoOnSubscribe$DoOnSubscribeSingleObserver(io.reactivex.SingleObserver,io.reactivex.functions.Consumer)
androidx.appcompat.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)
okio.Buffer: okio.ByteString readByteString(long)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.subjects.CompletableSubject: CompletableSubject()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStopped(android.app.Activity)
io.reactivex.internal.operators.flowable.FlowableReplay$ScheduledReplayBufferTask: io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBuffer call()
androidx.appcompat.view.ActionMode: void setSubtitle(java.lang.CharSequence)
retrofit2.Utils: java.lang.RuntimeException parameterError(java.lang.reflect.Method,int,java.lang.String,java.lang.Object[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.functions.Functions$TruePredicate: boolean test(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: boolean tryOnNext(java.lang.Object)
com.appspa.update.entity.DownloadEntity: java.lang.String getMd5()
androidx.fragment.app.FragmentManagerImpl: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
io.reactivex.schedulers.Schedulers$SingleTask: io.reactivex.Scheduler call()
androidx.appcompat.app.ActionBarDrawerToggle: void setToolbarNavigationClickListener(android.view.View$OnClickListener)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$2: java.lang.Object apply(java.lang.Object)
androidx.appcompat.widget.TintTypedArray: float getFraction(int,int,int,float)
androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)
androidx.appcompat.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)
androidx.core.app.ShareCompat: android.content.ComponentName getCallingActivity(android.app.Activity)
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: void error(java.lang.Throwable)
okio.ByteString: void writeObject(java.io.ObjectOutputStream)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: ObservableSwitchMap$SwitchMapInnerObserver(io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver,long,int)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()
androidx.appcompat.app.AppCompatDelegate: void markStarted(androidx.appcompat.app.AppCompatDelegate)
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.ToolbarActionBar: void setElevation(float)
androidx.core.app.JobIntentService$GenericWorkItem: void complete()
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void run()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
io.reactivex.internal.functions.Functions$OnErrorMissingConsumer: Functions$OnErrorMissingConsumer()
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: ObservableConcatWithCompletable$ConcatWithObserver(io.reactivex.Observer,io.reactivex.CompletableSource)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void stop()
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: void disposeInner()
androidx.appcompat.widget.TooltipCompatHandler: boolean onHover(android.view.View,android.view.MotionEvent)
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
androidx.core.view.ActionProvider: android.view.View onCreateActionView()
org.aspectj.internal.lang.reflect.AjTypeImpl: java.lang.annotation.Annotation[] getAnnotations()
androidx.appcompat.app.ActionBar$Tab: android.graphics.drawable.Drawable getIcon()
io.reactivex.internal.operators.flowable.FlowableDoOnEach: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: boolean isDisposed()
io.reactivex.internal.util.BlockingIgnoringReceiver: void accept(java.lang.Throwable)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)
androidx.appcompat.widget.ListPopupWindow$2: ListPopupWindow$2(androidx.appcompat.widget.ListPopupWindow)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void accept(io.reactivex.Observer,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: void cancel()
androidx.appcompat.view.menu.ActionMenuItem: boolean expandActionView()
retrofit2.adapter.rxjava2.Result: retrofit2.adapter.rxjava2.Result response(retrofit2.Response)
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void onComplete()
com.xuexiang.xhttp2.cache.key.Strings: java.lang.String byteArrayToString(byte[])
androidx.cursoradapter.R: R()
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
androidx.fragment.app.DialogFragment: void onStop()
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: OnBackPressedDispatcher$LifecycleOnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)
okhttp3.internal.http2.Http2Connection: void close()
com.google.gson.JsonSerializationContext: com.google.gson.JsonElement serialize(java.lang.Object)
androidx.appcompat.view.menu.MenuWrapperICS: boolean performIdentifierAction(int,int)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.Streams$AppendableWriter: void write(char[],int,int)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: SingleFlatMapIterableFlowable$FlatMapIterableObserver(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTooltipText()
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.annotation.NetMethod: int cacheKeyIndex()
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(android.graphics.Rect,java.util.List)
com.google.gson.FieldAttributes: boolean isSynthetic()
androidx.collection.ArrayMap$1: int colGetSize()
androidx.appcompat.view.menu.MenuView$ItemView: void setCheckable(boolean)
com.xuexiang.xhttp2.XHttpProxy: java.lang.reflect.Type getReturnType(java.lang.reflect.Method)
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.view.SupportActionModeWrapper: void finish()
androidx.versionedparcelable.VersionedParcelStream: java.lang.String readString()
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener()
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: java.lang.Object poll()
com.appspa.update.utils.UpdateUtils: int getVersionCode(android.content.Context)
androidx.viewpager.widget.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: void doAfterTextChanged(android.widget.AutoCompleteTextView)
androidx.fragment.app.BackStackRecord: void commitNow()
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap()
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)
retrofit2.OkHttpCall$NoContentResponseBody: okhttp3.MediaType contentType()
com.appspa.update.logs.LogcatLogger: void log(int,java.lang.String,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void error(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnError: FlowableDelay$DelaySubscriber$OnError(io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber,java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: void cancel()
io.reactivex.internal.subscriptions.EmptySubscription: EmptySubscription(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: io.reactivex.internal.fuseable.SimpleQueue getMainQueue()
androidx.core.view.DragStartHelper$OnDragStartListener: boolean onDragStart(android.view.View,androidx.core.view.DragStartHelper)
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable: void dispose()
androidx.core.widget.TextViewCompat$OreoCallback: void onDestroyActionMode(android.view.ActionMode)
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter: boolean dismissPopupMenus()
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider: JdkWithJettyBootPlatform$JettyNegoProvider(java.util.List)
io.reactivex.internal.operators.flowable.FlowableToList$ToListSubscriber: void onSubscribe(org.reactivestreams.Subscription)
org.reactivestreams.FlowAdapters$FlowToReactiveSubscription: void cancel()
androidx.appcompat.view.menu.MenuBuilder: int size()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVibrate(long[])
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void error(java.lang.Throwable)
io.reactivex.processors.ReplayProcessor$Node: ReplayProcessor$Node(java.lang.Object)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.fragment.app.BackStackState: void writeToParcel(android.os.Parcel,int)
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: void run()
androidx.fragment.app.FragmentManagerState$1: java.lang.Object[] newArray(int)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: void dispose()
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: FrameMetricsAggregator$FrameMetricsBaseImpl()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void innerNext(int,java.lang.Object)
com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.io.Reader)
androidx.appcompat.widget.ListPopupWindow: int getVerticalOffset()
androidx.appcompat.app.ToolbarActionBar: void removeTab(androidx.appcompat.app.ActionBar$Tab)
com.google.gson.internal.LinkedHashTreeMap: java.lang.Object writeReplace()
com.zhy.http.okhttp.request.CountingRequestBody$CountingSink: void write(okio.Buffer,long)
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.appcompat.app.ToolbarActionBar: boolean requestFocus()
androidx.core.content.ContentResolverCompat: ContentResolverCompat()
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: int hashCode()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: void onComplete()
okhttp3.internal.connection.RealConnection$1: void close()
io.reactivex.internal.queue.SpscLinkedArrayQueue: long lvConsumerIndex()
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: void setDisposable(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.BlockingObservableLatest: java.util.Iterator iterator()
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: FlowableDoFinally$DoFinallySubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Action)
com.google.gson.stream.JsonWriter: boolean isHtmlSafe()
com.google.gson.stream.JsonWriter: void flush()
androidx.versionedparcelable.VersionedParcel: float[] readFloatArray(float[],int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isStateful()
androidx.appcompat.widget.Toolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
io.reactivex.internal.fuseable.SimpleQueue: java.lang.Object poll()
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: void dispose()
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: int requestFusion(int)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void fail(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: void again(java.lang.Object)
androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: ForwardingListener$DisallowIntercept(androidx.appcompat.widget.ForwardingListener)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: void flushField()
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1(kotlin.coroutines.Continuation,java.lang.Exception)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])
androidx.fragment.R$styleable: R$styleable()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation()
androidx.drawerlayout.R$attr: R$attr()
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: boolean accept(org.reactivestreams.Subscriber,java.util.Collection)
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError: void accept(java.lang.Object)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: Http2Connection$ReaderRunnable$1(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream)
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
androidx.appcompat.view.menu.StandardMenuPopup: boolean tryShow()
androidx.appcompat.view.menu.ShowableListMenu: void dismiss()
com.xuexiang.xhttp2.transform.HandleErrTransformer: HandleErrTransformer()
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: void onComplete()
io.reactivex.internal.util.NotificationLite: boolean isDisposable(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerClosed(android.view.View)
androidx.core.view.ViewGroupCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
org.aspectj.internal.lang.reflect.DeclareParentsImpl: org.aspectj.lang.reflect.TypePattern getTargetTypesPattern()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.Region getTransparentRegion()
androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)
androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextHelper: void setAllCaps(boolean)
io.reactivex.internal.schedulers.ComputationScheduler: int cap(int,int)
androidx.appcompat.widget.SuggestionsAdapter: boolean hasStableIds()
com.google.gson.Gson$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.AppCompatBackgroundHelper: AppCompatBackgroundHelper(android.view.View)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: java.lang.Object poll()
androidx.core.app.ActivityCompat: ActivityCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void scheduleSelf(java.lang.Runnable,long)
io.reactivex.Observable: io.reactivex.Flowable toFlowable(io.reactivex.BackpressureStrategy)
androidx.core.view.MotionEventCompat: float getY(android.view.MotionEvent,int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isFocused()
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[],int,int)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
androidx.appcompat.widget.ActivityChooserView$5: void onChanged()
com.google.gson.LongSerializationPolicy: com.google.gson.JsonElement serialize(java.lang.Long)
androidx.viewpager.widget.ViewPager: android.os.Parcelable onSaveInstanceState()
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: void onComplete()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)
androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
com.appspa.update.widget.NumberProgressBar: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableLimit$LimitSubscriber: void onNext(java.lang.Object)
androidx.collection.SparseArrayCompat: int indexOfKey(int)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setState(int[])
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: BasicFuseableConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber)
androidx.core.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: void error(io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber,java.lang.Throwable)
okhttp3.CacheControl: boolean noCache()
org.reactivestreams.Subscription: void request(long)
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
com.google.gson.internal.LinkedHashTreeMap$EntrySet: java.util.Iterator iterator()
androidx.fragment.app.BackStackRecord: int commitInternal(boolean)
androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.CharSequence getTitle()
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: void onComplete()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: DrawerLayout$ViewDragCallback(androidx.drawerlayout.widget.DrawerLayout,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int)
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean)
okhttp3.HttpUrl: java.lang.String encodedQuery()
androidx.core.view.ViewCompat: float getAlpha(android.view.View)
androidx.appcompat.widget.ListPopupWindow: boolean isShowing()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: void request(long)
io.reactivex.internal.subscriptions.BooleanSubscription: void request(long)
com.google.gson.internal.bind.TypeAdapters$21: java.net.URL read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void showPopup()
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment)
androidx.core.view.inputmethod.InputContentInfoCompat: android.content.ClipDescription getDescription()
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String remove(java.lang.String)
androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
androidx.fragment.app.FragmentManagerNonConfig: java.util.Map getViewModelStores()
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.SearchView: void updateQueryHint()
androidx.appcompat.app.AlertController: AlertController(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: boolean isDisposed()
com.appspa.update.entity.UpdateError: UpdateError(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: void onSuccess(java.lang.Object)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,int)
androidx.versionedparcelable.VersionedParcel: java.util.List readList(java.util.List,int)
com.xuexiang.xhttp2.model.ApiResult: int getCode()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: void innerError(java.lang.Throwable)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: void onComplete()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
okhttp3.Address: boolean equalsNonHost(okhttp3.Address)
com.google.gson.internal.ConstructorConstructor$2: ConstructorConstructor$2(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type)
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: MaybeOnErrorReturn$OnErrorReturnMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()
io.reactivex.exceptions.CompositeException: java.lang.Throwable getCause()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: void onComplete()
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: OnBackPressedDispatcher$OnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain: java.lang.String getMessage()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)
com.appspa.update.listener.impl.DefaultInstallListener: boolean onInstallApk(android.content.Context,java.io.File,com.appspa.update.entity.DownloadEntity)
androidx.appcompat.app.ActionBar: void setHomeActionContentDescription(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: boolean isDisposed()
androidx.drawerlayout.widget.DrawerLayout: void setChildInsets(java.lang.Object,boolean)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context)
com.xuexiang.xhttp2.cache.stategy.FirstCacheStategy: io.reactivex.Observable execute(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,long,io.reactivex.Observable,java.lang.reflect.Type)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setVisible(boolean,boolean)
androidx.versionedparcelable.VersionedParcel: void writeStrongInterface(android.os.IInterface)
org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: java.lang.String toString()
com.google.gson.JsonObject: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: boolean add(io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastSubscription)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void onComplete()
androidx.core.app.JobIntentService: JobIntentService()
androidx.core.provider.FontsContractCompat$5: int compare(byte[],byte[])
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationCancel(android.animation.Animator)
androidx.core.content.pm.ShortcutManagerCompat: androidx.core.content.pm.ShortcutInfoCompatSaver getShortcutInfoSaverInstance(android.content.Context)
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
androidx.core.app.NotificationCompat$Action: int getSemanticAction()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()
io.reactivex.internal.operators.observable.ObservableZip$ZipObserver: void onComplete()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowablePublish: void connect(io.reactivex.functions.Consumer)
androidx.appcompat.widget.TooltipCompatHandler: TooltipCompatHandler(android.view.View,java.lang.CharSequence)
androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(javax.crypto.Mac)
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveRightShadow()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)
androidx.core.location.LocationManagerCompat: LocationManagerCompat()
com.xuexiang.xhttp2.subsciber.CallBackSubscriber: void onComplete()
io.reactivex.internal.operators.single.SingleTimer: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.observers.DisposableLambdaObserver: DisposableLambdaObserver(io.reactivex.Observer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
androidx.fragment.app.FragmentTabHost$SavedState$1: java.lang.Object[] newArray(int)
com.xuexiang.xhttp2.annotation.RequestParams: java.lang.String baseUrl()
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableTimeout: void subscribeActual(org.reactivestreams.Subscriber)
retrofit2.OkHttpCall: OkHttpCall(retrofit2.RequestFactory,java.lang.Object[],okhttp3.Call$Factory,retrofit2.Converter)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: void onComplete()
androidx.fragment.app.DialogFragment: void onDestroyView()
retrofit2.OkHttpCall: void enqueue(retrofit2.Callback)
androidx.core.view.ViewCompat: float getTranslationY(android.view.View)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getProgress()
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int,int)
androidx.core.os.BuildCompat: boolean isAtLeastO()
androidx.core.view.ViewCompat: void setElevation(android.view.View,float)
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: void cancel()
okhttp3.RealCall: okhttp3.RealCall clone()
androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)
androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean)
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: InputContentInfoCompat$InputContentInfoCompatBaseImpl(android.net.Uri,android.content.ClipDescription,android.net.Uri)
io.reactivex.internal.operators.flowable.FlowablePublishAlt: void connect(io.reactivex.functions.Consumer)
androidx.core.app.Person: android.os.Bundle toBundle()
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: void dispose()
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void innerSuccess(java.lang.Object)
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
androidx.viewpager.widget.PagerTitleStrip: void onLayout(boolean,int,int,int,int)
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void errorAll(io.reactivex.Observer)
androidx.core.app.NotificationCompat$Action: boolean getAllowGeneratedReplies()
io.reactivex.internal.observers.BasicQueueDisposable: boolean offer(java.lang.Object)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
okhttp3.CacheControl: boolean isPublic()
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: FlowableAmb$AmbInnerSubscriber(io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator,int,org.reactivestreams.Subscriber)
androidx.lifecycle.LiveData$ObserverWrapper: LiveData$ObserverWrapper(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
io.reactivex.internal.subscriptions.AsyncSubscription: boolean replaceResource(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader: boolean isLoading()
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: void onComplete()
android.support.v4.app.INotificationSideChannel$Stub$Proxy: INotificationSideChannel$Stub$Proxy(android.os.IBinder)
io.reactivex.internal.operators.single.SingleDoOnTerminate$DoOnTerminate: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator: BlockingObservableMostRecent$MostRecentObserver$Iterator(io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: void dispose()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)
io.reactivex.internal.operators.maybe.MaybeFromSingle: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void innerComplete()
androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
com.appspa.update.utils.FileUtils: java.lang.String getExtPicturesPath()
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void removeCollectedSpans(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTooltipText()
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View,int)
androidx.core.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator: java.lang.Object next()
okhttp3.RealCall: void cancel()
androidx.appcompat.app.TwilightManager: void setInstance(androidx.appcompat.app.TwilightManager)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths(okio.BufferedSink)
androidx.appcompat.widget.DecorToolbar: void initProgress()
androidx.viewpager.widget.PagerAdapter: void setViewPagerObserver(android.database.DataSetObserver)
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: void request(long)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: void add(okhttp3.HttpUrl,java.util.List)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void initTempTextPaint(int)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
okio.Buffer: boolean equals(java.lang.Object)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: void complete(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.appspa.update.widget.BaseDialog: void showIfSync(boolean)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowable: org.reactivestreams.Publisher apply(io.reactivex.SingleSource)
io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt: ObservableInternalHelper$MapToInt(java.lang.String,int)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean)
androidx.core.view.ViewCompat: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.core.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)
androidx.core.os.LocaleListCompat: java.lang.Object unwrap()
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
okio.DeflaterSink: void deflate(boolean)
com.xuexiang.xhttp2.cache.RxCache: void logCacheInfo(com.xuexiang.xhttp2.cache.model.CacheMode)
androidx.customview.R$string: R$string()
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: void dispose()
io.reactivex.observers.SafeObserver: void onNext(java.lang.Object)
com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()
com.xuexiang.xhttp2.model.XHttpRequest: com.xuexiang.xhttp2.cache.model.CacheMode getCacheMode()
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableNever: ObservableNever()
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: java.lang.Object poll()
com.google.gson.internal.UnsafeAllocator: UnsafeAllocator()
io.reactivex.processors.ReplayProcessor$UnboundedReplayBuffer: void error(java.lang.Throwable)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: java.lang.Object clone()
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])
androidx.appcompat.app.ToolbarActionBar: void setSubtitle(int)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: void onComplete()
com.google.gson.JsonArray: boolean equals(java.lang.Object)
androidx.savedstate.SavedStateRegistry$1: SavedStateRegistry$1(androidx.savedstate.SavedStateRegistry)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void applyFrozenState()
retrofit2.SkipCallbackExecutorImpl: SkipCallbackExecutorImpl()
io.reactivex.processors.BehaviorProcessor: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
androidx.appcompat.app.AppCompatDelegate: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab getSelectedTab()
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: void request(long)
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void open(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void drainLoop()
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void onNext(java.lang.Object)
io.reactivex.subjects.CompletableSubject: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.Dispatcher: void finished(okhttp3.RealCall)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void notifyDataSetChanged()
com.xuexiang.xhttp2.https.DefaultHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
androidx.appcompat.view.menu.StandardMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: void onComplete()
org.reactivestreams.Subscriber: void onComplete()
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()
androidx.cursoradapter.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
com.google.gson.internal.bind.TypeAdapters$18: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: void onError(java.lang.Throwable)
retrofit2.RequestBuilder: void canonicalizeForPath(okio.Buffer,java.lang.String,int,int,boolean)
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: void onComplete()
com.google.gson.stream.JsonReader$1: void promoteNameToValue(com.google.gson.stream.JsonReader)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
androidx.fragment.app.FragmentManagerState: int describeContents()
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: MaybeDelay$DelayMaybeObserver(io.reactivex.MaybeObserver,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.google.gson.FieldNamingPolicy$4: FieldNamingPolicy$4(java.lang.String,int)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
okhttp3.ResponseBody: java.io.Reader charStream()
androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean)
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: void dispose()
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: void startTimeout(long)
org.aspectj.runtime.reflect.FieldSignatureImpl: java.lang.Class getFieldType()
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: int checkRtl(java.lang.CharSequence,int,int)
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStopped()
com.appspa.update.entity.PromptEntity: com.appspa.update.entity.PromptEntity setThemeColor(int)
okhttp3.Headers: int hashCode()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: void dispose()
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver: CompletableDetach$DetachCompletableObserver(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.demo.BuildConfig: BuildConfig()
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: void request(long)
androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
retrofit2.OptionalConverterFactory$OptionalConverter: java.util.Optional convert(okhttp3.ResponseBody)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void onNext(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: void onError(java.lang.Throwable)
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode)
io.reactivex.observers.ResourceObserver: void dispose()
io.reactivex.disposables.CompositeDisposable: boolean isDisposed()
androidx.versionedparcelable.VersionedParcel: void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
androidx.core.app.DialogCompat: DialogCompat()
io.reactivex.internal.util.AppendOnlyLinkedArrayList: AppendOnlyLinkedArrayList(int)
androidx.lifecycle.ClassesInfoCache: ClassesInfoCache()
androidx.appcompat.widget.DropDownListView: void dispatchDraw(android.graphics.Canvas)
com.jakewharton.disklrucache.StrictLineReader: void close()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void close(io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator: void remove()
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup createPopup()
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.queue.MpscLinkedQueue: MpscLinkedQueue()
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.appspa.update.logs.UpdateLog: void debug(boolean)
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
com.appspa.update.UpdateManager: void update()
com.google.gson.internal.bind.TypeAdapters$21: void write(com.google.gson.stream.JsonWriter,java.net.URL)
io.reactivex.subjects.ReplaySubject: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableFromSingle$CompletableFromSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)
androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform findPlatform()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.DecorContentParent: void setIcon(int)
okhttp3.internal.connection.StreamAllocation: StreamAllocation(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: void innerComplete(io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: boolean isDisposed()
io.reactivex.Observable: io.reactivex.Observable concatDelayError(java.lang.Iterable)
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void complete(io.reactivex.processors.UnicastProcessor)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hasLogo()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void request(long)
androidx.fragment.app.FragmentHostCallback: void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.reactivex.Scheduler$Worker$PeriodicTask: void run()
io.reactivex.internal.queue.SpscLinkedArrayQueue: long lvProducerIndex()
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void drainNormal()
com.google.gson.internal.bind.ArrayTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
retrofit2.KotlinExtensions$awaitResponse$2$2: void onFailure(retrofit2.Call,java.lang.Throwable)
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean cancelled()
androidx.viewpager.widget.ViewPager: void addTouchables(java.util.ArrayList)
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: void onComplete()
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupedUnicast: ObservableGroupBy$GroupedUnicast(java.lang.Object,io.reactivex.internal.operators.observable.ObservableGroupBy$State)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
androidx.viewpager.widget.ViewPager$2: ViewPager$2()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: void cancel()
io.reactivex.processors.MulticastProcessor$MulticastSubscription: MulticastProcessor$MulticastSubscription(org.reactivestreams.Subscriber,io.reactivex.processors.MulticastProcessor)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: MaybeTimeoutMaybe$TimeoutMainMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.MaybeSource)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.subsciber.ProgressLoadingSubscriber: void onStart()
androidx.fragment.app.FragmentStatePagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.appcompat.widget.DecorContentParent: void dismissPopups()
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable$ConcatWithObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.viewpager.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextEntryKey(boolean)
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: void onComplete()
androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()
io.reactivex.schedulers.TestScheduler$TimedRunnable: java.lang.String toString()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.loader.content.AsyncTaskLoader: java.lang.Object loadInBackground()
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: void onErrorInner(java.lang.Throwable)
com.jakewharton.disklrucache.StrictLineReader: void fillBuf()
androidx.lifecycle.ComputableLiveData$3: void run()
androidx.customview.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)
androidx.appcompat.view.menu.MenuPopup: androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: void next()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.collection.SparseArrayCompat: int size()
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber: void onError(java.lang.Throwable)
okhttp3.OkHttpClient: boolean followRedirects()
androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
androidx.versionedparcelable.VersionedParcel: void writeBooleanArray(boolean[])
com.google.gson.internal.bind.TypeAdapters$18: java.math.BigInteger read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: void onSuccess(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: void onNext(java.lang.Object)
io.reactivex.processors.AsyncProcessor$AsyncSubscription: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryCloseSubscriber: void onComplete()
androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: int hashCode()
androidx.core.app.NotificationManagerCompat$SideChannelManager: NotificationManagerCompat$SideChannelManager(android.content.Context)
io.reactivex.processors.PublishProcessor: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableInternalHelper: ObservableInternalHelper()
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: boolean isDisposed()
androidx.core.widget.TintableCompoundButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageHelper: AppCompatImageHelper(android.widget.ImageView)
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent getIntent()
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: FlowableFromIterable$BaseRangeSubscription(java.util.Iterator)
androidx.appcompat.view.menu.CascadingMenuPopup: void setAnchorView(android.view.View)
androidx.appcompat.widget.DropDownListView: void positionSelectorCompat(int,android.view.View)
com.google.gson.internal.$Gson$Types: int hashCodeOrZero(java.lang.Object)
org.aspectj.lang.reflect.DeclareAnnotation$Kind: DeclareAnnotation$Kind(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: void cancel()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$6: void run()
com.google.gson.internal.bind.SqlDateTypeAdapter$1: SqlDateTypeAdapter$1()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setViewIdResourceName(java.lang.String)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainNoLast: void completion()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: void dispose()
androidx.loader.R$dimen: R$dimen()
com.appspa.update._AppSpace: void onUpdateError(int,java.lang.String)
io.reactivex.internal.observers.QueueDrainObserver: boolean fastEnter()
androidx.loader.R$id: R$id()
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: boolean isDisposed()
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()
androidx.core.util.ObjectsCompat: int hashCode(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelRunOn: int parallelism()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean needsMirroring()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPaneTitle()
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: void setResource(io.reactivex.disposables.Disposable)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)
okio.AsyncTimeout: AsyncTimeout()
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationStart(android.view.View)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: MaybeMergeArray$MpscFillOnceSimpleQueue(int)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.widget.AppCompatSeekBarHelper: void setTickMark(android.graphics.drawable.Drawable)
com.google.gson.internal.LazilyParsedNumber: long longValue()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRequestFailed(int)
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnConditionalSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnConditionalSubscriber: void run()
com.appspa.update.entity.UpdateError: UpdateError(java.lang.Throwable)
okhttp3.ConnectionPool: ConnectionPool()
retrofit2.OptionalConverterFactory: OptionalConverterFactory()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void removeAccessibilityPane(android.view.View)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColor(int)
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
androidx.fragment.app.FragmentActivity$HostCallbacks: FragmentActivity$HostCallbacks(androidx.fragment.app.FragmentActivity)
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: FlowableConcatWithSingle$ConcatWithSubscriber(org.reactivestreams.Subscriber,io.reactivex.SingleSource)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.subscriptions.ScalarSubscription: void clear()
com.google.gson.internal.LinkedHashTreeMap$Node: java.lang.Object getKey()
com.google.gson.internal.bind.TypeAdapters$23: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.app.CoreComponentFactory$CompatWrapped: java.lang.Object getWrapper()
androidx.loader.content.CursorLoader: void setProjection(java.lang.String[])
com.google.gson.internal.JavaVersion: int getMajorJavaVersion()
com.google.gson.stream.JsonWriter: void beforeValue()
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: void onNext(java.lang.Object)
androidx.core.widget.EdgeEffectCompat: void setSize(int,int)
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] getAutoSizeTextAvailableSizes()
androidx.core.widget.NestedScrollView$SavedState$1: NestedScrollView$SavedState$1()
androidx.core.os.LocaleListCompatWrapper: int size()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)
androidx.lifecycle.AndroidViewModel: android.app.Application getApplication()
androidx.core.widget.AutoScrollHelper: boolean canTargetScrollVertically(int)
androidx.appcompat.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SamplerObserver: ObservableSampleWithObservable$SamplerObserver(io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver)
io.reactivex.internal.operators.observable.ObservableGroupJoin: void subscribeActual(io.reactivex.Observer)
com.xuexiang.xhttp2.model.HttpHeaders: HttpHeaders()
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void emit()
androidx.viewpager.R$layout: R$layout()
com.google.gson.internal.ConstructorConstructor$7: java.lang.Object construct()
com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date,boolean)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: void cancel()
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
io.reactivex.subjects.BehaviorSubject: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableRefCount: void reset(io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
okhttp3.Protocol: okhttp3.Protocol[] values()
androidx.appcompat.resources.R$styleable: R$styleable()
com.appspa.demo.entity.CustomResult$PatchInfo: CustomResult$PatchInfo()
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
io.reactivex.internal.operators.flowable.FlowableRange$RangeConditionalSubscription: void fastPath()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
androidx.core.util.TimeUtils: int printField(char[],int,char,int,boolean,int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void dismiss()
androidx.appcompat.app.WindowDecorActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
com.appspa.update.widget.UpdateDialogActivity: void handleError(java.lang.Throwable)
okhttp3.internal.platform.OptionalMethod: OptionalMethod(java.lang.Class,java.lang.String,java.lang.Class[])
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: void onError(java.lang.Throwable)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
androidx.fragment.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: void onNext(java.lang.Object)
com.xuexiang.xhttp2.cache.RxCache: long access$1800(com.xuexiang.xhttp2.cache.RxCache)
androidx.appcompat.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)
okhttp3.Response$Builder: Response$Builder()
androidx.fragment.app.Fragment: void onDestroy()
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: long requested()
androidx.fragment.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: void cancel()
androidx.customview.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)
okhttp3.OkHttpClient: java.util.List protocols()
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void addLast(io.reactivex.internal.operators.flowable.FlowableReplay$Node)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)
io.reactivex.internal.operators.completable.CompletableCache: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager,int)
io.reactivex.processors.PublishProcessor: PublishProcessor()
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: void trimHead()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: MenuItemWrapperICS$CollapsibleActionViewWrapper(android.view.View)
okio.AsyncTimeout: void exit(boolean)
androidx.viewpager.widget.ViewPager: boolean beginFakeDrag()
okhttp3.internal.platform.AndroidPlatform$CloseGuard: AndroidPlatform$CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
androidx.collection.MapCollections: MapCollections()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(int)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax valueOf(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.observers.DisposableLambdaObserver: void onComplete()
io.reactivex.internal.operators.completable.CompletableFromAction: void subscribeActual(io.reactivex.CompletableObserver)
org.aspectj.runtime.reflect.CatchClauseSignatureImpl: java.lang.Class getParameterType()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: void startFirstTimeout(org.reactivestreams.Publisher)
androidx.appcompat.widget.SearchView: boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent)
io.reactivex.internal.queue.SpscArrayQueue: boolean offer(java.lang.Object,java.lang.Object)
io.reactivex.internal.util.AtomicThrowable: boolean addThrowable(java.lang.Throwable)
androidx.appcompat.widget.AppCompatBackgroundHelper: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.appspa.update.utils.FileUtils: java.io.InputStream getFileInputStream(java.io.File)
okhttp3.internal.http2.Http2Connection$7: void execute()
androidx.core.widget.NestedScrollView: void abortAnimatedScroll()
androidx.appcompat.view.SupportMenuInflater$MenuState: char getShortcut(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: FlowableBuffer$PublisherBufferExactSubscriber(org.reactivestreams.Subscriber,int,java.util.concurrent.Callable)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionProvider(android.view.ActionProvider)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: void request(long)
io.reactivex.internal.operators.maybe.MaybeIgnoreElement: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void onComplete()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
androidx.collection.SparseArrayCompat: java.lang.Object clone()
androidx.core.content.FileProvider: int modeToMode(java.lang.String)
com.xuexiang.xhttp2.cache.RxCache$6: java.lang.Boolean execute()
androidx.viewpager.widget.ViewPager: void draw(android.graphics.Canvas)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: void setCancellable(io.reactivex.functions.Cancellable)
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: void dispose()
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)
okhttp3.internal.http2.Http2Writer: void synStream(boolean,int,int,java.util.List)
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: void onComplete()
androidx.fragment.app.FragmentTransition$2: FragmentTransition$2(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object)
androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void onNext(java.lang.Object)
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
io.reactivex.internal.operators.flowable.FlowableFromCallable: java.lang.Object call()
io.reactivex.internal.operators.observable.ObservableDematerialize: void subscribeActual(io.reactivex.Observer)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.widget.ImageViewCompat: ImageViewCompat()
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: FlowableConcatMap$ConcatMapInner(io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapSupport)
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: void onError(java.lang.Throwable)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
com.google.gson.JsonObject: com.google.gson.JsonElement remove(java.lang.String)
androidx.appcompat.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: void onNext(java.lang.Object)
io.reactivex.disposables.SubscriptionDisposable: SubscriptionDisposable(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: void onComplete()
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
androidx.collection.MapCollections$MapIterator: void remove()
androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEditable(boolean)
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: void onError(java.lang.Throwable)
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: void onNext(java.lang.Object)
okhttp3.internal.connection.StreamAllocation: java.net.Socket deallocate(boolean,boolean,boolean)
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: void subscribeNext()
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: HandlerScheduler$HandlerWorker(android.os.Handler,boolean)
androidx.core.view.ViewCompat: float getZ(android.view.View)
com.xuexiang.xhttp2.model.ExpiredInfo: boolean isExpired()
okhttp3.internal.ws.WebSocketWriter$FrameSink: okio.Timeout timeout()
androidx.appcompat.app.AlertDialog: android.widget.Button getButton(int)
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: void onComplete()
okio.Okio$4: java.io.IOException newTimeoutException(java.io.IOException)
androidx.core.content.res.ComplexColorCompat: boolean isGradient()
androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()
com.google.gson.internal.UnsafeAllocator$1: java.lang.Object newInstance(java.lang.Class)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.content.ClipDescription getDescription()
com.appspa.update.entity.PromptEntity: com.appspa.update.entity.PromptEntity setSupportBackgroundUpdate(boolean)
androidx.appcompat.view.ActionMode: void setCustomView(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowIcon()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: void otherError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: boolean isDisposed()
androidx.fragment.app.FragmentActivity: void onPause()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
androidx.appcompat.app.AlertDialog: void setIconAttribute(int)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: int clampViewPositionVertical(android.view.View,int,int)
androidx.fragment.app.FragmentTransitionImpl: void setEpicenter(java.lang.Object,android.graphics.Rect)
androidx.core.text.util.FindAddress: FindAddress()
androidx.appcompat.widget.DropDownListView: DropDownListView(android.content.Context,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isProjected()
androidx.appcompat.view.menu.MenuPopupHelper$1: void onDismiss()
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: java.lang.Object next()
okhttp3.internal.Util: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)
okio.Options: okio.ByteString get(int)
io.reactivex.subjects.PublishSubject: void remove(io.reactivex.subjects.PublishSubject$PublishDisposable)
androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: void onComplete()
io.reactivex.internal.operators.observable.ObservableSwitchMap: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableTakeUntil: void subscribeActual(io.reactivex.Observer)
androidx.core.content.res.GrowingArrayUtils: boolean[] insert(boolean[],int,int,boolean)
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: void ensureImeVisible(android.widget.AutoCompleteTextView,boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLights(int,int,int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence getHintText()
androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.core.graphics.ColorUtils: double pivotXyzComponent(double)
com.google.gson.internal.Excluder: boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until)
com.google.gson.internal.bind.TypeAdapters$19: TypeAdapters$19()
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context)
io.reactivex.internal.util.VolatileSizeArrayList: java.util.List subList(int,int)
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.viewpager.widget.ViewPager$PagerObserver: void onChanged()
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer: VersionedParcelStream$FieldBuffer(int,java.io.DataOutputStream)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.xuexiang.xhttp2.cache.RxCache$Builder: java.lang.String access$300(com.xuexiang.xhttp2.cache.RxCache$Builder)
com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getTimePartOfDateTimePattern(int)
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedDispose: void run()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
io.reactivex.internal.functions.Functions$EmptyRunnable: void run()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)
com.google.gson.internal.LinkedHashTreeMap$AvlIterator: void reset(com.google.gson.internal.LinkedHashTreeMap$Node)
androidx.fragment.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.loader.content.Loader: java.lang.String dataToString(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: void onNext(java.lang.Object)
org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: org.aspectj.lang.reflect.AjType getType()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: Http2Connection$ReaderRunnable$2(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],boolean,okhttp3.internal.http2.Settings)
io.reactivex.internal.operators.observable.ObservableMap: ObservableMap(io.reactivex.ObservableSource,io.reactivex.functions.Function)
com.appspa.update._AppSpace: java.util.Map getParams()
com.appspa.update.widget.UpdateDialogFragment: boolean handleCompleted(java.io.File)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: void cancel()
io.reactivex.internal.subscriptions.DeferredScalarSubscription: boolean tryCancel()
com.google.gson.FieldNamingPolicy$4: java.lang.String translateName(java.lang.reflect.Field)
io.reactivex.internal.operators.completable.CompletableAmb: void subscribeActual(io.reactivex.CompletableObserver)
com.xuexiang.xhttp2.cache.core.LruDiskCache: void openCache()
androidx.viewpager.widget.ViewPager: void dispatchOnScrollStateChanged(int)
io.reactivex.annotations.BackpressureKind: BackpressureKind(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction: io.reactivex.disposables.Disposable callActual(io.reactivex.Scheduler$Worker,io.reactivex.CompletableObserver)
androidx.core.view.ViewCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.view.menu.MenuWrapperICS: void removeItem(int)
androidx.appcompat.app.AlertDialog: void setCustomTitle(android.view.View)
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setInternalBackgroundTint(android.content.res.ColorStateList)
org.aspectj.internal.lang.reflect.AjTypeImpl: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
io.reactivex.internal.schedulers.NewThreadScheduler: NewThreadScheduler(java.util.concurrent.ThreadFactory)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.NotificationManagerCompat: NotificationManagerCompat(android.content.Context)
androidx.core.view.NestedScrollingChildHelper: NestedScrollingChildHelper(android.view.View)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
androidx.core.util.AtomicFile: void delete()
com.google.gson.internal.reflect.UnsafeReflectionAccessor: void makeAccessible(java.lang.reflect.AccessibleObject)
androidx.core.app.NotificationCompat$Builder: long getWhenIfShowing()
io.reactivex.internal.operators.observable.ObservableRepeat: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.app.AlertController$1: AlertController$1(androidx.appcompat.app.AlertController)
androidx.appcompat.app.ActionBar: void setHomeAsUpIndicator(int)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void drain()
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void onError(java.lang.Throwable)
okio.Buffer: java.io.OutputStream outputStream()
com.google.gson.internal.bind.TreeTypeAdapter: TreeTypeAdapter(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
okhttp3.internal.http.HttpMethod: HttpMethod()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.core.graphics.PathSegment: java.lang.String toString()
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain: CompositeException$CompositeExceptionCausalChain()
io.reactivex.internal.subscribers.StrictSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
retrofit2.SkipCallbackExecutorImpl: java.lang.Class annotationType()
androidx.fragment.app.BackStackRecord: int getBreadCrumbShortTitleRes()
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: void request(long)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: void onComplete()
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeEmpty: java.lang.Object call()
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: ObservableCollectSingle$CollectObserver(io.reactivex.SingleObserver,java.lang.Object,io.reactivex.functions.BiConsumer)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: void onComplete()
androidx.appcompat.graphics.drawable.DrawableContainer: DrawableContainer()
io.reactivex.internal.observers.ConsumerSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeUniformPresetSizesConfiguration()
io.reactivex.Scheduler$DisposeTask: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeNever: void subscribeActual(io.reactivex.MaybeObserver)
okio.ByteString: byte getByte(int)
androidx.appcompat.view.menu.StandardMenuPopup: void setGravity(int)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
io.reactivex.internal.observers.BiConsumerSingleObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: okhttp3.Request createNewRequest(okhttp3.Request$Builder)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: MaybeMergeArray$ClqSimpleQueue()
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.graphics.drawable.Drawable getThemeUpIndicator()
io.reactivex.subjects.AsyncSubject: AsyncSubject()
io.reactivex.internal.operators.parallel.ParallelRunOn$MultiWorkerCallback: ParallelRunOn$MultiWorkerCallback(io.reactivex.internal.operators.parallel.ParallelRunOn,org.reactivestreams.Subscriber[],org.reactivestreams.Subscriber[])
io.reactivex.observers.TestObserver$EmptyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: MaybeFlatMapSingle$FlatMapMaybeObserver(io.reactivex.SingleObserver,io.reactivex.functions.Function)
com.xuexiang.xhttp2.model.HttpParams: void removeUrl(java.lang.String)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: void onComplete()
androidx.appcompat.app.AlertDialog: void setButtonPanelLayoutHint(int)
androidx.appcompat.widget.SearchView$7: SearchView$7(androidx.appcompat.widget.SearchView)
retrofit2.Response: boolean isSuccessful()
io.reactivex.observers.ResourceCompletableObserver: void onStart()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: long access$300(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void runAsync()
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: void close()
androidx.appcompat.widget.AppCompatSeekBarHelper: void jumpDrawablesToCurrentState()
com.zhy.http.okhttp.callback.BitmapCallback: android.graphics.Bitmap parseNetworkResponse(okhttp3.Response,int)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: boolean isEmpty()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: $Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])
androidx.appcompat.app.ActionBarDrawerToggle$1: ActionBarDrawerToggle$1(androidx.appcompat.app.ActionBarDrawerToggle)
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
io.reactivex.android.MainThreadDisposable: MainThreadDisposable()
androidx.cursoradapter.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$NextObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()
io.reactivex.internal.queue.SpscLinkedArrayQueue: boolean writeToQueue(java.util.concurrent.atomic.AtomicReferenceArray,java.lang.Object,long,int)
com.appspa.demo.R: R()
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.request.PutRequest put(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void disposeBoundary()
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber: FlowableWithLatestFrom$FlowableWithLatestSubscriber(io.reactivex.internal.operators.flowable.FlowableWithLatestFrom,io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void innerComplete()
com.google.gson.internal.bind.TypeAdapters$26$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.aspectj.internal.lang.reflect.StringToType$1: java.lang.reflect.Type getRawType()
okhttp3.OkHttpClient: okhttp3.Dns dns()
androidx.drawerlayout.widget.DrawerLayout: void updateDrawerState(int,int,android.view.View)
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: BlockingFlowableLatest$LatestSubscriberIterator()
androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.loader.content.CursorLoader: java.lang.String getSortOrder()
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Completable onAssembly(io.reactivex.Completable)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: void dispose()
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber$SubjectWork: FlowableWindowTimed$WindowSkipSubscriber$SubjectWork(io.reactivex.processors.UnicastProcessor,boolean)
io.reactivex.internal.operators.single.SingleFlatMap: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.graphics.drawable.DrawableCompat: DrawableCompat()
androidx.appcompat.widget.AppCompatSeekBarHelper: android.content.res.ColorStateList getTickMarkTintList()
com.appspa.update.proxy.impl.DefaultUpdateDownloader$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: void onNext(java.lang.Object)
androidx.core.os.LocaleListPlatformWrapper: boolean isEmpty()
androidx.fragment.app.FragmentTabHost: void initFragmentTabHost(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: void innerSuccess(java.lang.Object)
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscription: void request(long)
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
io.reactivex.internal.observers.DeferredScalarDisposable: java.lang.Object poll()
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.XHttp getInstance()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: int getAlphabeticModifiers()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody: long contentLength()
com.appspa.update.R: R()
androidx.core.app.JobIntentService$WorkEnqueuer: void serviceProcessingStarted()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: void requestOne()
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: void onError(java.lang.Throwable)
androidx.collection.MapCollections$MapIterator: int hashCode()
io.reactivex.internal.util.NotificationLite: io.reactivex.internal.util.NotificationLite[] values()
io.reactivex.internal.observers.SubscriberCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)
androidx.vectordrawable.R: R()
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy$1: boolean test(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.functions.ObjectHelper: ObjectHelper()
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: void onNext(java.lang.Object)
okio.ByteString: int indexOf(byte[],int)
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: void onError(java.lang.Throwable)
androidx.core.widget.AutoScrollHelper: boolean canTargetScrollHorizontally(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: int detectDisplayOptions()
com.appspa.update.utils.UpdateUtils: java.lang.String getDefaultDiskCacheDirPath()
io.reactivex.internal.operators.completable.CompletableSubscribeOn$SubscribeOnObserver: void run()
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void onComplete()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.jakewharton.disklrucache.DiskLruCache: com.jakewharton.disklrucache.DiskLruCache$Snapshot get(java.lang.String)
androidx.vectordrawable.R$id: R$id()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: void onComplete()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionPause(android.transition.Transition)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.internal.observers.BiConsumerSingleObserver: void dispose()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)
androidx.core.provider.SelfDestructiveThread$3: SelfDestructiveThread$3(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition)
androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)
io.reactivex.internal.operators.observable.ObservableMaterialize: ObservableMaterialize(io.reactivex.ObservableSource)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] stop()
androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter)
androidx.viewpager.widget.ViewPager$ViewPositionComparator: int compare(android.view.View,android.view.View)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: void cancel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: void emit()
okhttp3.Request: java.lang.String header(java.lang.String)
androidx.fragment.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: void dispose()
okhttp3.internal.http2.Header: int hashCode()
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedEmitLast: void run()
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformWidth(int,int)
androidx.loader.content.AsyncTaskLoader: void setUpdateThrottle(long)
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.ConstructorConstructor$9: java.lang.Object construct()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: ActionMenuView$ActionMenuPresenterCallback()
androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String getDeclaringTypeName()
androidx.appcompat.widget.ScrollingTabContainerView: ScrollingTabContainerView(android.content.Context)
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)
androidx.activity.R$layout: R$layout()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void innerComplete()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)
androidx.appcompat.widget.ToolbarWidgetWrapper: void ensureSpinner()
okio.RealBufferedSink: okio.BufferedSink writeByte(int)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SamplerObserver: void onComplete()
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.versionedparcelable.VersionedParcelStream: void writeByteArray(byte[],int,int)
androidx.appcompat.widget.TooltipCompatHandler: void onViewAttachedToWindow(android.view.View)
okhttp3.internal.http2.Http2Connection: void access$000(okhttp3.internal.http2.Http2Connection)
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder)
androidx.versionedparcelable.VersionedParcel: void writeFloatArray(float[],int)
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.appspa.update.widget.NumberProgressBar: java.lang.String getSuffix()
androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)
io.reactivex.internal.operators.flowable.FlowableReduceWithSingle: void subscribeActual(io.reactivex.SingleObserver)
com.google.gson.internal.LinkedHashTreeMap: void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ListPopupWindow$1: ListPopupWindow$1(androidx.appcompat.widget.ListPopupWindow,android.view.View)
androidx.core.view.DragAndDropPermissionsCompat: DragAndDropPermissionsCompat(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: void onNext(java.lang.Object)
com.zhy.http.okhttp.OkHttpUtils$1: OkHttpUtils$1(com.zhy.http.okhttp.OkHttpUtils,com.zhy.http.okhttp.callback.Callback,int)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.StandardMenuPopup: void show()
okhttp3.OkHttpClient$1: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ToolbarWidgetWrapper: void initProgress()
androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: boolean isDisposed()
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: ObservableSwitchMapSingle$SwitchMapSingleMainObserver(io.reactivex.Observer,io.reactivex.functions.Function,boolean)
androidx.versionedparcelable.VersionedParcelStream: android.os.IBinder readStrongBinder()
androidx.fragment.app.Fragment$SavedState$1: androidx.fragment.app.Fragment$SavedState[] newArray(int)
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator: void subscribe(org.reactivestreams.Publisher[])
com.appspa.update._AppSpace: java.lang.String encryptFile(java.io.File)
androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)
io.reactivex.internal.disposables.EmptyDisposable: boolean offer(java.lang.Object)
androidx.loader.content.Loader: boolean isAbandoned()
androidx.customview.widget.ViewDragHelper: void setDragState(int)
com.google.gson.internal.bind.TypeAdapters$35: java.lang.String toString()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: void onComplete()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setContentDescription(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: void otherComplete()
androidx.appcompat.widget.RtlSpacingHelper: int getRight()
io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter: void onNext(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDefaults(int)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void cancel()
androidx.core.content.SharedPreferencesCompat: SharedPreferencesCompat()
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: void cancel()
io.reactivex.observers.ResourceCompletableObserver: void dispose()
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper[] values()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: void dispose()
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void onError(java.lang.Throwable)
okio.RealBufferedSource: long indexOf(byte,long,long)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintShowBackgroundOnly()
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerView(android.view.View)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
androidx.fragment.app.DialogFragment: void dismiss()
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$DelayMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.http2.Http2Stream: int getId()
androidx.loader.content.Loader: void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.flowable.FlowableRepeat: void subscribeActual(org.reactivestreams.Subscriber)
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
io.reactivex.internal.disposables.CancellableDisposable: void dispose()
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription: void fastPath()
com.google.gson.JsonStreamParser: JsonStreamParser(java.io.Reader)
androidx.core.graphics.ColorUtils: int HSLToColor(float[])
androidx.loader.content.Loader$ForceLoadContentObserver: void onChange(boolean)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOriginalOffset(int)
io.reactivex.plugins.RxJavaPlugins: java.lang.Runnable onSchedule(java.lang.Runnable)
io.reactivex.internal.operators.observable.ObservableFilter: ObservableFilter(io.reactivex.ObservableSource,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void open(java.lang.Object)
okhttp3.internal.http2.Http2: java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[])
io.reactivex.internal.functions.Functions$CastToClass: java.lang.Object apply(java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)
com.xuexiang.xhttp2.logs.HttpLog: void e(java.lang.Throwable)
okio.Okio: okio.Sink sink(java.io.File)
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: void run()
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: ObservableRefCount$RefCountObserver(io.reactivex.Observer,io.reactivex.internal.operators.observable.ObservableRefCount,io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection)
androidx.appcompat.widget.ResourceManagerInternal: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.disposables.DisposableHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void draw(android.graphics.Canvas)
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
androidx.fragment.app.Fragment: boolean isInBackStack()
com.appspa.update.entity.DownloadEntity: com.appspa.update.entity.DownloadEntity setSize(long)
com.appspa.update.UpdateManager$1: UpdateManager$1(com.appspa.update.UpdateManager,com.appspa.update.listener.IUpdateParseCallback)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableMaterialize$MaterializeSubscriber: void onError(java.lang.Throwable)
androidx.core.widget.ScrollerCompat: boolean computeScrollOffset()
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: void dispose()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()
okhttp3.internal.http2.PushObserver$1: boolean onData(int,okio.BufferedSource,int,boolean)
androidx.core.view.NestedScrollingParent: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void updateDstRect()
androidx.core.os.CancellationSignal: void waitForCancelFinishedLocked()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasLogo()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
androidx.lifecycle.Transformations: Transformations()
androidx.savedstate.Recreator$SavedStateProvider: Recreator$SavedStateProvider(androidx.savedstate.SavedStateRegistry)
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.String keyToString(com.google.gson.JsonElement)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
io.reactivex.internal.functions.Functions$NullCallable: Functions$NullCallable()
retrofit2.KotlinExtensions: java.lang.Object awaitResponse(retrofit2.Call,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback: void run()
androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void run()
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: void trimHead()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isTextEntryKey()
okio.Buffer: int read(byte[],int,int)
okhttp3.internal.cache.FaultHidingSink: void onException(java.io.IOException)
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.lang.Object newBufferPoll(java.util.concurrent.atomic.AtomicReferenceArray,long,int)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: java.lang.Object getOption(int)
androidx.appcompat.app.AppCompatDelegateImpl: void onPanelClosed(int)
com.xuexiang.xhttp2.cache.key.DefaultCacheKeyCreator: java.lang.String getCacheKey(java.lang.reflect.Method,java.lang.Object[],com.xuexiang.xhttp2.annotation.NetMethod)
okhttp3.RealCall$1: RealCall$1(okhttp3.RealCall)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean onStateChanged(int[])
io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray$MergeInnerCompletableObserver: void onError(java.lang.Throwable)
com.appspa.update.AppSpace: com.appspa.update.AppSpace isGet(boolean)
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: void subscribe(org.reactivestreams.Publisher[],int)
androidx.viewpager.R$color: R$color()
androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)
androidx.appcompat.view.CollapsibleActionView: void onActionViewExpanded()
androidx.appcompat.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void clear()
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.request.PostRequest post(java.lang.String)
androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)
androidx.appcompat.view.menu.MenuItemImpl$1: MenuItemImpl$1(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater getMenuInflater()
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setFilterBitmap(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDown(int,android.view.KeyEvent)
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(java.lang.Object)
io.reactivex.internal.util.EmptyComponent: void onNext(java.lang.Object)
androidx.viewpager.widget.ViewPager: void onPageScrolled(int,float,int)
androidx.core.view.ViewCompat$4: java.lang.Object frameworkGet(android.view.View)
okhttp3.internal.io.FileSystem$1: okio.Source source(java.io.File)
com.appspa.update.utils.ApkUtils: boolean installAppSilentAbove24(java.lang.String,java.lang.String)
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver: void onComplete()
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1: Animatable2Compat$AnimationCallback$1(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: FlowableWindow$WindowExactSubscriber(org.reactivestreams.Subscriber,long,int)
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: void onError(java.lang.Throwable)
com.appspa.update.proxy.impl.DefaultUpdateDownloader$1: DefaultUpdateDownloader$1(com.appspa.update.proxy.impl.DefaultUpdateDownloader,com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
okhttp3.internal.http2.Http2Connection: long access$200(okhttp3.internal.http2.Http2Connection)
androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: void onError(java.lang.Throwable)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: okhttp3.Request request()
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.graphics.drawable.IconCompat getIcon()
androidx.core.view.GravityCompat: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: void request(long)
androidx.core.content.res.ConfigurationHelper: ConfigurationHelper()
androidx.appcompat.widget.ActivityChooserModel: void ensureConsistentState()
androidx.collection.LongSparseArray: void gc()
io.reactivex.internal.functions.Functions$BoundedConsumer: void accept(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.view.ViewCompat: void compatOffsetTopAndBottom(android.view.View,int)
com.xuexiang.xhttp2.interceptor.NoCacheInterceptor: NoCacheInterceptor()
io.reactivex.internal.operators.completable.CompletableTimer: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.jakewharton.disklrucache.DiskLruCache: int access$1800(com.jakewharton.disklrucache.DiskLruCache)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SampleMainEmitLast: FlowableSamplePublisher$SampleMainEmitLast(org.reactivestreams.Subscriber,org.reactivestreams.Publisher)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShowAsActionFlags(int)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: void innerError(java.lang.Throwable,int)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: void accept(io.reactivex.Observer,java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived()
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe: void subscribeActual(org.reactivestreams.Subscriber)
androidx.collection.SparseArrayCompat: java.lang.String toString()
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: void onError(java.lang.Throwable)
androidx.viewpager.widget.ViewPager$PageTransformer: void transformPage(android.view.View,float)
io.reactivex.internal.operators.completable.CompletableHide$HideCompletableObserver: void onError(java.lang.Throwable)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1: void execute()
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBufferTask: io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBuffer call()
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableWindowBoundary: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.SearchView: int getInputType()
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void dispose()
androidx.drawerlayout.widget.DrawerLayout: android.view.View findVisibleDrawer()
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: java.lang.String toString()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)
androidx.appcompat.app.ActionBar: void setDisplayShowCustomEnabled(boolean)
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void completeEvictions()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: void request(long)
androidx.core.app.NotificationCompat$Builder: android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap)
okhttp3.internal.http1.Http1Codec: void cancel()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews)
androidx.appcompat.app.TwilightCalculator: TwilightCalculator()
okhttp3.EventListener$2: EventListener$2(okhttp3.EventListener)
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman get()
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)
okhttp3.Authenticator$1: Authenticator$1()
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ScrollingTabContainerView: void updateTab(int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspot(float,float)
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
androidx.collection.LongSparseArray: java.lang.Object clone()
com.google.gson.internal.bind.ArrayTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.exceptions.CompositeException$WrappedPrintWriter: void println(java.lang.Object)
androidx.core.view.ScrollingView: int computeHorizontalScrollExtent()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: ObservableFlatMapMaybe$FlatMapMaybeObserver(io.reactivex.Observer,io.reactivex.functions.Function,boolean)
androidx.appcompat.widget.ForwardingListener: boolean onTouchForwarded(android.view.MotionEvent)
io.reactivex.internal.queue.SpscArrayQueue: void soConsumerIndex(long)
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: BlockingObservableNext$NextObserver()
io.reactivex.internal.operators.single.SingleSubscribeOn: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.observable.ObservableSkipLast$SkipLastObserver: boolean isDisposed()
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
org.aspectj.lang.reflect.NoSuchAdviceException: java.lang.String getName()
io.reactivex.internal.operators.observable.BlockingObservableNext$NextIterator: boolean moveToNext()
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$InnerObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void setSelected(boolean)
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: void dispose()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: ObservableWindowTimed$WindowExactBoundedObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,long,boolean)
okhttp3.OkHttpClient: java.util.List connectionSpecs()
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.XHttpProxy: java.util.Map getParamsMap(java.lang.reflect.Method,java.lang.Object[],com.xuexiang.xhttp2.annotation.NetMethod,int)
androidx.appcompat.view.menu.MenuDialogHelper: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.net.Uri getDataUri()
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: void onError(java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.mixed.MaterializeSingleObserver: boolean isDisposed()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.zhy.http.okhttp.callback.FileCallBack: java.io.File saveFile(okhttp3.Response,int)
okhttp3.OkHttpClient$1: int code(okhttp3.Response$Builder)
io.reactivex.processors.ReplayProcessor: void remove(io.reactivex.processors.ReplayProcessor$ReplaySubscription)
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
com.google.gson.TypeAdapter$1: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.view.MotionEventCompat: int getButtonState(android.view.MotionEvent)
androidx.appcompat.app.ActionBar: void removeTabAt(int)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: void request(long)
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: void onSuccess(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable subscribeOn(io.reactivex.Scheduler)
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.fragment.app.BackStackRecord: java.lang.String getName()
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: void dispose()
org.aspectj.runtime.internal.CFlowStack: java.lang.String getSystemPropertyWithoutSecurityException(java.lang.String,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void request(long)
androidx.core.view.ViewPropertyAnimatorCompat$2: void onAnimationUpdate(android.animation.ValueAnimator)
com.google.gson.internal.bind.TypeAdapters$11: java.lang.Object read(com.google.gson.stream.JsonReader)
com.xuexiang.xhttp2.utils.TypeUtils: java.lang.reflect.Type findNeedType(java.lang.Class)
androidx.appcompat.app.ToolbarActionBar: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setAlpha(int)
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)
androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)
androidx.core.widget.ContentLoadingProgressBar$2: void run()
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)
androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn: void subscribeActual(org.reactivestreams.Subscriber)
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Parcel)
com.google.gson.internal.bind.util.ISO8601Utils: ISO8601Utils()
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)
androidx.loader.content.Loader: void onStopLoading()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMinTextSize()
io.reactivex.internal.functions.Functions$Identity: java.lang.String toString()
androidx.appcompat.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
androidx.appcompat.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)
androidx.lifecycle.GeneratedAdapter: void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger)
com.appspa.update.widget.NumberProgressBar: void setUnreachedBarColor(int)
com.xuexiang.xhttp2.annotation.NetMethod: com.xuexiang.xhttp2.cache.model.CacheMode cacheMode()
com.appspa.update.entity.DownloadEntity: com.appspa.update.entity.DownloadEntity setMd5(java.lang.String)
com.google.gson.DefaultDateTypeAdapter: DefaultDateTypeAdapter(java.lang.Class)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
androidx.core.app.JobIntentService$CompatWorkItem: android.content.Intent getIntent()
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int,android.util.TypedValue)
androidx.core.app.AlarmManagerCompat: void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent)
io.reactivex.subjects.MaybeSubject: void onSuccess(java.lang.Object)
io.reactivex.Observable: io.reactivex.Observable zipArray(io.reactivex.functions.Function,boolean,int,io.reactivex.ObservableSource[])
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
androidx.appcompat.app.ActionBar: int getSelectedNavigationIndex()
com.google.gson.stream.JsonWriter: void replaceTop(int)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: FlowableSamplePublisher$SamplePublisherSubscriber(org.reactivestreams.Subscriber,org.reactivestreams.Publisher)
androidx.collection.SparseArrayCompat: boolean remove(int,java.lang.Object)
androidx.core.util.ObjectsCompat: ObjectsCompat()
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: void onComplete()
androidx.collection.SparseArrayCompat: boolean containsValue(java.lang.Object)
com.appspa.update.service.DownloadService: androidx.core.app.NotificationCompat$Builder access$202(com.appspa.update.service.DownloadService,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: void onNext(java.lang.Object)
androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
okhttp3.HttpUrl: java.lang.String query()
androidx.loader.content.ModernAsyncTask$InternalHandler: ModernAsyncTask$InternalHandler()
androidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
androidx.core.text.util.LinkifyCompat$1: int compare(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec)
com.appspa.update.service.DownloadService$FileDownloadCallBack: DownloadService$FileDownloadCallBack(com.appspa.update.service.DownloadService,com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: void request(long)
androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: void add(java.lang.Object)
androidx.core.util.TimeUtils: TimeUtils()
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState[] newArray(int)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)
androidx.activity.ImmLeaksCleaner: ImmLeaksCleaner(android.app.Activity)
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty$SwitchIfEmptySubscriber: void onError(java.lang.Throwable)
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object removeShortcuts(java.util.List)
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: void request(long)
com.xuexiang.xhttp2.cache.core.LruMemoryCache: boolean save(java.lang.String,java.lang.Object)
androidx.core.util.LogWriter: void flush()
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void cancel()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor(okhttp3.OkHttpClient)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: void onComplete()
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.app.JobIntentService$CommandProcessor: java.lang.Void doInBackground(java.lang.Void[])
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: void accept(org.reactivestreams.Subscription)
androidx.appcompat.widget.SearchView$8: SearchView$8(androidx.appcompat.widget.SearchView)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: void onNext(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: void onNext(java.lang.Object)
io.reactivex.observers.SafeObserver: boolean isDisposed()
com.google.gson.internal.LinkedTreeMap: void clear()
androidx.viewpager.widget.ViewPager$PagerObserver: void onInvalidated()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isHideOnContentScrollEnabled()
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl: int hashCode()
com.xuexiang.xhttp2.utils.Utils: boolean isSDCardExist()
androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean onStartJob(android.app.job.JobParameters)
androidx.core.graphics.BitmapCompat: int getAllocationByteCount(android.graphics.Bitmap)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: void onError(java.lang.Throwable)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setRawTextSize(float)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: long getLatestTimestamp()
androidx.appcompat.app.ActionBar: void setSelectedNavigationItem(int)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: boolean tryCaptureView(android.view.View,int)
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: TextDirectionHeuristicsCompat$AnyStrong(boolean)
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: void onError(java.lang.Throwable)
org.aspectj.lang.reflect.PerClauseKind: PerClauseKind(java.lang.String,int)
androidx.collection.CircularIntArray: void addFirst(int)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl: TreeTypeAdapter$GsonContextImpl(com.google.gson.internal.bind.TreeTypeAdapter)
io.reactivex.internal.util.SorterFunction: java.util.List apply(java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder addCallAdapterFactory(retrofit2.CallAdapter$Factory)
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: void log(java.lang.String)
androidx.appcompat.widget.TintTypedArray: int getType(int)
com.appspa.update.R$id: R$id()
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: void cancel()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: void onSuccess(java.lang.Object)
retrofit2.adapter.rxjava2.BodyObservable: BodyObservable(io.reactivex.Observable)
androidx.arch.core.executor.ArchTaskExecutor$2: void execute(java.lang.Runnable)
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: void onComplete()
com.zhy.http.okhttp.log.LoggerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: void onNext(java.lang.Object)
androidx.viewpager.widget.PagerTabStrip$1: void onClick(android.view.View)
androidx.core.database.CursorWindowCompat: CursorWindowCompat()
androidx.appcompat.view.menu.MenuPopup: boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
androidx.appcompat.view.menu.MenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.view.menu.StandardMenuPopup$1: void onGlobalLayout()
androidx.appcompat.widget.SwitchCompat: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.reactivex.subjects.UnicastSubject: void onComplete()
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
retrofit2.ParameterHandler$1: void apply(retrofit2.RequestBuilder,java.lang.Iterable)
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: void run()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
androidx.customview.widget.FocusStrategy: FocusStrategy()
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
com.xuexiang.xhttp2.exception.ServerException: int getErrCode()
androidx.annotation.IntDef: int[] value()
com.appspa.update.AppSpace: com.appspa.update.AppSpace isWifiOnly(boolean)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: void onComplete()
okhttp3.Cache: void remove(okhttp3.Request)
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: void run()
androidx.appcompat.view.menu.MenuBuilder: void flagActionItems()
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: CompletableFromPublisher$FromPublisherSubscriber(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.observable.ObservableReplay$Replay: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver: void onComplete()
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry)
androidx.fragment.app.FragmentTransitionCompat21: FragmentTransitionCompat21()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Action,io.reactivex.BackpressureOverflowStrategy,long)
io.reactivex.internal.operators.flowable.FlowableScanSeed: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.observers.DeferredScalarObserver: void onError(java.lang.Throwable)
org.aspectj.runtime.internal.AroundClosure: AroundClosure()
io.reactivex.internal.operators.flowable.FlowableConcatMap: org.reactivestreams.Subscriber subscribe(org.reactivestreams.Subscriber,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void drainOutput()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$3: BaseTestConsumer$TestWaitStrategy$3(java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: boolean tryOnNext(java.lang.Object)
androidx.core.view.accessibility.AccessibilityEventCompat: void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: void dispose()
androidx.appcompat.app.AlertController$4: void onScroll(android.widget.AbsListView,int,int,int)
androidx.loader.content.CursorLoader: void onReset()
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(java.lang.Object)
androidx.loader.content.ModernAsyncTask$Status: ModernAsyncTask$Status(java.lang.String,int)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: void run()
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerOuter: java.lang.Object apply(java.lang.Object)
androidx.collection.SparseArrayCompat: boolean containsKey(int)
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
androidx.core.os.LocaleListCompatWrapper: java.lang.String getLikelyScript(java.util.Locale)
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
androidx.core.widget.NestedScrollView: void onAttachedToWindow()
androidx.versionedparcelable.VersionedParcelStream: byte[] readByteArray()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean isVisible()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: FlowableJoin$JoinSubscription(org.reactivestreams.Subscriber,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: void request(long)
androidx.core.util.AtomicFile: void finishWrite(java.io.FileOutputStream)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void mutate()
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.appspa.demo.utils.NotifyUtils: boolean isNotifyPermissionOpen(android.content.Context)
com.xuexiang.xhttp2.XHttpProxy: java.lang.String getCacheKey(java.lang.reflect.Method,java.lang.Object[],com.xuexiang.xhttp2.annotation.NetMethod)
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: FlowableFromObservable$SubscriberObserver(org.reactivestreams.Subscriber)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawable: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.collection.MapCollections$ArrayIterator: void remove()
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)
androidx.fragment.app.FragmentManager: void popBackStack()
androidx.core.view.ViewCompat: void setScaleX(android.view.View,float)
androidx.fragment.app.Fragment: void performPause()
io.reactivex.internal.operators.maybe.MaybeObserveOn$ObserveOnMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void request(long)
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: void onComplete()
io.reactivex.Flowable: io.reactivex.Flowable fromPublisher(org.reactivestreams.Publisher)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
org.aspectj.runtime.reflect.SourceLocationImpl: java.lang.String getFileName()
retrofit2.SkipCallbackExecutorImpl: java.lang.annotation.Annotation[] ensurePresent(java.lang.annotation.Annotation[])
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: java.lang.Object leaveTransform(java.lang.Object)
com.google.gson.Gson: void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
io.reactivex.internal.subscribers.DeferredScalarSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void drain()
io.reactivex.observers.DisposableSingleObserver: DisposableSingleObserver()
okhttp3.internal.http1.Http1Codec: okio.Source newChunkedSource(okhttp3.HttpUrl)
androidx.core.os.LocaleListCompatWrapper: boolean isEmpty()
androidx.appcompat.view.menu.ListMenuPresenter: void setId(int)
androidx.viewpager.widget.ViewPager: float distanceInfluenceForSnapDuration(float)
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
androidx.appcompat.widget.ListPopupWindow: void setListItemExpandMax(int)
okio.Buffer: short readShortLe()
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: void dispose()
androidx.customview.widget.ViewDragHelper$Callback: ViewDragHelper$Callback()
com.xuexiang.xhttp2.utils.TypeUtils: java.util.List getAllTypes(java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: FlowableTakeWhile$TakeWhileSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Predicate)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setHomeButtonEnabled(boolean)
androidx.core.app.JobIntentService: void processorFinished()
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: FlowableCreate$SerializedEmitter(io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter)
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber: FlowableDebounce$DebounceSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
io.reactivex.subjects.SingleSubject: void onSuccess(java.lang.Object)
com.google.gson.Gson: void checkValidFloatingPoint(double)
io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable: void subscribeActual(org.reactivestreams.Subscriber)
com.appspa.update.proxy.impl.DefaultFileEncryptor: java.lang.String encryptFile(java.io.File)
okhttp3.RealCall: okhttp3.internal.connection.StreamAllocation streamAllocation()
androidx.fragment.app.FragmentState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.appcompat.widget.TintTypedArray: int getChangingConfigurations()
androidx.appcompat.widget.VectorEnabledTintResources: void setCompatVectorFromResourcesEnabled(boolean)
io.reactivex.internal.queue.MpscLinkedQueue: java.lang.Object poll()
org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: java.lang.String getMessage()
io.reactivex.internal.operators.completable.CompletableMergeIterable$MergeCompletableObserver: void onComplete()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: void onComplete()
com.appspa.update.utils.DrawableUtils: android.graphics.drawable.StateListDrawable getDrawable(int,int)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(int,int)
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: void onNext(io.reactivex.Notification)
okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable: void setParent(io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver)
androidx.core.os.ParcelCompat: void writeBoolean(android.os.Parcel,boolean)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: void onError(java.lang.Throwable)
com.appspa.update.service.DownloadService: void access$300(com.appspa.update.service.DownloadService)
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams()
androidx.core.widget.EdgeEffectCompat: boolean onPull(float)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: boolean isDisposed()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDropdownSelectedPosition(int)
okhttp3.CipherSuite: java.lang.String toString()
androidx.appcompat.app.WindowDecorActionBar$2: WindowDecorActionBar$2(androidx.appcompat.app.WindowDecorActionBar)
org.aspectj.internal.lang.reflect.AdviceImpl: org.aspectj.lang.reflect.AdviceKind getKind()
io.reactivex.processors.UnicastProcessor: boolean checkTerminated(boolean,boolean,boolean,org.reactivestreams.Subscriber,io.reactivex.internal.queue.SpscLinkedArrayQueue)
com.jakewharton.disklrucache.DiskLruCache$Entry: boolean access$602(com.jakewharton.disklrucache.DiskLruCache$Entry,boolean)
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: void dispose()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void clearMutated()
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void setDone()
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: FlowableReduceMaybe$ReduceSubscriber(io.reactivex.MaybeObserver,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: void cancel()
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.request.BaseRequest: io.reactivex.Observable execute(com.xuexiang.xhttp2.callback.CallClazzProxy)
androidx.core.view.ViewCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(int)
io.reactivex.internal.operators.observable.ObservableDebounce: void subscribeActual(io.reactivex.Observer)
androidx.core.app.NotificationCompat: java.lang.String getSortKey(android.app.Notification)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.gson.internal.ConstructorConstructor$14: ConstructorConstructor$14(com.google.gson.internal.ConstructorConstructor,java.lang.Class,java.lang.reflect.Type)
io.reactivex.internal.observers.BasicIntQueueDisposable: void dispose()
androidx.core.provider.FontsContractCompat$4$6: FontsContractCompat$4$6(androidx.core.provider.FontsContractCompat$4)
androidx.core.text.BidiFormatter: java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: char charAt(int)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(android.view.View)
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: void trimHead()
androidx.appcompat.view.StandaloneActionMode: boolean isUiFocusable()
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.schedulers.NewThreadWorker: boolean isDisposed()
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getText()
androidx.appcompat.app.AppCompatDelegateImpl: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ActivityChooserModel: boolean sortActivitiesIfNeeded()
androidx.appcompat.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
androidx.fragment.app.FragmentController: void doLoaderStop(boolean)
androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()
androidx.appcompat.view.menu.MenuItemImpl$1: void onActionProviderVisibilityChanged(boolean)
com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)
io.reactivex.internal.operators.single.SingleJust: void subscribeActual(io.reactivex.SingleObserver)
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: int hashCode()
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char)
com.xuexiang.xhttp2.cache.RxCache: java.io.File access$1900(com.xuexiang.xhttp2.cache.RxCache)
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: ObservableTake$TakeObserver(io.reactivex.Observer,long)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()
androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
androidx.fragment.app.Fragment: android.content.Context getContext()
com.xuexiang.xhttp2.utils.Utils: android.net.Uri getMediaFileUri(java.lang.String,java.lang.String,okhttp3.MediaType)
com.appspa.update.widget.UpdateDialog: void initListeners()
io.reactivex.internal.operators.completable.CompletableConcatIterable$ConcatInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AppCompatDelegateImpl: void onSaveInstanceState(android.os.Bundle)
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: boolean isDone()
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: void requestUpstream(long,org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableIntervalRange$IntervalRangeObserver: void run()
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: void request(long)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuPopup: void setForceShowIcon(boolean)
com.jakewharton.disklrucache.DiskLruCache$Entry: long[] access$1000(com.jakewharton.disklrucache.DiskLruCache$Entry)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.DecorToolbar: boolean canShowOverflowMenu()
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SearchView: void clearFocus()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: AnimatorInflaterCompat()
okhttp3.internal.http2.Http2Connection$PingRunnable: void execute()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: AnimatorInflaterCompat$PathDataEvaluator()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()
androidx.drawerlayout.widget.DrawerLayout: void updateChildrenImportantForAccessibility(android.view.View,boolean)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action)
androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
com.appspa.demo.R$string: R$string()
retrofit2.ParameterHandler$FieldMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
retrofit2.BuiltInConverters$RequestBodyConverter: BuiltInConverters$RequestBodyConverter()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void setDisposable(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupCheckable(int,boolean,boolean)
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
com.appspa.update.proxy.impl.DefaultUpdateChecker$1: DefaultUpdateChecker$1(com.appspa.update.proxy.impl.DefaultUpdateChecker,java.lang.String,com.appspa.update.proxy.IUpdateProxy)
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
androidx.lifecycle.ReportFragment: void onStart()
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: void setWaiting()
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver$OtherObserver: ObservableMergeWithSingle$MergeWithObserver$OtherObserver(io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver)
androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()
io.reactivex.exceptions.MissingBackpressureException: MissingBackpressureException()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient(java.lang.String)
okio.Okio$1: okio.Timeout timeout()
io.reactivex.internal.operators.parallel.ParallelRunOn$RunOnSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.bind.TypeAdapters$6: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean hasAddedItem()
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver: ObservableWindowBoundary$WindowBoundaryInnerObserver(io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver)
com.google.gson.Gson$4: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: void request(long)
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: java.lang.String encodeCookie(com.zhy.http.okhttp.cookie.store.SerializableHttpCookie)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty: void subscribeActual(org.reactivestreams.Subscriber)
androidx.collection.LongSparseArray: java.lang.String toString()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
com.google.gson.internal.bind.TypeAdapters$9: java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.maybe.MaybeLift: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.maybe.MaybeFromCompletable$FromCompletableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: void disposeTimer()
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowSkipSubscriber: void run()
okio.InflaterSource: okio.Timeout timeout()
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void onComplete()
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void cancel()
retrofit2.ParameterHandler$PartMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove: TestScheduler$TestWorker$QueueRemove(io.reactivex.schedulers.TestScheduler$TestWorker,io.reactivex.schedulers.TestScheduler$TimedRunnable)
io.reactivex.internal.operators.completable.CompletableLift: void subscribeActual(io.reactivex.CompletableObserver)
io.reactivex.internal.schedulers.IoScheduler$EventLoopWorker: boolean isDisposed()
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: BehaviorProcessor$BehaviorSubscription(org.reactivestreams.Subscriber,io.reactivex.processors.BehaviorProcessor)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: void onComplete()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()
androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
retrofit2.HttpServiceMethod$SuspendForResponse: HttpServiceMethod$SuspendForResponse(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter)
io.reactivex.internal.subscriptions.BasicQueueSubscription: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.ToolbarActionBar: float getElevation()
io.reactivex.internal.functions.Functions$Identity: Functions$Identity()
okhttp3.OkHttpClient: int connectTimeoutMillis()
okhttp3.internal.connection.StreamAllocation: void cancel()
androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ListPopupWindow: android.view.View getAnchorView()
androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
androidx.core.view.NestedScrollingParent3: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()
okio.Buffer: byte getByte(long)
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: StreamAllocation$StreamAllocationReference(okhttp3.internal.connection.StreamAllocation,java.lang.Object)
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.request.BaseRequest$6: io.reactivex.ObservableSource apply(io.reactivex.Observable)
androidx.appcompat.view.ActionMode$Callback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
retrofit2.Utils: int indexOf(java.lang.Object[],java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
io.reactivex.internal.operators.single.SingleDoOnError$DoOnError: void onError(java.lang.Throwable)
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.util.ConnectConsumer: void accept(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: io.reactivex.flowables.GroupedFlowable poll()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
com.google.gson.internal.bind.TypeAdapters$34: TypeAdapters$34(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
io.reactivex.internal.util.VolatileSizeArrayList: boolean addAll(int,java.util.Collection)
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
io.reactivex.internal.subscriptions.BooleanSubscription: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: void dispose()
org.aspectj.internal.lang.reflect.PointcutImpl: org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void onError(java.lang.Throwable)
androidx.core.content.ContextCompat$MainHandlerExecutor: void execute(java.lang.Runnable)
androidx.appcompat.view.menu.ShowableListMenu: void show()
androidx.core.app.NavUtils: void navigateUpFromSameTask(android.app.Activity)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle)
androidx.annotation.FloatRange: boolean toInclusive()
androidx.core.view.inputmethod.InputContentInfoCompat: void requestPermission()
androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)
androidx.customview.widget.ExploreByTouchHelper: int getVirtualViewAt(float,float)
io.reactivex.internal.schedulers.ComputationScheduler: ComputationScheduler()
io.reactivex.internal.operators.flowable.FlowableSkipUntil: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
io.reactivex.internal.operators.observable.ObservableDoAfterNext$DoAfterObserver: ObservableDoAfterNext$DoAfterObserver(io.reactivex.Observer,io.reactivex.functions.Consumer)
androidx.fragment.app.FragmentManagerImpl: boolean isStateAtLeast(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: LayoutInflaterCompat$Factory2Wrapper(androidx.core.view.LayoutInflaterFactory)
com.jakewharton.disklrucache.DiskLruCache: void delete()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()
com.appspa.update.proxy.impl.DefaultUpdateDownloader$1: void onServiceDisconnected(android.content.ComponentName)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: void dispose()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.subscriptions.EmptySubscription: void request(long)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
retrofit2.RequestBuilder: void setBody(okhttp3.RequestBody)
io.reactivex.internal.operators.maybe.MaybeCache: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
androidx.core.app.NotificationCompat$Action$Extender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
androidx.appcompat.view.menu.MenuDialogHelper: void onClick(android.content.DialogInterface,int)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void request(long)
androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
androidx.core.content.MimeTypeFilter: MimeTypeFilter()
androidx.appcompat.widget.TooltipCompatHandler: void clearAnchorPos()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
androidx.core.graphics.TypefaceCompatApi26Impl: TypefaceCompatApi26Impl()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainNoLast: ObservableSampleWithObservable$SampleMainNoLast(io.reactivex.Observer,io.reactivex.ObservableSource)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: void cancel()
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.bind.TypeAdapters$24: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
org.aspectj.internal.lang.reflect.TypePatternImpl: java.lang.String asString()
androidx.collection.LruCache: int hitCount()
androidx.appcompat.view.StandaloneActionMode: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: void replay(io.reactivex.subjects.ReplaySubject$ReplayDisposable)
io.reactivex.internal.util.VolatileSizeArrayList: int hashCode()
com.xuexiang.xhttp2.subsciber.BaseSubscriber: void onStart()
androidx.appcompat.app.ActionBar: boolean collapseActionView()
androidx.appcompat.view.menu.ActionMenuItem: boolean isChecked()
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate: boolean isNavigationVisible()
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void runBackfused()
androidx.core.content.pm.ShortcutInfoCompatSaver: java.util.List getShortcuts()
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: void dispose()
io.reactivex.internal.schedulers.DisposeOnCancel: java.lang.Object get(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.completable.CompletableDisposeOn$DisposeOnObserver: CompletableDisposeOn$DisposeOnObserver(io.reactivex.CompletableObserver,io.reactivex.Scheduler)
com.xuexiang.xhttp2.model.HttpParams: void putFileParams(java.lang.String,java.util.List,com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: FlowableCombineLatest$CombineLatestInnerSubscriber(io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator,int,int)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber: void onNext(java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter: long getItemId(int)
androidx.fragment.app.FragmentManagerImpl$6: FragmentManagerImpl$6(androidx.fragment.app.FragmentManagerImpl)
androidx.appcompat.widget.ActionMenuPresenter: android.os.Parcelable onSaveInstanceState()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)
okhttp3.Response: boolean isSuccessful()
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: void setActionBarDescription(int)
androidx.versionedparcelable.VersionedParcelStream: void setSerializationFlags(boolean,boolean)
io.reactivex.schedulers.Schedulers$ComputationTask: io.reactivex.Scheduler call()
com.appspa.update.widget.NumberProgressBar: java.lang.String getPrefix()
io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver: java.lang.Object poll()
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean hasMipMap()
androidx.core.app.ActivityOptionsCompat: void requestUsageTimeReport(android.app.PendingIntent)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipCoordinator: boolean isDisposed()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: void onComplete()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getText()
io.reactivex.subscribers.TestSubscriber: boolean isDisposed()
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
com.appspa.update.utils.UpdateUtils: java.io.File getApkFileByUpdateEntity(com.appspa.update.entity.UpdateEntity)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundTints()
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: boolean hasCustomOnError()
androidx.appcompat.view.menu.CascadingMenuPopup$1: CascadingMenuPopup$1(androidx.appcompat.view.menu.CascadingMenuPopup)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: ResourceManagerInternal$AsldcInflateDelegate()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$1: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableGenerate: void subscribeActual(org.reactivestreams.Subscriber)
com.xuexiang.xhttp2.utils.TypeUtils: java.lang.reflect.Type getType(java.lang.reflect.Type,int)
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: SingleObserveOn$ObserveOnSingleObserver(io.reactivex.SingleObserver,io.reactivex.Scheduler)
io.reactivex.internal.operators.flowable.FlowableTakePublisher: FlowableTakePublisher(org.reactivestreams.Publisher,long)
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: FlowableScanSeed$ScanSeedSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.BiFunction,java.lang.Object,int)
io.reactivex.internal.subscriptions.ScalarSubscription: boolean offer(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableSwitchMap: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getWindowId()
okio.SegmentedByteString: okio.ByteString sha1()
androidx.appcompat.widget.MenuItemHoverListener: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
androidx.lifecycle.Lifecycle: Lifecycle()
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View,int)
androidx.appcompat.view.menu.MenuBuilder: void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl)
retrofit2.converter.gson.GsonRequestBodyConverter: java.lang.Object convert(java.lang.Object)
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()
com.appspa.update.widget.UpdateDialogFragment: void initUpdateInfo(com.appspa.update.entity.UpdateEntity)
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1: ActionMenuPresenter$SavedState$1()
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void completion()
com.google.gson.internal.ConstructorConstructor$8: ConstructorConstructor$8(com.google.gson.internal.ConstructorConstructor)
androidx.appcompat.view.menu.MenuView$ItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
androidx.fragment.app.BackStackState: BackStackState(androidx.fragment.app.BackStackRecord)
okio.Buffer: void close()
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
com.appspa.update.UpdateManager$Builder: UpdateManager$Builder(android.content.Context)
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: void dispose()
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: void onComplete()
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationEnd(android.view.View)
io.reactivex.internal.util.OpenHashSet: int size()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog create()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.PopupMenu: void setGravity(int)
okhttp3.Cache: int readInt(okio.BufferedSource)
androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void onNext(java.lang.Object)
okhttp3.internal.http.HttpDate: java.util.Date parse(java.lang.String)
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.ActionMode: void setTag(java.lang.Object)
com.xuexiang.xhttp2.cache.RxCache$Builder: RxCache$Builder(com.xuexiang.xhttp2.cache.RxCache)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(long)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: boolean isDisposed()
com.xuexiang.xhttp2.transform.HttpResultTransformer: HttpResultTransformer()
io.reactivex.internal.operators.single.SingleTimeout: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)
org.aspectj.runtime.reflect.JoinPointImpl: java.lang.String toString()
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)
okio.Buffer: void clear()
androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)
androidx.appcompat.widget.ActivityChooserView: void onDetachedFromWindow()
io.reactivex.internal.functions.Functions$NotificationOnError: void accept(java.lang.Throwable)
com.google.gson.internal.LinkedHashTreeMap$EntrySet: boolean remove(java.lang.Object)
okhttp3.Response: java.lang.String header(java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()
androidx.appcompat.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
org.aspectj.runtime.reflect.ConstructorSignatureImpl: java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: boolean isDisposed()
com.appspa.demo.custom.CustomUpdateParser: boolean isAsyncParser()
io.reactivex.internal.operators.observable.ObservableAnySingle$AnyObserver: void dispose()
okio.RealBufferedSink: boolean isOpen()
org.aspectj.runtime.reflect.AdviceSignatureImpl: java.lang.Class getReturnType()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void onComplete()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
io.reactivex.disposables.FutureDisposable: FutureDisposable(java.util.concurrent.Future,boolean)
com.google.gson.stream.JsonReader: void endObject()
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.AbsActionBarView: int next(int,int,boolean)
androidx.versionedparcelable.VersionedParcelStream: int readInt()
com.google.gson.internal.bind.JsonTreeWriter$1: JsonTreeWriter$1()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutsVisible()
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Dialog)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: void drain()
retrofit2.Utils: void throwIfFatal(java.lang.Throwable)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutTask: void run()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void run()
androidx.fragment.app.FragmentManagerImpl: boolean executePendingTransactions()
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: void onComplete()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void onComplete()
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.fragment.app.FragmentViewLifecycleOwner: FragmentViewLifecycleOwner()
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: void onComplete()
androidx.cursoradapter.widget.CursorFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)
retrofit2.Response: retrofit2.Response error(okhttp3.ResponseBody,okhttp3.Response)
androidx.core.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)
io.reactivex.observers.DisposableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.SubMenuWrapperICS: void clearHeader()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context)
com.google.gson.internal.LinkedTreeMap$KeySet: java.util.Iterator iterator()
retrofit2.ParameterHandler$FieldMap: void apply(retrofit2.RequestBuilder,java.util.Map)
com.appspa.update.logs.UpdateLog: void debug(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$29: TypeAdapters$29()
com.google.gson.internal.Excluder: boolean excludeClass(java.lang.Class,boolean)
androidx.activity.ComponentActivity: ComponentActivity(int)
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDoAfterNext: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.StandaloneActionMode: android.view.View getCustomView()
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$2: io.reactivex.ObservableSource apply(java.lang.Throwable)
androidx.fragment.app.FragmentManagerImpl$3$1: void run()
com.google.gson.stream.JsonReader: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: boolean isEmpty()
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: ObservableAll$AllObserver(io.reactivex.Observer,io.reactivex.functions.Predicate)
androidx.appcompat.widget.Toolbar: void setContentInsetsAbsolute(int,int)
io.reactivex.internal.operators.flowable.FlowableConcatWithMaybe$ConcatWithSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuDialogHelper: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$5: void accept(com.xuexiang.xhttp2.exception.ApiException)
io.reactivex.internal.operators.parallel.ParallelPeek: int parallelism()
retrofit2.ParameterHandler$QueryName: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.zhy.http.okhttp.https.HttpsUtils$UnSafeTrustManager: HttpsUtils$UnSafeTrustManager()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter)
io.reactivex.internal.schedulers.ScheduledRunnable: void setFuture(java.util.concurrent.Future)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setPromptText(java.lang.CharSequence)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.app.WindowDecorActionBar: void completeDeferredDestroyActionMode()
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
com.google.gson.internal.Excluder: boolean excludeClassInStrategy(java.lang.Class,boolean)
androidx.fragment.app.Fragment$3: Fragment$3(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: void cancel()
androidx.versionedparcelable.VersionedParcel: void writeNoException()
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: boolean equals(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: void request(long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.reactivex.subjects.PublishSubject$PublishDisposable: boolean isDisposed()
androidx.core.widget.TintableImageSourceView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.core.view.MenuItemCompat: android.view.View getActionView(android.view.MenuItem)
okhttp3.internal.platform.AndroidPlatform$CloseGuard: boolean warnIfOpen(java.lang.Object)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.core.view.animation.PathInterpolatorApi14: PathInterpolatorApi14(float,float)
androidx.appcompat.widget.ActionMenuPresenter$SavedState: ActionMenuPresenter$SavedState()
androidx.fragment.app.FragmentTabHost: void ensureContent()
io.reactivex.processors.UnicastProcessor: void doTerminate()
okhttp3.OkHttpClient$1: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
androidx.appcompat.widget.ScrollingTabContainerView: boolean performExpand()
com.jakewharton.disklrucache.DiskLruCache: void validateKey(java.lang.String)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: ObservableReplay$BoundedReplayBuffer()
okio.DeflaterSink: void close()
androidx.core.app.RemoteActionCompat: java.lang.CharSequence getTitle()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: void run()
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary: void subscribeActual(io.reactivex.Observer)
androidx.core.text.BidiFormatter: boolean getStereoReset()
androidx.collection.CircularArray: void removeFromEnd(int)
androidx.arch.core.executor.ArchTaskExecutor: void setDelegate(androidx.arch.core.executor.TaskExecutor)
io.reactivex.internal.util.Pow2: Pow2()
io.reactivex.internal.operators.single.SingleCache: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.widget.AppCompatImageButton: void drawableStateChanged()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldShowRequestPermissionRationale(java.lang.String)
com.appspa.update.UpdateManager$Builder: com.appspa.update.UpdateManager$Builder updateParser(com.appspa.update.proxy.IUpdateParser)
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: void request(long)
androidx.core.text.PrecomputedTextCompat: PrecomputedTextCompat(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityViewCommand: boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
io.reactivex.internal.subscriptions.BooleanSubscription: boolean isCancelled()
androidx.core.app.JobIntentService$CompatJobEngine: android.os.IBinder compatGetBinder()
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuWrapperICS: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.internal.schedulers.TrampolineScheduler instance()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: boolean isEmpty()
androidx.core.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])
androidx.appcompat.widget.AppCompatButton: void setTextAppearance(android.content.Context,int)
androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)
io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver: ObservablePublishSelector$TargetObserver(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: FlowableObserveOn$ObserveOnSubscriber(org.reactivestreams.Subscriber,io.reactivex.Scheduler$Worker,boolean,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void restoreHierarchyState(android.util.SparseArray)
io.reactivex.internal.operators.observable.ObservableReplay$Replay: void connect(io.reactivex.functions.Consumer)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableCache: void remove(io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.util.HalfSerializer: HalfSerializer()
com.google.gson.internal.bind.TypeAdapters$5: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
com.xuexiang.xhttp2.transform.func.ApiResultFunc: com.xuexiang.xhttp2.model.ApiResult apply(okhttp3.ResponseBody)
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy: CacheAndRemoteStrategy()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.customview.widget.ViewDragHelper: void cancel()
okio.GzipSink: void updateCrc(okio.Buffer,long)
androidx.core.content.MimeTypeFilter: java.lang.String[] matchesMany(java.lang.String[],java.lang.String)
androidx.loader.content.Loader: void abandon()
com.google.gson.JsonArray: boolean contains(com.google.gson.JsonElement)
androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)
io.reactivex.internal.operators.maybe.MaybeToFlowable$MaybeToFlowableSubscriber: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
com.appspa.update.UpdateManager$Builder: com.appspa.update.UpdateManager$Builder updateUrl(java.lang.String)
io.reactivex.internal.util.EmptyComponent: void onComplete()
androidx.collection.LongSparseArray: int size()
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: void dispose()
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: void dispose()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.fragment.app.FragmentTransition: boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List)
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: java.lang.Object poll()
androidx.loader.content.AsyncTaskLoader: boolean onCancelLoad()
androidx.appcompat.widget.SearchView: boolean isIconified()
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack: void onResponseProgress(long,long,boolean)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableGroupBy$State: void subscribe(io.reactivex.Observer)
androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: ObservableTakeLastOne$TakeLastOneObserver(io.reactivex.Observer)
okhttp3.Dispatcher: int runningCallsForHost(okhttp3.RealCall$AsyncCall)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$FallbackSubscriber: void onComplete()
retrofit2.KotlinExtensions: java.lang.Object awaitNullable(retrofit2.Call,kotlin.coroutines.Continuation)
androidx.collection.LongSparseArray: long keyAt(int)
io.reactivex.subjects.SingleSubject$SingleDisposable: void dispose()
androidx.viewpager.widget.ViewPager: boolean isFakeDragging()
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver: void onNext(java.lang.Object)
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: ActionMenuPresenter$ActionMenuPopupCallback(androidx.appcompat.widget.ActionMenuPresenter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)
androidx.core.util.AtomicFile: java.io.FileInputStream openRead()
io.reactivex.internal.disposables.ListCompositeDisposable: void dispose(java.util.List)
androidx.appcompat.view.menu.ListMenuPresenter: void updateMenuView(boolean)
io.reactivex.internal.disposables.ArrayCompositeDisposable: ArrayCompositeDisposable(int)
androidx.core.widget.AutoSizeableTextView: int getAutoSizeMaxTextSize()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: io.reactivex.internal.queue.SpscLinkedArrayQueue getOrCreateQueue()
androidx.appcompat.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.View)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()
androidx.customview.widget.ViewDragHelper: float distanceInfluenceForSnapDuration(float)
com.google.gson.JsonElement: long getAsLong()
androidx.core.provider.FontsContractCompat$4$2: void run()
androidx.viewpager.widget.ViewPager: void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
androidx.core.graphics.PaintCompat: PaintCompat()
com.google.gson.internal.ConstructorConstructor$1: ConstructorConstructor$1(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type)
com.jakewharton.disklrucache.DiskLruCache: void access$100(com.jakewharton.disklrucache.DiskLruCache)
androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: void fastPath()
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: void dispose()
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber$OtherSubscriber: void onError(java.lang.Throwable)
androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
okio.SegmentPool: void recycle(okio.Segment)
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor timeStamp(boolean)
okio.SegmentPool: SegmentPool()
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: void dispose()
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: void onTimeout(long)
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.view.menu.ListMenuPresenter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: void request(long)
androidx.loader.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.reactivex.internal.operators.completable.CompletableFromSingle: void subscribeActual(io.reactivex.CompletableObserver)
com.google.gson.internal.LinkedHashTreeMap: void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.versionedparcelable.VersionedParcel: void writeMap(java.util.Map,int)
com.xuexiang.xhttp2.cache.RxCache$2: RxCache$2(com.xuexiang.xhttp2.cache.RxCache,java.lang.reflect.Type,java.lang.String,long)
com.appspa.update.widget.UpdateDialog: boolean handleCompleted(java.io.File)
androidx.appcompat.widget.DrawableUtils: void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
retrofit2.HttpException: retrofit2.Response response()
com.appspa.demo.http.OKHttpUpdateHttpService$2: void onResponse(java.io.File,int)
androidx.arch.core.internal.SafeIterableMap$Entry: SafeIterableMap$Entry(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
okhttp3.HttpUrl: java.util.List queryStringToNamesAndValues(java.lang.String)
androidx.core.provider.SelfDestructiveThread: void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationEnd(android.view.View)
androidx.appcompat.view.menu.MenuPopupHelper$1: MenuPopupHelper$1(androidx.appcompat.view.menu.MenuPopupHelper)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder addConverterFactory(retrofit2.Converter$Factory)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.Request$Builder: okhttp3.Request$Builder head()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver(io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber)
androidx.core.os.LocaleListCompatWrapper: int matchScore(java.util.Locale,java.util.Locale)
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext: void run()
androidx.loader.content.Loader$ForceLoadContentObserver: Loader$ForceLoadContentObserver(androidx.loader.content.Loader)
androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.TintInfo: void clear()
io.reactivex.internal.observers.BasicFuseableObserver: boolean offer(java.lang.Object)
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void hideForSystem()
androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
io.reactivex.processors.ReplayProcessor: void onNext(java.lang.Object)
com.appspa.update.utils.DialogUtils: int getNavigationBarHeight(android.content.Context)
androidx.versionedparcelable.VersionedParcelStream: java.lang.CharSequence readCharSequence()
io.reactivex.internal.operators.flowable.FlowableGroupBy$EvictionAction: FlowableGroupBy$EvictionAction(java.util.Queue)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeStepGranularity()
io.reactivex.internal.subscribers.FutureSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver$RemoveFromBufferEmit: void run()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: ObservableWindowBoundarySupplier$WindowBoundaryMainObserver(io.reactivex.Observer,int,java.util.concurrent.Callable)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: int requestFusion(int)
retrofit2.Utils$GenericArrayTypeImpl: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void drainAndCancel()
androidx.core.view.animation.PathInterpolatorApi14: android.graphics.Path createCubic(float,float,float,float)
com.xuexiang.xhttp2.XHttp$4: void accept(java.lang.Throwable)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: void setMipMap(boolean)
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleToObservable$SingleToObservableObserver: SingleToObservable$SingleToObservableObserver(io.reactivex.Observer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver: void onComplete()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearColorFilter()
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: void onError(java.lang.Throwable)
com.jakewharton.disklrucache.DiskLruCache$Editor: void abort()
com.xuexiang.xhttp2.annotation.NetMethod: boolean accessToken()
io.reactivex.processors.MulticastProcessor: void remove(io.reactivex.processors.MulticastProcessor$MulticastSubscription)
okio.Base64: java.lang.String encode(byte[],byte[])
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
okhttp3.internal.ws.RealWebSocket$PingRunnable: RealWebSocket$PingRunnable(okhttp3.internal.ws.RealWebSocket)
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object removeAllShortcuts()
androidx.core.R$styleable: R$styleable()
androidx.appcompat.widget.ActionBarContextView: boolean showOverflowMenu()
androidx.core.content.res.GrowingArrayUtils: int[] insert(int[],int,int,int)
androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: void cancel()
androidx.core.os.LocaleListCompat: java.util.Locale forLanguageTagCompat(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription: FlowableFromIterable$IteratorConditionalSubscription(io.reactivex.internal.fuseable.ConditionalSubscriber,java.util.Iterator)
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: void onNext(java.lang.Object)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$1: io.reactivex.ObservableSource apply(java.lang.Object)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] getMetrics()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: void dispose()
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: FlowableReplay$UnboundedReplayBuffer(int)
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: androidx.core.text.PrecomputedTextCompat call()
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.PrecomputedText$Params)
androidx.appcompat.widget.PopupMenu$3: PopupMenu$3(androidx.appcompat.widget.PopupMenu,android.view.View)
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: ObservableSwitchIfEmpty$SwitchIfEmptyObserver(io.reactivex.Observer,io.reactivex.ObservableSource)
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: void schedule()
androidx.appcompat.app.ToolbarActionBar: void setCustomView(android.view.View)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
com.google.gson.JsonPrimitive: void setValue(java.lang.Object)
com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: boolean isEmpty()
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerOpened(android.view.View)
io.reactivex.schedulers.Timed: long time()
com.xuexiang.xhttp2.cache.converter.SerializableDiskConverter: java.lang.Object load(java.io.InputStream,java.lang.reflect.Type)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: void setCancellable(io.reactivex.functions.Cancellable)
com.google.gson.internal.Excluder: Excluder()
io.reactivex.internal.subscriptions.AsyncSubscription: void setSubscription(org.reactivestreams.Subscription)
io.reactivex.processors.MulticastProcessor$MulticastSubscription: void onComplete()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()
org.aspectj.lang.NoAspectBoundException: NoAspectBoundException()
androidx.core.app.AppLaunchChecker: boolean hasStartedFromLauncher(android.content.Context)
okhttp3.internal.http2.Http2Writer: void close()
androidx.core.content.ContextCompat$LegacyServiceMapHolder: ContextCompat$LegacyServiceMapHolder()
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: void onComplete()
io.reactivex.observers.SerializedObserver: void onError(java.lang.Throwable)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat()
androidx.core.app.JobIntentService$CompatWorkItem: JobIntentService$CompatWorkItem(androidx.core.app.JobIntentService,android.content.Intent,int)
okhttp3.Request: okhttp3.Request$Builder newBuilder()
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: void onComplete()
com.jakewharton.disklrucache.DiskLruCache$Editor: java.io.InputStream newInputStream(int)
io.reactivex.internal.util.BackpressureHelper: long multiplyCap(long,long)
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
androidx.core.view.DragStartHelper$1: DragStartHelper$1(androidx.core.view.DragStartHelper)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightEndObserver: void onError(java.lang.Throwable)
io.reactivex.internal.disposables.EmptyDisposable: void error(java.lang.Throwable,io.reactivex.SingleObserver)
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)
io.reactivex.internal.operators.single.SingleEquals$InnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: void onPrepareSubMenu(android.view.SubMenu)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: void onNext(java.lang.Object)
com.appspa.update.entity.DownloadEntity: int describeContents()
com.google.gson.internal.Primitives: java.lang.Class wrap(java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void request(long)
androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int,int)
com.google.gson.internal.bind.TypeAdapters$12: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: int getY()
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isSelected()
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: boolean isDisposed()
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int getHistorySize()
okhttp3.Route: java.net.Proxy proxy()
io.reactivex.Observable: io.reactivex.Observable defaultIfEmpty(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: void dispose()
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
com.google.gson.internal.LinkedTreeMap$Node: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.annotation.VisibleForTesting: int otherwise()
io.reactivex.internal.observers.DeferredScalarDisposable: boolean tryDispose()
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: void run()
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void dispose()
okio.RealBufferedSource: okio.ByteString readByteString(long)
okio.ForwardingSink: ForwardingSink(okio.Sink)
androidx.core.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.app.AppCompatDelegateImpl$3: AppCompatDelegateImpl$3(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.appcompat.view.menu.MenuItemImpl: void appendModifier(java.lang.StringBuilder,int,int,java.lang.String)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
okhttp3.CacheControl: boolean onlyIfCached()
io.reactivex.internal.operators.flowable.FlowableFromPublisher: FlowableFromPublisher(org.reactivestreams.Publisher)
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
androidx.appcompat.app.AppCompatDialog: int getThemeResId(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn: ObservableUnsubscribeOn(io.reactivex.ObservableSource,io.reactivex.Scheduler)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()
okhttp3.FormBody$Builder: FormBody$Builder()
androidx.core.app.JobIntentService$WorkEnqueuer: void serviceStartReceived()
androidx.fragment.app.FragmentController: void restoreSaveState(android.os.Parcelable)
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
com.jakewharton.disklrucache.DiskLruCache$Editor$FaultHidingOutputStream: void write(byte[],int,int)
io.reactivex.internal.operators.observable.ObservableCache: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: java.lang.Object poll()
okio.Buffer: void skip(long)
io.reactivex.observers.TestObserver: TestObserver()
androidx.appcompat.widget.DecorToolbar: boolean hideOverflowMenu()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.TypeAdapters$26$1: java.sql.Timestamp read(com.google.gson.stream.JsonReader)
retrofit2.adapter.rxjava2.ResultObservable$ResultObserver: void onNext(java.lang.Object)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: boolean equals(java.lang.Object)
okio.DeflaterSink: void write(okio.Buffer,long)
androidx.appcompat.widget.ListPopupWindow: void setHorizontalOffset(int)
androidx.core.util.TimeUtils: int accumField(int,int,boolean,int)
androidx.core.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
androidx.appcompat.view.menu.MenuAdapter: int getCount()
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.bind.TypeAdapters$3: void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.Gson$1: java.lang.Double read(com.google.gson.stream.JsonReader)
androidx.core.view.ViewCompat$4: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[])
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver(io.reactivex.Observer,io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver)
androidx.appcompat.widget.ListPopupWindow: void removePromptView()
com.xuexiang.xhttp2.reflect.TypeException: TypeException()
androidx.appcompat.view.menu.CascadingMenuPopup: void setForceShowIcon(boolean)
androidx.appcompat.widget.ActionBarContextView: void initTitle()
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void requestUsageTimeReport(android.app.PendingIntent)
io.reactivex.observers.SafeObserver: void onNextNoSubscription()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(android.graphics.drawable.Drawable)
androidx.appcompat.app.WindowDecorActionBar: android.view.View getCustomView()
com.appspa.update.widget.UpdateDialogActivity: void onStart()
okio.DeflaterSink: okio.Timeout timeout()
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator: boolean isDisposed()
androidx.appcompat.widget.SearchView: void rewriteQueryFromSuggestion(int)
retrofit2.adapter.rxjava2.RxJava2CallAdapter: RxJava2CallAdapter(java.lang.reflect.Type,io.reactivex.Scheduler,boolean,boolean,boolean,boolean,boolean,boolean,boolean)
retrofit2.RequestFactory$Builder: java.lang.Class boxIfPrimitive(java.lang.Class)
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscriber: void onError(java.lang.Throwable)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry: void subscribe(org.reactivestreams.Subscriber[])
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[])
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()
com.xuexiang.xhttp2.cache.stategy.NoStrategy$1: java.lang.Object apply(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.Region getTransparentRegion()
androidx.fragment.app.FragmentTransitionCompat21$2: FragmentTransitionCompat21$2(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)
androidx.loader.content.CursorLoader: java.lang.String getSelection()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: boolean isDisposed()
com.google.gson.internal.bind.TreeTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$1: BaseTestConsumer$TestWaitStrategy$1(java.lang.String,int)
io.reactivex.internal.operators.observable.ObservableError: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.single.SingleFlatMapIterableObservable$FlatMapIterableObserver: void clear()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent)
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
com.google.gson.Gson$1: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.view.SupportActionModeWrapper: void setTitleOptionalHint(boolean)
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: void request(long)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentTransaction beginTransaction()
com.xuexiang.xhttp2.model.SchedulerType: com.xuexiang.xhttp2.model.SchedulerType valueOf(java.lang.String)
androidx.core.app.NotificationCompat: java.lang.String getGroup(android.app.Notification)
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
androidx.collection.ArraySet: java.lang.Object valueAt(int)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: void onError(java.lang.Throwable)
androidx.lifecycle.ViewModelStore: ViewModelStore()
androidx.appcompat.view.menu.MenuItemWrapperICS: char getAlphabeticShortcut()
okhttp3.internal.http2.Http2Connection: void flush()
androidx.core.view.accessibility.AccessibilityRecordCompat: int getToIndex()
com.zhy.http.okhttp.OkHttpUtils: okhttp3.OkHttpClient getOkHttpClient()
org.aspectj.lang.reflect.AdviceKind: AdviceKind(java.lang.String,int)
io.reactivex.internal.operators.single.SingleDoOnError$DoOnError: SingleDoOnError$DoOnError(io.reactivex.internal.operators.single.SingleDoOnError,io.reactivex.SingleObserver)
com.jakewharton.disklrucache.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: int requestFusion(int)
androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)
okhttp3.internal.cache2.Relay: void writeMetadata(long)
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
com.appspa.update.AppSpace: android.app.Application getApplication()
io.reactivex.internal.operators.observable.ObservableTakeLast: void subscribeActual(io.reactivex.Observer)
io.reactivex.subscribers.SafeSubscriber: void cancel()
androidx.core.R$drawable: R$drawable()
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,boolean)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: void onChanged(java.lang.Object)
androidx.customview.R$dimen: R$dimen()
androidx.appcompat.app.ToolbarActionBar: android.view.Menu getMenu()
com.xuexiang.xhttp2.utils.HttpUtils: boolean isText(okhttp3.MediaType)
io.reactivex.internal.operators.observable.ObservableAmb$AmbInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.provider.FontRequest: java.lang.String getQuery()
androidx.core.app.BundleCompat$BundleCompatBaseImpl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
com.appspa.update.entity.PromptEntity: com.appspa.update.entity.PromptEntity setTopResId(int)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Address createAddress(okhttp3.HttpUrl)
androidx.lifecycle.R: R()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: void innerError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ZipIterableFunction: org.reactivestreams.Publisher apply(java.util.List)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder serializeNulls()
androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: void drain()
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestFromSubscriber: void innerError(int,java.lang.Throwable)
androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(int)
io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(int,java.lang.Runnable)
androidx.appcompat.widget.ActivityChooserModel: android.content.Intent getIntent()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void onComplete()
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray()
io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription: void fastPath()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: void onComplete()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.core.content.pm.ShortcutInfoCompatSaver: ShortcutInfoCompatSaver()
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber$Cancellation: void run()
com.appspa.update.UpdateManager$2: void onParseResult(com.appspa.update.entity.UpdateEntity)
androidx.fragment.app.Fragment$4: boolean onHasView()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper(androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.appcompat.view.menu.CascadingMenuPopup: void setHorizontalOffset(int)
com.google.gson.internal.$Gson$Types: java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
androidx.core.text.util.LinkifyCompat$1: int compare(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: void clear()
io.reactivex.internal.functions.Functions$MaxRequestSubscription: void accept(org.reactivestreams.Subscription)
androidx.appcompat.widget.ActivityChooserView$4: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.appcompat.widget.SearchView: void onDetachedFromWindow()
androidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.core.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)
com.google.gson.internal.ConstructorConstructor$10: java.lang.Object construct()
io.reactivex.internal.operators.flowable.FlowableFromObservable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.ActivityCompat: void postponeEnterTransition(android.app.Activity)
com.xuexiang.xhttp2.XHttp: okhttp3.Cache getHttpCache()
com.appspa.update.service.DownloadService: void close()
io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber: void onNext(java.lang.Object)
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscriber: FlowAdapters$ReactiveToFlowSubscriber(java.util.concurrent.Flow$Subscriber)
okhttp3.Response: java.lang.String message()
androidx.appcompat.view.StandaloneActionMode: void setTitle(int)
com.xuexiang.xhttp2.reflect.TypeToken: TypeToken()
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest url(java.lang.String)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayBufferSupplier: io.reactivex.internal.operators.observable.ObservableReplay$ReplayBuffer call()
androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: void innerError(java.lang.Throwable)
com.google.gson.JsonElement: boolean isJsonObject()
com.appspa.update.utils.UpdateUtils: int dip2px(int,android.content.Context)
com.xuexiang.xhttp2.cookie.SerializableOkHttpCookies: void writeObject(java.io.ObjectOutputStream)
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest baseUrl(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
com.google.gson.JsonArray: boolean remove(com.google.gson.JsonElement)
io.reactivex.internal.operators.maybe.MaybeEqualSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.exceptions.Exceptions: Exceptions()
okio.Buffer: java.lang.String readUtf8Line(long)
com.xuexiang.xhttp2.utils.Utils: android.net.Uri getNormalFileUri(java.lang.String,java.lang.String,okhttp3.MediaType)
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.gson.Gson$5: Gson$5(com.google.gson.TypeAdapter)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: io.reactivex.internal.fuseable.SimplePlainQueue getOrCreateQueue()
com.google.gson.internal.bind.TypeAdapters$18: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: SupportActionModeWrapper$CallbackWrapper(android.content.Context,android.view.ActionMode$Callback)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryOpenSubscriber: FlowableWindowBoundarySelector$OperatorWindowBoundaryOpenSubscriber(io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber)
okhttp3.OkHttpClient: java.util.List networkInterceptors()
androidx.appcompat.app.WindowDecorActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy$1: boolean test(com.xuexiang.xhttp2.cache.model.CacheResult)
retrofit2.DefaultCallAdapterFactory$1: java.lang.Object adapt(retrofit2.Call)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterConditionalSubscriber: boolean tryOnNext(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)
retrofit2.ParameterHandler$QueryMap: void apply(retrofit2.RequestBuilder,java.util.Map)
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable: java.lang.Object call()
androidx.versionedparcelable.VersionedParcel: float readFloat()
com.google.gson.internal.bind.TypeAdapters$26$1: void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)
com.zhy.http.okhttp.callback.Callback$1: void onResponse(java.lang.Object,int)
io.reactivex.internal.operators.single.SingleDelay$Delay: SingleDelay$Delay(io.reactivex.internal.operators.single.SingleDelay,io.reactivex.internal.disposables.SequentialDisposable,io.reactivex.SingleObserver)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription: FlowableRangeLong$RangeConditionalSubscription(io.reactivex.internal.fuseable.ConditionalSubscriber,long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: boolean isClipPath()
androidx.core.view.NestedScrollingChild: boolean isNestedScrollingEnabled()
androidx.fragment.app.FragmentManagerImpl: void dispatchPictureInPictureModeChanged(boolean)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: void manageRequests()
okhttp3.Headers$Builder: okhttp3.Headers build()
com.zhy.http.okhttp.callback.Callback: boolean validateReponse(okhttp3.Response,int)
androidx.versionedparcelable.ParcelUtils: ParcelUtils()
androidx.appcompat.widget.AlertDialogLayout: void setChildFrame(android.view.View,int,int,int,int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable)
okhttp3.internal.ws.RealWebSocket$CancelRunnable: RealWebSocket$CancelRunnable(okhttp3.internal.ws.RealWebSocket)
androidx.collection.LruCache: int maxSize()
io.reactivex.observers.DefaultObserver: void onSubscribe(io.reactivex.disposables.Disposable)
retrofit2.RequestBuilder: RequestBuilder(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)
androidx.customview.widget.ViewDragHelper: void dispatchViewReleased(float,float)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: boolean isDisposed()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1: boolean writeField(java.lang.Object)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat build()
androidx.appcompat.view.menu.CascadingMenuPopup: void showMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)
androidx.core.graphics.drawable.TintAwareDrawable: void setTint(int)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError: void onError(java.lang.Throwable)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.mixed.FlowableConcatMapCompletable$ConcatMapCompletableObserver: void onNext(java.lang.Object)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)
androidx.appcompat.app.ActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.core.app.TaskStackBuilder: int getIntentCount()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()
io.reactivex.internal.operators.observable.ObservableReduceMaybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.widget.ActionBarContextView: void killMode()
com.xuexiang.xhttp2.request.BaseRequest: io.reactivex.Observable execute(java.lang.reflect.Type)
androidx.appcompat.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: void onNext(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)
okio.ByteString: int indexOf(byte[])
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: void dispose()
androidx.collection.CircularIntArray: int size()
androidx.lifecycle.ClassesInfoCache$MethodReference: int hashCode()
androidx.core.app.NotificationCompat$Action$WearableExtender: NotificationCompat$Action$WearableExtender()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void onNext(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContentInvalid()
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: com.google.gson.internal.LinkedHashTreeMap$Node root()
androidx.appcompat.app.AlertController$4: void onScrollStateChanged(android.widget.AbsListView,int)
androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)
retrofit2.HttpException: HttpException(retrofit2.Response)
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: void onComplete()
androidx.viewpager.widget.ViewPager: void removeView(android.view.View)
androidx.core.view.LayoutInflaterCompat: androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
androidx.appcompat.view.ActionBarPolicy: int getStackedTabMaxWidth()
com.xuexiang.xhttp2.subsciber.BaseSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.functions.Functions$Array4Func: java.lang.Object apply(java.lang.Object[])
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetInvalidated()
io.reactivex.internal.operators.maybe.MaybeToSingle$ToSingleMaybeSubscriber: void onComplete()
okhttp3.internal.http1.Http1Codec$AbstractSource: void endOfInput(boolean,java.io.IOException)
okio.Util: void sneakyThrow2(java.lang.Throwable)
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.zhy.http.okhttp.utils.Platform: Platform()
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.internal.util.ErrorMode: ErrorMode(java.lang.String,int)
org.aspectj.internal.lang.reflect.PointcutImpl: java.lang.String getName()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()
io.reactivex.internal.operators.maybe.MaybeNever: MaybeNever()
com.xuexiang.xhttp2.request.DeleteRequest: io.reactivex.Observable generateRequest()
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void onComplete()
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
okhttp3.internal.http2.Http2Stream$FramingSource: void receive(okio.BufferedSource,long)
io.reactivex.internal.util.EmptyComponent: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: void onNext(java.lang.Object)
androidx.fragment.app.FragmentTabHost: androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void subscribe(org.reactivestreams.Publisher[],int)
androidx.appcompat.app.ActionBar: void setDisplayUseLogoEnabled(boolean)
com.zhy.http.okhttp.builder.HeadBuilder: HeadBuilder()
io.reactivex.internal.subscribers.StrictSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowablePublish: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.stream.JsonReader: boolean fillBuffer(int)
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)
com.google.gson.internal.bind.TypeAdapters$21: TypeAdapters$21()
io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber: ParallelFilter$BaseFilterSubscriber(io.reactivex.functions.Predicate)
androidx.core.graphics.PaintCompat: androidx.core.util.Pair obtainEmptyRects()
retrofit2.ParameterHandler$FieldMap: ParameterHandler$FieldMap(java.lang.reflect.Method,int,retrofit2.Converter,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
io.reactivex.Observable: io.reactivex.Observable range(int,int)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: java.lang.String toString()
com.appspa.update.entity.PromptEntity: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.app.AppCompatDelegate: void setHandleNativeActionModesEnabled(boolean)
androidx.appcompat.widget.PopupMenu$1: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.net.SocketAddress,int)
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
androidx.core.widget.ScrollerCompat: void notifyVerticalEdgeReached(int,int,int)
androidx.collection.CircularArray: CircularArray()
androidx.core.graphics.ColorUtils: void colorToLAB(int,double[])
org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind[] values()
io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany$WithLatestInnerSubscriber: void onError(java.lang.Throwable)
okhttp3.RequestBody$1: RequestBody$1(okhttp3.MediaType,okio.ByteString)
io.reactivex.observers.TestObserver: void onComplete()
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
com.jakewharton.disklrucache.DiskLruCache$Editor: boolean[] access$1500(com.jakewharton.disklrucache.DiskLruCache$Editor)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel setDone(boolean)
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: void onError(java.lang.Throwable)
androidx.loader.content.AsyncTaskLoader: AsyncTaskLoader(android.content.Context,java.util.concurrent.Executor)
androidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.appspa.update.utils.ApkUtils: boolean installNormal(android.content.Context,java.io.File)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.disposables.SequentialDisposable: boolean replace(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.JsonTreeReader: boolean hasNext()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: void onComplete()
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: void cancel()
androidx.appcompat.widget.ListPopupWindow: int getHorizontalOffset()
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: void onError(java.lang.Throwable)
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: java.lang.Object poll()
androidx.versionedparcelable.VersionedParcel: void closeField()
androidx.core.app.ActivityRecreator$2: ActivityRecreator$2(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)
okhttp3.Credentials: Credentials()
androidx.fragment.R$integer: R$integer()
io.reactivex.internal.subscribers.QueueDrainSubscriberPad2: QueueDrainSubscriberPad2()
androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: SingleFromPublisher$ToSingleObserver(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: void runSync()
androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)
androidx.fragment.app.FragmentManagerImpl: void addFragment(androidx.fragment.app.Fragment,boolean)
androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void clearSelection()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: boolean isDisposed()
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment get(android.app.Activity)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver(io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver)
io.reactivex.internal.util.EndConsumerHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription,java.lang.Class)
io.reactivex.internal.operators.parallel.ParallelReduce$ParallelReduceSubscriber: void onNext(java.lang.Object)
androidx.customview.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver(io.reactivex.Observer,io.reactivex.functions.Function,boolean)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: void request(long)
androidx.appcompat.widget.ForwardingListener: void clearCallbacks()
io.reactivex.internal.operators.observable.ObservableConcatWithCompletable: void subscribeActual(io.reactivex.Observer)
androidx.core.text.TextUtilsCompat: TextUtilsCompat()
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void otherError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)
io.reactivex.internal.observers.BasicFuseableObserver: void onComplete()
androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)
androidx.fragment.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void request(long)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: void disposeBoundary()
androidx.drawerlayout.R$layout: R$layout()
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])
androidx.appcompat.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ListPopupWindow: void setInputMethodMode(int)
androidx.core.os.LocaleListCompatWrapper: java.util.Locale computeFirstMatch(java.util.Collection,boolean)
androidx.core.widget.NestedScrollView: void endDrag()
io.reactivex.subjects.BehaviorSubject: io.reactivex.subjects.BehaviorSubject$BehaviorDisposable[] terminate(java.lang.Object)
androidx.fragment.app.ListFragment: void setListAdapter(android.widget.ListAdapter)
com.google.gson.internal.bind.util.ISO8601Utils: int indexOfNonDigit(java.lang.String,int)
androidx.core.app.JobIntentService$CompatWorkEnqueuer: JobIntentService$CompatWorkEnqueuer(android.content.Context,android.content.ComponentName)
okio.Buffer: java.lang.String readUtf8(long)
io.reactivex.internal.schedulers.ScheduledDirectTask: java.lang.Runnable getWrappedRunnable()
androidx.fragment.app.ListFragment: android.widget.ListAdapter getListAdapter()
com.xuexiang.xhttp2.request.BaseRequest: BaseRequest(java.lang.String)
okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)
io.reactivex.processors.FlowableProcessor: io.reactivex.processors.FlowableProcessor toSerialized()
com.appspa.update.widget.BaseDialog: java.lang.String getString(int)
okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: void onNext(java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void insertRadioButton()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setIcon(int)
androidx.fragment.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.appcompat.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.TintContextWrapper: void setTheme(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.customview.widget.ExploreByTouchHelper$1: void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: void onComplete()
androidx.appcompat.app.ToolbarActionBar: void setDisplayShowTitleEnabled(boolean)
okio.SegmentedByteString: boolean rangeEquals(int,byte[],int,int)
androidx.viewpager.widget.PagerTitleStrip: PagerTitleStrip(android.content.Context,android.util.AttributeSet)
com.appspa.update.proxy.impl.DefaultUpdateChecker: void access$100(com.appspa.update.proxy.impl.DefaultUpdateChecker,java.lang.String,com.appspa.update.proxy.IUpdateProxy,java.lang.Throwable)
org.aspectj.internal.lang.reflect.PointcutBasedPerClauseImpl: java.lang.String toString()
com.google.gson.DefaultDateTypeAdapter: DefaultDateTypeAdapter(java.lang.Class,int)
androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$2: RetryExceptionFunc$2(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: MaybeFlatMapSingleElement$FlatMapMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function)
io.reactivex.internal.operators.flowable.FlowableZip$ZipCoordinator: void cancel()
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object[] newArray(int)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: boolean excludeField(java.lang.reflect.Field,boolean)
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)
com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.Class)
androidx.fragment.app.Fragment$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.graphics.ColorUtils: void XYZToLAB(double,double,double,double[])
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: void request(long)
okhttp3.CacheControl: java.lang.String headerValue()
okhttp3.Cookie: boolean httpOnly()
androidx.core.widget.AutoSizeableTextView: int getAutoSizeTextType()
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver$DelayErrorInnerObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: java.lang.Object convert(java.lang.Object)
androidx.customview.R: R()
org.aspectj.internal.lang.reflect.DeclareSoftImpl: java.lang.String toString()
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: boolean isDisposed()
okhttp3.internal.platform.AndroidPlatform: boolean supportsAlpn()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.core.view.MarginLayoutParamsCompat: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: void drain()
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: FlowableHide$HideSubscriber(org.reactivestreams.Subscriber)
io.reactivex.subjects.MaybeSubject$MaybeDisposable: boolean isDisposed()
okhttp3.internal.Util$1: Util$1()
com.appspa.update.proxy.impl.DefaultPrompterProxyImpl: void startDownload(com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompat: android.os.Bundle toBundle()
androidx.core.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeDoOnEvent$DoOnEventMaybeObserver: void onError(java.lang.Throwable)
androidx.core.text.TextDirectionHeuristicsCompat: TextDirectionHeuristicsCompat()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)
androidx.appcompat.app.ToolbarActionBar: int getNavigationMode()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.StreamAllocation,boolean,okhttp3.Request)
com.jakewharton.disklrucache.DiskLruCache: void close()
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: void dispose()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
io.reactivex.internal.util.NotificationLite$DisposableNotification: NotificationLite$DisposableNotification(io.reactivex.disposables.Disposable)
androidx.core.widget.AutoScrollHelper$ClampedScroller: boolean isFinished()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupVisible(int,boolean)
com.google.gson.internal.UnsafeAllocator: com.google.gson.internal.UnsafeAllocator create()
androidx.viewpager.widget.ViewPager: boolean dispatchKeyEvent(android.view.KeyEvent)
com.zhy.http.okhttp.https.HttpsUtils$MyTrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)
androidx.appcompat.widget.ThemeUtils: ThemeUtils()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: void dispose()
io.reactivex.internal.observers.DeferredScalarDisposable: boolean isEmpty()
androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void clear()
io.reactivex.internal.operators.maybe.MaybeJust: void subscribeActual(io.reactivex.MaybeObserver)
com.xuexiang.xhttp2.reflect.impl.ParameterizedTypeImpl: java.lang.reflect.Type getRawType()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context)
io.reactivex.processors.PublishProcessor$PublishSubscription: boolean isCancelled()
androidx.core.graphics.drawable.IconCompat: int getResId()
org.aspectj.lang.reflect.AjTypeSystem: org.aspectj.lang.reflect.AjType getAjType(java.lang.Class)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)
androidx.loader.content.AsyncTaskLoader: void executePendingTask()
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: void dispose()
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: ObservableScanSeed$ScanSeedObserver(io.reactivex.Observer,io.reactivex.functions.BiFunction,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void unscheduleSelf(java.lang.Runnable)
androidx.core.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$2: java.util.BitSet read(com.google.gson.stream.JsonReader)
io.reactivex.internal.observers.InnerQueuedObserver: boolean isDone()
okhttp3.ConnectionSpec: java.util.List tlsVersions()
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver: void onNext(java.lang.Object)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
okhttp3.internal.http2.Http2Connection: int maxConcurrentStreams()
androidx.fragment.app.DialogFragment: void onStart()
org.aspectj.runtime.reflect.StringMaker: java.lang.String makeTypeName(java.lang.Class,java.lang.String,boolean)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowOperation: ObservableWindowBoundarySelector$WindowOperation(io.reactivex.subjects.UnicastSubject,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeBooleanArray(boolean[],int)
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: void remove()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: void dispose()
com.appspa.update.AppSpace: com.appspa.update.UpdateManager$Builder newBuild(android.content.Context)
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: void drainLoop()
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder client(okhttp3.OkHttpClient)
okhttp3.internal.Util: void addSuppressedIfPossible(java.lang.Throwable,java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription: FlowableFromArray$ArrayConditionalSubscription(io.reactivex.internal.fuseable.ConditionalSubscriber,java.lang.Object[])
com.google.gson.internal.JavaVersion: int extractBeginningInt(java.lang.String)
com.google.gson.internal.bind.JsonTreeReader$1: JsonTreeReader$1()
androidx.core.provider.FontsContractCompat$FontInfo: int getWeight()
androidx.appcompat.app.AppCompatDelegate: void setTitle(java.lang.CharSequence)
org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11: ThreadCounterImpl11()
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher$RailSubscription: void request(long)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(java.lang.CharSequence)
com.google.gson.internal.ConstructorConstructor$6: java.lang.Object construct()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: void onComplete()
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.activity.OnBackPressedCallback)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: void request(long)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void request(long)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: boolean deliverSelfNotifications()
androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver$ConsumerIndexHolder: void run()
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: ActivityChooserModel$ActivityResolveInfo(android.content.pm.ResolveInfo)
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
org.aspectj.runtime.reflect.CodeSignatureImpl: java.lang.Class[] getParameterTypes()
io.reactivex.internal.operators.maybe.MaybeFromRunnable: java.lang.Object call()
io.reactivex.internal.operators.observable.ObservableElementAtMaybe$ElementAtObserver: void onError(java.lang.Throwable)
com.google.gson.internal.Streams$AppendableWriter: Streams$AppendableWriter(java.lang.Appendable)
androidx.appcompat.widget.ThemedSpinnerAdapter: android.content.res.Resources$Theme getDropDownViewTheme()
androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void onAnimationsEnded()
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerStateChanged(int)
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: void onNext(java.lang.Object)
com.xuexiang.xhttp2.interceptor.CacheInterceptorOffline: CacheInterceptorOffline(android.content.Context,java.lang.String)
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$UIHandler: UIProgressResponseCallBack$UIHandler(android.os.Looper,com.xuexiang.xhttp2.callback.UIProgressResponseCallBack)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int)
com.zhy.http.okhttp.callback.StringCallback: StringCallback()
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(android.view.View)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
io.reactivex.internal.observers.BasicIntQueueDisposable: void clear()
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
retrofit2.KotlinExtensions$awaitResponse$2$2: KotlinExtensions$awaitResponse$2$2(kotlinx.coroutines.CancellableContinuation)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.core.text.util.LinkifyCompat: void gatherMapLinks(java.util.ArrayList,android.text.Spannable)
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: boolean offer(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: CompletableConcat$CompletableConcatSubscriber(io.reactivex.CompletableObserver,int)
androidx.collection.MapCollections: int colIndexOfValue(java.lang.Object)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$8: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: void setIsActionButton(boolean)
com.google.gson.TypeAdapter: java.lang.String toJson(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean isStateful()
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Object)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()
org.aspectj.internal.lang.reflect.AjTypeImpl: AjTypeImpl(java.lang.Class)
com.appspa.update.widget.UpdateDialogActivity: void initData()
androidx.appcompat.widget.SearchView$SavedState$1: SearchView$SavedState$1()
androidx.appcompat.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: boolean isDisposed()
com.google.gson.stream.JsonWriter: void setLenient(boolean)
com.zhy.http.okhttp.request.PostFormRequest: okhttp3.RequestBody buildRequestBody()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: void onComplete()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupedUnicast: FlowableGroupBy$GroupedUnicast(java.lang.Object,io.reactivex.internal.operators.flowable.FlowableGroupBy$State)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void request(long)
androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: int requestFusion(int)
com.appspa.update.widget.BaseDialog: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver: void onNext(java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
androidx.fragment.app.FragmentPagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
androidx.appcompat.app.AlertDialog$Builder: android.content.Context getContext()
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean shouldUpdate(java.lang.Object,java.lang.Object)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Observer onSubscribe(io.reactivex.Observable,io.reactivex.Observer)
com.appspa.update.AppSpace: void testInitialize()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver(io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver)
com.appspa.update.utils.ShellUtils: com.appspa.update.utils.ShellUtils$CommandResult execCommand(java.lang.String,boolean)
io.reactivex.internal.operators.maybe.MaybeEmpty: void subscribeActual(io.reactivex.MaybeObserver)
androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)
androidx.savedstate.Recreator$SavedStateProvider: android.os.Bundle saveState()
com.google.gson.internal.LazilyParsedNumber: int hashCode()
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
androidx.appcompat.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.core.graphics.drawable.RoundedBitmapDrawable21: void getOutline(android.graphics.Outline)
androidx.core.app.ComponentActivity$ExtraData: ComponentActivity$ExtraData()
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)
io.reactivex.internal.observers.ConsumerSingleObserver: boolean hasCustomOnError()
com.appspa.update.listener.impl.DefaultUpdateFailureListener: DefaultUpdateFailureListener()
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: int requestFusion(int)
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: ObservableDelay$DelayObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker,boolean)
io.reactivex.internal.operators.observable.ObservableRefCount: void terminated(io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection)
androidx.appcompat.app.AlertController: void setIcon(int)
androidx.core.provider.FontsContractCompat: FontsContractCompat()
io.reactivex.internal.operators.completable.CompletableDetach$DetachCompletableObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: boolean isDisposed()
com.appspa.update.widget.UpdateDialog: com.appspa.update.widget.UpdateDialog newInstance(android.content.Context,com.appspa.update.entity.UpdateEntity,com.appspa.update.proxy.IPrompterProxy,com.appspa.update.entity.PromptEntity)
androidx.annotation.FloatRange: boolean fromInclusive()
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper: void apply(android.content.SharedPreferences$Editor)
androidx.core.app.Person: boolean isImportant()
androidx.appcompat.app.AlertDialog: void setTitle(java.lang.CharSequence)
retrofit2.Utils: boolean isAnnotationPresent(java.lang.annotation.Annotation[],java.lang.Class)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
okio.Buffer$1: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.xuexiang.xhttp2.model.HttpHeaders: long parseGMTToMillis(java.lang.String)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: void clear()
androidx.loader.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2: void execute()
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: void cancel()
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver$OnComplete: ObservableDelaySubscriptionOther$DelayObserver$OnComplete(io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.reactivex.internal.subscribers.SubscriberResourceWrapper: SubscriberResourceWrapper(org.reactivestreams.Subscriber)
androidx.collection.LongSparseArray: void delete(long)
okhttp3.Cache: void flush()
androidx.core.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)
io.reactivex.Observable: io.reactivex.Observable fromArray(java.lang.Object[])
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: void setResource(io.reactivex.disposables.Disposable)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.gson.stream.JsonReader: void push(int)
com.appspa.update.widget.UpdateDialogFragment: void show(androidx.fragment.app.FragmentManager)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void request(long)
androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem findItem(int)
okhttp3.OkHttpClient: boolean followSslRedirects()
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualObserver: ObservableSequenceEqual$EqualObserver(io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator,int,int)
com.appspa.update.widget.UpdateDialog: void setDialogTheme(int,int,int,float,float)
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: void request(long)
okio.ForwardingTimeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
retrofit2.Platform: Platform(boolean)
com.google.gson.FieldAttributes: java.lang.annotation.Annotation getAnnotation(java.lang.Class)
okhttp3.Headers: java.util.List values(java.lang.String)
okhttp3.internal.http2.Settings: int get(int)
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.zhy.http.okhttp.utils.Platform: java.util.concurrent.Executor defaultCallbackExecutor()
com.google.gson.internal.bind.JsonTreeReader: void nextNull()
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.viewpager.widget.PagerTitleStrip: void requestLayout()
com.appspa.demo.activity.MainActivity: boolean parseBaseUrl(java.lang.String)
androidx.core.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingActivityIcon()
androidx.appcompat.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)
androidx.fragment.app.FragmentManager: void enableDebugLogging(boolean)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.R$id: R$id()
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: void onNext(io.reactivex.Notification)
io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver: void dispose()
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.util.NotificationLite: java.lang.Object next(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeIsEmptySingle$IsEmptyMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: void dispose()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getItemCount()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
androidx.appcompat.view.menu.CascadingMenuPopup$3: CascadingMenuPopup$3(androidx.appcompat.view.menu.CascadingMenuPopup)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(int)
androidx.fragment.app.FragmentTabHost$SavedState: java.lang.String toString()
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void onStartEnterTransition()
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask$DisposeObserver: void onComplete()
androidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle: void subscribeActual(org.reactivestreams.Subscriber)
com.appspa.update.utils.FileUtils: boolean isFileExistsApi29(java.lang.String)
io.reactivex.internal.operators.observable.ObservableCombineLatest: void subscribeActual(io.reactivex.Observer)
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: long read(okio.Buffer,long)
io.reactivex.internal.operators.observable.ObservableScanSeed$ScanSeedObserver: void dispose()
io.reactivex.internal.subscriptions.EmptySubscription: void clear()
io.reactivex.internal.operators.observable.ObservableScanSeed: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription: void slowPath(long)
io.reactivex.internal.functions.Functions$HashSetCallable: java.util.Set call()
androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)
okhttp3.internal.platform.Android10Platform: void enableSessionTickets(javax.net.ssl.SSLSocket)
androidx.core.text.BidiFormatter$DirectionalityEstimator: BidiFormatter$DirectionalityEstimator(java.lang.CharSequence,boolean)
com.xuexiang.xhttp2.XHttp: okhttp3.OkHttpClient getOkHttpClient()
androidx.appcompat.app.AppCompatDelegate: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuPresenter: android.os.Parcelable onSaveInstanceState()
com.google.gson.JsonArray: com.google.gson.JsonElement set(int,com.google.gson.JsonElement)
com.google.gson.TypeAdapter$1: TypeAdapter$1(com.google.gson.TypeAdapter)
com.google.gson.TypeAdapter$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.xuexiang.xhttp2.logs.LogcatLogger: LogcatLogger()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver(io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver)
com.google.gson.internal.bind.CollectionTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
androidx.core.app.NotificationCompatJellybean: boolean ensureActionReflectionReadyLocked()
io.reactivex.observers.DisposableCompletableObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableOnErrorNext$OnErrorNextObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableDoOnEvent$DoOnEvent: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$2: BaseTestConsumer$TestWaitStrategy$2(java.lang.String,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isDismissable()
com.appspa.update.logs.UpdateLog: void i(java.lang.String)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.internal.view.SupportMenuItem: android.content.res.ColorStateList getIconTintList()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
retrofit2.Response: int code()
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: void request(long)
io.reactivex.internal.operators.maybe.MaybeFlatMapNotification$FlatMapMaybeObserver$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.util.BackpressureHelper: long add(java.util.concurrent.atomic.AtomicLong,long)
com.zhy.http.okhttp.log.LoggerInterceptor: okhttp3.Response logForResponse(okhttp3.Response)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()
androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)
androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)
io.reactivex.processors.AsyncProcessor$AsyncSubscription: void cancel()
androidx.fragment.app.Fragment: void initState()
androidx.lifecycle.ReportFragment: void onPause()
androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
androidx.activity.OnBackPressedCallback: void remove()
androidx.core.view.MarginLayoutParamsCompat: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void cancel()
androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$OperatorWindowBoundaryOpenSubscriber: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable[] values()
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: void next(java.lang.Object)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
io.reactivex.observers.SafeObserver: void onCompleteNoSubscription()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer(io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber)
androidx.appcompat.widget.SearchView$10: SearchView$10(androidx.appcompat.widget.SearchView)
okio.ByteString: int hashCode()
androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void complete()
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: void onAnimationStart(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void postUpdateFocusedState()
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: void onError(java.lang.Throwable)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()
io.reactivex.internal.operators.observable.ObservableDematerialize$DematerializeObserver: ObservableDematerialize$DematerializeObserver(io.reactivex.Observer,io.reactivex.functions.Function)
com.xuexiang.xhttp2.cookie.CookieManager: void addCookies(java.util.List)
androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)
okhttp3.internal.platform.Android10Platform: Android10Platform(java.lang.Class)
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: java.lang.Object getValue()
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int,float)
io.reactivex.internal.operators.completable.CompletableFromPublisher: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: void onComplete()
androidx.appcompat.app.AlertDialog: void setIcon(int)
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: java.lang.Object poll()
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader: void setOnProgressCancelListener(com.xuexiang.xhttp2.subsciber.impl.OnProgressCancelListener)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.widget.ToolbarWidgetWrapper: void collapseActionView()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getType()
androidx.core.graphics.ColorUtils: void blendLAB(double[],double[],double,double[])
androidx.core.os.LocaleListPlatformWrapper: java.lang.String toLanguageTags()
okio.RealBufferedSource: RealBufferedSource(okio.Source)
io.reactivex.observers.ResourceCompletableObserver: boolean isDisposed()
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)
com.zhy.http.okhttp.request.CountingRequestBody: okhttp3.MediaType contentType()
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
okhttp3.FormBody: int size()
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: void emit()
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isPassword()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasIcon()
io.reactivex.internal.operators.maybe.MaybeFromAction: java.lang.Object call()
io.reactivex.internal.functions.Functions$Array7Func: java.lang.Object apply(java.lang.Object[])
androidx.appcompat.widget.AppCompatSeekBarHelper: void applyTickMarkTint()
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void innerComplete(io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)
io.reactivex.internal.schedulers.ScheduledDirectTask: ScheduledDirectTask(java.lang.Runnable)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context)
okhttp3.Response: okhttp3.Protocol protocol()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setLenient()
com.xuexiang.xhttp2.transform.HttpSchedulersTransformer: com.xuexiang.xhttp2.model.SchedulerType getSchedulerType(boolean,boolean)
okhttp3.internal.platform.OptionalMethod: boolean isSupported(java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: void dismissSuggestions()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: void startFirstTimeout(io.reactivex.ObservableSource)
com.appspa.update.utils.UpdateUtils: android.content.SharedPreferences getSP(android.content.Context)
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: io.reactivex.internal.operators.parallel.ParallelReduceFull$SlotPair addValue(java.lang.Object)
io.reactivex.observers.BaseTestConsumer: BaseTestConsumer()
com.xuexiang.xhttp2.model.HttpHeaders: HttpHeaders(java.lang.String,java.lang.String)
androidx.core.app.SharedElementCallback: void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
androidx.fragment.app.FragmentManagerImpl: void dispatchDestroyView()
okhttp3.RequestBody$1: long contentLength()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: int getCount()
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState[] newArray(int)
io.reactivex.internal.operators.flowable.FlowableDoAfterNext: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.bind.TypeAdapters$3: java.lang.Boolean read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableCombineLatest: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.bind.JsonTreeReader: boolean nextBoolean()
io.reactivex.internal.operators.observable.ObservableCountSingle$CountObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: void accept(io.reactivex.Observer,java.util.Collection)
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.xuexiang.xhttp2.utils.RequestBodyUtils: RequestBodyUtils()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: void cancel()
io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable: io.reactivex.observables.ConnectableObservable call()
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
io.reactivex.Observable: io.reactivex.Maybe singleElement()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)
androidx.annotation.LongDef: long[] value()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: void cancel()
androidx.appcompat.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)
androidx.appcompat.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: boolean isDisposed()
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)
com.appspa.update.utils.ApkUtils: java.lang.String getSourceApkPath(android.content.Context,java.lang.String)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingleElement$FlatMapMaybeObserver: void onComplete()
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle(androidx.core.app.NotificationCompat$Builder)
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: void clear()
androidx.core.os.BuildCompat: boolean isAtLeastNMR1()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$TimedReplay: io.reactivex.flowables.ConnectableFlowable call()
androidx.appcompat.widget.ActivityChooserView: boolean dismissPopup()
androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextSelection(int,int)
io.reactivex.internal.operators.flowable.FlowableSingleMaybe: void subscribeActual(io.reactivex.MaybeObserver)
com.google.gson.FieldAttributes: java.util.Collection getAnnotations()
com.appspa.update.utils.UpdateUtils: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder callFactory(okhttp3.Call$Factory)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void drawableStateChanged()
com.appspa.update.widget.NumberProgressBar: void setProgressTextColor(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.appspa.update.entity.UpdateEntity$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.view.NestedScrollingChild2: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.customview.widget.ExploreByTouchHelper: boolean requestAccessibilityFocus(int)
io.reactivex.internal.operators.observable.ObservableRefCount: void cancel(io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
org.aspectj.internal.lang.reflect.AdviceImpl: java.lang.String getName()
okhttp3.internal.http2.Http2Codec: Http2Codec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: void setDataModel(androidx.appcompat.widget.ActivityChooserModel)
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void dispose()
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest syncRequest(boolean)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: void emit()
androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: void drainLoop()
io.reactivex.internal.operators.observable.ObservableLastMaybe$LastObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableCollect$CollectSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void innerComplete()
com.appspa.update.widget.UpdateDialog: void handleError(java.lang.Throwable)
androidx.core.util.Pair: Pair(java.lang.Object,java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)
androidx.appcompat.widget.ListPopupWindow: void setEpicenterBounds(android.graphics.Rect)
com.google.gson.JsonNull: int hashCode()
io.reactivex.internal.operators.maybe.MaybeEmpty: MaybeEmpty()
androidx.core.view.TintableBackgroundView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: void dispose()
com.xuexiang.xhttp2.cache.RxCache$SimpleSubscribe: RxCache$SimpleSubscribe()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.collection.ArraySet: java.lang.String toString()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
com.xuexiang.xhttp2.BuildConfig: BuildConfig()
androidx.loader.content.CursorLoader: java.lang.String[] getSelectionArgs()
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char,int)
io.reactivex.internal.util.VolatileSizeArrayList: java.util.Iterator iterator()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState[] newArray(int)
androidx.versionedparcelable.R: R()
io.reactivex.internal.operators.flowable.FlowableReplay$ConnectableFlowableReplay: void connect(io.reactivex.functions.Consumer)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)
androidx.collection.ArraySet: ArraySet(androidx.collection.ArraySet)
okio.Base64: Base64()
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void onComplete()
com.google.gson.JsonArray: void add(java.lang.String)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(double)
com.google.gson.internal.LinkedHashTreeMap: LinkedHashTreeMap()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver: void onComplete()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
androidx.core.app.ActivityCompat: void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.core.content.res.TypedArrayUtils: java.lang.String getString(android.content.res.TypedArray,int,int)
okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException)
io.reactivex.processors.AsyncProcessor: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher$OtherSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.queue.SpscLinkedArrayQueue: void soConsumerIndex(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void saveToolbarHierarchyState(android.util.SparseArray)
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(androidx.core.app.NotificationCompat$Action)
io.reactivex.internal.util.HalfSerializer: void onComplete(org.reactivestreams.Subscriber,java.util.concurrent.atomic.AtomicInteger,io.reactivex.internal.util.AtomicThrowable)
androidx.loader.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)
androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: void setCancellable(io.reactivex.functions.Cancellable)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getLayout(int)
androidx.appcompat.app.WindowDecorActionBar: void removeTabAt(int)
okio.Buffer$2: int read(byte[],int,int)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver: io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator getIterable()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String flagToString(int)
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.proxy.impl.DefaultUpdateChecker: void checkVersion(boolean,java.lang.String,java.util.Map,com.appspa.update.proxy.IUpdateProxy)
androidx.customview.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)
androidx.viewpager.widget.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)
androidx.appcompat.widget.DecorToolbar: void setDefaultNavigationContentDescription(int)
okio.Buffer$1: Buffer$1(okio.Buffer)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean showOverflowMenu()
okio.ByteString: java.lang.String base64()
androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View)
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: void done()
okio.RealBufferedSink: okio.BufferedSink write(byte[],int,int)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
androidx.appcompat.app.ActionBar: ActionBar()
androidx.core.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: void onNext(java.lang.Object)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeBackward()
io.reactivex.internal.operators.flowable.FlowableCache: void add(io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription)
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: void onNext(java.lang.Object)
com.google.gson.internal.bind.JsonTreeReader: void push(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber$ConsumerIndexHolder: void run()
com.google.gson.internal.Excluder: boolean isValidUntil(com.google.gson.annotations.Until)
com.appspa.demo.http.OKHttpUpdateHttpService: void asyncPost(java.lang.String,java.util.Map,com.appspa.update.proxy.IUpdateHttpService$Callback)
com.google.gson.JsonPrimitive: JsonPrimitive(java.lang.Number)
io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver: CompletableFromObservable$CompletableFromObservableObserver(io.reactivex.CompletableObserver)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: void slowPath(org.reactivestreams.Subscriber,java.util.Iterator)
androidx.viewpager.widget.ViewPager: void dispatchOnPageSelected(int)
androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable empty()
io.reactivex.internal.operators.observable.ObservableCreate: ObservableCreate(io.reactivex.ObservableOnSubscribe)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: FlowableOnBackpressureBuffer$BackpressureBufferSubscriber(org.reactivestreams.Subscriber,int,boolean,boolean,io.reactivex.functions.Action)
androidx.core.content.res.ResourcesCompat$FontCallback: ResourcesCompat$FontCallback()
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context)
okhttp3.internal.connection.RealConnection: boolean isEligible(okhttp3.Address,okhttp3.Route)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)
org.aspectj.internal.lang.reflect.AjTypeImpl: int hashCode()
io.reactivex.subscribers.ResourceSubscriber: ResourceSubscriber()
androidx.appcompat.view.menu.BaseMenuPresenter: BaseMenuPresenter(android.content.Context,int,int)
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void onError(java.lang.Throwable)
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: java.lang.String getCookieToken(okhttp3.Cookie)
androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$4: void onAnimationEnd(android.animation.Animator)
androidx.appcompat.widget.RtlSpacingHelper: RtlSpacingHelper()
io.reactivex.internal.operators.observable.ObservablePublishAlt: void resetIf(io.reactivex.disposables.Disposable)
androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: void cancelAndClear()
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver$DebounceInnerObserver: void onError(java.lang.Throwable)
com.google.gson.Gson: void toJson(java.lang.Object,java.lang.Appendable)
androidx.appcompat.widget.ActivityChooserModel: int getActivityIndex(android.content.pm.ResolveInfo)
com.google.gson.Gson: void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)
io.reactivex.internal.subscriptions.SubscriptionArbiter: boolean isUnbounded()
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
io.reactivex.internal.subscriptions.EmptySubscription: java.lang.Object poll()
com.google.gson.internal.ConstructorConstructor$4: java.lang.Object construct()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
androidx.appcompat.widget.Toolbar: boolean hideOverflowMenu()
io.reactivex.internal.subscribers.QueueDrainSubscriber: void fastPathOrderedEmitMax(java.lang.Object,boolean,io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: void disposeAfter()
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
com.appspa.update.widget.UpdateDialog: void refreshUpdateButton()
androidx.appcompat.widget.ResourcesWrapper: float getDimension(int)
retrofit2.Converter$Factory: Converter$Factory()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: FlowableTimeoutTimed$TimeoutFallbackSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker,org.reactivestreams.Publisher)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.net.InetAddress,int)
io.reactivex.internal.observers.BasicFuseableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: ObservableScalarXMap$ScalarXMapObservable(java.lang.Object,io.reactivex.functions.Function)
com.appspa.update.UpdateManager: com.appspa.update.entity.UpdateEntity access$002(com.appspa.update.UpdateManager,com.appspa.update.entity.UpdateEntity)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservablePublish: void connect(io.reactivex.functions.Consumer)
com.appspa.demo.App: void onCreate()
com.xuexiang.xhttp2.cache.core.LruMemoryCache: boolean clear()
com.appspa.update.utils.ApkUtils: boolean isSupportSilentInstall()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)
io.reactivex.internal.operators.observable.ObservableOnErrorNext: ObservableOnErrorNext(io.reactivex.ObservableSource,io.reactivex.functions.Function,boolean)
androidx.customview.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)
com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()
androidx.core.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)
io.reactivex.internal.functions.Functions$Array8Func: java.lang.Object apply(java.lang.Object[])
androidx.appcompat.app.AlertController: void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver: void onComplete()
androidx.core.view.ViewCompat$4: boolean shouldUpdate(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCache: void onSubscribe(io.reactivex.disposables.Disposable)
org.aspectj.lang.Aspects14: java.lang.Class class$(java.lang.String)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.subjects.UnicastSubject: void doTerminate()
okio.GzipSource: GzipSource(okio.Source)
androidx.fragment.R$color: R$color()
androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: FingerprintManagerCompat(android.content.Context)
io.reactivex.internal.schedulers.DisposeOnCancel: boolean isCancelled()
com.appspa.update.service.DownloadService$FileDownloadCallBack$4: void run()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)
com.google.gson.internal.bind.TypeAdapters$15: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)
androidx.viewpager.widget.ViewPager: void dataSetChanged()
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferBoundarySubscriber: void onComplete()
com.appspa.update.widget.UpdateDialog: void showInstallButton()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: void request(long)
io.reactivex.internal.operators.completable.CompletableTimeout: void subscribeActual(io.reactivex.CompletableObserver)
com.appspa.update.AppSpace: com.appspa.update.AppSpace param(java.lang.String,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber: FlowableBufferBoundary$BufferBoundarySubscriber(org.reactivestreams.Subscriber,org.reactivestreams.Publisher,io.reactivex.functions.Function,java.util.concurrent.Callable)
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: void onComplete()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: void run()
androidx.collection.ArraySet: boolean equals(java.lang.Object)
com.appspa.update.service.DownloadService: void access$100(com.appspa.update.service.DownloadService,java.lang.String)
androidx.collection.CircularArray: void removeFromStart(int)
androidx.appcompat.view.menu.StandardMenuPopup: void setShowTitle(boolean)
io.reactivex.internal.schedulers.SingleScheduler$ScheduledWorker: void dispose()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String toString()
com.xuexiang.xhttp2.request.BaseBodyRequest: io.reactivex.Observable uploadFilesWithParts()
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: boolean isDisposed()
androidx.viewpager.widget.ViewPager: void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
com.google.gson.GsonBuilder: com.google.gson.Gson create()
androidx.viewpager.widget.ViewPager: boolean pageLeft()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLevelChange(int)
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
com.google.gson.internal.LinkedHashTreeMap: void doubleCapacity()
okhttp3.WebSocketListener: WebSocketListener()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: ReflectiveTypeAdapterFactory$Adapter(com.google.gson.internal.ObjectConstructor,java.util.Map)
io.reactivex.internal.operators.completable.CompletableOnErrorComplete: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void innerValue(int,java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableReplay: void connect(io.reactivex.functions.Consumer)
io.reactivex.internal.util.EmptyComponent: void cancel()
com.appspa.update.BuildConfig: BuildConfig()
io.reactivex.internal.operators.observable.ObservableToListSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int,int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void dumpKeyframes(java.lang.Object[],java.lang.String)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
io.reactivex.subjects.PublishSubject$PublishDisposable: void onComplete()
io.reactivex.internal.observers.FutureSingleObserver: boolean isCancelled()
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed()
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void drain()
retrofit2.ParameterHandler$1: ParameterHandler$1(retrofit2.ParameterHandler)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: ListMenuPresenter$MenuAdapter(androidx.appcompat.view.menu.ListMenuPresenter)
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()
retrofit2.Retrofit$Builder: java.util.List callAdapterFactories()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,android.content.res.Resources$Theme)
androidx.lifecycle.ComputableLiveData: java.lang.Object compute()
com.appspa.update.R$layout: R$layout()
com.google.gson.internal.UnsafeAllocator$4: java.lang.Object newInstance(java.lang.Class)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: void dispose()
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)
androidx.annotation.Size: long min()
retrofit2.converter.gson.GsonResponseBodyConverter: GsonResponseBodyConverter(com.google.gson.Gson,com.google.gson.TypeAdapter)
org.aspectj.runtime.internal.CFlowStack: CFlowStack()
com.zhy.http.okhttp.callback.FileCallBack$1: void run()
androidx.arch.core.executor.TaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.core.graphics.drawable.WrappedDrawableApi14: void onBoundsChange(android.graphics.Rect)
retrofit2.adapter.rxjava2.BodyObservable: void subscribeActual(io.reactivex.Observer)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableAnySingle: void subscribeActual(io.reactivex.SingleObserver)
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: boolean isCookieExpired(okhttp3.Cookie)
androidx.appcompat.app.WindowDecorActionBar: int getHeight()
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: boolean equals(java.lang.Object)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: java.lang.Object poll()
retrofit2.Platform: boolean isDefaultMethod(java.lang.reflect.Method)
androidx.fragment.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.Completable: Completable()
com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)
com.google.gson.internal.Excluder$1: Excluder$1(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.core.view.DragStartHelper$2: boolean onTouch(android.view.View,android.view.MotionEvent)
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: CompletableObserveOn$ObserveOnCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.Scheduler)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: boolean isDisposed()
androidx.appcompat.widget.ActionMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.core.view.DragStartHelper: void detach()
io.reactivex.internal.util.VolatileSizeArrayList: boolean isEmpty()
androidx.core.app.NotificationCompat$Builder: void setFlag(int,boolean)
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: Http1Codec$UnknownLengthSource(okhttp3.internal.http1.Http1Codec)
io.reactivex.android.schedulers.AndroidSchedulers: io.reactivex.Scheduler mainThread()
androidx.appcompat.view.menu.BaseMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.widget.DecorToolbar: android.view.View getCustomView()
io.reactivex.internal.util.HashMapSupplier: HashMapSupplier(java.lang.String,int)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: void dispose()
androidx.loader.content.Loader: void onStartLoading()
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: ObservableCollect$CollectObserver(io.reactivex.Observer,java.lang.Object,io.reactivex.functions.BiConsumer)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$GroupJoinSubscription: FlowableGroupJoin$GroupJoinSubscription(org.reactivestreams.Subscriber,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: void clear()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: void run()
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver$DisposeTask: ObservableUnsubscribeOn$UnsubscribeObserver$DisposeTask(io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver)
io.reactivex.internal.util.QueueDrainHelper: void drainMaxLoop(io.reactivex.internal.fuseable.SimplePlainQueue,org.reactivestreams.Subscriber,boolean,io.reactivex.disposables.Disposable,io.reactivex.internal.util.QueueDrain)
com.appspa.update.UpdateManager: void recycle()
androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)
androidx.appcompat.view.menu.MenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: TestSubscriber$EmptySubscriber(java.lang.String,int)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String,java.lang.Throwable)
androidx.core.text.util.LinkifyCompat$LinkSpec: LinkifyCompat$LinkSpec()
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()
androidx.core.view.ViewCompat$3: boolean shouldUpdate(java.lang.Object,java.lang.Object)
com.google.gson.JsonArray: char getAsCharacter()
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void clear()
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
org.aspectj.lang.SoftException: java.lang.Throwable getCause()
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void innerNext()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: void onError(java.lang.Throwable)
com.appspa.demo.custom.CustomUpdateParser: com.appspa.update.entity.UpdateEntity getParseResult(java.lang.String)
androidx.versionedparcelable.VersionedParcel: java.lang.Exception readException(int,java.lang.String)
com.google.gson.internal.bind.TypeAdapters$10: TypeAdapters$10()
io.reactivex.internal.operators.single.SingleZipArray$SingletonArrayFunc: SingleZipArray$SingletonArrayFunc(io.reactivex.internal.operators.single.SingleZipArray)
io.reactivex.internal.operators.observable.ObservablePublish: void subscribeActual(io.reactivex.Observer)
com.xuexiang.xhttp2.transform.func.ApiResultFunc: com.xuexiang.xhttp2.model.ApiResult parseApiResult(okhttp3.ResponseBody,com.xuexiang.xhttp2.model.ApiResult)
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: void onComplete()
com.xuexiang.xhttp2.annotation.NetMethod: java.lang.String baseUrl()
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: ObservablePublishAlt$PublishConnection(java.util.concurrent.atomic.AtomicReference)
androidx.core.graphics.PathParser$ExtractFloatResult: PathParser$ExtractFloatResult()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()
androidx.fragment.app.FragmentTransition: void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: void setHorizontalOffset(int)
androidx.annotation.RequiresPermission$Write: androidx.annotation.RequiresPermission value()
com.appspa.update.widget.NumberProgressBar: float sp2px(float)
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: java.lang.Object leaveTransform(java.lang.Object)
com.appspa.update.entity.UpdateEntity: UpdateEntity(android.os.Parcel)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)
io.reactivex.internal.functions.Functions$Array4Func: java.lang.Object apply(java.lang.Object)
androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])
com.google.gson.stream.JsonReader: void beginObject()
androidx.appcompat.widget.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getVisibility()
io.reactivex.internal.operators.observable.ObservableFilter: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: java.lang.Integer poll()
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: AnimationUtilsCompat()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
com.xuexiang.xhttp2.cache.key.Strings: java.lang.String toString(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: void onComplete()
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)
com.xuexiang.xhttp2.annotation.RequestParams: com.xuexiang.xhttp2.cache.model.CacheMode cacheMode()
retrofit2.Utils: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)
androidx.core.view.ViewCompat: float getRotationY(android.view.View)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: SingleTakeUntil$TakeUntilOtherSubscriber(io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilMainObserver)
androidx.arch.core.executor.TaskExecutor: void executeOnDiskIO(java.lang.Runnable)
com.jakewharton.disklrucache.DiskLruCache$Editor: boolean access$2302(com.jakewharton.disklrucache.DiskLruCache$Editor,boolean)
com.zhy.http.okhttp.OkHttpUtils$3: void run()
androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableAmb$Amb: void onError(java.lang.Throwable)
io.reactivex.internal.observers.BlockingMultiObserver: BlockingMultiObserver()
androidx.core.view.ViewCompat: android.graphics.Matrix getMatrix(android.view.View)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
io.reactivex.internal.schedulers.ImmediateThinScheduler$ImmediateThinWorker: io.reactivex.disposables.Disposable schedulePeriodically(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
com.google.gson.stream.JsonToken: JsonToken(java.lang.String,int)
androidx.core.os.LocaleListCompatWrapper: boolean isPseudoLocale(java.util.Locale)
androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: void complete()
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowHomeEnabled(boolean)
io.reactivex.processors.MulticastProcessor$MulticastSubscription: void cancel()
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: boolean isDisposed()
androidx.appcompat.app.ActionBarDrawerToggle: void syncState()
com.jakewharton.disklrucache.DiskLruCache$1: java.lang.Void call()
com.google.gson.internal.LinkedTreeMap: void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: boolean isShowing()
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: void cancel()
androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)
androidx.appcompat.widget.SearchView: void updateSubmitButton(boolean)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: boolean checkTerminated(boolean,boolean,io.reactivex.Observer)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedScroll(int,int,int,int,int[])
com.xuexiang.xhttp2.cache.stategy.FirstRemoteStrategy: io.reactivex.Observable execute(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,long,io.reactivex.Observable,java.lang.reflect.Type)
com.appspa.update.entity.UpdateEntity: int describeContents()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean onLevelChange(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.model.HttpHeaders getCommonHeaders()
androidx.core.app.Person: boolean isBot()
io.reactivex.subjects.UnicastSubject: void errorOrComplete(io.reactivex.Observer)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()
io.reactivex.internal.util.QueueDrainHelper: void request(org.reactivestreams.Subscription,int)
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: FlowableDistinct$DistinctSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,java.util.Collection)
io.reactivex.internal.operators.observable.ObservableOnErrorReturn$OnErrorReturnObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: void onComplete()
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream)
androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)
androidx.core.widget.TintableImageSourceView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.single.SingleDelayWithPublisher$OtherSubscriber: void onComplete()
androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View)
io.reactivex.internal.operators.observable.ObservableFlatMap: ObservableFlatMap(io.reactivex.ObservableSource,io.reactivex.functions.Function,boolean,int,int)
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
com.appspa.update.UpdateManager$1: void onParseResult(com.appspa.update.entity.UpdateEntity)
io.reactivex.internal.fuseable.QueueFuseable: int requestFusion(int)
com.appspa.update.widget.UpdateDialogFragment: void initDialog()
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: MaybeFlatMapObservable$FlatMapObserver(io.reactivex.Observer,io.reactivex.functions.Function)
io.reactivex.internal.operators.flowable.FlowableCreate$SerializedEmitter: boolean isCancelled()
androidx.core.graphics.TypefaceCompatUtil: TypefaceCompatUtil()
io.reactivex.internal.operators.flowable.FlowableAllSingle: void subscribeActual(io.reactivex.SingleObserver)
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver: ObservableFlatMapSingle$FlatMapSingleObserver$InnerObserver(io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAlpha(int)
androidx.appcompat.widget.AbsActionBarView: void access$101(androidx.appcompat.widget.AbsActionBarView,int)
androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
okhttp3.internal.platform.ConscryptPlatform: void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: void cancel()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getAnimation(int)
com.xuexiang.xhttp2.XHttp: java.lang.String getSubUrl()
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: void onComplete()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener: boolean onShareTargetSelected(androidx.appcompat.widget.ShareActionProvider,android.content.Intent)
androidx.fragment.app.FragmentManagerImpl: void dispatchDestroy()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$DelayWithMainObserver: MaybeDelayWithCompletable$DelayWithMainObserver(java.util.concurrent.atomic.AtomicReference,io.reactivex.MaybeObserver)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
io.reactivex.internal.functions.Functions$NaturalComparator: Functions$NaturalComparator(java.lang.String,int)
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: void onError(java.lang.Throwable)
io.reactivex.internal.observers.QueueDrainObserver: void accept(io.reactivex.Observer,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void refreshVisibility()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getLayer()
com.xuexiang.xhttp2.cache.core.LruDiskCache: boolean isCacheDataFailure(java.io.File,long)
com.google.gson.JsonPrimitive: boolean isNumber()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
com.google.gson.JsonParser: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)
com.appspa.update.utils.ShellUtils: com.appspa.update.utils.ShellUtils$CommandResult execCommand(java.lang.String[],boolean,boolean)
androidx.appcompat.widget.ActivityChooserModel: void setOnChooseActivityListener(androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
androidx.core.view.WindowCompat: WindowCompat()
androidx.core.provider.FontsContractCompat$4: void run()
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void tryEmitScalar(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber(io.reactivex.CompletableObserver)
retrofit2.OkHttpCall: boolean isCanceled()
io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: TrampolineScheduler$TrampolineWorker()
okhttp3.internal.platform.Platform: boolean isConscryptPreferred()
androidx.collection.MapCollections$ValuesCollection: void clear()
com.zhy.http.okhttp.utils.L: void e(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: void request(long)
androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory)
androidx.core.app.NotificationCompat$WearableExtender: int getHintScreenTimeout()
io.reactivex.Observable: io.reactivex.Observable fromIterable(java.lang.Iterable)
androidx.appcompat.widget.Toolbar$SavedState$1: Toolbar$SavedState$1()
io.reactivex.internal.operators.observable.ObservableFromIterable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: void runFinally()
androidx.appcompat.widget.ActionBarOverlayLayout: void restoreToolbarHierarchyState(android.util.SparseArray)
io.reactivex.internal.operators.maybe.MaybeFromSingle$FromSingleObserver: void dispose()
androidx.core.view.DragStartHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: void error(io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver,java.lang.Throwable)
okhttp3.internal.http2.Http2Codec$StreamFinishingSource: long read(okio.Buffer,long)
androidx.core.app.NotificationCompatBuilder: android.app.Notification build()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMessage(int)
com.appspa.update.utils.FileUtils: boolean isFileExists(java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: void writeDouble(double)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLiveRegion(int)
androidx.drawerlayout.widget.DrawerLayout: void onDraw(android.graphics.Canvas)
androidx.core.widget.TintableImageSourceView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
io.reactivex.Observable: io.reactivex.Observable materialize()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspot(float,float)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.observers.DeferredScalarObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableSkip$SkipObserver: ObservableSkip$SkipObserver(io.reactivex.Observer,long)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: void cancel()
com.appspa.update.service.DownloadService: boolean onUnbind(android.content.Intent)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab getTabAt(int)
androidx.core.view.ViewPropertyAnimatorCompat$1: ViewPropertyAnimatorCompat$1(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View)
io.reactivex.internal.operators.flowable.FlowableScanSeed$ScanSeedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.ViewCompat: int getMeasuredState(android.view.View)
io.reactivex.internal.subscribers.LambdaSubscriber: boolean hasCustomOnError()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.gson.internal.Excluder: boolean isAnonymousOrLocal(java.lang.Class)
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapInner: void onNext(java.lang.Object)
io.reactivex.internal.functions.Functions$NaturalComparator: io.reactivex.internal.functions.Functions$NaturalComparator[] values()
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: void onNext(java.lang.Object)
okhttp3.internal.io.FileSystem$1: void delete(java.io.File)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()
androidx.appcompat.view.menu.SubMenuBuilder: void setQwertyMode(boolean)
com.google.gson.annotations.Expose: boolean serialize()
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: void cancel()
com.appspa.update.service.DownloadService: DownloadService()
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: MaybeSubscribeOn$SubscribeOnMaybeObserver(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void trySchedule()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainNoLast: void run()
io.reactivex.internal.operators.flowable.FlowableFromObservable: FlowableFromObservable(io.reactivex.Observable)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: void request(long)
retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(java.lang.Object)
io.reactivex.internal.observers.LambdaObserver: boolean isDisposed()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: void accept(io.reactivex.Observer,java.util.Collection)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void reverse()
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View,int,int,int)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: void onError(java.lang.Throwable)
com.google.gson.FieldNamingPolicy: FieldNamingPolicy(java.lang.String,int,com.google.gson.FieldNamingPolicy$1)
androidx.fragment.app.FragmentFactory: boolean isFragmentClass(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.app.WindowDecorActionBar: void setHomeActionContentDescription(java.lang.CharSequence)
androidx.versionedparcelable.VersionedParcelParcel: long readLong()
androidx.lifecycle.SingleGeneratedAdapterObserver: SingleGeneratedAdapterObserver(androidx.lifecycle.GeneratedAdapter)
androidx.viewpager.widget.PagerAdapter: PagerAdapter()
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: ObservableFromArray$FromArrayDisposable(io.reactivex.Observer,java.lang.Object[])
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String)
io.reactivex.internal.util.ArrayListSupplier: java.lang.Object apply(java.lang.Object)
androidx.fragment.app.FragmentTabHost$SavedState: void writeToParcel(android.os.Parcel,int)
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransitionImpl: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float getInterpolation(float)
io.reactivex.internal.util.ExceptionHelper: ExceptionHelper()
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: void next(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void next(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: void onNext(java.lang.Object)
io.reactivex.processors.AsyncProcessor: void onError(java.lang.Throwable)
androidx.appcompat.widget.TintContextWrapper: android.content.res.AssetManager getAssets()
com.google.gson.internal.LinkedHashTreeMap: int size()
androidx.appcompat.app.AppCompatDelegate: boolean isHandleNativeActionModesEnabled()
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast: ObservableSampleTimed$SampleTimedNoLast(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.appspa.update.widget.NumberProgressBar: float getReachedBarHeight()
io.reactivex.internal.util.BlockingIgnoringReceiver: void accept(java.lang.Object)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float getInterpolation(float)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: void remove()
com.google.gson.stream.JsonReader: long nextLong()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
androidx.collection.CircularIntArray: int getLast()
androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence)
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void onComplete()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: java.lang.String checkFilePath(java.lang.String,java.lang.String)
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: java.lang.Object poll()
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: void add(android.app.Activity)
androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
io.reactivex.schedulers.Timed: java.lang.Object value()
io.reactivex.processors.SerializedProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: android.graphics.drawable.Drawable getIcon()
androidx.lifecycle.LiveData: java.lang.Object getValue()
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedEmitLast: FlowableSampleTimed$SampleTimedEmitLast(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
androidx.fragment.app.FragmentTransitionCompat21: boolean canHandle(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.widget.ScrollerCompat: boolean isFinished()
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: boolean isDisposed()
androidx.core.app.JobIntentService$CompatWorkItem: void complete()
androidx.core.app.NotificationCompat$WearableExtender: void setFlag(int,boolean)
io.reactivex.internal.operators.flowable.FlowableObserveOn$BaseObserveOnSubscriber: void onComplete()
okio.ByteString: okio.ByteString hmacSha256(okio.ByteString)
androidx.core.text.PrecomputedTextCompat: int getParagraphCount()
okhttp3.Cookie: java.lang.String domain()
org.aspectj.lang.reflect.NoSuchPointcutException: java.lang.String getName()
androidx.appcompat.view.menu.MenuBuilder: void setGroupDividerEnabled(boolean)
com.appspa.update.widget.UpdateDialogActivity: void onInstallApk()
okhttp3.internal.http2.Http2Connection: boolean isHealthy(long)
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber: FlowableDebounce$DebounceSubscriber$DebounceInnerSubscriber(io.reactivex.internal.operators.flowable.FlowableDebounce$DebounceSubscriber,long,java.lang.Object)
io.reactivex.internal.operators.single.SingleNever: void subscribeActual(io.reactivex.SingleObserver)
com.xuexiang.xhttp2.logs.HttpLog: boolean enableLog(int)
com.xuexiang.xhttp2.model.HttpHeaders: long getDate(java.lang.String)
io.reactivex.internal.subscribers.FutureSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: void onComplete()
com.google.gson.internal.bind.ObjectTypeAdapter: ObjectTypeAdapter(com.google.gson.Gson)
com.appspa.update.entity.PromptEntity$1: com.appspa.update.entity.PromptEntity createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ActivityChooserView: boolean showPopup()
androidx.appcompat.widget.DropDownListView: void clickPressedItem(android.view.View,int)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ActivityChooserModel: int getActivityCount()
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void onError(java.lang.Throwable)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.String toString()
androidx.appcompat.app.TwilightManager: boolean isStateValid()
androidx.fragment.app.FragmentHostCallback: java.lang.Object onGetHost()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setCustomView(android.view.View)
androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
okhttp3.Request: okhttp3.RequestBody body()
io.reactivex.internal.operators.completable.CompletableMerge: void subscribeActual(io.reactivex.CompletableObserver)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasWindowAnimations()
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.observable.ObservableReplay$UnboundedReplayBuffer: ObservableReplay$UnboundedReplayBuffer(int)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeWithDefaults(int)
io.reactivex.internal.util.OpenHashSet: OpenHashSet()
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)
androidx.loader.content.CursorLoader: void onStartLoading()
com.xuexiang.xhttp2.cache.key.Strings: java.lang.String printableToString(java.lang.String)
androidx.annotation.InspectableProperty$ValueType: InspectableProperty$ValueType(java.lang.String,int)
androidx.annotation.FloatRange: double to()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isFocused()
androidx.core.content.PermissionChecker: PermissionChecker()
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker: boolean isDisposed()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.core.view.ViewPropertyAnimatorUpdateListener: void onAnimationUpdate(android.view.View)
androidx.fragment.app.FragmentManagerImpl: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.appcompat.app.ToolbarActionBar$2: ToolbarActionBar$2(androidx.appcompat.app.ToolbarActionBar)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()
androidx.core.app.NotificationCompat$WearableExtender: boolean getStartScrollBottom()
androidx.lifecycle.ViewModelProvider$KeyedFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.appcompat.widget.ListPopupWindow: int getHeight()
androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context)
androidx.lifecycle.ViewModelStore: void clear()
io.reactivex.internal.subscribers.BlockingLastSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.observers.ConsumerSingleObserver: void dispose()
androidx.appcompat.widget.ResourcesWrapper: float getFraction(int,int,int)
okio.ByteString: void write(okio.Buffer)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void innerComplete(io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void innerComplete()
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: ParallelJoin$JoinSubscriptionBase(org.reactivestreams.Subscriber,int,int)
androidx.appcompat.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)
androidx.fragment.app.FragmentTransitionImpl$1: FragmentTransitionImpl$1(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollX()
com.xuexiang.xhttp2.utils.TypeUtils: java.lang.Class[] getClasses(java.lang.Object[])
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.appspa.update.widget.UpdateDialogActivity: void onClick(android.view.View)
androidx.activity.OnBackPressedDispatcher: boolean hasEnabledCallbacks()
androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable create(io.reactivex.ObservableSource,int)
androidx.appcompat.widget.LinearLayoutCompat: void onMeasure(int,int)
io.reactivex.processors.PublishProcessor: void onComplete()
io.reactivex.exceptions.CompositeException: void printStackTrace()
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAmbientBigPicture()
androidx.fragment.app.Fragment: boolean isPostponed()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)
androidx.core.text.BidiFormatter: java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
com.google.gson.internal.bind.TypeAdapters$3: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.completable.CompletableTimeout$DisposeTask: CompletableTimeout$DisposeTask(io.reactivex.internal.operators.completable.CompletableTimeout,java.util.concurrent.atomic.AtomicBoolean,io.reactivex.disposables.CompositeDisposable,io.reactivex.CompletableObserver)
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent getActionIntent()
androidx.fragment.app.FragmentTabHost: FragmentTabHost(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void drainNormal()
io.reactivex.internal.operators.flowable.FlowableConcatWithSingle$ConcatWithSubscriber: void onSuccess(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayFunction: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.observers.BlockingFirstObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: ResourceManagerInternal$ColorFilterLruCache(int)
androidx.appcompat.text.AllCapsTransformationMethod: AllCapsTransformationMethod(android.content.Context)
com.appspa.update.widget.UpdateDialog: java.lang.String getUrl()
androidx.appcompat.widget.AppCompatRadioButton: void drawableStateChanged()
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable: void run()
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(java.lang.CharSequence)
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation,float)
com.xuexiang.xhttp2.interceptor.HeadersInterceptor: HeadersInterceptor(com.xuexiang.xhttp2.model.HttpHeaders)
com.xuexiang.xhttp2.transform.func.HttpResultFuc: HttpResultFuc()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[])
io.reactivex.internal.operators.flowable.FlowableTimer$TimerSubscriber: FlowableTimer$TimerSubscriber(org.reactivestreams.Subscriber)
androidx.viewpager.widget.ViewPager: void onDraw(android.graphics.Canvas)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: void runFinally()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: boolean isCanceled()
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void draw(android.graphics.Canvas)
io.reactivex.processors.MulticastProcessor$MulticastSubscription: void onError(java.lang.Throwable)
io.reactivex.internal.observers.FutureSingleObserver: boolean isDone()
io.reactivex.internal.observers.BlockingFirstObserver: void onError(java.lang.Throwable)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
androidx.savedstate.SavedStateRegistry: boolean isRestored()
com.google.gson.GsonBuilder: GsonBuilder()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber: FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
androidx.appcompat.widget.ScrollingTabContainerView$1: ScrollingTabContainerView$1(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()
io.reactivex.internal.operators.flowable.FlowableSingle$SingleElementSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterSubscriber: ParallelFilterTry$ParallelFilterSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Predicate,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: boolean isDisposed()
retrofit2.RequestBuilder: void addPart(okhttp3.Headers,okhttp3.RequestBody)
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: void dispose()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: void onComplete()
io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription: FlowableReplay$InnerSubscription(io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber,org.reactivestreams.Subscriber)
com.appspa.update.utils.UpdateUtils: java.lang.String getAppName(android.content.Context)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
io.reactivex.internal.operators.flowable.FlowableTakeLastOne$TakeLastOneSubscriber: FlowableTakeLastOne$TakeLastOneSubscriber(org.reactivestreams.Subscriber)
com.xuexiang.xhttp2.model.HttpHeaders: long getExpiration(java.lang.String)
io.reactivex.internal.operators.observable.ObservableCountSingle: void subscribeActual(io.reactivex.SingleObserver)
com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility: com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility[] values()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutFallbackSubscriber: void onError(java.lang.Throwable)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()
androidx.appcompat.app.ActionBar: boolean isTitleTruncated()
com.appspa.update.utils.DrawableUtils: DrawableUtils()
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: FlowableThrottleFirstTimed$DebounceTimedSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)
okhttp3.Challenge: boolean equals(java.lang.Object)
com.zhy.http.okhttp.request.GetRequest: okhttp3.RequestBody buildRequestBody()
io.reactivex.internal.observers.SubscriberCompletableObserver: SubscriberCompletableObserver(org.reactivestreams.Subscriber)
io.reactivex.subjects.PublishSubject$PublishDisposable: void onError(java.lang.Throwable)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
androidx.fragment.app.Fragment: boolean isResumed()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: ActivityRecreator$LifecycleCheckCallbacks(android.app.Activity)
com.xuexiang.xhttp2.utils.PathUtils: PathUtils()
io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnComplete: void run()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setFilterBitmap(boolean)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void dispose()
androidx.appcompat.widget.TintTypedArray: float getDimension(int,float)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])
io.reactivex.internal.subscriptions.ScalarSubscription: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableFlatMap: void subscribeActual(io.reactivex.Observer)
com.google.gson.stream.JsonReader: java.lang.String getPath()
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: void dispose()
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: void replay(io.reactivex.processors.ReplayProcessor$ReplaySubscription)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
androidx.activity.R$integer: R$integer()
androidx.core.app.NotificationManagerCompat$Task: void send(android.support.v4.app.INotificationSideChannel)
androidx.appcompat.widget.ActionBarOverlayLayout$2: ActionBarOverlayLayout$2(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: boolean isMeasureWithLargestChildEnabled()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void cancelAll()
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterConditionalSubscriber: boolean tryOnNext(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: void addFocusables(java.util.ArrayList,int,int)
okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void request(long)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationStart(android.view.View)
androidx.fragment.app.FragmentManagerImpl: void showFragment(androidx.fragment.app.Fragment)
androidx.collection.MapCollections: void colRemoveAt(int)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryMainObserver: void onError(java.lang.Throwable)
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: UnicastSubject$UnicastQueueDisposable(io.reactivex.subjects.UnicastSubject)
com.appspa.update.service.DownloadService$FileDownloadCallBack: void handleOnSuccess(java.io.File)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean canOpenPopup()
androidx.core.widget.AutoScrollHelper: boolean isExclusive()
androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: ObservableReduceSeedSingle$ReduceSeedObserver(io.reactivex.SingleObserver,io.reactivex.functions.BiFunction,java.lang.Object)
io.reactivex.subscribers.DefaultSubscriber: DefaultSubscriber()
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: java.lang.Object poll()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: void cancel()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)
okio.ByteString: boolean endsWith(okio.ByteString)
io.reactivex.internal.operators.flowable.FlowableCache: void replay(io.reactivex.internal.operators.flowable.FlowableCache$CacheSubscription)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: void next()
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: void request(long)
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: void onError(java.lang.Throwable)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
com.google.gson.internal.LinkedHashTreeMap$EntrySet: int size()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()
androidx.viewpager.widget.ViewPager: int getClientWidth()
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)
androidx.core.widget.ContentLoadingProgressBar$1: ContentLoadingProgressBar$1(androidx.core.widget.ContentLoadingProgressBar)
androidx.loader.content.CursorLoader: void setSortOrder(java.lang.String)
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
com.jakewharton.disklrucache.StrictLineReader: StrictLineReader(java.io.InputStream,java.nio.charset.Charset)
androidx.core.provider.SelfDestructiveThread$2: void run()
io.reactivex.internal.operators.flowable.FlowableReplay$UnboundedReplayBuffer: void error(java.lang.Throwable)
com.google.gson.JsonPrimitive: java.lang.Boolean getAsBooleanWrapper()
androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(int)
org.aspectj.runtime.reflect.JoinPointImpl$StaticPartImpl: java.lang.String toString()
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher: void drainSync()
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.SearchView: boolean isLandscapeMode(android.content.Context)
androidx.core.app.NotificationCompatSideChannelService: void cancelAll(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: void drain()
androidx.appcompat.widget.DecorToolbar: int getDropdownItemCount()
com.google.gson.internal.bind.TypeAdapters$22: TypeAdapters$22()
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: AppCompatSpinner$DropdownPopup$3(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.zhy.http.okhttp.https.HttpsUtils$MyTrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)
io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler)
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient,boolean)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: ObservableSwitchMap$SwitchMapObserver(io.reactivex.Observer,io.reactivex.functions.Function,int,boolean)
androidx.appcompat.widget.AppCompatTextView: void onLayout(boolean,int,int,int,int)
androidx.vectordrawable.animated.R$string: R$string()
io.reactivex.internal.operators.observable.ObservableZip: ObservableZip(io.reactivex.ObservableSource[],java.lang.Iterable,io.reactivex.functions.Function,int,boolean)
androidx.fragment.R$attr: R$attr()
io.reactivex.internal.operators.flowable.FlowableFlatMap: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.ViewCompat$5: boolean shouldUpdate(java.lang.Object,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()
androidx.core.view.ViewCompat: ViewCompat()
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask: java.lang.Void doInBackground(java.lang.Object[])
androidx.appcompat.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)
com.xuexiang.xhttp2.XHttp$2: XHttp$2()
com.google.gson.stream.JsonReader: java.lang.String nextUnquotedValue()
androidx.appcompat.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)
com.appspa.demo.http.OKHttpUpdateHttpService$1: OKHttpUpdateHttpService$1(com.appspa.demo.http.OKHttpUpdateHttpService,com.appspa.update.proxy.IUpdateHttpService$Callback)
io.reactivex.Observable: io.reactivex.Observable onErrorReturn(io.reactivex.functions.Function)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: io.reactivex.internal.queue.SpscLinkedArrayQueue getOrCreateQueue()
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: ObservableReplay$InnerDisposable(io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver,io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate$RetryBiObserver: void onComplete()
com.xuexiang.xhttp2.model.XHttpRequest: XHttpRequest()
androidx.collection.SparseArrayCompat: void clear()
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableCache: void add(io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment$1: void run()
androidx.appcompat.widget.TintTypedArray: java.lang.String getPositionDescription()
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int)
com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void cancel()
androidx.appcompat.app.ActionBarDrawerToggle: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()
io.reactivex.subjects.ReplaySubject: boolean add(io.reactivex.subjects.ReplaySubject$ReplayDisposable)
com.google.gson.DefaultDateTypeAdapter: java.util.Date read(com.google.gson.stream.JsonReader)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.view.menu.MenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferBoundarySubscriber$BufferOpenSubscriber: void dispose()
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapSingleObserver: void onSuccess(java.lang.Object)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: void requestPermission()
androidx.viewpager.widget.ViewPager: void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo)
androidx.core.view.ViewCompat: float getElevation(android.view.View)
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: void dispose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setFilterBitmap(boolean)
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: CompletableConcatArray$ConcatInnerObserver(io.reactivex.CompletableObserver,io.reactivex.CompletableSource[])
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: void dispose()
androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])
okio.ByteString: byte[] toByteArray()
okio.GzipSink: okio.Timeout timeout()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber(org.reactivestreams.Subscriber,int,java.util.concurrent.Callable)
com.google.gson.internal.Streams: Streams()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: void innerError(io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver,java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: int readExceptionCode()
androidx.viewpager.widget.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcelable)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: void insertCheckBox()
com.appspa.update.widget.UpdateDialogActivity: void handleStart()
com.xuexiang.xhttp2.utils.Utils: java.io.OutputStream openOutputStream(android.net.Uri)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
retrofit2.ParameterHandler$Part: ParameterHandler$Part(java.lang.reflect.Method,int,okhttp3.Headers,retrofit2.Converter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: void onError(java.lang.Throwable)
okhttp3.HttpUrl: boolean isHttps()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode)
okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: void slowPath(long)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
io.reactivex.internal.operators.completable.CompletableFromObservable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.appcompat.widget.ForwardingListener: boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
androidx.core.view.ActionProvider: boolean overridesItemVisibility()
io.reactivex.internal.operators.observable.ObservablePublishAlt: void connect(io.reactivex.functions.Consumer)
okhttp3.internal.ws.RealWebSocket$PingRunnable: void run()
okhttp3.internal.cache.DiskLruCache$3: okhttp3.internal.cache.DiskLruCache$Snapshot next()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()
androidx.core.view.ViewCompat: float getY(android.view.View)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: void onComplete()
androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
androidx.appcompat.app.WindowDecorActionBar$1: WindowDecorActionBar$1(androidx.appcompat.app.WindowDecorActionBar)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getCount()
androidx.viewpager.widget.PagerTabStrip: int getMinHeight()
com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object getValue()
androidx.appcompat.app.ToolbarActionBar: boolean invalidateOptionsMenu()
com.appspa.update.utils.FileUtils: java.lang.String getDirName(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: int getApplyableNightMode()
androidx.appcompat.widget.AppCompatTextView: void setTypeface(android.graphics.Typeface,int)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError: void onNext(io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber,java.lang.Object)
okio.Okio$3: void flush()
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: ViewModelProvider$NewInstanceFactory()
androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: boolean isDisposed()
androidx.core.graphics.drawable.WrappedDrawableApi14: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.app.TwilightManager$TwilightState: TwilightManager$TwilightState()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void stop()
okio.Buffer$UnsafeCursor: int seek(long)
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)
retrofit2.Platform$Android$MainThreadExecutor: Platform$Android$MainThreadExecutor()
okio.Okio: okio.Source source(java.io.InputStream,okio.Timeout)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: boolean isEmpty()
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void drain()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: void onNext(java.lang.Object)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onComputationScheduler(io.reactivex.Scheduler)
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: void onComplete()
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)
okio.Timeout: long deadlineNanoTime()
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void onComplete()
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable: void subscribeActual(io.reactivex.Observer)
androidx.core.util.Preconditions: int checkArgumentNonnegative(int)
com.google.gson.JsonElement: boolean isJsonPrimitive()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)
okhttp3.internal.cache2.Relay: void commit(long)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(int)
androidx.appcompat.view.menu.StandardMenuPopup: void onDismiss()
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,io.reactivex.internal.queue.SpscLinkedArrayQueue)
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: void onComplete()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void checkPaneVisibility(android.view.View,boolean)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
com.appspa.update.entity.DownloadEntity: void writeToParcel(android.os.Parcel,int)
com.appspa.update.widget.UpdateDialogActivity: void show(android.content.Context,com.appspa.update.entity.UpdateEntity,com.appspa.update.proxy.IPrompterProxy,com.appspa.update.entity.PromptEntity)
androidx.core.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getOpacity()
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void dispose()
io.reactivex.internal.subscribers.QueueDrainSubscriber: long requested()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationHelp(int,java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: void drain()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)
androidx.core.content.res.FontResourcesParserCompat: FontResourcesParserCompat()
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver: void drain()
androidx.appcompat.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources$Theme)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: boolean addInner(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber)
com.google.gson.JsonArray: void add(java.lang.Character)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedDispose: ExecutorScheduler$DelayedDispose(io.reactivex.internal.schedulers.ExecutorScheduler,io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable)
androidx.lifecycle.Transformations$1: void onChanged(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: ObservableSequenceEqual$EqualCoordinator(io.reactivex.Observer,int,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: void request(long)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
com.zhy.http.okhttp.request.PostFileRequest$1$1: void run()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int,int)
com.google.gson.internal.bind.TypeAdapters$16: java.lang.Object read(com.google.gson.stream.JsonReader)
okhttp3.Cache$CacheResponseBody: long contentLength()
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.loader.content.Loader: boolean onCancelLoad()
com.google.gson.internal.JavaVersion: boolean isJava9OrLater()
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver(io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver)
androidx.appcompat.widget.ListPopupWindow: void setPromptPosition(int)
androidx.core.view.NestedScrollingParent2: void onNestedPreScroll(android.view.View,int,int,int[],int)
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
com.appspa.update.widget.UpdateDialogActivity: void setDialogTheme(int,int,int)
io.reactivex.internal.util.BlockingIgnoringReceiver: void run()
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
io.reactivex.internal.schedulers.ComputationScheduler$EventLoopWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
io.reactivex.internal.functions.Functions$NaturalComparator: io.reactivex.internal.functions.Functions$NaturalComparator valueOf(java.lang.String)
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
okhttp3.internal.platform.OptionalMethod: java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])
androidx.appcompat.widget.ActionMenuPresenter: void setReserveOverflow(boolean)
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: boolean isDisposed()
androidx.fragment.app.FragmentManager: boolean isDestroyed()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
com.xuexiang.xhttp2.XHttpRequestPool: XHttpRequestPool()
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator: ObservableAmb$AmbCoordinator(io.reactivex.Observer,int)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeBasic()
androidx.core.view.ViewCompat: int getPaddingEnd(android.view.View)
io.reactivex.internal.schedulers.RxThreadFactory: java.lang.String toString()
androidx.core.content.pm.ShortcutInfoCompat: android.content.ComponentName getActivity()
androidx.savedstate.SavedStateRegistry$AutoRecreated: void onRecreated(androidx.savedstate.SavedStateRegistryOwner)
okio.Okio: okio.BufferedSource buffer(okio.Source)
androidx.appcompat.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)
retrofit2.CompletableFutureCallAdapterFactory: CompletableFutureCallAdapterFactory()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void cancel()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
androidx.lifecycle.LiveData: boolean hasObservers()
androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.xuexiang.xhttp2.utils.Utils: java.lang.String getExtDownloadsPath()
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(char,float[])
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody: UploadProgressRequestBody(okhttp3.RequestBody,com.xuexiang.xhttp2.callback.impl.IProgressResponseCallBack)
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: NotificationManagerCompat$ServiceConnectedEvent(android.content.ComponentName,android.os.IBinder)
androidx.core.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: ResourceManagerInternal$VdcInflateDelegate()
androidx.activity.OnBackPressedDispatcher: void onBackPressed()
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: void innerError(java.lang.Throwable)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.subscribers.ForEachWhileSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: void clear()
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void innerError(java.lang.Throwable)
io.reactivex.subjects.BehaviorSubject: BehaviorSubject()
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver: MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver$OtherMaybeObserver(io.reactivex.MaybeObserver,java.util.concurrent.atomic.AtomicReference)
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.Platform buildIfSupported()
retrofit2.ParameterHandler$QueryMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: void setGroupVisible(int,boolean)
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: ObservableTimer$TimerObserver(io.reactivex.Observer)
androidx.core.app.SharedElementCallback: SharedElementCallback()
io.reactivex.internal.operators.observable.ObservableWindow$WindowSkipObserver: void onError(java.lang.Throwable)
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
androidx.appcompat.app.AlertController: void setupButtons(android.view.ViewGroup)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void setDragger(androidx.customview.widget.ViewDragHelper)
androidx.appcompat.widget.ScrollingTabContainerView$1: void run()
androidx.core.os.CancellationSignal: java.lang.Object getCancellationSignalObject()
androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: LoaderManagerImpl$LoaderObserver(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)
com.google.gson.internal.ConstructorConstructor$8: java.lang.Object construct()
com.jakewharton.disklrucache.DiskLruCache: void checkNotClosed()
io.reactivex.internal.disposables.EmptyDisposable: void error(java.lang.Throwable,io.reactivex.CompletableObserver)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: void dispose()
io.reactivex.internal.operators.maybe.MaybeCache: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.view.menu.MenuItemImpl: int getOrdering()
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)
com.appspa.demo.activity.MainActivity$1: void onClick(android.content.DialogInterface,int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: void soProducerIndex(long)
com.google.gson.reflect.TypeToken: TypeToken()
androidx.core.app.JobIntentService$CompatWorkEnqueuer: void serviceProcessingFinished()
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
okhttp3.CacheControl: boolean mustRevalidate()
androidx.appcompat.widget.TintTypedArray: int getInt(int,int)
okhttp3.internal.connection.RealConnection: void cancel()
com.google.gson.stream.JsonWriter: void writeDeferredName()
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)
com.google.gson.internal.bind.TypeAdapters$26$1: TypeAdapters$26$1(com.google.gson.internal.bind.TypeAdapters$26,com.google.gson.TypeAdapter)
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$4: java.lang.Object apply(java.lang.Object)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()
okhttp3.internal.connection.StreamAllocation: void noNewStreams()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: NotificationCompat$DecoratedCustomViewStyle()
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: void run()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder disableInnerClassSerialization()
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: FlowableDoFinally$DoFinallyConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Action)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void open(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
androidx.lifecycle.ReportFragment$ActivityInitializationListener: void onCreate()
com.xuexiang.xhttp2.cache.key.Strings: java.lang.String _toString(java.lang.Object)
androidx.appcompat.view.menu.MenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: GestureDetectorCompat$GestureDetectorCompatImplBase(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
com.appspa.update.entity.PromptEntity: com.appspa.update.entity.PromptEntity setHeightRatio(float)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks()
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: void onComplete()
io.reactivex.internal.observers.DeferredScalarObserver: void dispose()
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver(io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: void remove(io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription)
androidx.appcompat.view.menu.MenuWrapperICS: boolean isShortcutKey(int,android.view.KeyEvent)
okhttp3.Cookie: Cookie(okhttp3.Cookie$Builder)
androidx.core.net.TrafficStatsCompat: TrafficStatsCompat()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.core.os.LocaleListPlatformWrapper: java.lang.Object getLocaleList()
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: long contentLength()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.gson.TypeAdapter: com.google.gson.TypeAdapter nullSafe()
com.google.gson.internal.bind.MapTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.reactivex.internal.operators.observable.ObservableThrottleLatest$ThrottleLatestObserver: ObservableThrottleLatest$ThrottleLatestObserver(io.reactivex.Observer,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker,boolean)
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
com.appspa.update.utils.UpdateUtils: UpdateUtils()
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.util.OpenHashSet: boolean remove(java.lang.Object)
okio.Buffer: okio.Buffer write(byte[])
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: boolean isDisposed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: void dispose()
retrofit2.BuiltInConverters$UnitResponseBodyConverter: BuiltInConverters$UnitResponseBodyConverter()
com.google.gson.JsonElement: float getAsFloat()
androidx.appcompat.widget.ActionBarBackgroundDrawable: void draw(android.graphics.Canvas)
com.zhy.http.okhttp.R: R()
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: boolean tryOnError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: void dispose()
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.content.Context,android.util.AttributeSet)
com.google.gson.internal.bind.TypeAdapters$11: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: void onNext(java.lang.Object)
androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)
io.reactivex.internal.operators.completable.CompletableMergeArray: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.view.DisplayCutoutCompat: androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: void setTheme(int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context)
com.jakewharton.disklrucache.DiskLruCache: void readJournal()
androidx.appcompat.view.menu.MenuPopup: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: void onSuccess(java.lang.Object)
okhttp3.internal.http1.Http1Codec$ChunkedSource: long read(okio.Buffer,long)
androidx.loader.R$styleable: R$styleable()
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: void onNext(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
androidx.collection.ArraySet: void addAll(androidx.collection.ArraySet)
androidx.appcompat.content.res.AppCompatResources: android.util.TypedValue getTypedValue()
org.aspectj.runtime.reflect.InitializerSignatureImpl: java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription: void onComplete()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
io.reactivex.internal.schedulers.RxThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: void onNext(java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterator: java.lang.Object next()
com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility: NumberProgressBar$ProgressTextVisibility(java.lang.String,int)
io.reactivex.internal.observers.CallbackCompletableObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeZipArray$ZipMaybeObserver: void onComplete()
androidx.fragment.app.FragmentTransaction: boolean isEmpty()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseBitmap(int,int)
com.google.gson.internal.LinkedTreeMap$KeySet$1: java.lang.Object next()
com.xuexiang.xhttp2.cache.RxCache$Builder: java.io.File access$500(com.xuexiang.xhttp2.cache.RxCache$Builder)
androidx.core.app.FrameMetricsAggregator: void add(android.app.Activity)
io.reactivex.subjects.ReplaySubject$ReplayDisposable: void dispose()
io.reactivex.internal.operators.single.SingleMap$MapSingleObserver: SingleMap$MapSingleObserver(io.reactivex.SingleObserver,io.reactivex.functions.Function)
io.reactivex.internal.observers.LambdaObserver: void onComplete()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedFling(android.view.View,float,float,boolean)
com.xuexiang.xhttp2.transform.func.ApiResultFunc: ApiResultFunc(java.lang.reflect.Type,boolean)
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: ScheduledDirectPeriodicTask(java.lang.Runnable)
io.reactivex.observers.SafeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.core.app.ShareCompat$IntentReader: java.lang.String getCallingPackage()
androidx.versionedparcelable.VersionedParcelStream: void writeObject(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
okhttp3.internal.http2.Http2Connection$1: Http2Connection$1(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode)
androidx.arch.core.executor.TaskExecutor: boolean isMainThread()
io.reactivex.internal.util.BackpressureHelper: long addCancel(java.util.concurrent.atomic.AtomicLong,long)
com.appspa.update.widget.UpdateDialogActivity: void initListeners()
io.reactivex.internal.queue.SpscLinkedArrayQueue: long lpProducerIndex()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)
com.appspa.update.service.DownloadService: void showDownloadCompleteNotification(java.io.File)
androidx.lifecycle.MediatorLiveData$Source: void unplug()
androidx.core.text.PrecomputedTextCompat: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)
io.reactivex.processors.AsyncProcessor: void subscribeActual(org.reactivestreams.Subscriber)
okio.Buffer: byte[] readByteArray()
androidx.appcompat.widget.AppCompatDrawableManager: void preload()
androidx.core.app.NotificationCompat$Style: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
retrofit2.Retrofit$Builder: Retrofit$Builder()
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] remove(android.app.Activity)
okhttp3.Headers$Builder: Headers$Builder()
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.Fragment getItem(int)
com.xuexiang.xhttp2.annotation.NetMethod: boolean keepJson()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: FragmentManager$FragmentLifecycleCallbacks()
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder: LinkedHashTreeMap$AvlBuilder()
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()
okio.ByteString: okio.ByteString of(byte[])
com.xuexiang.xhttp2.interceptor.BaseInterceptor: okhttp3.MediaType getMediaType(okhttp3.Response)
okhttp3.Cookie: java.lang.String name()
io.reactivex.internal.util.NotificationLite$ErrorNotification: NotificationLite$ErrorNotification(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableRetryPredicate$RetrySubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterSubscriber: boolean tryOnNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTake$TakeSubscriber: void onComplete()
com.xuexiang.xhttp2.annotation.NetMethod: long timeout()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)
com.jakewharton.disklrucache.DiskLruCache: void trimToSize()
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean validate(org.reactivestreams.Subscription,org.reactivestreams.Subscription)
io.reactivex.internal.observers.FutureObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
io.reactivex.internal.util.EndConsumerHelper: boolean validate(io.reactivex.disposables.Disposable,io.reactivex.disposables.Disposable,java.lang.Class)
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: SingleZipArray$ZipCoordinator(io.reactivex.SingleObserver,int,io.reactivex.functions.Function)
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedHashTreeMap$Node nextNode()
androidx.appcompat.app.AppCompatDelegateImpl: void onStop()
androidx.core.view.inputmethod.InputConnectionCompat$2: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
androidx.collection.ArraySet$1: int colIndexOfKey(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator getInstance()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void mutate()
io.reactivex.processors.ReplayProcessor: void onSubscribe(org.reactivestreams.Subscription)
com.google.gson.internal.LinkedHashTreeMap: java.util.Set keySet()
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: int requestFusion(int)
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] reset()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: void fastPath()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: void disposeInner()
androidx.loader.app.LoaderManager: androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.ToolbarActionBar: void setLogo(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeConcatArray: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.AppCompatCheckedTextView: void setTextAppearance(android.content.Context,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)
androidx.appcompat.widget.DropDownListView: boolean hasWindowFocus()
io.reactivex.internal.schedulers.ImmediateThinScheduler: ImmediateThinScheduler()
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator: com.google.gson.internal.LinkedTreeMap$Node nextNode()
com.jakewharton.disklrucache.DiskLruCache$Editor: com.jakewharton.disklrucache.DiskLruCache$Entry access$1400(com.jakewharton.disklrucache.DiskLruCache$Editor)
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: void dispose()
com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void otherSuccess(java.lang.Object)
com.google.gson.JsonArray: java.lang.Number getAsNumber()
androidx.core.content.FileProvider: boolean onCreate()
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
io.reactivex.internal.functions.Functions$NaturalObjectComparator: int compare(java.lang.Object,java.lang.Object)
androidx.core.content.FileProvider$PathStrategy: android.net.Uri getUriForFile(java.io.File)
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: java.lang.Object poll()
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableZip$ZipSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableReplay$ScheduledReplaySupplier: io.reactivex.internal.operators.observable.ObservableReplay$ReplayBuffer call()
io.reactivex.subjects.Subject: io.reactivex.subjects.Subject toSerialized()
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
io.reactivex.internal.operators.maybe.MaybeIgnoreElement$IgnoreMaybeObserver: void onComplete()
androidx.appcompat.app.AppCompatDelegate: void applyDayNightToActiveDelegates()
androidx.appcompat.view.menu.MenuView: int getWindowAnimations()
okhttp3.Headers: void checkValue(java.lang.String,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
io.reactivex.internal.disposables.SequentialDisposable: SequentialDisposable()
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: void innerError(io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver,java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$ReplayCallable: io.reactivex.flowables.ConnectableFlowable call()
okio.ByteString: okio.ByteString sha512()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: boolean isDisposed()
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
okhttp3.internal.cache.CacheInterceptor: boolean isEndToEnd(java.lang.String)
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void onError(java.lang.Throwable)
androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.core.provider.FontsContractCompat$4$5: FontsContractCompat$4$5(androidx.core.provider.FontsContractCompat$4)
okio.RealBufferedSource: boolean request(long)
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: void runBackfused()
com.google.gson.stream.JsonWriter: void setIndent(java.lang.String)
androidx.core.widget.ScrollerCompat: ScrollerCompat(android.content.Context,android.view.animation.Interpolator)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
retrofit2.BuiltInConverters$ToStringConverter: BuiltInConverters$ToStringConverter()
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.versionedparcelable.VersionedParcel: void writeIntArray(int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
okhttp3.RealCall: boolean isCanceled()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaY()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
androidx.core.content.res.TypedArrayUtils: int getInt(android.content.res.TypedArray,int,int,int)
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawableStateChanged()
okio.SegmentedByteString: java.lang.String string(java.nio.charset.Charset)
androidx.appcompat.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()
org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11$Counter: ThreadCounterImpl11$Counter()
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: boolean isEmpty()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy: io.reactivex.observers.BaseTestConsumer$TestWaitStrategy[] values()
androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)
io.reactivex.internal.functions.Functions$JustValue: java.lang.Object call()
io.reactivex.internal.operators.flowable.FlowableCreate$MissingEmitter: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: void run()
io.reactivex.BackpressureOverflowStrategy: BackpressureOverflowStrategy(java.lang.String,int)
androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.gson.JsonObject: int size()
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver: void innerSuccess(java.lang.Object)
androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: void onError(java.lang.Throwable)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.gson.internal.bind.TypeAdapters$1: void write(com.google.gson.stream.JsonWriter,java.lang.Class)
org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: void set(int,java.lang.String)
io.reactivex.internal.operators.maybe.MaybeToFlowable: MaybeToFlowable(io.reactivex.MaybeSource)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
com.appspa.update.widget.BaseDialog: android.view.View findViewById(int)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)
io.reactivex.subjects.ReplaySubject$SizeBoundReplayBuffer: java.lang.Object[] getValues(java.lang.Object[])
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteDistinctStrategy$2: boolean test(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: void onNext(java.lang.Object)
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
androidx.core.view.inputmethod.EditorInfoCompat: void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[])
androidx.core.content.pm.ShortcutManagerCompat$1: ShortcutManagerCompat$1(android.content.IntentSender)
org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl: java.lang.String getName()
androidx.core.view.accessibility.AccessibilityEventCompat: int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.R$integer: R$integer()
com.zhy.http.okhttp.OkHttpUtils$1: void onResponse(okhttp3.Call,okhttp3.Response)
io.reactivex.internal.operators.single.SingleHide: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.completable.CompletableErrorSupplier: void subscribeActual(io.reactivex.CompletableObserver)
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[])
androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
androidx.appcompat.app.ActionBarDrawerToggle: void setPosition(float)
io.reactivex.internal.operators.observable.ObservableOnErrorReturn: ObservableOnErrorReturn(io.reactivex.ObservableSource,io.reactivex.functions.Function)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
io.reactivex.schedulers.Schedulers$SingleHolder: Schedulers$SingleHolder()
io.reactivex.internal.subscriptions.SubscriptionHelper: void deferredRequest(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,long)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: boolean error(java.lang.Throwable)
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String getAcceptLanguage()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: boolean isDisposed()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action)
com.zhy.http.okhttp.builder.GetBuilder: GetBuilder()
androidx.drawerlayout.widget.DrawerLayout$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.app.AlertController: void setupContent(android.view.ViewGroup)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCallback(java.lang.Runnable)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: FlowableBufferTimed$BufferSkipBoundedSubscriber(org.reactivestreams.Subscriber,java.util.concurrent.Callable,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker)
androidx.appcompat.app.AlertController$AlertParams$2: AlertController$AlertParams$2(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker: SchedulerWhen$QueueWorker(io.reactivex.processors.FlowableProcessor,io.reactivex.Scheduler$Worker)
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: void clear()
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback(retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter,java.util.concurrent.CompletableFuture)
com.google.gson.internal.reflect.UnsafeReflectionAccessor: java.lang.Object getUnsafeInstance()
io.reactivex.internal.operators.maybe.MaybePeek$MaybePeekObserver: void onComplete()
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: void request(long)
androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)
androidx.lifecycle.ComputableLiveData: androidx.lifecycle.LiveData getLiveData()
io.reactivex.internal.functions.Functions$ErrorConsumer: Functions$ErrorConsumer()
okhttp3.internal.http2.PushObserver$1: void onReset(int,okhttp3.internal.http2.ErrorCode)
com.appspa.update.entity.UpdateEntity: UpdateEntity()
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: boolean isDisposed()
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
androidx.core.view.GestureDetectorCompat: void setIsLongpressEnabled(boolean)
io.reactivex.internal.operators.parallel.ParallelPeek: void subscribe(org.reactivestreams.Subscriber[])
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.collection.LruCache: int size()
androidx.loader.content.CursorLoader: CursorLoader(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
retrofit2.Utils: java.lang.String typeToString(java.lang.reflect.Type)
androidx.viewpager.widget.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: void cancelChildViewTouch()
io.reactivex.processors.PublishProcessor: boolean add(io.reactivex.processors.PublishProcessor$PublishSubscription)
androidx.appcompat.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)
androidx.collection.CircularArray: void addLast(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCache$Node: ObservableCache$Node(int)
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void innerCloseError(java.lang.Throwable)
androidx.fragment.app.FragmentActivity: void onPostResume()
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
androidx.drawerlayout.widget.DrawerLayout: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: java.lang.Object apply(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper: void onSetCompoundDrawables()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()
androidx.customview.widget.FocusStrategy: boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: void request(long)
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.functions.Functions$Array3Func: java.lang.Object apply(java.lang.Object[])
androidx.viewpager.widget.ViewPager: void setScrollState(int)
androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void drain()
io.reactivex.internal.util.VolatileSizeArrayList: boolean removeAll(java.util.Collection)
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompatJellybean: android.util.SparseArray buildActionExtrasMap(java.util.List)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void innerSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: boolean getAsBoolean()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)
androidx.appcompat.widget.DecorToolbar: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
io.reactivex.internal.operators.observable.ObservableDoOnEach: void subscribeActual(io.reactivex.Observer)
io.reactivex.subjects.UnicastSubject: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object,boolean)
io.reactivex.internal.operators.observable.ObservableRetryWhen: ObservableRetryWhen(io.reactivex.ObservableSource,io.reactivex.functions.Function)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
io.reactivex.internal.observers.FutureSingleObserver: FutureSingleObserver()
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody: void writeTo(okio.BufferedSink)
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: boolean add(io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable)
com.xuexiang.xhttp2.model.ExpiredInfo: com.xuexiang.xhttp2.model.ExpiredInfo setExpiredType(int)
com.xuexiang.xhttp2.XHttpProxy: com.xuexiang.xhttp2.request.BaseRequest getHttpRequest(java.lang.reflect.Method,java.lang.Object[],com.xuexiang.xhttp2.annotation.NetMethod)
androidx.appcompat.widget.SearchView: void onMeasure(int,int)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableBufferTimed: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()
okhttp3.FormBody$Builder: okhttp3.FormBody build()
okhttp3.ConnectionSpec: void apply(javax.net.ssl.SSLSocket,boolean)
com.google.gson.internal.ConstructorConstructor$6: ConstructorConstructor$6(com.google.gson.internal.ConstructorConstructor)
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl)
androidx.loader.content.Loader: android.content.Context getContext()
io.reactivex.internal.operators.maybe.MaybeFilter: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
com.google.gson.internal.bind.TypeAdapters$15: void write(com.google.gson.stream.JsonWriter,java.lang.Character)
androidx.annotation.RequiresApi: int value()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: CompletableToObservable$ObserverCompletableObserver(io.reactivex.Observer)
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator: boolean hasNext()
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: boolean isDisposed()
io.reactivex.internal.observers.BasicFuseableObserver: void clear()
androidx.appcompat.view.menu.MenuItemImpl: char getNumericShortcut()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.collection.MapCollections: java.util.Map colGetMap()
androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
retrofit2.Platform: retrofit2.Platform get()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender)
io.reactivex.internal.operators.maybe.MaybeDetach$DetachMaybeObserver: MaybeDetach$DetachMaybeObserver(io.reactivex.MaybeObserver)
com.appspa.update.utils.UpdateUtils: android.graphics.drawable.Drawable getAppIcon(android.content.Context)
androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()
androidx.appcompat.view.menu.BaseMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.view.WindowCallbackWrapper: void onPointerCaptureChanged(boolean)
io.reactivex.internal.util.QueueDrainHelper: QueueDrainHelper()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)
org.aspectj.lang.SoftException: void printStackTrace()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: boolean offer(java.lang.Object)
androidx.core.app.RemoteInput$Builder: RemoteInput$Builder(java.lang.String)
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: void enqueue(retrofit2.Callback)
androidx.core.R$attr: R$attr()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: boolean isEmpty()
retrofit2.Retrofit: retrofit2.ServiceMethod loadServiceMethod(java.lang.reflect.Method)
androidx.appcompat.view.menu.MenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
io.reactivex.internal.subscribers.QueueDrainSubscriber: long produced(long)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: void dispose()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleDoAfterTerminate$DoAfterTerminateObserver: void onSuccess(java.lang.Object)
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: io.reactivex.internal.fuseable.SimpleQueue getInnerQueue(io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber)
androidx.appcompat.widget.SearchView: boolean hasVoiceSearch()
androidx.appcompat.graphics.drawable.DrawableWrapper: DrawableWrapper(android.graphics.drawable.Drawable)
com.xuexiang.xhttp2.utils.HttpUtils: java.lang.String getResponseBodyString(okhttp3.Response)
com.google.gson.JsonPrimitive: short getAsShort()
androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)
io.reactivex.processors.MulticastProcessor: void subscribeActual(org.reactivestreams.Subscriber)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onViewCaptured(android.view.View,int)
androidx.collection.SimpleArrayMap: int hashCode()
com.zhy.http.okhttp.request.RequestCall: okhttp3.Request generateRequest(com.zhy.http.okhttp.callback.Callback)
io.reactivex.internal.operators.single.SingleEquals: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.app.WindowDecorActionBar$3: void onAnimationUpdate(android.view.View)
io.reactivex.internal.operators.maybe.MaybeUnsubscribeOn$UnsubscribeOnMaybeObserver: void run()
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
io.reactivex.plugins.RxJavaPlugins: boolean isBug(java.lang.Throwable)
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
androidx.fragment.app.BackStackRecord: void executePopOps(boolean)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
io.reactivex.internal.operators.observable.ObservableToList$ToListObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservablePublishSelector: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver: ObservableTimeoutTimed$FallbackObserver(io.reactivex.Observer,java.util.concurrent.atomic.AtomicReference)
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: void onComplete()
androidx.core.view.inputmethod.InputContentInfoCompat: void releasePermission()
androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)
okio.ForwardingTimeout: okio.Timeout deadlineNanoTime(long)
androidx.cursoradapter.widget.ResourceCursorAdapter: void setDropDownViewResource(int)
androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: boolean isDisposed()
androidx.appcompat.widget.DecorToolbar: void restoreHierarchyState(android.util.SparseArray)
androidx.core.view.DragStartHelper$2: DragStartHelper$2(androidx.core.view.DragStartHelper)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: void drain()
androidx.appcompat.widget.AppCompatTextHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString()
io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.BiFunction,java.lang.Object,java.lang.Object)
androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)
io.reactivex.internal.operators.observable.ObservableFlattenIterable$FlattenIterableObserver: boolean isDisposed()
com.xuexiang.xhttp2.utils.RequestBodyUtils$1: long contentLength()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
androidx.appcompat.view.menu.CascadingMenuPopup: CascadingMenuPopup(android.content.Context,android.view.View,int,int,boolean)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionBase: void onComplete()
com.appspa.update.service.DownloadService: void startDownload(com.appspa.update.entity.UpdateEntity,com.appspa.update.service.DownloadService$FileDownloadCallBack)
androidx.appcompat.widget.AppCompatSpinner$1: boolean onForwardingStarted()
androidx.core.content.ContextCompat$MainHandlerExecutor: ContextCompat$MainHandlerExecutor(android.os.Handler)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: void dispose()
org.aspectj.runtime.reflect.StringMaker: java.lang.String makePrimaryTypeName(java.lang.Class,java.lang.String)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: boolean isDisposed()
androidx.versionedparcelable.VersionedParcelStream$1: int read(byte[],int,int)
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe$ElementAtSubscriber: FlowableElementAtMaybe$ElementAtSubscriber(io.reactivex.MaybeObserver,long)
androidx.core.view.ViewConfigurationCompat: boolean hasPermanentMenuKey(android.view.ViewConfiguration)
com.xuexiang.xhttp2.R$anim: R$anim()
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3$1: BaseStrategy$3$1(com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3,java.lang.Object)
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
io.reactivex.internal.schedulers.SchedulerPoolFactory$SystemPropertyAccessor: SchedulerPoolFactory$SystemPropertyAccessor()
io.reactivex.internal.functions.Functions$ErrorConsumer: void accept(java.lang.Throwable)
org.aspectj.internal.lang.reflect.AjTypeImpl: java.lang.String getName()
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)
androidx.core.content.ContextCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: void run()
io.reactivex.internal.operators.flowable.FlowableRefCount$RefCountSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: ObservableConcatWithMaybe$ConcatWithObserver(io.reactivex.Observer,io.reactivex.MaybeSource)
org.reactivestreams.FlowAdapters$FlowToReactiveSubscription: void request(long)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()
com.xuexiang.xhttp2.model.ExpiredInfo: int getCode()
androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: boolean isDisposed()
com.google.gson.internal.ConstructorConstructor$2: java.lang.Object construct()
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$RepeatWhenSubscriber: void onComplete()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void showSoftInputIfNecessary()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: void dispose()
io.reactivex.Scheduler: Scheduler()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$6: DownloadSubscriber$6(com.xuexiang.xhttp2.subsciber.DownloadSubscriber)
io.reactivex.internal.queue.SpscLinkedArrayQueue: boolean offer(java.lang.Object,java.lang.Object)
okio.RealBufferedSink: RealBufferedSink(okio.Sink)
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: ExploreByTouchHelper$MyNodeProvider(androidx.customview.widget.ExploreByTouchHelper)
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: int requestFusion(int)
io.reactivex.internal.util.NotificationLite$DisposableNotification: java.lang.String toString()
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: void run()
androidx.core.os.LocaleListCompat: LocaleListCompat(androidx.core.os.LocaleListInterface)
androidx.appcompat.widget.ShareActionProvider: void setShareIntent(android.content.Intent)
androidx.appcompat.view.menu.SubMenuWrapperICS: SubMenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportSubMenu)
okhttp3.HttpUrl$Builder: int parsePort(java.lang.String,int,int)
androidx.appcompat.widget.AppCompatCheckBox: void drawableStateChanged()
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
io.reactivex.internal.queue.SpscLinkedArrayQueue: boolean isEmpty()
androidx.appcompat.graphics.drawable.DrawableContainer: void setCurrentIndex(int)
io.reactivex.internal.operators.parallel.ParallelFilterTry: int parallelism()
io.reactivex.internal.observers.QueueDrainSubscriberWip: QueueDrainSubscriberWip()
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void innerError(io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver$SwitchMapMaybeObserver,java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableCollectSingle$CollectObserver: void dispose()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: void execute()
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManagerImpl: void endAnimatingAwayFragments()
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowablePublishAlt: void resetIf(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableElementAt$ElementAtSubscriber: void onComplete()
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
io.reactivex.processors.BehaviorProcessor$BehaviorSubscription: boolean test(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onKeyDown(int,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcelable)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
io.reactivex.internal.util.ArrayListSupplier: java.util.List call()
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void onNext(java.lang.Object)
androidx.core.widget.AutoSizeableTextView: int getAutoSizeStepGranularity()
androidx.loader.app.LoaderManager: void destroyLoader(int)
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,boolean)
androidx.viewpager.R$styleable: R$styleable()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: boolean onForwardingStarted()
io.reactivex.internal.operators.maybe.MaybeAmb$AmbMaybeObserver: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: void drainLoop()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableObservable$FlatMapIterableObserver: MaybeFlatMapIterableObservable$FlatMapIterableObserver(io.reactivex.Observer,io.reactivex.functions.Function)
retrofit2.DefaultCallAdapterFactory$1: DefaultCallAdapterFactory$1(retrofit2.DefaultCallAdapterFactory,java.lang.reflect.Type,java.util.concurrent.Executor)
okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)
okio.Buffer$2: void close()
com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)
com.appspa.update.entity.DownloadEntity: boolean isShowNotification()
retrofit2.OkHttpCall: retrofit2.Call clone()
okhttp3.MultipartBody: java.util.List parts()
androidx.viewpager.widget.ViewPager$ViewPositionComparator: ViewPager$ViewPositionComparator()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
okio.ByteString: okio.ByteString toAsciiUppercase()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
io.reactivex.processors.PublishProcessor$PublishSubscription: void onComplete()
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: void setAdapter(android.widget.ListAdapter)
androidx.core.provider.FontsContractCompat$4$3: FontsContractCompat$4$3(androidx.core.provider.FontsContractCompat$4)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: void onSuccess(java.lang.Object)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$4: BaseTestConsumer$TestWaitStrategy$4(java.lang.String,int)
io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable$FlatMapIterableObserver: void clear()
androidx.fragment.app.FragmentController: void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent: void onSuccess(java.lang.Object)
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: FrameMetricsAggregator$FrameMetricsApi24Impl(int)
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle$ReduceSeedObserver: void dispose()
androidx.loader.app.LoaderManagerImpl: androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create()
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
okio.AsyncTimeout$1: void close()
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function)
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: java.lang.Object call()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.gson.internal.bind.JsonTreeReader$1: int read(char[],int,int)
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: void dispose()
com.appspa.update.UpdateManager: void checkVersion()
androidx.core.view.MenuCompat: MenuCompat()
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
com.appspa.update.utils.ApkUtils: java.lang.String getInstallLocationParams()
okio.Buffer: okio.BufferedSink writeInt(int)
androidx.core.graphics.TypefaceCompatBaseImpl$2: TypefaceCompatBaseImpl$2(androidx.core.graphics.TypefaceCompatBaseImpl)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: void onComplete()
androidx.appcompat.app.ActionBar: int getTabCount()
androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)
com.jakewharton.disklrucache.Util: void deleteContents(java.io.File)
org.aspectj.runtime.CFlow: CFlow()
io.reactivex.internal.operators.observable.ObservablePublish$InnerDisposable: boolean isDisposed()
androidx.core.widget.EdgeEffectCompat: boolean isFinished()
androidx.appcompat.widget.ListPopupWindow$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.core.provider.FontsContractCompat$4: FontsContractCompat$4(android.content.Context,androidx.core.provider.FontRequest,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback)
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl: java.lang.String toString()
androidx.loader.app.LoaderManagerImpl$LoaderObserver: void reset()
io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void makeInactive(androidx.fragment.app.Fragment)
okhttp3.ConnectionPool: java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: void onNext(java.lang.Object)
androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: void cancel()
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: void dispose()
androidx.appcompat.widget.ScrollingTabContainerView: void onNothingSelected(android.widget.AdapterView)
androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)
androidx.core.app.ShareCompat: void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder)
androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
io.reactivex.internal.operators.observable.ObservableSequenceEqual$EqualCoordinator: void dispose()
androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)
retrofit2.Platform: java.util.List defaultCallAdapterFactories(java.util.concurrent.Executor)
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: void dispose()
androidx.core.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)
io.reactivex.internal.operators.maybe.MaybeFromFuture: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: void dispose()
io.reactivex.processors.FlowableProcessor: FlowableProcessor()
com.zhy.http.okhttp.callback.Callback$1: void onError(okhttp3.Call,java.lang.Exception,int)
androidx.core.provider.FontsContractCompat$4$4: FontsContractCompat$4$4(androidx.core.provider.FontsContractCompat$4)
io.reactivex.internal.operators.observable.ObservableTakeWhile$TakeWhileObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableSkip$SkipSubscriber: void onError(java.lang.Throwable)
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String getDismissalId()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutConsumer: ObservableTimeout$TimeoutConsumer(long,io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutSelectorSupport)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
com.appspa.update.widget.UpdateDialogActivity: void onStop()
androidx.fragment.app.FragmentController: void dispatchStop()
androidx.loader.content.Loader: void deliverCancellation()
androidx.core.view.animation.PathInterpolatorCompat: PathInterpolatorCompat()
io.reactivex.internal.operators.flowable.FlowableMapNotification$MapNotificationSubscriber: void onNext(java.lang.Object)
androidx.viewpager.widget.PagerTitleStrip: void onAttachedToWindow()
io.reactivex.internal.operators.flowable.BlockingFlowableLatest$LatestSubscriberIterator: void remove()
com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType: com.xuexiang.xhttp2.request.BaseBodyRequest$UploadType[] values()
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: io.reactivex.internal.fuseable.SimplePlainQueue getOrCreateQueue()
androidx.fragment.app.FragmentTransaction: void commitNow()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)
androidx.appcompat.app.AlertController: int getIconAttributeResId(int)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver: boolean isDisposed()
okhttp3.internal.io.FileSystem$1: okio.Sink sink(java.io.File)
com.zhy.http.okhttp.cookie.store.PersistentCookieStore: boolean remove(okhttp3.HttpUrl,okhttp3.Cookie)
androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet,int)
com.xuexiang.xhttp2.R$id: R$id()
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDismissable(boolean)
android.support.v4.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: boolean isEmpty()
com.google.gson.Gson$1: Gson$1(com.google.gson.Gson)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable: void subscribeActual(io.reactivex.Observer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver$OtherSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableDisposeOn: void subscribeActual(io.reactivex.CompletableObserver)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: CompositeGeneratedAdaptersObserver(androidx.lifecycle.GeneratedAdapter[])
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void drain()
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean)
com.google.gson.internal.LinkedHashTreeMap: void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver: void otherComplete()
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: void setBounds(android.graphics.Rect,android.graphics.Rect)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: void onError(java.lang.Throwable)
com.google.gson.Gson: com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter)
com.appspa.update.utils.DialogUtils: boolean syncSystemUiVisibility(android.view.Window,android.view.Window)
androidx.core.view.DragAndDropPermissionsCompat: void release()
androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(int)
androidx.core.provider.FontRequest: java.util.List getCertificates()
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setIsAutoMode(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hideOverflowMenu()
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
io.reactivex.internal.util.AppendOnlyLinkedArrayList: void forEachWhile(io.reactivex.internal.util.AppendOnlyLinkedArrayList$NonThrowingPredicate)
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerSlide(android.view.View,float)
io.reactivex.disposables.SubscriptionDisposable: void onDisposed(org.reactivestreams.Subscription)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop()
androidx.viewpager.widget.PagerTitleStrip$PageListener: void onChanged()
io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged$DistinctUntilChangedConditionalSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: void onError(java.lang.Throwable)
okhttp3.internal.http1.Http1Codec$ChunkedSink: okio.Timeout timeout()
io.reactivex.exceptions.CompositeException: void printStackTrace(io.reactivex.exceptions.CompositeException$PrintStreamOrWriter)
androidx.core.provider.SelfDestructiveThread: void post(java.lang.Runnable)
com.google.gson.internal.bind.TypeAdapters$13: java.lang.Number read(com.google.gson.stream.JsonReader)
androidx.loader.content.Loader: void startLoading()
androidx.core.provider.FontsContractCompat$TypefaceResult: FontsContractCompat$TypefaceResult(android.graphics.Typeface,int)
com.appspa.update.UpdateManager: void findNewVersion(com.appspa.update.entity.UpdateEntity,com.appspa.update.proxy.IUpdateProxy)
androidx.fragment.app.FragmentController: java.util.List retainNonConfig()
io.reactivex.internal.operators.completable.CompletableMaterialize: void subscribeActual(io.reactivex.SingleObserver)
org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)
com.zhy.http.okhttp.OkHttpUtils: void execute(com.zhy.http.okhttp.request.RequestCall,com.zhy.http.okhttp.callback.Callback)
com.xuexiang.xhttp2.XHttp: void testInitialize()
androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForHost(int)
io.reactivex.internal.util.VolatileSizeArrayList: java.util.ListIterator listIterator()
androidx.appcompat.widget.ListPopupWindow: void setForceIgnoreOutsideTouch(boolean)
androidx.core.util.AtomicFile: java.io.File getBaseFile()
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable create(io.reactivex.ObservableSource,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
androidx.core.view.ViewCompat: float getScaleX(android.view.View)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: void innerError(io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver$InnerObserver,java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: java.util.Collection read(com.google.gson.stream.JsonReader)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper: void runOnUiThread(java.lang.Runnable)
io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int,int)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver: void onComplete()
com.xuexiang.xhttp2.cache.key.Strings: void arrayToString(java.lang.Object[],java.lang.StringBuilder,java.util.Set)
io.reactivex.internal.operators.flowable.FlowableDebounce: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.observers.BlockingObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.request.PostRequest: PostRequest(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: FlowableZipIterable$ZipIterableSubscriber(org.reactivestreams.Subscriber,java.util.Iterator,io.reactivex.functions.BiFunction)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: void addFinal(java.lang.Object)
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint getPaint()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedReplayCallable: java.lang.Object call()
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver$OnComplete: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher$RailSubscription: ParallelFromPublisher$ParallelDispatcher$RailSubscription(io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher,int,int)
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.schedulers.ImmediateThinScheduler$ImmediateThinWorker: void dispose()
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: int getActivityCount()
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void tryEmit(java.lang.Object,io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver)
io.reactivex.observers.DisposableMaybeObserver: boolean isDisposed()
com.google.gson.internal.bind.TypeAdapters$2: TypeAdapters$2()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.content.MimeTypeFilter: boolean matches(java.lang.String,java.lang.String)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int,java.lang.CharSequence)
androidx.collection.MapCollections: java.util.Collection getValues()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(android.os.LocaleList)
retrofit2.KotlinExtensions: java.lang.Object await(retrofit2.Call,kotlin.coroutines.Continuation)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean isEmpty()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle: void subscribeActual(io.reactivex.SingleObserver)
com.zhy.http.okhttp.utils.Exceptions: void illegalArgument(java.lang.String,java.lang.Object[])
androidx.fragment.app.Fragment$SavedState: int describeContents()
androidx.versionedparcelable.VersionedParcel: void writeLong(long)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View)
com.xuexiang.xhttp2.cache.stategy.IStrategy: io.reactivex.Observable execute(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,long,io.reactivex.Observable,java.lang.reflect.Type)
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: void onError(java.lang.Throwable)
okhttp3.internal.cache.DiskLruCache: void rebuildJournal()
io.reactivex.android.schedulers.HandlerScheduler: HandlerScheduler(android.os.Handler,boolean)
com.xuexiang.xhttp2.request.BaseRequest: java.lang.String getBaseUrl()
okhttp3.internal.http2.Hpack$Reader: int readByte()
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
io.reactivex.internal.operators.observable.ObservableDebounce$DebounceObserver: void onComplete()
androidx.appcompat.widget.ScrollingTabContainerView: void onDetachedFromWindow()
com.xuexiang.xhttp2.cache.RxCache: int access$1700(com.xuexiang.xhttp2.cache.RxCache)
androidx.loader.app.LoaderManager: androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
com.google.gson.TypeAdapter: java.lang.Object fromJson(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorConditionalSubscription: void slowPath(long)
com.xuexiang.xhttp2.R$layout: R$layout()
com.google.gson.JsonArray: int size()
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: void setResource(io.reactivex.disposables.Disposable)
io.reactivex.internal.observers.FutureSingleObserver: void dispose()
androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.view.menu.MenuItemImpl: void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
androidx.appcompat.app.AppCompatDialog: void setTitle(int)
androidx.core.R$style: R$style()
com.appspa.update.widget.UpdateDialogFragment: java.lang.String getUrl()
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void cancel(java.lang.Object)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.lifecycle.LiveData: void onActive()
io.reactivex.Scheduler$Worker: long now(java.util.concurrent.TimeUnit)
androidx.appcompat.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)
okio.GzipSource: void consumeTrailer()
androidx.lifecycle.LiveData: void postValue(java.lang.Object)
com.google.gson.Gson: com.google.gson.FieldNamingStrategy fieldNamingStrategy()
com.appspa.demo.utils.SettingSPUtils: com.appspa.demo.utils.SettingSPUtils get()
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.DownloadEntity getDownLoadEntity()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean)
okio.RealBufferedSource: void readFully(okio.Buffer,long)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: void onError(java.lang.Throwable)
com.appspa.update.entity.UpdateError: java.lang.String make(int,java.lang.String)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: ObservableWithLatestFrom$WithLatestFromObserver(io.reactivex.Observer,io.reactivex.functions.BiFunction)
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
okio.Okio$1: Okio$1(okio.Timeout,java.io.OutputStream)
okio.AsyncTimeout$1: void flush()
io.reactivex.internal.operators.observable.ObservableThrottleLatest: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: void drain()
com.google.gson.stream.JsonReader: void checkLenient()
androidx.core.graphics.drawable.RoundedBitmapDrawable21: void setMipMap(boolean)
org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl: org.aspectj.lang.reflect.AjType getReturnType()
io.reactivex.internal.operators.observable.ObservableUnsubscribeOn$UnsubscribeObserver$DisposeTask: void run()
io.reactivex.internal.subscriptions.SubscriptionArbiter: void produced(long)
com.google.gson.JsonArray: double getAsDouble()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)
androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean hasStableIds()
io.reactivex.internal.operators.maybe.MaybeOnErrorComplete$OnErrorCompleteMaybeObserver: void onComplete()
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationCancel(android.view.View)
androidx.core.view.NestedScrollingParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.appspa.update.widget.UpdateDialogFragment: void onInstallApk()
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: void onComplete()
io.reactivex.internal.operators.mixed.SingleFlatMapObservable$FlatMapObserver: boolean isDisposed()
io.reactivex.internal.queue.SpscLinkedArrayQueue: long lpConsumerIndex()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void applyTheme(android.content.res.Resources$Theme)
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription: FlowableRangeLong$RangeSubscription(org.reactivestreams.Subscriber,long,long)
retrofit2.Utils$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferBoundaryObserver: ObservableBufferExactBoundary$BufferBoundaryObserver(io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver)
io.reactivex.internal.operators.single.SingleTimer$TimerDisposable: boolean isDisposed()
com.google.gson.internal.bind.TypeAdapters$33: java.lang.String toString()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setCustomView(int)
androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()
io.reactivex.internal.schedulers.SchedulerPoolFactory: SchedulerPoolFactory()
com.xuexiang.xhttp2.request.BaseRequest$5: io.reactivex.ObservableSource apply(io.reactivex.Observable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.viewpager.widget.ViewPager: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.flowable.FlowableDistinct$DistinctSubscriber: java.lang.Object poll()
io.reactivex.internal.operators.flowable.FlowableHide: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.Observable: io.reactivex.Observable empty()
io.reactivex.internal.operators.observable.ObservableDetach$DetachObserver: void onNext(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$1: FragmentManagerImpl$1(androidx.fragment.app.FragmentManagerImpl,boolean)
okhttp3.internal.http2.Http2Connection: boolean access$300(okhttp3.internal.http2.Http2Connection)
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: void run()
io.reactivex.internal.util.ListAddBiConsumer: io.reactivex.internal.util.ListAddBiConsumer[] values()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: void shutdown()
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
com.appspa.update.utils.FileUtils: void closeIOQuietly(java.io.Closeable[])
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int,java.lang.Object[])
androidx.collection.ArraySet: boolean add(java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)
androidx.appcompat.widget.DecorContentParent: void setLogo(int)
androidx.core.app.Person: androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle)
com.xuexiang.xhttp2.cache.RxCache$Builder: com.xuexiang.xhttp2.cache.RxCache$Builder cacheKey(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$15: java.lang.Character read(com.google.gson.stream.JsonReader)
com.appspa.update.utils.DialogUtils: void hideSoftInput(android.view.View)
androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
io.reactivex.internal.operators.single.SingleDetach$DetachSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.reactivex.internal.operators.parallel.ParallelFromPublisher: int parallelism()
androidx.core.app.NotificationCompat$WearableExtender: NotificationCompat$WearableExtender(android.app.Notification)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: ObservableElementAt$ElementAtObserver(io.reactivex.Observer,long,java.lang.Object,boolean)
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean disposeAll()
androidx.core.view.ViewCompat: void setScreenReaderFocusable(android.view.View,boolean)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: void request(long)
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void onChange()
androidx.fragment.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.core.widget.TextViewCompat: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
io.reactivex.internal.subscriptions.SubscriptionArbiter: SubscriptionArbiter(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void setBackgroundResource(int)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)
androidx.appcompat.view.menu.MenuAdapter: long getItemId(int)
androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableFilter$FilterConditionalSubscriber: int requestFusion(int)
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContextClickable()
androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String,java.lang.String[])
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getTitle()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation()
okhttp3.ResponseBody$BomAwareReader: ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset)
androidx.core.view.DisplayCutoutCompat: java.util.List getBoundingRects()
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
io.reactivex.internal.functions.Functions$Array6Func: java.lang.Object apply(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTrySubscriber: void request(long)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
io.reactivex.internal.util.ArrayListSupplier: java.util.concurrent.Callable asCallable()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: java.lang.String toString()
androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.appspa.update.widget.UpdateDialogFragment: void onConfigurationChanged(android.content.res.Configuration)
okhttp3.internal.http2.Http2Codec: void writeRequestHeaders(okhttp3.Request)
okhttp3.internal.http2.Huffman: Huffman()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: void onError(java.lang.Throwable)
androidx.lifecycle.ViewModel: java.lang.Object getTag(java.lang.String)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
androidx.core.provider.FontsContractCompat$4$4: void run()
retrofit2.adapter.rxjava2.ResultObservable$ResultObserver: ResultObservable$ResultObserver(io.reactivex.Observer)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
okio.Okio$3: void close()
com.appspa.update.utils.UpdateUtils: boolean isApkDownloaded(com.appspa.update.entity.UpdateEntity)
io.reactivex.internal.operators.flowable.FlowableConcatMap$SimpleScalarSubscription: FlowableConcatMap$SimpleScalarSubscription(java.lang.Object,org.reactivestreams.Subscriber)
androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()
androidx.appcompat.widget.DecorToolbar: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.graphics.drawable.RoundedBitmapDrawable21: boolean hasMipMap()
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver: void dispose()
com.google.gson.GsonBuilder: GsonBuilder(com.google.gson.Gson)
org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferSkipObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.cache.stategy.FirstRemoteStrategy: FirstRemoteStrategy()
com.xuexiang.xhttp2.R$drawable: R$drawable()
androidx.appcompat.view.menu.SubMenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: boolean onEdgeLock(int)
androidx.appcompat.widget.MenuPopupWindow: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.core.util.AtomicFile: void failWrite(java.io.FileOutputStream)
androidx.fragment.app.BackStackRecord: void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
androidx.core.graphics.drawable.RoundedBitmapDrawable21: RoundedBitmapDrawable21(android.content.res.Resources,android.graphics.Bitmap)
okhttp3.OkHttpClient$1: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
com.xuexiang.xhttp2.utils.Utils: java.lang.String getDirPath(java.lang.String)
com.xuexiang.xhttp2.cache.RxCache$SimpleSubscribe: void subscribe(io.reactivex.ObservableEmitter)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()
okio.Buffer: boolean exhausted()
io.reactivex.internal.operators.completable.CompletableFromSingle$CompletableFromSingleObserver: CompletableFromSingle$CompletableFromSingleObserver(io.reactivex.CompletableObserver)
io.reactivex.internal.disposables.EmptyDisposable: void complete(io.reactivex.CompletableObserver)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,boolean)
io.reactivex.processors.ReplayProcessor$ReplaySubscription: void request(long)
androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$InnerObserver: void onComplete()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.reactivex.internal.operators.maybe.MaybeDoFinally$DoFinallyObserver: MaybeDoFinally$DoFinallyObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Action)
androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.activity.R$drawable: R$drawable()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: AppCompatDelegateImpl$PanelFeatureState$SavedState()
org.reactivestreams.FlowAdapters$ReactiveToFlowProcessor: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableReplay$MulticastFlowable$DisposableConsumer: void accept(io.reactivex.disposables.Disposable)
io.reactivex.Observable: Observable()
androidx.core.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.subscriptions.BasicQueueSubscription: boolean offer(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.Intent getIntent()
com.google.gson.internal.bind.TypeAdapters$34: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.reactivex.internal.schedulers.SchedulerPoolFactory: int getIntProperty(boolean,java.lang.String,int,int,io.reactivex.functions.Function)
androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(int)
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: void dispose()
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor: okhttp3.Response logForResponse(okhttp3.Response,long)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: AppCompatDelegateImpl$AppCompatWindowCallback(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable: java.util.Iterator iterator()
androidx.appcompat.view.menu.ActionMenuItem: int getGroupId()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: int getRow()
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: void run()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])
com.google.gson.internal.$Gson$Types: $Gson$Types()
androidx.appcompat.widget.ActivityChooserView$Callbacks: boolean onLongClick(android.view.View)
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean)
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.MenuPopupWindow: void setExitTransition(java.lang.Object)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: boolean isCallbackWaitingForData()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
androidx.annotation.RequiresApi: int api()
io.reactivex.internal.subscribers.BasicFuseableSubscriber: void onComplete()
androidx.fragment.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.activity.Cancellable: void cancel()
androidx.fragment.app.FragmentTransitionImpl: void setEpicenter(java.lang.Object,android.view.View)
retrofit2.BuiltInConverters$ToStringConverter: java.lang.String convert(java.lang.Object)
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.core.provider.FontRequest: java.lang.String getProviderPackage()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9)
io.reactivex.internal.util.OpenHashSet: int mix(int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: FlowableTimeout$TimeoutConsumer(long,io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSelectorSupport)
androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)
androidx.appcompat.view.menu.StandardMenuPopup: void setAnchorView(android.view.View)
okio.RealBufferedSource: int readIntLe()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
androidx.appcompat.app.AlertController$AlertParams: AlertController$AlertParams(android.content.Context)
okhttp3.HttpUrl: java.lang.String encodedUsername()
androidx.fragment.app.BackStackRecord: boolean isEmpty()
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)
com.appspa.update.widget.UpdateDialogFragment: void refreshUpdateButton()
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
com.google.gson.internal.bind.TypeAdapters$10: void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray)
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable: io.reactivex.internal.operators.single.SingleInternalHelper$NoSuchElementCallable valueOf(java.lang.String)
com.jakewharton.disklrucache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(com.jakewharton.disklrucache.DiskLruCache,java.lang.String,long,java.io.InputStream[],long[],com.jakewharton.disklrucache.DiskLruCache$1)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void writeResponseBodyToDisk(java.lang.String,java.lang.String,okhttp3.ResponseBody)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)
androidx.appcompat.app.WindowDecorActionBar: void hide()
com.google.gson.internal.UnsafeAllocator$2: UnsafeAllocator$2(java.lang.reflect.Method,int)
okio.Buffer: int readIntLe()
io.reactivex.internal.operators.observable.ObservableMergeWithSingle$MergeWithObserver: void drainLoop()
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntent()
com.zhy.http.okhttp.callback.Callback: Callback()
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: void onSuccess(java.lang.Object)
androidx.core.graphics.PathUtils: PathUtils()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCircular(boolean)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: FlowableSwitchMap$SwitchMapInnerSubscriber(io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber,long,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int getType()
io.reactivex.Scheduler$Worker: io.reactivex.disposables.Disposable schedulePeriodically(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$3: void accept(java.lang.String)
com.appspa.update.service.DownloadService: void access$900(com.appspa.update.service.DownloadService,java.io.File)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.http1.Http1Codec: void finishRequest()
androidx.appcompat.widget.ToolbarWidgetWrapper: void dismissPopupMenus()
androidx.core.content.pm.PermissionInfoCompat: PermissionInfoCompat()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getMax()
io.reactivex.internal.operators.maybe.MaybeUsing: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: void onNext(java.lang.Object)
com.appspa.demo.http.OKHttpUpdateHttpService$2: void onResponse(java.lang.Object,int)
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: FlowableDematerialize$DematerializeSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
io.reactivex.internal.operators.mixed.CompletableAndThenPublisher$AndThenPublisherSubscriber: void cancel()
io.reactivex.internal.operators.observable.ObservableReplay$MulticastReplay: void subscribeActual(io.reactivex.Observer)
com.appspa.update.entity.DownloadEntity: java.lang.String toString()
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.appcompat.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterConditionalSubscriber: void onError(java.lang.Throwable)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void queueTask(androidx.core.app.NotificationManagerCompat$Task)
androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)
okhttp3.HttpUrl: void percentDecode(okio.Buffer,java.lang.String,int,int,boolean)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
okhttp3.internal.platform.Android10Platform: okhttp3.internal.platform.Platform buildIfSupported()
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(int,int,int)
androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)
androidx.core.widget.NestedScrollView$OnScrollChangeListener: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: void onError(java.lang.Throwable)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: OkHttpCall$ExceptionCatchingResponseBody$1(retrofit2.OkHttpCall$ExceptionCatchingResponseBody,okio.Source)
androidx.fragment.app.Fragment$AnimationInfo: Fragment$AnimationInfo()
com.xuexiang.xhttp2.model.XHttpRequest: boolean isAccessToken()
androidx.core.text.BidiFormatter: boolean isRtlContext()
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableCache: void subscribeActual(org.reactivestreams.Subscriber)
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.graphics.drawable.DrawableWrapper: void jumpToCurrentState()
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void setFirst(io.reactivex.internal.operators.flowable.FlowableReplay$Node)
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate: void subscribeActual(io.reactivex.MaybeObserver)
okhttp3.HttpUrl$Builder: int schemeDelimiterOffset(java.lang.String,int,int)
io.reactivex.internal.operators.flowable.FlowableRangeLong: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.ActionBar: void setCustomView(int)
io.reactivex.internal.operators.flowable.FlowableCreate$NoOverflowBaseAsyncEmitter: FlowableCreate$NoOverflowBaseAsyncEmitter(org.reactivestreams.Subscriber)
io.reactivex.internal.util.HashMapSupplier: java.util.Map call()
com.google.gson.internal.ConstructorConstructor$14: java.lang.Object construct()
com.google.gson.internal.bind.TypeAdapters$35: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: java.lang.CharSequence subSequence(int,int)
io.reactivex.internal.operators.completable.CompletableObserveOn: void subscribeActual(io.reactivex.CompletableObserver)
okio.ByteString: okio.ByteString of(byte[],int,int)
com.google.gson.internal.bind.TypeAdapters$32: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.reactivex.internal.util.VolatileSizeArrayList: int indexOf(java.lang.Object)
okhttp3.internal.http1.Http1Codec$FixedLengthSource: void close()
androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: SearchView$UpdatableTouchDelegate(android.graphics.Rect,android.graphics.Rect,android.view.View)
io.reactivex.processors.ReplayProcessor$SizeAndTimeBoundReplayBuffer: void error(java.lang.Throwable)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
io.reactivex.internal.schedulers.RxThreadFactory: RxThreadFactory(java.lang.String,int,boolean)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.subscribers.QueueDrainSubscriberWip: QueueDrainSubscriberWip()
androidx.core.app.NotificationCompat: java.lang.String getCategory(android.app.Notification)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver: BlockingObservableMostRecent$MostRecentObserver(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: void onError(java.lang.Throwable)
androidx.core.app.TaskStackBuilder: void startActivities()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String)
com.xuexiang.xhttp2.interceptor.BaseDynamicInterceptor: okhttp3.Request$Builder updateHeaders(okhttp3.Request$Builder)
com.xuexiang.xhttp2.R$integer: R$integer()
androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.fragment.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.app.ToolbarActionBar: int getDisplayOptions()
androidx.appcompat.widget.AlertDialogLayout: boolean tryOnMeasure(int,int)
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionExpand(android.view.MenuItem)
okio.InflaterSource: void releaseInflatedBytes()
androidx.fragment.app.Fragment: java.lang.Object requireHost()
com.appspa.update.utils.ShellUtils: boolean checkRootPermission()
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: java.lang.Runnable getWrappedRunnable()
androidx.appcompat.app.ActionBar: void setElevation(float)
androidx.loader.content.CursorLoader: void onStopLoading()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[])
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onViewPositionChanged(android.view.View,int,int,int,int)
okio.GzipSink: void close()
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: int getHorizontalOriginalOffset()
retrofit2.HttpException: java.lang.String getMessage(retrofit2.Response)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
okio.Okio: okio.Source source(java.net.Socket)
io.reactivex.internal.operators.observable.ObservableMap$MapObserver: ObservableMap$MapObserver(io.reactivex.Observer,io.reactivex.functions.Function)
androidx.fragment.app.FragmentTransition$3: FragmentTransition$3(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: void subscribeActual()
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: void disposeInner()
com.google.gson.internal.bind.TypeAdapters$7: java.lang.Number read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber$OtherSubscriber: void onNext(java.lang.Object)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
com.google.gson.internal.ConstructorConstructor$5: java.lang.Object construct()
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
androidx.fragment.app.FragmentManagerNonConfig: FragmentManagerNonConfig(java.util.Collection,java.util.Map,java.util.Map)
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber: FlowableOnErrorReturn$OnErrorReturnSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(int)
androidx.appcompat.app.TwilightManager: boolean isNight()
androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: java.lang.Object poll()
okhttp3.internal.Util: java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[])
androidx.appcompat.app.WindowDecorActionBar: void showForActionMode()
com.google.gson.internal.bind.TypeAdapters$16: void write(com.google.gson.stream.JsonWriter,java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: void onError(java.lang.Throwable)
androidx.core.widget.TextViewCompat$OreoCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)
androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)
io.reactivex.internal.disposables.CancellableDisposable: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: void onComplete()
io.reactivex.internal.observers.QueueDrainSubscriberPad0: QueueDrainSubscriberPad0()
io.reactivex.subjects.BehaviorSubject: void onComplete()
okhttp3.internal.http.HttpDate: java.lang.String format(java.util.Date)
androidx.versionedparcelable.VersionedParcelStream: boolean isStream()
androidx.customview.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: void replay(io.reactivex.subjects.ReplaySubject$ReplayDisposable)
com.google.gson.internal.LinkedTreeMap$Node: LinkedTreeMap$Node(com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient: java.lang.CharSequence convertToString(android.database.Cursor)
okhttp3.internal.http2.Hpack: Hpack()
androidx.fragment.app.FragmentTransaction: FragmentTransaction()
io.reactivex.internal.operators.flowable.FlowableZip: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.MenuPopup: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void request(long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String)
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
okhttp3.Request: java.lang.Object tag()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void updateDownLoadProgress(long,long,com.xuexiang.xhttp2.callback.CallBack)
androidx.appcompat.widget.ListPopupWindow: void setDropDownGravity(int)
androidx.core.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor)
com.appspa.update.utils.DialogUtils: android.view.View findTouchEditText(android.view.ViewGroup,android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void error(java.lang.Throwable)
io.reactivex.Maybe: Maybe()
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void dispose()
com.google.gson.DefaultDateTypeAdapter: java.lang.Class verifyDateType(java.lang.Class)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: io.reactivex.internal.operators.observable.ObservableReplay$Node getHead()
androidx.loader.content.AsyncTaskLoader$LoadTask: void onCancelled(java.lang.Object)
com.appspa.update.service.DownloadService$FileDownloadCallBack$1: void run()
androidx.core.app.ShareCompat$IntentReader: java.lang.CharSequence getCallingApplicationLabel()
androidx.appcompat.widget.ResourceManagerInternal: boolean arrayContains(int[],int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStarted()
androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()
androidx.loader.content.ModernAsyncTask: boolean cancel(boolean)
androidx.appcompat.view.menu.MenuView$ItemView: boolean showsIcon()
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
com.appspa.update.utils.UpdateUtils: boolean isSDCardEnable()
com.appspa.update.widget.UpdateDialogActivity: void onCreate(android.os.Bundle)
com.google.gson.internal.bind.TypeAdapters$35$1: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver: void run()
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
io.reactivex.internal.operators.single.SingleDoOnSuccess$DoOnSuccess: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableElementAtSingle$ElementAtObserver: void onNext(java.lang.Object)
com.xuexiang.xhttp2.cache.core.LruDiskCache: boolean doRemove(java.lang.String)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.core.content.res.GrowingArrayUtils: long[] append(long[],int,long)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: void onError(java.lang.Throwable)
androidx.versionedparcelable.VersionedParcel: java.util.Set readSet(java.util.Set,int)
androidx.appcompat.app.ToolbarActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
com.appspa.update.widget.NumberProgressBar: NumberProgressBar(android.content.Context)
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntilObserver: ObservableSkipUntil$SkipUntilObserver(io.reactivex.Observer,io.reactivex.internal.disposables.ArrayCompositeDisposable)
io.reactivex.internal.operators.maybe.MaybeCount$CountMaybeObserver: void dispose()
androidx.appcompat.view.menu.MenuBuilder: boolean getOptionalIconsVisible()
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void drain()
androidx.collection.ArraySet$1: void colPut(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentPagerAdapter: java.lang.String makeFragmentName(int,long)
androidx.appcompat.view.menu.MenuItemImpl: boolean showsTextAsAction()
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualSubscriber: void cancel()
androidx.appcompat.view.SupportMenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context)
androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()
androidx.appcompat.widget.PopupMenu: android.widget.ListView getMenuListView()
okio.RealBufferedSource: long readHexadecimalUnsignedLong()
androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)
androidx.vectordrawable.R$drawable: R$drawable()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
retrofit2.adapter.rxjava2.CallEnqueueObservable: void subscribeActual(io.reactivex.Observer)
okio.Buffer: okio.BufferedSink write(byte[])
com.zhy.http.okhttp.request.RequestCall: com.zhy.http.okhttp.request.OkHttpRequest getOkHttpRequest()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)
androidx.fragment.app.FragmentTransitionImpl: boolean canHandle(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)
androidx.fragment.app.Fragment: void onPause()
com.google.gson.internal.LinkedHashTreeMap: com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: void dispose()
androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
com.google.gson.internal.bind.JsonTreeWriter: void close()
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.google.gson.Gson: Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
androidx.core.database.sqlite.SQLiteCursorCompat: SQLiteCursorCompat()
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.cursoradapter.widget.SimpleCursorAdapter: androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder()
io.reactivex.internal.operators.flowable.FlowableRepeat$RepeatSubscriber: void onNext(java.lang.Object)
androidx.annotation.LongDef: boolean flag()
androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
com.google.gson.internal.bind.TypeAdapters$8: java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader)
org.aspectj.runtime.internal.cflowstack.ThreadStackImpl11: ThreadStackImpl11()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: void onSuccess(java.lang.Object)
com.zhy.http.okhttp.log.LoggerInterceptor: java.lang.String bodyToString(okhttp3.Request)
io.reactivex.internal.observers.BiConsumerSingleObserver: BiConsumerSingleObserver(io.reactivex.functions.BiConsumer)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getIntrinsicHeight()
androidx.appcompat.view.ActionMode: boolean getTitleOptionalHint()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
androidx.appcompat.widget.SearchView: void onActionViewExpanded()
com.google.gson.stream.JsonReader: int doPeek()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: LoaderManagerImpl$LoaderViewModel$1()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: NotificationCompat$CarExtender$UnreadConversation$Builder(java.lang.String)
androidx.core.os.LocaleListCompat: java.util.Locale get(int)
androidx.appcompat.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl: boolean hasWindowFeature(int)
androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl$ThreadStackImpl: ThreadStackFactoryImpl$ThreadStackImpl()
io.reactivex.internal.operators.single.SingleUnsubscribeOn$UnsubscribeOnSingleObserver: boolean isDisposed()
com.appspa.update.proxy.impl.DefaultUpdateDownloader: void startDownload(com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
androidx.core.view.ViewCompat$4: ViewCompat$4(int,java.lang.Class,int,int)
androidx.fragment.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
io.reactivex.internal.operators.observable.ObservableScalarXMap: io.reactivex.Observable scalarXMap(java.lang.Object,io.reactivex.functions.Function)
okhttp3.internal.http1.Http1Codec: java.lang.String readHeaderLine()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void next(java.lang.Object)
androidx.core.view.ViewCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
okio.ByteString: int compareTo(okio.ByteString)
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.String)
retrofit2.HttpServiceMethod: retrofit2.Converter createResponseConverter(retrofit2.Retrofit,java.lang.reflect.Method,java.lang.reflect.Type)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed$DebounceTimedObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuAdapter: java.lang.Object getItem(int)
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.subjects.AsyncSubject$AsyncDisposable: void onComplete()
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel)
org.reactivestreams.FlowAdapters$ReactiveToFlowSubscription: FlowAdapters$ReactiveToFlowSubscription(java.util.concurrent.Flow$Subscription)
androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.ArrayList,int)
androidx.fragment.app.Fragment: boolean isInLayout()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
okhttp3.Cache$2: boolean hasNext()
com.appspa.update.utils.ColorUtils: int getColor(android.content.Context,int)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)
io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject$ReplayDisposable[] terminate(java.lang.Object)
com.appspa.update.widget.UpdateDialog: void showUpdateButton()
com.zhy.http.okhttp.request.PostFileRequest$1: PostFileRequest$1(com.zhy.http.okhttp.request.PostFileRequest,com.zhy.http.okhttp.callback.Callback)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: FlowableTimeout$TimeoutSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
androidx.appcompat.view.SupportMenuInflater: java.lang.Object findRealOwner(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: boolean isDisposed()
com.google.gson.FieldNamingPolicy$3: FieldNamingPolicy$3(java.lang.String,int)
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object remove(int)
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationStart(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ButtonBarLayout: boolean isStacked()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver(io.reactivex.MaybeObserver)
androidx.core.text.util.LinkifyCompat: LinkifyCompat()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
com.google.gson.internal.bind.DateTypeAdapter: java.util.Date deserializeToDate(java.lang.String)
io.reactivex.internal.operators.single.SingleCache$CacheDisposable: void dispose()
androidx.customview.widget.ViewDragHelper$1: ViewDragHelper$1()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver: void onComplete()
okhttp3.internal.http2.Http2Stream: boolean isOpen()
com.appspa.update.utils.DialogUtils: boolean isTouchView(android.view.View,android.view.MotionEvent)
com.google.gson.internal.PreJava9DateFormatProvider: java.text.DateFormat getUSDateFormat(int)
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator: LinkedHashTreeMap$LinkedTreeMapIterator(com.google.gson.internal.LinkedHashTreeMap)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver: void otherError(java.lang.Throwable)
okio.SegmentPool: okio.Segment take()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
retrofit2.adapter.rxjava2.CallEnqueueObservable$CallCallback: void onResponse(retrofit2.Call,retrofit2.Response)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
androidx.core.app.JobIntentService$CommandProcessor: void onCancelled(java.lang.Object)
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStarted()
com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)
androidx.core.view.ViewCompat: void setAlpha(android.view.View,float)
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: void onError(java.lang.Throwable)
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
io.reactivex.internal.operators.flowable.FlowableRange$BaseRangeSubscription: void slowPath(long)
io.reactivex.observers.SerializedObserver: void onNext(java.lang.Object)
androidx.appcompat.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)
androidx.core.view.ViewCompat: float getPivotY(android.view.View)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: void onError(java.lang.Throwable)
io.reactivex.internal.util.EndConsumerHelper: boolean validate(org.reactivestreams.Subscription,org.reactivestreams.Subscription,java.lang.Class)
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
okhttp3.internal.http1.Http1Codec$FixedLengthSink: Http1Codec$FixedLengthSink(okhttp3.internal.http1.Http1Codec,long)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int)
okhttp3.internal.http2.Http2Writer: void flush()
com.google.gson.stream.JsonReader: boolean isLiteral(char)
io.reactivex.Observable: io.reactivex.Observable switchIfEmpty(io.reactivex.ObservableSource)
okio.Okio: okio.AsyncTimeout timeout(java.net.Socket)
androidx.core.util.Pools$SynchronizedPool: Pools$SynchronizedPool(int)
androidx.fragment.app.FragmentManagerImpl$2: FragmentManagerImpl$2(androidx.fragment.app.FragmentManagerImpl)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: void show(int,int)
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: void onComplete()
okhttp3.internal.http2.PushObserver$1: boolean onHeaders(int,java.util.List,boolean)
androidx.appcompat.view.menu.MenuView$ItemView: void setChecked(boolean)
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
okio.RealBufferedSource$1: int read()
io.reactivex.internal.schedulers.SchedulerWhen$ImmediateAction: SchedulerWhen$ImmediateAction(java.lang.Runnable)
io.reactivex.internal.operators.observable.ObservableSingleSingle: ObservableSingleSingle(io.reactivex.ObservableSource,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver: void onError(java.lang.Throwable)
androidx.core.app.JobIntentService: void onCreate()
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void drain()
androidx.core.view.ViewConfigurationCompat: ViewConfigurationCompat()
com.xuexiang.xhttp2.reflect.TypeException: TypeException(java.lang.Throwable)
androidx.fragment.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()
io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection: void accept(java.lang.Object)
androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])
io.reactivex.internal.operators.maybe.MaybeMergeArray$ClqSimpleQueue: boolean offer(java.lang.Object,java.lang.Object)
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.DownloadEntity getPatchDownloadEntity()
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation()
io.reactivex.internal.operators.single.SingleDematerialize$DematerializeObserver: SingleDematerialize$DematerializeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function)
com.appspa.update.utils.UpdateUtils: void processUpdateEntity(com.appspa.update.entity.UpdateEntity,java.lang.String,com.appspa.update.proxy.IUpdateProxy)
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber$InnerObserver: void onSuccess(java.lang.Object)
okio.ByteString: okio.ByteString hmac(java.lang.String,okio.ByteString)
androidx.appcompat.view.menu.CascadingMenuPopup: void show()
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: ParallelSortedJoin$SortedJoinInnerSubscriber(io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription,int)
okhttp3.ConnectionSpec: ConnectionSpec(okhttp3.ConnectionSpec$Builder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)
androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)
io.reactivex.internal.util.VolatileSizeArrayList: int size()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.entity.PromptEntity: int describeContents()
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: void request(long)
com.appspa.demo.custom.CustomUpdateParser: CustomUpdateParser()
okhttp3.Cookie: boolean secure()
androidx.fragment.app.FragmentTabHost$DummyTabFactory: FragmentTabHost$DummyTabFactory(android.content.Context)
androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)
androidx.appcompat.app.AlertController$2: AlertController$2(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
io.reactivex.internal.disposables.DisposableHelper: boolean set(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentManagerState: FragmentManagerState(android.os.Parcel)
com.appspa.update.utils.FileUtils: java.lang.String getAppIntPath(android.content.Context)
androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)
okhttp3.internal.cache.DiskLruCache$Editor: void detach()
io.reactivex.internal.operators.single.SingleDoOnSubscribe: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: void drain()
okio.RealBufferedSource: java.lang.String readUtf8LineStrict()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipTagForward()
androidx.core.view.animation.PathInterpolatorApi14: PathInterpolatorApi14(android.graphics.Path)
com.appspa.update.AppSpace: com.appspa.update.AppSpace get()
okio.SegmentedByteString: java.lang.String base64Url()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionStart(android.transition.Transition)
io.reactivex.internal.operators.mixed.ScalarXMapZHelper: boolean tryAsMaybe(java.lang.Object,io.reactivex.functions.Function,io.reactivex.Observer)
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler applyRequireNonNull(io.reactivex.functions.Function,java.util.concurrent.Callable)
com.google.gson.internal.bind.JsonTreeWriter: JsonTreeWriter()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: AnimatedStateListDrawableCompat$AnimatedStateListState(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)
com.appspa.update.widget.UpdateDialog: void doStart()
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: void innerCloseError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription: void slowPath(long)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: boolean add(io.reactivex.internal.operators.observable.ObservableReplay$InnerDisposable)
io.reactivex.processors.ReplayProcessor: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnComplete: FlowableDelay$DelaySubscriber$OnComplete(io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
io.reactivex.internal.operators.flowable.FlowableLastSingle$LastSubscriber: boolean isDisposed()
androidx.appcompat.widget.ActionBarBackgroundDrawable: ActionBarBackgroundDrawable(androidx.appcompat.widget.ActionBarContainer)
androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment)
io.reactivex.Notification: java.lang.Object getValue()
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyShortcut(int,android.view.KeyEvent)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySubscriber: FlowableBufferBoundarySupplier$BufferBoundarySubscriber(io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber)
androidx.core.os.LocaleListInterface: java.lang.String toLanguageTags()
com.zhy.http.okhttp.builder.GetBuilder: java.lang.String appendParams(java.lang.String,java.util.Map)
retrofit2.ParameterHandler$2: ParameterHandler$2(retrofit2.ParameterHandler)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)
androidx.collection.MapCollections: java.lang.Object colSetValue(int,java.lang.Object)
androidx.activity.OnBackPressedDispatcherOwner: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.xuexiang.xhttp2.transform.func.OriginalStringFuc: java.lang.Object apply(java.lang.Object)
retrofit2.adapter.rxjava2.HttpException: HttpException(retrofit2.Response)
androidx.core.math.MathUtils: MathUtils()
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: FlowableDoOnLifecycle$SubscriptionLambdaSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Consumer,io.reactivex.functions.LongConsumer,io.reactivex.functions.Action)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
okio.Base64: java.lang.String encode(byte[])
okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()
androidx.core.view.ViewCompat: int resolveSizeAndState(int,int,int)
io.reactivex.observers.SerializedObserver: void onComplete()
com.appspa.update.entity.UpdateEntity: boolean isForce()
io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate$InnerSubscriber: void onComplete()
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcelable)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutOtherMaybeObserver: void onComplete()
okio.ByteString: okio.ByteString decodeBase64(java.lang.String)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
io.reactivex.observers.TestObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.R$color: R$color()
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
androidx.fragment.R$layout: R$layout()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
io.reactivex.internal.subscribers.BasicFuseableSubscriber: BasicFuseableSubscriber(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(int,int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber: void next()
androidx.appcompat.view.menu.MenuBuilder: void clearAll()
io.reactivex.internal.operators.flowable.FlowableDoAfterNext$DoAfterSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnComplete: void run()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier: void subscribeActual(org.reactivestreams.Subscriber)
okio.AsyncTimeout$Watchdog: AsyncTimeout$Watchdog()
com.google.gson.internal.bind.JsonTreeReader: java.lang.String locationString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random)
io.reactivex.internal.disposables.EmptyDisposable: void complete(io.reactivex.MaybeObserver)
org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.String[] array()
androidx.lifecycle.LiveData$LifecycleBoundObserver: LiveData$LifecycleBoundObserver(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
androidx.appcompat.widget.SuggestionsAdapter: void changeCursor(android.database.Cursor)
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: void onNext(java.lang.Object)
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle[] getBundleArrayForMessages(java.util.List)
io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther$MainSubscriber$OtherSubscriber: void onComplete()
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okio.RealBufferedSink: okio.BufferedSink writeDecimalLong(long)
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)
androidx.fragment.app.FragmentStatePagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: void close()
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: void clear()
androidx.core.app.ActivityRecreator: ActivityRecreator()
com.google.gson.internal.LinkedTreeMap$EntrySet$1: java.util.Map$Entry next()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void dispose()
okhttp3.internal.ws.RealWebSocket: void loopReader()
okio.SegmentedByteString: int hashCode()
androidx.appcompat.view.menu.ActionMenuItem: boolean invoke()
androidx.appcompat.app.AlertController$AlertParams$2: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: $Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
androidx.appcompat.widget.ActionMenuPresenter: android.view.View findViewForItem(android.view.MenuItem)
androidx.appcompat.view.SupportMenuInflater: java.lang.Object getRealOwner()
io.reactivex.internal.operators.maybe.MaybeHide$HideMaybeObserver: MaybeHide$HideMaybeObserver(io.reactivex.MaybeObserver)
androidx.core.graphics.ColorUtils: double calculateContrast(int,int)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void run()
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
androidx.fragment.app.Fragment: Fragment()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void innerComplete(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.view.ActionMode: android.view.View getCustomView()
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
androidx.appcompat.widget.SuggestionsAdapter: int getQueryRefinement()
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: void onNext(io.reactivex.CompletableSource)
androidx.collection.CircularIntArray: CircularIntArray(int)
com.xuexiang.xhttp2.cache.core.LruMemoryCache: java.lang.Object load(java.lang.reflect.Type,java.lang.String,long)
io.reactivex.internal.observers.FutureObserver: void onComplete()
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromFirstChar(java.util.Locale)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl: void setIsLongpressEnabled(boolean)
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: void clear()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void start()
io.reactivex.internal.operators.maybe.MaybeZipIterable$SingletonArrayFunc: MaybeZipIterable$SingletonArrayFunc(io.reactivex.internal.operators.maybe.MaybeZipIterable)
io.reactivex.internal.operators.parallel.ParallelMapTry$ParallelMapTryConditionalSubscriber: ParallelMapTry$ParallelMapTryConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)
okhttp3.internal.connection.RouteSelector: java.lang.String getHostString(java.net.InetSocketAddress)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)
com.appspa.update.entity.DownloadEntity$1: java.lang.Object[] newArray(int)
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
androidx.appcompat.widget.ListPopupWindow: void setOverlapAnchor(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.maybe.MaybeCache: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableJoin$JoinSubscription: void innerValue(boolean,java.lang.Object)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable()
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)
androidx.core.view.MotionEventCompat: float getX(android.view.MotionEvent,int)
androidx.core.os.LocaleListCompat: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)
androidx.appcompat.app.AlertController$2: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
okio.Okio$1: java.lang.String toString()
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: java.lang.Object poll()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
okhttp3.ResponseBody: java.nio.charset.Charset charset()
androidx.core.view.ViewPropertyAnimatorCompat: void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener)
androidx.appcompat.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.customview.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: java.lang.Object enterTransform(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferSkipSubscriber: void request(long)
okio.AsyncTimeout$2: java.lang.String toString()
com.google.gson.internal.bind.TypeAdapters$27: void write(com.google.gson.stream.JsonWriter,java.util.Calendar)
androidx.core.app.ActivityCompat$1: ActivityCompat$1(java.lang.String[],android.app.Activity,int)
androidx.fragment.app.Fragment$OnStartEnterTransitionListener: void startListening()
androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)
com.xuexiang.xhttp2.utils.TypeUtils: java.lang.Class getClass(java.lang.reflect.Type,int)
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableCollect$CollectObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.DecorToolbar: int getHeight()
androidx.appcompat.view.menu.StandardMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void drain()
androidx.appcompat.view.menu.MenuItemImpl: boolean isExclusiveCheckable()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onInvalidated()
com.google.gson.internal.bind.TypeAdapters$3: TypeAdapters$3()
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver$InnerObserver: void onError(java.lang.Throwable)
io.reactivex.internal.schedulers.DisposeOnCancel: boolean isDone()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactUnboundedObserver: void dispose()
androidx.core.provider.FontsContractCompat: void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
androidx.versionedparcelable.VersionedParcel: void writeBundle(android.os.Bundle)
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getCancelLabel()
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable)
com.google.gson.internal.Excluder: boolean excludeField(java.lang.reflect.Field,boolean)
androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
retrofit2.RequestBuilder: void addHeaders(okhttp3.Headers)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: boolean hasCompleted()
retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory create()
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(java.lang.CharSequence)
androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)
io.reactivex.internal.operators.flowable.FlowableReplay$SizeBoundReplayBuffer: void truncate()
androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
androidx.core.widget.NestedScrollView$SavedState: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()
androidx.versionedparcelable.VersionedParcelize: java.lang.String jetifyAs()
androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: void dispose()
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy: ShareActionProvider$ShareActivityChooserModelPolicy(androidx.appcompat.widget.ShareActionProvider)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
com.appspa.demo.custom.CustomUpdateParser: void parseJson(java.lang.String,com.appspa.update.listener.IUpdateParseCallback)
androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)
io.reactivex.internal.util.EmptyComponent: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableError: ObservableError(java.util.concurrent.Callable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()
androidx.appcompat.app.ToolbarActionBar: boolean collapseActionView()
io.reactivex.internal.operators.observable.ObservableLastSingle$LastObserver: ObservableLastSingle$LastObserver(io.reactivex.SingleObserver,java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: void onNext(java.lang.Object)
androidx.core.app.NotificationCompat: NotificationCompat()
io.reactivex.internal.operators.flowable.FlowableReplay$SizeAndTimeBoundReplayBuffer: java.lang.Object enterTransform(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: void fastPath()
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List getMessages()
io.reactivex.internal.operators.mixed.CompletableAndThenObservable$AndThenObservableObserver: void dispose()
com.appspa.update.utils.UpdateFileProvider: UpdateFileProvider()
androidx.lifecycle.LiveData$1: LiveData$1(androidx.lifecycle.LiveData)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1: java.lang.Object[] newArray(int)
org.aspectj.runtime.reflect.JoinPointImpl$StaticPartImpl: java.lang.String getKind()
io.reactivex.internal.operators.single.SingleUnsubscribeOn: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)
okhttp3.internal.Util: java.lang.String inet6AddressToAscii(byte[])
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void emit()
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void close()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)
io.reactivex.internal.subscribers.QueueDrainSubscriberPad4: QueueDrainSubscriberPad4()
androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)
io.reactivex.internal.operators.observable.ObservableBufferBoundary: void subscribeActual(io.reactivex.Observer)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: void releasePermission()
androidx.customview.widget.ViewDragHelper: int computeSettleDuration(android.view.View,int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallySubscriber: void onError(java.lang.Throwable)
androidx.loader.R$drawable: R$drawable()
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator: boolean win(int)
io.reactivex.subjects.UnicastSubject: void drain()
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object wrapTransitionInSet(java.lang.Object)
okhttp3.internal.http.HttpDate: HttpDate()
androidx.core.provider.FontsContractCompat: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeConditionalSubscription: void slowPath(long)
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.subjects.SerializedSubject: void emitLoop()
com.google.gson.stream.JsonReader: void skipToEndOfLine()
androidx.appcompat.widget.AbsActionBarView$1: AbsActionBarView$1(androidx.appcompat.widget.AbsActionBarView)
com.google.gson.Gson: com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer)
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
androidx.fragment.app.FragmentManagerImpl: void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: java.lang.String getHTMLElement()
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
androidx.core.app.NotificationCompat$Builder: int getPriority()
androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)
okhttp3.Cookie: long parseMaxAge(java.lang.String)
androidx.fragment.app.FragmentTransition: void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
androidx.appcompat.R$bool: R$bool()
io.reactivex.internal.schedulers.SchedulerPoolFactory: void tryStart(boolean)
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: void trim()
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Consumer,io.reactivex.functions.BiFunction)
androidx.collection.MapCollections$EntrySet: void clear()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: void onError(java.lang.Throwable)
com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: ActionMenuPresenter$PopupPresenterCallback(androidx.appcompat.widget.ActionMenuPresenter)
io.reactivex.internal.operators.observable.ObservableInternalHelper$ItemDelayFunction: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: void onComplete()
io.reactivex.internal.schedulers.ExecutorScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com.google.gson.Gson$FutureTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.single.SingleDoOnEvent$DoOnEvent: void onError(java.lang.Throwable)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
okhttp3.internal.http.HttpHeaders: HttpHeaders()
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab)
androidx.core.app.RemoteInput: boolean isDataOnly()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)
androidx.appcompat.app.ToolbarActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void onComplete()
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: void onNext(java.lang.Object)
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: java.lang.String toString()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.customview.widget.FocusStrategy: int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)
retrofit2.BuiltInConverters$UnitResponseBodyConverter: java.lang.Object convert(java.lang.Object)
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner: AndroidPlatform$AndroidCertificateChainCleaner(java.lang.Object,java.lang.reflect.Method)
androidx.appcompat.widget.PopupMenu: void setOnDismissListener(androidx.appcompat.widget.PopupMenu$OnDismissListener)
androidx.appcompat.app.ToolbarActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.SearchView: void adjustDropDownSizeAndPosition()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void request(long)
io.reactivex.internal.operators.observable.ObservableJoin: void subscribeActual(io.reactivex.Observer)
okhttp3.HttpUrl: java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
io.reactivex.internal.schedulers.ScheduledDirectTask: java.lang.Object call()
com.appspa.update.entity.DownloadEntity$1: com.appspa.update.entity.DownloadEntity[] newArray(int)
androidx.core.view.ViewCompat: int getOverScrollMode(android.view.View)
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator: void subscribe(io.reactivex.MaybeSource,io.reactivex.MaybeSource)
androidx.fragment.app.ListFragment: void ensureList()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowOverlapSubscriber: void onComplete()
androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer: void onComplete()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.gson.JsonParseException: JsonParseException(java.lang.Throwable)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setColor(int)
io.reactivex.internal.disposables.DisposableHelper: boolean replace(java.util.concurrent.atomic.AtomicReference,io.reactivex.disposables.Disposable)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
com.google.gson.internal.PreJava9DateFormatProvider: java.text.DateFormat getUSDateTimeFormat(int,int)
androidx.core.os.BuildCompat: BuildCompat()
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: java.lang.Long poll()
io.reactivex.internal.operators.single.SingleDelayWithObservable$OtherSubscriber: void dispose()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.internal.disposables.SequentialDisposable: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestInnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)
androidx.collection.SimpleArrayMap: void clear()
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
io.reactivex.internal.schedulers.InstantPeriodicTask: java.lang.Object call()
org.aspectj.runtime.reflect.CatchClauseSignatureImpl: java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
androidx.core.view.ViewCompat: java.util.List getActionList(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isImportantForAccessibility()
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver: boolean isDisposed()
com.google.gson.FieldAttributes: boolean hasModifier(int)
androidx.fragment.app.Fragment: boolean isHideReplaced()
retrofit2.Utils$ParameterizedTypeImpl: java.lang.String toString()
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: java.lang.String toString()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char)
io.reactivex.internal.operators.single.SingleCache: void remove(io.reactivex.internal.operators.single.SingleCache$CacheDisposable)
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.activity.ComponentActivity$1: void run()
org.aspectj.lang.Aspects: Aspects()
com.xuexiang.xhttp2.request.DownloadRequest: io.reactivex.Observable generateRequest()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: FlowableThrottleLatest$ThrottleLatestSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker,boolean)
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: boolean isDisposed()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
io.reactivex.internal.operators.flowable.FlowableCache: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode fromHttp2(int)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context,int)
io.reactivex.internal.operators.observable.ObservableJust: ObservableJust(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onStateChange(int[])
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: void onTouchExplorationStateChanged(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isStateful()
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void setResource(io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)
io.reactivex.internal.subscribers.BlockingBaseSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void removeInner(io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver)
com.xuexiang.xhttp2.request.body.UploadProgressRequestBody$CountingSink: void write(okio.Buffer,long)
com.zhy.http.okhttp.callback.BitmapCallback: java.lang.Object parseNetworkResponse(okhttp3.Response,int)
androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)
io.reactivex.internal.disposables.DisposableHelper: DisposableHelper(java.lang.String,int)
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
com.appspa.update.R$styleable: R$styleable()
com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type)
retrofit2.Response: Response(okhttp3.Response,java.lang.Object,okhttp3.ResponseBody)
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: void onNext(java.lang.Object)
com.appspa.update.service.DownloadService$FileDownloadCallBack: void onSuccess(java.io.File)
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.app.ActionBar: void setDisplayOptions(int,int)
io.reactivex.internal.operators.flowable.FlowableToListSingle$ToListSubscriber: FlowableToListSingle$ToListSubscriber(io.reactivex.SingleObserver,java.util.Collection)
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinSubscription: void cancel()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)
io.reactivex.internal.operators.observable.ObservableTimeInterval$TimeIntervalObserver: ObservableTimeInterval$TimeIntervalObserver(io.reactivex.Observer,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.zhy.http.okhttp.request.OkHttpRequest: okhttp3.Request generateRequest(com.zhy.http.okhttp.callback.Callback)
io.reactivex.internal.operators.flowable.FlowableCreate$BufferAsyncEmitter: void onUnsubscribed()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)
androidx.core.app.NotificationCompat$Style: float constrain(float,float,float)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber(org.reactivestreams.Subscriber,org.reactivestreams.Publisher,io.reactivex.functions.Function,int)
androidx.appcompat.view.menu.CascadingMenuPopup: void setGravity(int)
com.google.gson.JsonElement: boolean getAsBoolean()
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: void onNext(java.lang.Object)
androidx.core.view.NestedScrollingChild: boolean hasNestedScrollingParent()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.xuexiang.xhttp2.model.ApiResult: java.lang.String getMsg()
androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: void subscribe(java.util.concurrent.Flow$Subscriber)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
androidx.appcompat.view.menu.ListMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: int getPosition()
okio.SegmentedByteString: okio.ByteString hmacSha1(okio.ByteString)
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.core.graphics.ColorUtils: double distanceEuclidean(double[],double[])
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: void onComplete()
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: void drainLoop()
com.google.gson.internal.reflect.ReflectionAccessor: void makeAccessible(java.lang.reflect.AccessibleObject)
okhttp3.HttpUrl$Builder: int slashCount(java.lang.String,int,int)
com.google.gson.internal.bind.SqlDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)
androidx.appcompat.view.menu.MenuWrapperICS: MenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenu)
io.reactivex.internal.observers.InnerQueuedObserver: io.reactivex.internal.fuseable.SimpleQueue queue()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)
io.reactivex.internal.util.ArrayListSupplier: io.reactivex.internal.util.ArrayListSupplier[] values()
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int)
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver: void request(long)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Maybe onAssembly(io.reactivex.Maybe)
io.reactivex.internal.operators.mixed.FlowableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: void cancel()
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean set(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription)
androidx.loader.content.Loader: boolean cancelLoad()
androidx.customview.widget.ExploreByTouchHelper: int keyToDirection(int)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: boolean accept(org.reactivestreams.Subscriber,java.util.Collection)
org.aspectj.lang.reflect.AdviceKind: org.aspectj.lang.reflect.AdviceKind valueOf(java.lang.String)
io.reactivex.internal.subscribers.InnerQueuedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.ActivityChooserView: void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()
okhttp3.EventListener: void callStart(okhttp3.Call)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$BufferedReplayCallable: io.reactivex.flowables.ConnectableFlowable call()
androidx.appcompat.view.ActionMode: boolean isUiFocusable()
androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)
io.reactivex.internal.operators.observable.ObservableFromCallable: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.view.menu.ListMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void resolveMethod(android.content.Context,java.lang.String)
com.appspa.update.proxy.impl.DefaultUpdateDownloader: void startDownload(com.appspa.update.service.DownloadService$DownloadBinder,com.appspa.update.entity.UpdateEntity,com.appspa.update.service.OnFileDownloadListener)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: FlowableWindowTimed$WindowExactUnboundedSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
io.reactivex.internal.util.EmptyComponent: boolean isDisposed()
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object addShortcuts(java.util.List)
okio.RealBufferedSource$1: int available()
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void innerError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable: void setFuture(io.reactivex.disposables.Disposable)
androidx.core.view.ViewCompat: boolean hasAccessibilityDelegate(android.view.View)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
androidx.appcompat.widget.ShareActionProvider: void updateIntent(android.content.Intent)
okhttp3.MultipartBody: okhttp3.MediaType contentType()
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver: void onNext(java.lang.Object)
androidx.fragment.app.ListFragment: void setListShown(boolean)
androidx.fragment.app.FragmentController: androidx.collection.SimpleArrayMap retainLoaderNonConfig()
androidx.collection.ArraySet: java.lang.Object removeAt(int)
io.reactivex.internal.subscribers.BlockingLastSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleObserveOn: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: void onError(java.lang.Throwable)
androidx.collection.LruCache: int putCount()
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver$OtherObserver: void onNext(java.lang.Object)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
okhttp3.internal.http2.Http2Writer: int maxDataLength()
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: void dispose()
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber: boolean isDisposed()
okhttp3.internal.Util$2: java.lang.Thread newThread(java.lang.Runnable)
io.reactivex.internal.operators.flowable.FlowableDematerialize$DematerializeSubscriber: void request(long)
androidx.appcompat.app.WindowDecorActionBar: int getTabCount()
com.jakewharton.disklrucache.DiskLruCache: void access$300(com.jakewharton.disklrucache.DiskLruCache)
com.appspa.update.entity.UpdateEntity$1: com.appspa.update.entity.UpdateEntity[] newArray(int)
androidx.core.internal.view.SupportMenuItem: boolean isActionViewExpanded()
io.reactivex.internal.operators.observable.ObservableSkipLastTimed$SkipLastTimedObserver: void onNext(java.lang.Object)
androidx.core.view.NestedScrollingChild3: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.fragment.app.FragmentState$1: FragmentState$1()
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: void otherError(java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: void onComplete()
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)
androidx.viewpager.widget.ViewPager: int getPageMargin()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: void onSuccess(java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: void dismiss()
io.reactivex.internal.operators.observable.ObservableSingleMaybe$SingleElementObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber: io.reactivex.internal.fuseable.SimplePlainQueue access$100(io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactBoundedSubscriber)
androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$3: void accept(java.lang.Object)
io.reactivex.Single: void subscribe(io.reactivex.SingleObserver)
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int)
okio.RealBufferedSource: short readShortLe()
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: CompletableFutureCallAdapterFactory$CallCancelCompletableFuture(retrofit2.Call)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)
androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyDown(int,android.view.KeyEvent)
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: void onNext(java.lang.Object)
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: ListPopupWindow$ResizePopupRunnable(androidx.appcompat.widget.ListPopupWindow)
io.reactivex.internal.schedulers.ComputationScheduler: ComputationScheduler(java.util.concurrent.ThreadFactory)
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence getTitle()
io.reactivex.internal.subscribers.LambdaSubscriber: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: ObservableInterval$IntervalObserver(io.reactivex.Observer)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: void onNext(java.lang.Object)
androidx.loader.content.ModernAsyncTask: androidx.loader.content.ModernAsyncTask$Status getStatus()
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator: BlockingFlowableMostRecent$MostRecentSubscriber$Iterator(io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: boolean accept(org.reactivestreams.Subscriber,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setArrowShaftLength(float)
com.appspa.update.entity.UpdateEntity: java.lang.String getCacheDir()
io.reactivex.internal.operators.flowable.FlowableRange$RangeSubscription: void fastPath()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
io.reactivex.Flowable: io.reactivex.Flowable onBackpressureLatest()
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: boolean offer(java.lang.Object)
androidx.appcompat.app.ToolbarActionBar: void setShowHideAnimationEnabled(boolean)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable: void run()
io.reactivex.observers.DisposableSingleObserver: void dispose()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransition(int)
io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver: boolean isDisposed()
androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()
com.appspa.update.service.DownloadService$FileDownloadCallBack$2: DownloadService$FileDownloadCallBack$2(com.appspa.update.service.DownloadService$FileDownloadCallBack,float,long)
com.google.gson.FieldAttributes: java.lang.Object get(java.lang.Object)
io.reactivex.internal.queue.SpscLinkedArrayQueue: java.lang.Object newBufferPeek(java.util.concurrent.atomic.AtomicReferenceArray,long,int)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver: MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.completable.CompletableUsing$UsingObserver: boolean isDisposed()
io.reactivex.subjects.ReplaySubject: void onError(java.lang.Throwable)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable$FlatMapCompletableMainSubscriber$InnerObserver: void onError(java.lang.Throwable)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver: void onNext(java.lang.Object)
com.jakewharton.disklrucache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: int size()
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: void onComplete()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setDateFormat(int)
androidx.appcompat.widget.SwitchCompat: void draw(android.graphics.Canvas)
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: void onComplete()
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection)
androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()
com.google.gson.JsonSerializationContext: com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.CacheControl: int maxStaleSeconds()
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: void onComplete()
io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.single.SingleZipIterable$SingletonArrayFunc: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableDoOnEvent: void subscribeActual(io.reactivex.CompletableObserver)
androidx.core.os.LocaleListInterface: boolean isEmpty()
androidx.appcompat.widget.Toolbar$LayoutParams: void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
io.reactivex.internal.operators.observable.ObservableCount$CountObserver: boolean isDisposed()
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError: void onComplete()
com.xuexiang.xhttp2.cache.model.CacheResult: CacheResult(boolean)
androidx.core.app.SharedElementCallback: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ListPopupWindow: int getSelectedItemPosition()
androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
io.reactivex.subjects.CompletableSubject$CompletableDisposable: CompletableSubject$CompletableDisposable(io.reactivex.CompletableObserver,io.reactivex.subjects.CompletableSubject)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShowWhen(boolean)
androidx.lifecycle.ComputableLiveData$2: void run()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
okio.ByteString: okio.ByteString toAsciiLowercase()
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: ObservableScan$ScanObserver(io.reactivex.Observer,io.reactivex.functions.BiFunction)
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.Fragment: void performAttach()
androidx.core.widget.NestedScrollView: void computeScroll()
io.reactivex.internal.operators.observable.ObservableRepeat$RepeatObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuPopup: void setGravity(int)
androidx.appcompat.app.AppCompatDelegateImpl: void setLocalNightMode(int)
androidx.fragment.app.FragmentManagerViewModel: boolean equals(java.lang.Object)
com.xuexiang.xhttp2.R$bool: R$bool()
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber$ConcatInnerObserver: void onError(java.lang.Throwable)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
io.reactivex.BackpressureOverflowStrategy: io.reactivex.BackpressureOverflowStrategy[] values()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: void onTimeoutError(long,java.lang.Throwable)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: ObservableMergeWithCompletable$MergeWithObserver(io.reactivex.Observer)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter)
io.reactivex.disposables.SerialDisposable: SerialDisposable()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Boolean)
androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColor(int)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity onGetHost()
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,short,byte,int)
io.reactivex.internal.disposables.EmptyDisposable: io.reactivex.internal.disposables.EmptyDisposable valueOf(java.lang.String)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addState(int[],android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.MenuItem getItem()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumWidth()
retrofit2.RequestFactory$Builder: retrofit2.RequestFactory build()
okhttp3.internal.http2.Http2Connection: long access$108(okhttp3.internal.http2.Http2Connection)
io.reactivex.internal.operators.observable.ObservableReplay$ReplayObserver: void replay()
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
com.appspa.update.utils.ApkUtils: boolean install(android.content.Context,java.lang.String)
androidx.fragment.app.FragmentManagerViewModel: boolean addRetainedFragment(androidx.fragment.app.Fragment)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getRoleDescription()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message)
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper: java.lang.Throwable access$100(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper)
io.reactivex.processors.AsyncProcessor: void onComplete()
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
androidx.collection.ArrayMap: boolean removeAll(java.util.Collection)
io.reactivex.internal.operators.parallel.ParallelPeek$ParallelPeekSubscriber: void onNext(java.lang.Object)
retrofit2.SkipCallbackExecutorImpl: java.lang.String toString()
io.reactivex.internal.operators.completable.CompletableTakeUntilCompletable$TakeUntilMainObserver$OtherObserver: void onError(java.lang.Throwable)
com.google.gson.internal.bind.TypeAdapters$8: TypeAdapters$8()
retrofit2.OkHttpCall$NoContentResponseBody: OkHttpCall$NoContentResponseBody(okhttp3.MediaType,long)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$InterruptibleRunnable: void run()
com.google.gson.internal.bind.JsonTreeReader: void expect(com.google.gson.stream.JsonToken)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferExactBoundedObserver: ObservableBufferTimed$BufferExactBoundedObserver(io.reactivex.Observer,java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,int,boolean,io.reactivex.Scheduler$Worker)
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: int requestFusion(int)
io.reactivex.internal.operators.observable.ObservableSkipUntil$SkipUntil: void onComplete()
androidx.loader.content.CursorLoader: void deliverResult(android.database.Cursor)
io.reactivex.internal.operators.flowable.FlowableCount: void subscribeActual(org.reactivestreams.Subscriber)
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.reactivex.internal.util.AppendOnlyLinkedArrayList: boolean accept(io.reactivex.Observer)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: ShortcutInfoCompatSaver$NoopImpl()
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
androidx.lifecycle.Transformations$2: Transformations$2(androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData)
io.reactivex.schedulers.Schedulers$NewThreadHolder: Schedulers$NewThreadHolder()
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: AppCompatDelegateImpl$AutoTimeNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)
io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)
androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.observers.ResourceSingleObserver: ResourceSingleObserver()
io.reactivex.internal.schedulers.ComputationScheduler$FixedSchedulerPool: io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker getEventLoop()
io.reactivex.internal.operators.observable.ObservableTakeUntil$TakeUntilMainObserver: void otherComplete()
okio.ByteString: java.lang.String toString()
org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl: org.aspectj.runtime.internal.cflowstack.ThreadStack getNewThreadStack()
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.appcompat.R$color: R$color()
com.xuexiang.xhttp2.callback.DownloadProgressCallBack: DownloadProgressCallBack()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
okhttp3.RealCall: void enqueue(okhttp3.Callback)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.lifecycle.LiveData$ObserverWrapper: boolean shouldBeActive()
com.zhy.http.okhttp.OkHttpUtils: java.util.concurrent.Executor getDelivery()
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: void accept(java.lang.Object)
okio.Buffer: okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)
androidx.versionedparcelable.VersionedParcel: void writeDoubleArray(double[],int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int getTotalDuration()
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDropdownSelectedPosition()
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: FlowableSkipLast$SkipLastSubscriber(org.reactivestreams.Subscriber,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)
androidx.appcompat.app.WindowDecorActionBar: void removeAllTabs()
io.reactivex.internal.operators.observable.ObservableTimer$TimerObserver: void dispose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.drawerlayout.R$styleable: R$styleable()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: void onComplete()
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: ListPopupWindow$ListSelectorHider(androidx.appcompat.widget.ListPopupWindow)
androidx.core.text.ICUCompat: java.lang.String maximizeAndGetScript(java.util.Locale)
io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable: void dispose()
io.reactivex.internal.subscribers.LambdaSubscriber: void onError(java.lang.Throwable)
okio.RealBufferedSource: int read(java.nio.ByteBuffer)
io.reactivex.internal.util.QueueDrainHelper: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,boolean,io.reactivex.internal.fuseable.SimpleQueue,io.reactivex.internal.util.QueueDrain)
com.appspa.update.proxy.impl.DefaultUpdateChecker: void onBeforeCheck()
androidx.viewpager.widget.PagerAdapter: int getItemPosition(java.lang.Object)
com.xuexiang.xhttp2.utils.Utils: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
io.reactivex.internal.operators.single.SingleToFlowable: SingleToFlowable(io.reactivex.SingleSource)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler initComputationScheduler(java.util.concurrent.Callable)
io.reactivex.internal.operators.flowable.FlowableElementAtSingle$ElementAtSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.BlockingObservableLatest$BlockingObservableLatestIterator: void onError(java.lang.Throwable)
io.reactivex.subjects.PublishSubject: boolean add(io.reactivex.subjects.PublishSubject$PublishDisposable)
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
com.google.gson.JsonArray: com.google.gson.JsonElement remove(int)
io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: void signalError(java.lang.Throwable)
androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
io.reactivex.internal.observers.QueueDrainObserver: int leave(int)
io.reactivex.internal.operators.observable.ObservableRetryBiPredicate: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterSubscriber: void onComplete()
okhttp3.internal.http2.Http2Connection$IntervalPingRunnable: void execute()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(int)
io.reactivex.internal.operators.flowable.FlowableCollect: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.CipherSuite: CipherSuite(java.lang.String)
com.appspa.update.widget.UpdateDialog: com.appspa.update.widget.UpdateDialog setUpdateEntity(com.appspa.update.entity.UpdateEntity)
io.reactivex.disposables.FutureDisposable: boolean isDisposed()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()
io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle$SubscriptionLambdaSubscriber: void request(long)
androidx.loader.app.LoaderManagerImpl: void markForRedelivery()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: FlowableOnBackpressureDrop$BackpressureDropSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Consumer)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.fragment.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.widget.DecorToolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: io.reactivex.Observable apply(io.reactivex.Observable)
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Headers)
retrofit2.RequestBuilder: void addPart(okhttp3.MultipartBody$Part)
androidx.appcompat.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable getThemeUpIndicator()
io.reactivex.internal.operators.maybe.MaybeMergeArray: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeIsEmpty$IsEmptyMaybeObserver: boolean isDisposed()
androidx.appcompat.widget.PopupMenu$3: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel setContentLength(long)
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: void onError(java.lang.Throwable)
io.reactivex.subscribers.TestSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void setFirst(io.reactivex.internal.operators.observable.ObservableReplay$Node)
com.xuexiang.xhttp2.request.BaseRequest$2: BaseRequest$2(com.xuexiang.xhttp2.request.BaseRequest,java.lang.reflect.Type)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.ScrollingTabContainerView: void removeAllTabs()
com.google.gson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableElementAtMaybe: void subscribeActual(io.reactivex.MaybeObserver)
androidx.appcompat.app.ActionBar: void setSubtitle(java.lang.CharSequence)
androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrievalFailed(int)
okhttp3.Authenticator$1: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
com.appspa.update.UpdateManager$Builder: com.appspa.update.UpdateManager build()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setState(int[])
androidx.appcompat.app.WindowDecorActionBar: int getDisplayOptions()
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab newTab()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: FlowableSkipLastTimed$SkipLastTimedSubscriber(org.reactivestreams.Subscriber,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,boolean)
androidx.appcompat.widget.Toolbar: void collapseActionView()
androidx.core.app.JobIntentService$WorkEnqueuer: void ensureJobId(int)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber: void drain()
com.google.gson.internal.ConstructorConstructor$12: ConstructorConstructor$12(com.google.gson.internal.ConstructorConstructor)
io.reactivex.internal.operators.observable.ObservableInterval$IntervalObserver: void dispose()
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowReserved()
androidx.collection.MapCollections$KeySet: boolean isEmpty()
io.reactivex.internal.subscriptions.SubscriptionHelper: io.reactivex.internal.subscriptions.SubscriptionHelper valueOf(java.lang.String)
io.reactivex.internal.subscriptions.DeferredScalarSubscription: void request(long)
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle)
androidx.drawerlayout.widget.DrawerLayout: boolean hasOpaqueBackground(android.view.View)
androidx.core.content.res.ResourcesCompat: ResourcesCompat()
com.appspa.update.widget.NumberProgressBar: void onMeasure(int,int)
okhttp3.internal.http2.Hpack$Writer: void setHeaderTableSizeSetting(int)
okhttp3.internal.http2.Http2Connection: void pushDataLater(int,okio.BufferedSource,int,boolean)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
io.reactivex.internal.operators.observable.ObservableRefCount: void timeout(io.reactivex.internal.operators.observable.ObservableRefCount$RefConnection)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void subscribeNext()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: int producerIndex()
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getSender()
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(int,int)
androidx.drawerlayout.widget.DrawerLayout$SavedState: DrawerLayout$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.appspa.update.widget.BaseDialog: BaseDialog(android.content.Context,int)
androidx.appcompat.widget.SuggestionsAdapter: void close()
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker: void run()
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
androidx.appcompat.widget.ToolbarWidgetWrapper: void initIndeterminateProgress()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
io.reactivex.internal.operators.flowable.FlowablePublishAlt$InnerSubscription: void request(long)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void onError(java.lang.Throwable)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.observers.TestObserver$EmptyObserver: TestObserver$EmptyObserver(java.lang.String,int)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void onNext(java.lang.Object)
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityEventCompat: AccessibilityEventCompat()
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: void error(java.lang.Throwable)
androidx.appcompat.view.StandaloneActionMode: void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
com.google.gson.internal.LinkedHashTreeMap$KeySet: void clear()
io.reactivex.internal.operators.observable.ObservableMergeWithSingle: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.maybe.MaybeMap$MapMaybeObserver: MaybeMap$MapMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Function)
com.appspa.update.AppSpace: void init(android.app.Application)
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: boolean writeField(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: void drain()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()
okhttp3.internal.http2.Http2Connection$2: void execute()
okio.Buffer: long completeSegmentByteCount()
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: float getProgress()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.BlockingFlowableNext$NextIterator: boolean moveToNext()
io.reactivex.disposables.SerialDisposable: void dispose()
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
androidx.core.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.lang.String[])
okhttp3.RealCall$AsyncCall: void execute()
retrofit2.Utils: java.lang.Class getRawType(java.lang.reflect.Type)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable create(io.reactivex.Flowable,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)
io.reactivex.internal.operators.mixed.MaybeFlatMapObservable$FlatMapObserver: void onNext(java.lang.Object)
io.reactivex.processors.AsyncProcessor$AsyncSubscription: AsyncProcessor$AsyncSubscription(org.reactivestreams.Subscriber,io.reactivex.processors.AsyncProcessor)
androidx.versionedparcelable.VersionedParcel: void writeBundle(android.os.Bundle,int)
retrofit2.OkHttpCall$1: void callFailure(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: void cancel()
io.reactivex.internal.operators.single.SingleZipArray$SingletonArrayFunc: java.lang.Object apply(java.lang.Object)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: FlowableSwitchMapSingle$SwitchMapSingleSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function,boolean)
androidx.appcompat.view.menu.ListMenuPresenter: void restoreHierarchyState(android.os.Bundle)
io.reactivex.internal.operators.single.SingleFlatMapPublisher$SingleFlatMapPublisherObserver: void request(long)
androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.reactivex.subjects.SerializedSubject: boolean test(java.lang.Object)
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator: void remove()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void peekDrawer()
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void otherSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableMergeWithMaybe$MergeWithObserver$OtherObserver: void onSuccess(java.lang.Object)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
okio.ForwardingSink: void close()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletable$FlatMapCompletableMainObserver$InnerObserver: void onComplete()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)
com.xuexiang.xhttp2.cookie.PersistentCookieStore: java.lang.String byteArrayToHexString(byte[])
okhttp3.CipherSuite$1: int compare(java.lang.String,java.lang.String)
androidx.core.app.NotificationCompat$CarExtender: NotificationCompat$CarExtender(android.app.Notification)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(java.util.List,java.util.List)
androidx.core.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void drain()
io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction$WorkerCompletable: void subscribeActual(io.reactivex.CompletableObserver)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
io.reactivex.processors.SerializedProcessor: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: ObservableConcatMap$SourceObserver$InnerObserver(io.reactivex.Observer,io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver)
com.google.gson.internal.LinkedHashTreeMap$KeySet: boolean contains(java.lang.Object)
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
androidx.appcompat.app.WindowDecorActionBar: void setHomeActionContentDescription(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection: void failConnection()
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getSubtitle()
io.reactivex.internal.operators.mixed.ObservableSwitchMapCompletable$SwitchMapCompletableObserver$SwitchMapInnerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError: FlowableOnBackpressureError(io.reactivex.Flowable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void printVPath(int)
org.aspectj.runtime.reflect.StringMaker: void addTypeNames(java.lang.StringBuffer,java.lang.Class[])
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.AbsActionBarView: boolean showOverflowMenu()
androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)
androidx.appcompat.view.ActionMode: boolean isTitleOptional()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context)
androidx.appcompat.graphics.drawable.StateListDrawable: int getStateCount()
androidx.core.view.accessibility.AccessibilityRecordCompat: AccessibilityRecordCompat(java.lang.Object)
androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable)
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$2: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
io.reactivex.subjects.MaybeSubject: boolean add(io.reactivex.subjects.MaybeSubject$MaybeDisposable)
io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream: AbstractFlowableWithUpstream(io.reactivex.Flowable)
androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: void disposeAfter()
androidx.appcompat.app.WindowDecorActionBar: boolean hasLogo()
com.appspa.update.utils.DialogUtils: boolean syncSystemUiVisibility(android.app.Activity,android.view.Window)
io.reactivex.internal.subscribers.BoundedSubscriber: void onComplete()
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: void innerNext(int,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: void cancel()
androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)
androidx.fragment.app.FragmentTransition$4: void run()
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
androidx.core.app.NotificationCompatSideChannelService: void cancel(java.lang.String,int,java.lang.String)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
androidx.customview.widget.FocusStrategy: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)
androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)
io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarDisposable: boolean offer(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)
androidx.appcompat.widget.ActivityChooserView$2: void onGlobalLayout()
androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.app.AlertController: void setupCustomContent(android.view.ViewGroup)
androidx.appcompat.app.ActionBar: void setDisplayShowHomeEnabled(boolean)
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: void request(long)
okhttp3.internal.http2.Http2Connection$1: void execute()
io.reactivex.internal.operators.flowable.FlowableTimeoutTimed$TimeoutSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.http2.Http2Connection$5: Http2Connection$5(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean)
io.reactivex.internal.schedulers.ComputationScheduler$PoolWorker: ComputationScheduler$PoolWorker(java.util.concurrent.ThreadFactory)
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
com.google.gson.internal.bind.TypeAdapters$11: java.lang.Number read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: void cancel()
okio.ByteString: void write(java.io.OutputStream)
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$FlagEntry[] flagMapping()
com.jakewharton.disklrucache.DiskLruCache$Editor: DiskLruCache$Editor(com.jakewharton.disklrucache.DiskLruCache,com.jakewharton.disklrucache.DiskLruCache$Entry)
androidx.appcompat.widget.ListPopupWindow: void setVerticalOffset(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.collection.CircularIntArray: void removeFromStart(int)
androidx.core.util.Preconditions: void checkArgument(boolean)
okhttp3.Address: java.net.Proxy proxy()
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.SubMenu getSubMenuWrapper(android.view.SubMenu)
androidx.versionedparcelable.VersionedParcelStream: long readLong()
androidx.viewpager.widget.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(android.graphics.Path)
androidx.collection.ArrayMap: boolean containsAll(java.util.Collection)
androidx.core.text.ICUCompat: ICUCompat()
androidx.appcompat.widget.DropDownListView: void setPressedItem(android.view.View,int,float,float)
androidx.versionedparcelable.VersionedParcelStream$1: int read()
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)
androidx.appcompat.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char,int,int)
io.reactivex.observers.ResourceMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry: int parallelism()
io.reactivex.internal.schedulers.SchedulerWhen$ImmediateAction: io.reactivex.disposables.Disposable callActual(io.reactivex.Scheduler$Worker,io.reactivex.CompletableObserver)
androidx.fragment.app.FragmentHostCallback: boolean onHasWindowAnimations()
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: void onNext(java.util.List)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver: void dispose()
androidx.appcompat.widget.ActivityChooserView: void showPopupUnchecked(int)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: void onSuccess(java.lang.Object)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
androidx.core.app.JobIntentService$WorkEnqueuer: void serviceProcessingFinished()
androidx.loader.content.AsyncTaskLoader: void waitForLoader()
io.reactivex.internal.operators.maybe.MaybeIgnoreElementCompletable$IgnoreMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: void onComplete()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: void onGlobalLayout()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader)
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: okhttp3.ResponseBody convert(okhttp3.ResponseBody)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: AnimatedStateListDrawableCompat$AnimatableTransition(android.graphics.drawable.Animatable)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferSkipBoundedSubscriber: void clear()
androidx.appcompat.widget.ActionBarContextView$1: ActionBarContextView$1(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews)
androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$RepeatWhenSubscriber: FlowableRepeatWhen$RepeatWhenSubscriber(org.reactivestreams.Subscriber,io.reactivex.processors.FlowableProcessor,org.reactivestreams.Subscription)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String)
androidx.drawerlayout.R$style: R$style()
com.google.gson.internal.bind.TypeAdapters$20: TypeAdapters$20()
io.reactivex.internal.operators.maybe.MaybeDelay$DelayMaybeObserver: void onSuccess(java.lang.Object)
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader: void showLoading()
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
com.google.gson.internal.LinkedHashTreeMap: int secondaryHash(int)
io.reactivex.subscribers.SafeSubscriber: void onComplete()
okhttp3.internal.http1.Http1Codec$UnknownLengthSource: void close()
com.google.gson.internal.bind.TypeAdapters$14: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable$IgnoreElementsSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getConversationTitle()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: boolean tryOnError(java.lang.Throwable)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)
com.appspa.update.widget.UpdateDialogActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.appspa.update.utils.DrawableUtils: void setBackgroundCompat(android.view.View,android.graphics.drawable.Drawable)
io.reactivex.internal.operators.flowable.FlowableConcatWithCompletable$ConcatWithSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.util.OpenHashSet: OpenHashSet(int,float)
io.reactivex.internal.operators.observable.ObservableCollectSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: android.widget.ListView getListView()
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.MaybeSource)
io.reactivex.subjects.AsyncSubject: void onComplete()
androidx.appcompat.R$anim: R$anim()
androidx.fragment.app.FragmentController: java.util.List getActiveFragments(java.util.List)
androidx.lifecycle.livedata.R: R()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence getHintText()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationHelp(int,java.lang.CharSequence)
io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)
retrofit2.ParameterHandler$HeaderMap: void apply(retrofit2.RequestBuilder,java.util.Map)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)
io.reactivex.subjects.SingleSubject: void remove(io.reactivex.subjects.SingleSubject$SingleDisposable)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: boolean setDisposable(io.reactivex.disposables.Disposable,int)
io.reactivex.internal.operators.maybe.MaybeZipArray$SingletonArrayFunc: java.lang.Object apply(java.lang.Object)
okhttp3.Handshake: java.util.List localCertificates()
io.reactivex.internal.operators.flowable.FlowableDetach$DetachSubscriber: void request(long)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: void onNext(java.lang.Object)
io.reactivex.exceptions.CompositeException: java.util.List getExceptions()
androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.fragment.app.FragmentState: int describeContents()
androidx.core.widget.NestedScrollView$AccessibilityDelegate: NestedScrollView$AccessibilityDelegate()
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int,int)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapDelayed: void cancel()
okio.Timeout$1: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.flowable.FlowableMap$MapConditionalSubscriber: FlowableMap$MapConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Function)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
androidx.lifecycle.AndroidViewModel: AndroidViewModel(android.app.Application)
androidx.appcompat.widget.ListPopupWindow: boolean onKeyPreIme(int,android.view.KeyEvent)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)
androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber$ConcatMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.zhy.http.okhttp.request.PostStringRequest: okhttp3.RequestBody buildRequestBody()
io.reactivex.internal.operators.observable.ObservableReduceSeedSingle: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void innerError(io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer,java.lang.Throwable)
retrofit2.KotlinExtensions: java.lang.Object suspendAndThrow(java.lang.Exception,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SwitchCompat$1: java.lang.Float get(androidx.appcompat.widget.SwitchCompat)
io.reactivex.internal.operators.maybe.MaybeSubscribeOn$SubscribeOnMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void onComplete()
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.reactivex.internal.operators.single.SingleFromPublisher$ToSingleObserver: void onError(java.lang.Throwable)
androidx.core.view.ViewCompat: void setRotation(android.view.View,float)
androidx.drawerlayout.R$integer: R$integer()
okhttp3.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
androidx.appcompat.view.menu.ActionMenuItem: boolean isCheckable()
io.reactivex.schedulers.Schedulers: Schedulers()
androidx.fragment.app.FragmentManagerImpl: void freeBackStackIndex(int)
androidx.appcompat.widget.ActivityChooserView: void setInitialActivityCount(int)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.cache.RxCache$Builder getRxCacheBuilder()
com.zhy.http.okhttp.request.RequestCall: okhttp3.Call buildCall(com.zhy.http.okhttp.callback.Callback)
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
io.reactivex.internal.observers.ResumeSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.viewpager.widget.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
androidx.appcompat.view.menu.MenuItemImpl: boolean isChecked()
androidx.core.view.ViewCompat: int getMeasuredWidthAndState(android.view.View)
okio.AsyncTimeout$2: AsyncTimeout$2(okio.AsyncTimeout,okio.Source)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver$OtherObserver: void onSuccess(java.lang.Object)
androidx.lifecycle.ComputableLiveData$2: ComputableLiveData$2(androidx.lifecycle.ComputableLiveData)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.CompletableObserver onSubscribe(io.reactivex.Completable,io.reactivex.CompletableObserver)
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.Toolbar: void removeChildrenForExpandedActionView()
androidx.customview.widget.FocusStrategy: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)
androidx.appcompat.app.AlertController$CheckedItemAdapter: AlertController$CheckedItemAdapter(android.content.Context,int,int,java.lang.CharSequence[])
androidx.appcompat.widget.AppCompatSeekBar: void onDraw(android.graphics.Canvas)
okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)
androidx.core.view.animation.PathInterpolatorApi14: float getInterpolation(float)
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void subscribeNext()
io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe$FlatMapMaybeSubscriber: void clear()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver: void dispose()
com.google.gson.internal.LinkedHashTreeMap$Node: com.google.gson.internal.LinkedHashTreeMap$Node last()
org.aspectj.runtime.reflect.StringMaker: java.lang.String makeTypeName(java.lang.Class)
io.reactivex.internal.operators.completable.CompletableToObservable$ObserverCompletableObserver: int requestFusion(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()
androidx.viewpager.widget.ViewPager: void onLayout(boolean,int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableRefCount: void terminated(io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection)
io.reactivex.internal.util.NotificationLite: java.lang.Object getValue(java.lang.Object)
io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable: ExecutorScheduler$ExecutorWorker$BooleanRunnable(java.lang.Runnable)
com.jakewharton.disklrucache.Util: Util()
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.reactivex.internal.operators.flowable.FlowableTakeWhile$TakeWhileSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getNumericModifiers()
io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver: void runFinally()
androidx.appcompat.widget.Toolbar: void ensureMenu()
org.aspectj.runtime.internal.CFlowCounter: void selectFactoryForVMVersion()
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: void onNext(java.lang.Object)
io.reactivex.internal.subscriptions.BasicQueueSubscription: void request(long)
androidx.core.view.ViewCompat: void setX(android.view.View,float)
com.google.gson.internal.bind.DateTypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.customview.widget.ExploreByTouchHelper: void getBoundsInParent(int,android.graphics.Rect)
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: void innerError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextHelper: void onLayout(boolean,int,int,int,int)
androidx.core.app.NotificationCompatJellybean: NotificationCompatJellybean()
io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable$FlatMapCompletableMainObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableJust: java.lang.Object call()
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: boolean isDisposed()
retrofit2.RequestBuilder: void setRelativeUrl(java.lang.Object)
io.reactivex.internal.operators.mixed.ObservableConcatMapCompletable$ConcatMapCompletableObserver$ConcatMapInnerObserver: void onError(java.lang.Throwable)
androidx.core.util.Pools$SimplePool: Pools$SimplePool(int)
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: int requestFusion(int)
androidx.core.content.ContentResolverCompat: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal)
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: CompletableResumeNext$ResumeNextObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Function)
io.reactivex.internal.util.ConnectConsumer: void accept(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.single.SingleZipArray: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.observers.ResourceMaybeObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: void onComplete()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$2: void accept(java.lang.Object)
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect getEpicenterBounds()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void innerNext()
androidx.core.app.AppOpsManagerCompat: AppOpsManagerCompat()
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float getInterpolation(float)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterConditionalSubscriber: void onComplete()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.xuexiang.xhttp2.model.ApiResult: boolean isSuccess()
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber: void onNext(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: java.lang.String gravityToString(int)
okhttp3.Address: java.net.ProxySelector proxySelector()
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: FragmentManagerImpl$StartEnterTransitionListener(androidx.fragment.app.BackStackRecord,boolean)
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: void onError(java.lang.Throwable)
okio.Buffer: long readDecimalLong()
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String getName()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)
io.reactivex.internal.operators.observable.BlockingObservableNext$NextObserver: void onComplete()
androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance()
io.reactivex.internal.operators.flowable.FlowableWindow$WindowExactSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed$DebounceTimedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void unregisterForLayoutCallback(android.view.View)
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)
okhttp3.Dispatcher: java.util.List runningCalls()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)
androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.appspa.update.utils.FileUtils: java.io.File getFileByPath(java.lang.String)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.resources.R$dimen: R$dimen()
com.google.gson.internal.LinkedHashTreeMap$Node: int hashCode()
androidx.core.graphics.PathSegment: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.StandardMenuPopup: void setForceShowIcon(boolean)
androidx.versionedparcelable.VersionedParcelParcel: android.os.IBinder readStrongBinder()
okhttp3.Address: javax.net.SocketFactory socketFactory()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.core.view.DragStartHelper: DragStartHelper(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.collection.MapCollections$ValuesCollection: int size()
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: FlowableAnySingle$AnySubscriber(io.reactivex.SingleObserver,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void innerNext(io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryInnerObserver)
androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)
com.appspa.demo.activity.MainActivity$1: MainActivity$1(com.appspa.demo.activity.MainActivity)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)
io.reactivex.internal.operators.maybe.MaybeFlatMapBiSelector$FlatMapBiMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.app.AppCompatDelegate: void onStart()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: Toolbar$ExpandedActionViewMenuPresenter(androidx.appcompat.widget.Toolbar)
io.reactivex.internal.operators.maybe.MaybeCallbackObserver: boolean isDisposed()
retrofit2.Utils: java.lang.RuntimeException methodError(java.lang.reflect.Method,java.lang.Throwable,java.lang.String,java.lang.Object[])
androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()
com.google.gson.JsonObject: boolean has(java.lang.String)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AbsActionBarView: boolean hideOverflowMenu()
io.reactivex.internal.operators.flowable.FlowableSkipUntil$SkipUntilMainSubscriber: boolean tryOnNext(java.lang.Object)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.reactivex.internal.operators.observable.ObservableAny: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector$WindowBoundaryMainSubscriber: void request(long)
io.reactivex.internal.observers.BasicIntQueueDisposable: java.lang.Object poll()
okio.Utf8: Utf8()
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver$CompletionTask: ObservableWindowTimed$WindowSkipObserver$CompletionTask(io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver,io.reactivex.subjects.UnicastSubject)
androidx.collection.ArraySet: ArraySet(java.util.Collection)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.reactivex.internal.util.BackpressureHelper: BackpressureHelper()
androidx.vectordrawable.graphics.drawable.Animatable2Compat: boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
io.reactivex.subjects.SingleSubject: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.Response: okhttp3.Response priorResponse()
io.reactivex.internal.schedulers.SingleScheduler: java.util.concurrent.ScheduledExecutorService createExecutor(java.util.concurrent.ThreadFactory)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableConcatWithMaybe$ConcatWithObserver: void onComplete()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)
okio.Timeout: void throwIfReached()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
com.appspa.update.widget.UpdateDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: org.aspectj.lang.reflect.TypePattern getTypePattern()
androidx.appcompat.view.menu.ActionMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
okio.Util: Util()
okio.ByteString: boolean rangeEquals(int,okio.ByteString,int,int)
io.reactivex.internal.operators.observable.ObservableReplay: io.reactivex.observables.ConnectableObservable create(io.reactivex.ObservableSource,io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void innerError(io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver,java.lang.Throwable)
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker: void dispose()
androidx.fragment.app.FragmentManagerImpl: void hideFragment(androidx.fragment.app.Fragment)
io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty$SwitchIfEmptyObserver: void onComplete()
com.google.gson.stream.JsonReader: java.lang.String locationString()
androidx.customview.widget.ViewDragHelper: int getViewDragState()
org.aspectj.runtime.reflect.LockSignatureImpl: java.lang.String createToString(org.aspectj.runtime.reflect.StringMaker)
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector: SearchView$AutoCompleteTextViewReflector()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: void onNext(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
io.reactivex.disposables.Disposables: io.reactivex.disposables.Disposable fromRunnable(java.lang.Runnable)
com.appspa.update.logs.UpdateLog: void setPriority(int)
androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom: void subscribeActual(io.reactivex.Observer)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)
io.reactivex.processors.BehaviorProcessor: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutFallbackMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.Response$Builder: okhttp3.Response build()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: void onSuccess(java.lang.Object)
okio.Okio: okio.Sink sink(java.io.OutputStream,okio.Timeout)
com.google.gson.JsonArray: byte getAsByte()
io.reactivex.subscribers.SafeSubscriber: void onCompleteNoSubscription()
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()
org.aspectj.runtime.reflect.StringMaker: StringMaker()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)
androidx.appcompat.widget.LinearLayoutCompat: boolean shouldDelayChildPressedState()
androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()
okhttp3.Cache: okhttp3.Response get(okhttp3.Request)
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener)
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableCreate$LatestAsyncEmitter: void onRequested()
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutObserver: boolean isDisposed()
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)
androidx.core.app.ShareCompat$IntentReader: boolean isShareIntent()
io.reactivex.processors.ReplayProcessor$ReplaySubscription: void cancel()
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
com.xuexiang.xhttp2.utils.Utils: java.lang.String getDiskFilesDir()
io.reactivex.schedulers.TestScheduler$TimedRunnable: int compareTo(java.lang.Object)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.cache.converter.GsonDiskConverter: GsonDiskConverter()
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat: AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int)
com.xuexiang.xhttp2.request.CustomRequest: com.xuexiang.xhttp2.request.CustomRequest build()
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
com.zhy.http.okhttp.request.PostFormRequest$1$1: void run()
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: void emit(long,java.lang.Object,io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceEmitter)
com.google.gson.internal.bind.TypeAdapters$2: java.lang.Object read(com.google.gson.stream.JsonReader)
okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)
io.reactivex.internal.operators.observable.ObservableHide$HideDisposable: void onError(java.lang.Throwable)
com.appspa.update.widget.UpdateDialog: com.appspa.update.widget.UpdateDialog setPromptEntity(com.appspa.update.entity.PromptEntity)
okhttp3.Address: boolean equals(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableBlockingSubscribe: FlowableBlockingSubscribe()
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setVersionCode(int)
com.google.gson.FieldNamingPolicy$5: java.lang.String translateName(java.lang.reflect.Field)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
com.xuexiang.xhttp2.transform.func.HttpResultFuc: java.lang.Object apply(com.xuexiang.xhttp2.model.ApiResult)
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowReserved()
androidx.core.content.res.GrowingArrayUtils: int growSize(int)
io.reactivex.internal.operators.single.SingleMap$MapSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void emit(long,java.lang.Object,io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter)
okhttp3.Cache: void update(okhttp3.Response,okhttp3.Response)
androidx.fragment.app.FragmentController: void doLoaderRetain()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)
androidx.core.view.ViewCompat: int getPaddingStart(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.platform.AndroidPlatform: int getSdkInt()
androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: int available()
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
io.reactivex.internal.operators.observable.BlockingObservableMostRecent$MostRecentObserver$Iterator: boolean hasNext()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactUnboundedSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutMainMaybeObserver: void dispose()
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableObserveOn: FlowableObserveOn(io.reactivex.Flowable,io.reactivex.Scheduler,boolean,int)
com.xuexiang.xhttp2.cache.model.CacheResult: void setCache(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()
androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)
androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)
androidx.appcompat.app.ToolbarActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
com.appspa.update.entity.PromptEntity: PromptEntity()
org.aspectj.internal.lang.reflect.DeclareAnnotationImpl: org.aspectj.lang.reflect.SignaturePattern getSignaturePattern()
com.appspa.update.widget.UpdateDialogActivity: UpdateDialogActivity()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: AppCompatDelegateImpl$AutoBatteryNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)
io.reactivex.subjects.Subject: Subject()
io.reactivex.observers.ResourceMaybeObserver: ResourceMaybeObserver()
io.reactivex.internal.operators.observable.ObservableBufferExactBoundary$BufferExactBoundaryObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerAfter()
io.reactivex.internal.operators.single.SingleToObservable: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableTakeLastOne$TakeLastOneObserver: void emit()
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection)
androidx.appcompat.view.menu.ListMenuPresenter: boolean flagActionItems()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityBackward()
androidx.appcompat.view.menu.MenuView$ItemView: boolean prefersCondensedTitle()
androidx.core.widget.TintableImageSourceView: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.DecorContentParent: void saveToolbarHierarchyState(android.util.SparseArray)
androidx.lifecycle.Lifecycling$1: Lifecycling$1(androidx.lifecycle.LifecycleEventObserver)
androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
okhttp3.Challenge: java.lang.String toString()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int)
com.xuexiang.xhttp2.cache.RxCache$SimpleSubscribe: RxCache$SimpleSubscribe(com.xuexiang.xhttp2.cache.RxCache$1)
com.google.gson.internal.bind.TypeAdapters$13: java.lang.Object read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.completable.CompletableOnErrorComplete$OnError: CompletableOnErrorComplete$OnError(io.reactivex.internal.operators.completable.CompletableOnErrorComplete,io.reactivex.CompletableObserver)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
com.jakewharton.disklrucache.DiskLruCache$Entry: void setLengths(java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner: void onDetachedFromWindow()
androidx.appcompat.widget.Toolbar: void setTitle(int)
io.reactivex.internal.operators.single.SingleZipIterable$SingletonArrayFunc: SingleZipIterable$SingletonArrayFunc(io.reactivex.internal.operators.single.SingleZipIterable)
androidx.viewpager.widget.ViewPager$3: ViewPager$3(androidx.viewpager.widget.ViewPager)
com.google.gson.internal.bind.JsonTreeReader: void skipValue()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: ObservableConcatMapEager$ConcatMapEagerMainObserver(io.reactivex.Observer,io.reactivex.functions.Function,int,int,io.reactivex.internal.util.ErrorMode)
com.google.gson.internal.LazilyParsedNumber: LazilyParsedNumber(java.lang.String)
com.xuexiang.xhttp2.reflect.impl.WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
org.aspectj.runtime.internal.CFlowStack: org.aspectj.runtime.internal.cflowstack.ThreadStackFactory getThreadLocalStackFactoryFor11()
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getId()
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: void onComplete()
io.reactivex.internal.operators.flowable.FlowableJust: FlowableJust(java.lang.Object)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void afterDownstream()
io.reactivex.internal.operators.flowable.FlowableObserveOn$ObserveOnSubscriber: void runAsync()
androidx.core.app.RemoteInput: boolean getAllowFreeFormInput()
androidx.core.content.FileProvider$SimplePathStrategy: android.net.Uri getUriForFile(java.io.File)
com.google.gson.internal.bind.TypeAdapters$20: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: void cancel()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber: void drain()
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void request(long)
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceEmitter: void setResource(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: void setDisposable(io.reactivex.disposables.Disposable)
io.reactivex.Observable: io.reactivex.Observable filter(io.reactivex.functions.Predicate)
com.appspa.update.entity.PromptEntity$1: com.appspa.update.entity.PromptEntity[] newArray(int)
okhttp3.internal.platform.JdkWithJettyBootPlatform: okhttp3.internal.platform.Platform buildIfSupported()
okhttp3.internal.http1.Http1Codec$ChunkedSink: void flush()
androidx.customview.widget.ExploreByTouchHelper: int getFocusedVirtualView()
androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.core.view.NestedScrollingParent: boolean onNestedPreFling(android.view.View,float,float)
io.reactivex.internal.operators.maybe.MaybeTakeUntilPublisher$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: void onSubscribe(org.reactivestreams.Subscription)
androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder()
androidx.core.app.NotificationManagerCompat: void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task)
androidx.core.graphics.PathSegment: PathSegment(android.graphics.PointF,float,android.graphics.PointF,float)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.operators.single.SingleFromUnsafeSource: void subscribeActual(io.reactivex.SingleObserver)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: ClassesInfoCache$CallbackInfo(java.util.Map)
androidx.appcompat.view.SupportActionModeWrapper: void setCustomView(android.view.View)
io.reactivex.internal.operators.flowable.FlowableReduce$ReduceSubscriber: void onNext(java.lang.Object)
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.appcompat.content.res.AppCompatResources: boolean isColorInt(android.content.Context,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuPrepared()
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte dirTypeForward()
androidx.collection.CircularArray: void clear()
io.reactivex.internal.operators.maybe.MaybeFlatMapSingle$FlatMapMaybeObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableHide$HideSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.single.SingleCreate: void subscribeActual(io.reactivex.SingleObserver)
com.google.gson.internal.bind.TypeAdapters$7: void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager)
androidx.appcompat.resources.R: R()
androidx.lifecycle.ReportFragment: void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapObserver: void onNext(java.lang.Object)
androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.xuexiang.xhttp2.logs.LogcatLogger: void log(int,java.lang.String,java.lang.String)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailCc()
androidx.core.app.JobIntentService$JobServiceEngineImpl: JobIntentService$JobServiceEngineImpl(androidx.core.app.JobIntentService)
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: void onComplete()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
androidx.core.widget.NestedScrollView: void initScrollView()
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetChanged()
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: void cancel()
com.xuexiang.xhttp2.cache.RxCache: RxCache()
io.reactivex.internal.operators.observable.ObservableMapNotification$MapNotificationObserver: void onNext(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$SubscriberOnError: void accept(java.lang.Throwable)
com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.core.util.AtomicFile: AtomicFile(java.io.File)
androidx.core.os.CancellationSignal: CancellationSignal()
io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.collection.SparseArrayCompat: void delete(int)
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: ObservableSingleSingle$SingleElementObserver(io.reactivex.SingleObserver,java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
io.reactivex.processors.PublishProcessor$PublishSubscription: boolean isFull()
io.reactivex.internal.util.ExceptionHelper: java.lang.String timeoutMessage(long,java.util.concurrent.TimeUnit)
io.reactivex.subjects.ReplaySubject: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.appspa.update.UpdateManager$Builder: com.appspa.update.UpdateManager$Builder isAutoMode(boolean)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate: boolean test(java.lang.Object,java.lang.Object)
retrofit2.Converter$Factory: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.fragment.app.FragmentController: void dispatchDestroyView()
io.reactivex.internal.operators.flowable.FlowableBufferTimed$BufferExactBoundedSubscriber: void request(long)
com.xuexiang.xhttp2.interceptor.HttpLoggingInterceptor$Level: HttpLoggingInterceptor$Level(java.lang.String,int)
androidx.fragment.app.FragmentManagerImpl: void dispatchStart()
androidx.appcompat.widget.DecorToolbar: void setMenuPrepared()
io.reactivex.internal.operators.completable.CompletableDoOnEvent$DoOnEvent: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: void subscribe(org.reactivestreams.Publisher,org.reactivestreams.Publisher)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactBoundedObserver: void onComplete()
com.xuexiang.xhttp2.XHttp$1: void accept(java.lang.Object)
androidx.appcompat.R: R()
io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber: void tryEmit(java.lang.Object,io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber)
okio.RealBufferedSource: long indexOf(byte)
io.reactivex.internal.operators.flowable.FlowableSequenceEqual$EqualCoordinator: void innerError(java.lang.Throwable)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: boolean isShowing()
io.reactivex.internal.operators.flowable.FlowableConcatMapEager$ConcatMapEagerDelayErrorSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)
androidx.customview.widget.ExploreByTouchHelper: android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitleOptionalHint(boolean)
io.reactivex.internal.operators.observable.ObservableToListSingle$ToListObserver: void dispose()
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.gson.FieldAttributes: java.lang.Class getDeclaredClass()
androidx.core.app.RemoteActionCompat: boolean shouldShowIcon()
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getContentView()
io.reactivex.internal.operators.observable.ObservableIgnoreElements$IgnoreObservable: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier$BufferBoundarySupplierObserver: void accept(io.reactivex.Observer,java.util.Collection)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] values()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
androidx.appcompat.widget.AbsActionBarView: void postShowOverflowMenu()
io.reactivex.internal.operators.observable.ObservableCache$CacheDisposable: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableConcatMap$ConcatMapImmediate: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableRefCount: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.AppCompatTextHelper: AppCompatTextHelper(android.widget.TextView)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()
io.reactivex.internal.operators.flowable.FlowableMap: FlowableMap(io.reactivex.Flowable,io.reactivex.functions.Function)
io.reactivex.internal.util.ErrorMode: io.reactivex.internal.util.ErrorMode valueOf(java.lang.String)
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: void clear()
io.reactivex.internal.operators.flowable.FlowableRangeLong$BaseRangeSubscription: void request(long)
androidx.fragment.app.FragmentTransitionCompat21$4: android.graphics.Rect onGetEpicenter(android.transition.Transition)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscription: void onNext(io.reactivex.internal.operators.parallel.ParallelJoin$JoinInnerSubscriber,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: void request(long)
com.zhy.http.okhttp.request.RequestCall: void execute(com.zhy.http.okhttp.callback.Callback)
androidx.core.view.ActionProvider: boolean onPerformDefaultAction()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)
okhttp3.Request$Builder: okhttp3.Request build()
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerBefore()
androidx.core.provider.FontsContractCompat$Columns: FontsContractCompat$Columns()
io.reactivex.android.schedulers.AndroidSchedulers$1: io.reactivex.Scheduler call()
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()
io.reactivex.internal.operators.flowable.FlowableBufferBoundary$BufferCloseSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.collection.ArraySet$1: int colIndexOfValue(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$19: void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
io.reactivex.android.MainThreadDisposable$1: MainThreadDisposable$1(io.reactivex.android.MainThreadDisposable)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()
io.reactivex.internal.observers.BasicFuseableObserver: int transitiveBoundaryFusion(int)
io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged$DistinctUntilChangedObserver: ObservableDistinctUntilChanged$DistinctUntilChangedObserver(io.reactivex.Observer,io.reactivex.functions.Function,io.reactivex.functions.BiPredicate)
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer: void subscribeActual(org.reactivestreams.Subscriber)
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher$RailSubscription: void cancel()
com.google.gson.JsonParseException: JsonParseException(java.lang.String)
androidx.core.app.NotificationCompat$Action$Builder: android.os.Bundle getExtras()
androidx.appcompat.widget.SwitchCompat: void stopDrag(android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl)
androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
io.reactivex.internal.operators.observable.ObservableRangeLong$RangeDisposable: boolean isDisposed()
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)
androidx.customview.widget.ViewDragHelper: void releaseViewForPointerUp()
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender clone()
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: java.lang.Object poll()
okhttp3.HttpUrl: java.net.URI uri()
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner createSpinner()
io.reactivex.internal.operators.observable.ObservableSingleSingle$SingleElementObserver: boolean isDisposed()
androidx.core.app.AppOpsManagerCompat: int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
com.appspa.update.entity.UpdateError: int getCode()
io.reactivex.internal.disposables.ListCompositeDisposable: boolean delete(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualObserver: MaybeEqualSingle$EqualObserver(io.reactivex.internal.operators.maybe.MaybeEqualSingle$EqualCoordinator)
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeFocusCompat(int,android.view.View)
io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: void dispose()
androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: void request(long)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: void onComplete()
io.reactivex.android.MainThreadDisposable$1: void run()
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,long,boolean,boolean)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: void onNext(java.lang.Object)
com.appspa.update.utils.DialogUtils: android.app.Activity findActivity(android.content.Context)
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest cacheMode(com.xuexiang.xhttp2.cache.model.CacheMode)
com.zhy.http.okhttp.log.LoggerInterceptor: void logForRequest(okhttp3.Request)
io.reactivex.internal.fuseable.SimpleQueue: void clear()
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
androidx.core.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[])
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: AppCompatViewInflater$DeclaredOnClickListener(android.view.View,java.lang.String)
io.reactivex.internal.operators.flowable.FlowableRefCount: void timeout(io.reactivex.internal.operators.flowable.FlowableRefCount$RefConnection)
androidx.versionedparcelable.VersionedParcel: void writeSet(java.util.Set,int)
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: CompletableAndThenCompletable$SourceObserver(io.reactivex.CompletableObserver,io.reactivex.CompletableSource)
io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeOnObserver: void onNext(java.lang.Object)
io.reactivex.internal.observers.CallbackCompletableObserver: void dispose()
io.reactivex.internal.subscriptions.AsyncSubscription: void request(long)
io.reactivex.internal.operators.flowable.FlowableSkipWhile$SkipWhileSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.fragment.app.FragmentTransition: void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
androidx.fragment.app.FragmentManagerImpl: int getBackStackEntryCount()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.lifecycle.LiveData$AlwaysActiveObserver: boolean shouldBeActive()
io.reactivex.internal.schedulers.ScheduledDirectPeriodicTask: java.lang.Runnable getWrappedRunnable()
androidx.core.graphics.TypefaceCompatApi21Impl: boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean)
io.reactivex.internal.subscribers.QueueDrainSubscriber: boolean fastEnter()
io.reactivex.internal.operators.observable.ObservableRepeatUntil$RepeatUntilObserver: void onError(java.lang.Throwable)
io.reactivex.internal.subscribers.BasicFuseableConditionalSubscriber: void onComplete()
androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)
androidx.fragment.app.Fragment: void performDestroyView()
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeCache: boolean add(io.reactivex.internal.operators.maybe.MaybeCache$CacheDisposable)
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: boolean accept(org.reactivestreams.Subscriber,java.util.Collection)
androidx.fragment.app.FragmentTransaction: boolean isAddToBackStackAllowed()
okio.Buffer: long readHexadecimalUnsignedLong()
com.google.gson.internal.LinkedTreeMap$KeySet: LinkedTreeMap$KeySet(com.google.gson.internal.LinkedTreeMap)
io.reactivex.Notification: boolean isOnComplete()
com.google.gson.internal.bind.TypeAdapters$20: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getAlpha()
androidx.appcompat.view.menu.ExpandedMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
androidx.fragment.app.FragmentTransitionCompat21$3: FragmentTransitionCompat21$3(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$1: io.reactivex.ObservableSource apply(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc$Wrapper)
okhttp3.RealCall: okhttp3.Response execute()
androidx.appcompat.widget.LinearLayoutCompat: void layoutVertical(int,int,int,int)
io.reactivex.internal.operators.flowable.FlowableSingleSingle$SingleElementSubscriber: FlowableSingleSingle$SingleElementSubscriber(io.reactivex.SingleObserver,java.lang.Object)
androidx.lifecycle.FullLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
androidx.core.view.ViewCompat: void removeActionWithId(int,android.view.View)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
io.reactivex.internal.operators.mixed.MaybeFlatMapPublisher$FlatMapPublisherSubscriber: MaybeFlatMapPublisher$FlatMapPublisherSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.appcompat.app.ToolbarActionBar: void setSubtitle(java.lang.CharSequence)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: void onNext(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate: DrawerLayout$ChildAccessibilityDelegate()
com.appspa.update.UpdateManager: void parseJson(java.lang.String,com.appspa.update.listener.IUpdateParseCallback)
io.reactivex.internal.operators.maybe.MaybeTimeoutMaybe$TimeoutFallbackMaybeObserver: void onError(java.lang.Throwable)
androidx.viewpager.widget.ViewPager: int determineTargetPage(int,float,int,int)
com.google.gson.JsonElement: byte getAsByte()
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void onError(java.lang.Throwable)
com.jakewharton.disklrucache.DiskLruCache$2: DiskLruCache$2()
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber,boolean)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()
okhttp3.CookieJar$1: java.util.List loadForRequest(okhttp3.HttpUrl)
com.xuexiang.xhttp2.request.BaseRequest: com.xuexiang.xhttp2.request.BaseRequest build()
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.reactivex.internal.operators.maybe.MaybeUsing$UsingObserver: void dispose()
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date,boolean,java.util.TimeZone)
androidx.appcompat.view.menu.MenuAdapter: void findExpandedIndex()
androidx.appcompat.widget.ListPopupWindow: void clearListSelection()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)
org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: void onComplete()
androidx.core.app.NotificationCompat$WearableExtender: int getContentIcon()
io.reactivex.Scheduler$PeriodicDirectTask: boolean isDisposed()
androidx.appcompat.app.AppCompatDialogFragment: void setupDialog(android.app.Dialog,int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isActive()
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
androidx.appcompat.widget.AppCompatBackgroundHelper: void applySupportBackgroundTint()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onRejectSharedElements(java.util.List)
androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
io.reactivex.internal.operators.flowable.FlowableIntervalRange$IntervalRangeSubscriber: FlowableIntervalRange$IntervalRangeSubscriber(org.reactivestreams.Subscriber,long,long)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.util.NotificationLite: boolean isSubscription(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapConditionalSubscriber: ParallelMap$ParallelMapConditionalSubscriber(io.reactivex.internal.fuseable.ConditionalSubscriber,io.reactivex.functions.Function)
androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: void onNext(java.lang.Object)
okio.GzipSink: void write(okio.Buffer,long)
androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)
retrofit2.BuiltInConverters: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.appcompat.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean)
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void onError(java.lang.Throwable)
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.appcompat.widget.TintTypedArray: float getFloat(int,float)
io.reactivex.internal.util.VolatileSizeArrayList: void clear()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()
androidx.appcompat.widget.ScrollingTabContainerView: void removeTabAt(int)
com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void onBoundsChange(android.graphics.Rect)
okio.Buffer: java.lang.String readUtf8()
io.reactivex.internal.operators.maybe.MaybeCreate$Emitter: boolean tryOnError(java.lang.Throwable)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$6: void accept(java.lang.Object)
androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)
androidx.viewpager.widget.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.view.menu.MenuItemImpl: boolean isCheckable()
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate: void onSuccess(java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: void onContentChanged()
org.aspectj.lang.reflect.PerClauseKind: org.aspectj.lang.reflect.PerClauseKind valueOf(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIntent(android.content.Intent)
io.reactivex.internal.operators.observable.ObservableAmb$AmbCoordinator: void dispose()
io.reactivex.internal.util.VolatileSizeArrayList: java.lang.Object[] toArray()
io.reactivex.internal.operators.maybe.MaybeMergeArray$MergeMaybeObserver: MaybeMergeArray$MergeMaybeObserver(org.reactivestreams.Subscriber,int,io.reactivex.internal.operators.maybe.MaybeMergeArray$SimpleQueueWithConsumerIndex)
io.reactivex.internal.operators.maybe.MaybeConcatArray$ConcatMaybeObserver: void drain()
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
com.google.gson.internal.bind.TypeAdapters$31: TypeAdapters$31(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)
io.reactivex.internal.operators.flowable.FlowablePublishAlt$PublishConnection: void onSubscribe(org.reactivestreams.Subscription)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: void onComplete()
com.google.gson.internal.LinkedTreeMap: java.lang.Object get(java.lang.Object)
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
com.google.gson.internal.LinkedTreeMap: java.util.Set keySet()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
androidx.core.graphics.ColorUtils: ColorUtils()
androidx.fragment.app.FragmentTransitionImpl: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
com.google.gson.Gson: java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)
io.reactivex.internal.operators.flowable.FlowableDetach: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver: boolean isDisposed()
io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier$WindowBoundaryMainSubscriber: void cancel()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.reactivex.internal.subscriptions.SubscriptionHelper: boolean setOnce(java.util.concurrent.atomic.AtomicReference,org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: boolean isDisposed()
androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)
com.zhy.http.okhttp.https.HttpsUtils$UnSafeHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
androidx.fragment.app.BackStackRecord: boolean isPostponed()
androidx.appcompat.app.AppCompatDelegateImpl$6: AppCompatDelegateImpl$6(androidx.appcompat.app.AppCompatDelegateImpl)
io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber: void onComplete()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: float getPixelSize()
io.reactivex.internal.operators.flowable.FlowableGroupJoin$LeftRightEndSubscriber: FlowableGroupJoin$LeftRightEndSubscriber(io.reactivex.internal.operators.flowable.FlowableGroupJoin$JoinSupport,boolean,int)
androidx.appcompat.widget.ListPopupWindow: void setHeight(int)
androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: ReflectiveGenericLifecycleObserver(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$WithLatestFromSubscriber: boolean setOther(org.reactivestreams.Subscription)
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getAll()
io.reactivex.internal.operators.maybe.MaybeDoAfterSuccess$DoAfterObserver: void onComplete()
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void removeAllShortcuts()
com.appspa.update.R$integer: R$integer()
androidx.fragment.app.Fragment: int getId()
io.reactivex.internal.schedulers.InstantPeriodicTask: void setFirst(java.util.concurrent.Future)
io.reactivex.plugins.RxJavaPlugins: RxJavaPlugins()
androidx.core.app.ShareCompat$IntentReader: android.content.ComponentName getCallingActivity()
io.reactivex.internal.schedulers.SingleScheduler: SingleScheduler()
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver$OnComplete: void onComplete()
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
android.support.v4.os.IResultReceiver$Stub: IResultReceiver$Stub()
com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)
androidx.appcompat.widget.ScrollingTabContainerView: boolean isCollapsed()
androidx.appcompat.app.ToolbarActionBar$1: void run()
com.appspa.update.UpdateManager: void cancelDownload()
androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: void onComplete()
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: boolean hasNext()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: int describeContents()
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.appspa.update.utils.FileUtils: android.net.Uri getUriForFile(java.io.File)
io.reactivex.internal.disposables.DisposableHelper: io.reactivex.internal.disposables.DisposableHelper[] values()
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
com.xuexiang.xhttp2.XHttp: com.xuexiang.xhttp2.cache.RxCache getRxCache()
androidx.appcompat.view.menu.StandardMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void drain()
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
io.reactivex.processors.MulticastProcessor: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: io.reactivex.FlowableEmitter serialize()
io.reactivex.processors.BehaviorProcessor: void remove(io.reactivex.processors.BehaviorProcessor$BehaviorSubscription)
androidx.appcompat.app.AppCompatDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
com.google.gson.internal.bind.DateTypeAdapter$1: DateTypeAdapter$1()
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.drawerlayout.widget.DrawerLayout: void onLayout(boolean,int,int,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View,int)
androidx.core.text.util.FindAddress: int attemptMatch(java.lang.String,java.util.regex.MatchResult)
org.aspectj.runtime.reflect.SourceLocationImpl: java.lang.String toString()
androidx.core.app.NotificationCompat$WearableExtender: boolean getContentIntentAvailableOffline()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context)
androidx.fragment.app.FragmentTabHost$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: SingleDelayWithSingle$OtherObserver(io.reactivex.SingleObserver,io.reactivex.SingleSource)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)
io.reactivex.internal.util.NotificationLite: boolean accept(java.lang.Object,org.reactivestreams.Subscriber)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$1: DownloadSubscriber$1(com.xuexiang.xhttp2.subsciber.DownloadSubscriber,com.xuexiang.xhttp2.callback.CallBack,long,long)
androidx.core.widget.TextViewCompat: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: void run()
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
io.reactivex.internal.subscribers.SinglePostCompleteSubscriber: SinglePostCompleteSubscriber(org.reactivestreams.Subscriber)
androidx.appcompat.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.os.LocaleListCompatWrapper: int indexOf(java.util.Locale)
androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)
androidx.appcompat.app.ToolbarActionBar: void setDisplayUseLogoEnabled(boolean)
androidx.collection.CircularArray: java.lang.Object popLast()
retrofit2.Utils$GenericArrayTypeImpl: boolean equals(java.lang.Object)
com.google.gson.JsonSyntaxException: JsonSyntaxException(java.lang.String,java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableRange: ObservableRange(int,int)
io.reactivex.internal.observers.FutureObserver: boolean cancel(boolean)
androidx.loader.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.xuexiang.xhttp2.model.HttpHeaders: void init()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void innerError(int,java.lang.Throwable)
androidx.lifecycle.MutableLiveData: MutableLiveData()
io.reactivex.internal.observers.SubscriberCompletableObserver: void onComplete()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: ActionMenuPresenter$OverflowMenuButton(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context)
androidx.appcompat.app.TwilightManager: TwilightManager(android.content.Context,android.location.LocationManager)
androidx.appcompat.view.menu.CascadingMenuPopup: void onDismiss()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.annotations.Since: double value()
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: io.reactivex.subjects.ReplaySubject$TimedNode getHead()
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$OtherSubscriber: void onError(java.lang.Throwable)
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
androidx.appcompat.app.AlertController$RecycleListView: void setHasDecor(boolean,boolean)
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.appcompat.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
okio.SegmentedByteString: okio.ByteString substring(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem getItem(int)
androidx.fragment.app.FragmentManagerImpl: void dispatchResume()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)
okio.Okio$4: Okio$4(java.net.Socket)
androidx.core.text.BidiFormatter$DirectionalityEstimator: byte skipEntityForward()
androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)
androidx.collection.CircularIntArray: int popFirst()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()
retrofit2.HttpServiceMethod$SuspendForBody: HttpServiceMethod$SuspendForBody(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter,boolean)
androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)
androidx.loader.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop$BackpressureDropSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.observers.ResumeSingleObserver: ResumeSingleObserver(java.util.concurrent.atomic.AtomicReference,io.reactivex.SingleObserver)
com.google.gson.stream.JsonReader: int peekKeyword()
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.observers.DeferredScalarDisposable: void clear()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow()
androidx.appcompat.app.AppCompatDelegate: void setLocalNightMode(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)
io.reactivex.processors.AsyncProcessor: AsyncProcessor()
io.reactivex.internal.subscribers.BlockingBaseSubscriber: BlockingBaseSubscriber()
androidx.versionedparcelable.CustomVersionedParcelable: void onPreParceling(boolean)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)
io.reactivex.internal.operators.maybe.MaybeSwitchIfEmpty$SwitchIfEmptyMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: void dispose()
androidx.drawerlayout.widget.DrawerLayout: boolean hasPeekingDrawer()
androidx.viewpager.widget.ViewPager: void completeScroll(boolean)
io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryInnerSubscriber: FlowableWindowBoundary$WindowBoundaryInnerSubscriber(io.reactivex.internal.operators.flowable.FlowableWindowBoundary$WindowBoundaryMainSubscriber)
com.appspa.update.entity.PromptEntity: boolean isSupportBackgroundUpdate()
com.xuexiang.xhttp2.exception.ApiException: java.lang.String getDisplayMessage()
io.reactivex.internal.operators.flowable.FlowableGroupBy$GroupBySubscriber: void clear()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object[] newArray(int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void onActionProviderVisibilityChanged(boolean)
io.reactivex.internal.operators.observable.ObservableConcatMapEager: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: void dispose()
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableSubscribeOn: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
io.reactivex.internal.operators.flowable.BlockingFlowableIterable$BlockingFlowableIterator: void run()
io.reactivex.internal.operators.single.SingleDoOnDispose$DoOnDisposeObserver: void onError(java.lang.Throwable)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$4: void run()
io.reactivex.internal.operators.flowable.FlowableDebounceTimed$DebounceTimedSubscriber: void request(long)
com.google.gson.internal.bind.TypeAdapters$33: TypeAdapters$33(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
io.reactivex.internal.functions.Functions$ListSorter: java.lang.Object apply(java.lang.Object)
okio.SegmentedByteString: okio.ByteString toByteString()
com.xuexiang.xhttp2.callback.ProgressLoadingCallBack: void onCompleted()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable$OtherObserver: MaybeDelayWithCompletable$OtherObserver(io.reactivex.MaybeObserver,io.reactivex.MaybeSource)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)
okio.ForwardingTimeout: ForwardingTimeout(okio.Timeout)
com.appspa.update.entity.DownloadEntity: com.appspa.update.entity.DownloadEntity setIsPatch(boolean)
androidx.customview.widget.ViewDragHelper: void flingCapturedView(int,int,int,int)
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
io.reactivex.internal.operators.parallel.ParallelFlatMap: void subscribe(org.reactivestreams.Subscriber[])
com.appspa.update.entity.DownloadEntity$1: com.appspa.update.entity.DownloadEntity createFromParcel(android.os.Parcel)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$4: DownloadSubscriber$4(com.xuexiang.xhttp2.subsciber.DownloadSubscriber)
androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
io.reactivex.internal.observers.ForEachWhileObserver: boolean isDisposed()
com.google.gson.internal.bind.TypeAdapters$29: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.xuexiang.xhttp2.model.ExpiredInfo: java.lang.String getBodyString()
androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)
okio.ByteString: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)
io.reactivex.internal.operators.flowable.FlowableWithLatestFrom$FlowableWithLatestSubscriber: void onNext(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
androidx.versionedparcelable.VersionedParcel: long readLong(long,int)
androidx.arch.core.internal.SafeIterableMap: int hashCode()
androidx.customview.widget.ViewDragHelper: void ensureMotionHistorySizeForId(int)
com.zhy.http.okhttp.https.HttpsUtils$UnSafeTrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)
okhttp3.Cookie: boolean domainMatch(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.appcompat.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)
io.reactivex.internal.operators.flowable.FlowableWindowTimed$WindowExactUnboundedSubscriber: void onComplete()
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver: void dispose()
androidx.core.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableAllSingle$AllSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.single.SingleInternalHelper$ToFlowableIterator: boolean hasNext()
androidx.core.app.AppComponentFactory: android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.core.text.util.LinkifyCompat: java.lang.String findAddress(java.lang.String)
io.reactivex.internal.operators.parallel.ParallelFilterTry$ParallelFilterConditionalSubscriber: void onComplete()
com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int)
androidx.core.view.MenuItemCompat: boolean expandActionView(android.view.MenuItem)
io.reactivex.internal.operators.flowable.FlowableZipIterable$ZipIterableSubscriber: void onComplete()
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message)
io.reactivex.internal.operators.observable.ObservableSkipWhile$SkipWhileObserver: ObservableSkipWhile$SkipWhileObserver(io.reactivex.Observer,io.reactivex.functions.Predicate)
io.reactivex.internal.operators.single.SingleZipArray$ZipCoordinator: void dispose()
okhttp3.internal.http2.Http2Connection$7: Http2Connection$7(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode)
androidx.drawerlayout.widget.DrawerLayout$SavedState: DrawerLayout$SavedState(android.os.Parcelable)
com.jakewharton.disklrucache.DiskLruCache$Entry: java.io.File getDirtyFile(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: int requestFusion(int)
com.google.gson.internal.bind.TypeAdapters$2: void write(com.google.gson.stream.JsonWriter,java.util.BitSet)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver: void otherError(java.lang.Throwable)
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
com.google.gson.Gson: com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter)
org.aspectj.runtime.reflect.SignatureImpl: java.lang.String toString(org.aspectj.runtime.reflect.StringMaker)
androidx.appcompat.widget.SearchView$9: void onNothingSelected(android.widget.AdapterView)
io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapIntoIterable: io.reactivex.ObservableSource apply(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestFromObserver: ObservableWithLatestFromMany$WithLatestFromObserver(io.reactivex.Observer,io.reactivex.functions.Function,int)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void enableContentAnimations(boolean)
androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber$MergeInnerObserver: void onError(java.lang.Throwable)
com.appspa.update.logs.UpdateLog: void e(java.lang.String)
androidx.customview.widget.FocusStrategy$SequentialComparator: int compare(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat: int getStableInsetLeft()
com.xuexiang.xhttp2.utils.PathUtils: boolean isDownloadsDocument(android.net.Uri)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
androidx.core.app.NotificationCompatBuilder: NotificationCompatBuilder(androidx.core.app.NotificationCompat$Builder)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
org.aspectj.internal.lang.reflect.DeclareParentsImpl: java.lang.String toString()
androidx.loader.content.AsyncTaskLoader: void cancelLoadInBackground()
androidx.core.view.NestedScrollingChild2: void stopNestedScroll(int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
io.reactivex.internal.operators.observable.ObservableConcatMap: ObservableConcatMap(io.reactivex.ObservableSource,io.reactivex.functions.Function,int,io.reactivex.internal.util.ErrorMode)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedNoLast: void complete()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer$BackpressureBufferSubscriber: boolean checkTerminated(boolean,boolean,org.reactivestreams.Subscriber)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
io.reactivex.internal.operators.observable.ObservableReplay$SizeAndTimeBoundReplayBuffer: io.reactivex.internal.operators.observable.ObservableReplay$Node getHead()
io.reactivex.internal.queue.MpscLinkedQueue: void spConsumerNode(io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode)
androidx.appcompat.app.ActionBar$TabListener: void onTabUnselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void dispose()
io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle$EqualCoordinator: void innerError(java.lang.Throwable)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])
androidx.core.app.NotificationManagerCompat: void createNotificationChannels(java.util.List)
okhttp3.internal.connection.RealConnection: void startHttp2(int)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver: MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver(io.reactivex.MaybeObserver,java.util.concurrent.atomic.AtomicReference)
com.google.gson.internal.bind.TimeTypeAdapter$1: TimeTypeAdapter$1()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: AppCompatSpinner$DropdownPopup$2(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
com.appspa.update.entity.DownloadEntity: boolean isFileValid(java.io.File)
androidx.appcompat.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)
com.appspa.update._AppSpace: void onApkInstallSuccess()
okio.AsyncTimeout: okio.AsyncTimeout awaitTimeout()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)
io.reactivex.processors.ReplayProcessor: void onComplete()
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
androidx.appcompat.app.WindowDecorActionBar: void hideForSystem()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl: android.content.ClipDescription getDescription()
com.xuexiang.xhttp2.utils.TypeUtils: TypeUtils()
io.reactivex.subscribers.TestSubscriber$EmptySubscriber: void onError(java.lang.Throwable)
com.jakewharton.disklrucache.DiskLruCache: java.io.File access$1900(com.jakewharton.disklrucache.DiskLruCache)
androidx.activity.R$styleable: R$styleable()
okhttp3.Response: long sentRequestAtMillis()
androidx.collection.MapCollections$MapIterator: boolean hasNext()
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
androidx.core.graphics.ColorUtils: int compositeColors(int,int)
androidx.core.text.util.FindAddress: boolean checkHouseNumber(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)
androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(android.app.NotificationChannelGroup)
androidx.core.net.TrafficStatsCompat: int getThreadStatsTag()
okhttp3.ResponseBody: java.io.InputStream byteStream()
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
io.reactivex.internal.operators.completable.CompletableDelay$Delay: boolean isDisposed()
androidx.appcompat.app.AppCompatActivity: void onStop()
androidx.core.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)
androidx.collection.MapCollections$KeySet: void clear()
io.reactivex.disposables.Disposable: boolean isDisposed()
androidx.lifecycle.MediatorLiveData: void onActive()
androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
okio.RealBufferedSource: java.lang.String toString()
io.reactivex.internal.operators.flowable.BlockingFlowableMostRecent$MostRecentSubscriber$Iterator: java.lang.Object next()
com.appspa.update.proxy.impl.DefaultUpdateChecker$2: DefaultUpdateChecker$2(com.appspa.update.proxy.impl.DefaultUpdateChecker,java.lang.String,com.appspa.update.proxy.IUpdateProxy)
androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: void otherError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed: void subscribeActual(io.reactivex.Observer)
com.appspa.demo.entity.CustomResult$VersionInfo: CustomResult$VersionInfo()
io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable$IgnoreObservable: void onComplete()
com.xuexiang.xhttp2.cookie.SerializableOkHttpCookies: SerializableOkHttpCookies(okhttp3.Cookie)
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
androidx.fragment.app.FragmentState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager)
io.reactivex.processors.ReplayProcessor$SizeBoundReplayBuffer: void replay(io.reactivex.processors.ReplayProcessor$ReplaySubscription)
com.xuexiang.xhttp2.exception.ApiException: int getCode()
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeWithDefaults(int)
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutConsumer: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: DefaultCallAdapterFactory$ExecutorCallbackCall(java.util.concurrent.Executor,retrofit2.Call)
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void error(java.lang.Throwable)
androidx.appcompat.view.menu.MenuPopupHelper: void show(int,int)
androidx.appcompat.widget.TooltipCompatHandler: void onViewDetachedFromWindow(android.view.View)
com.appspa.update.R$string: R$string()
okio.ForwardingTimeout: long timeoutNanos()
androidx.vectordrawable.animated.R$style: R$style()
androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutOtherMaybeObserver: MaybeTimeoutPublisher$TimeoutOtherMaybeObserver(io.reactivex.internal.operators.maybe.MaybeTimeoutPublisher$TimeoutMainMaybeObserver)
io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenSourceSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.ConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: int consumerIndex()
io.reactivex.internal.operators.maybe.MaybeFlatten$FlatMapMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: boolean isDisposed()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean isCreatingLoader()
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: void trimFinal()
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachConditionalSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.observers.ForEachWhileObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void initFeature(int)
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: int checkRtl(java.lang.CharSequence,int,int)
io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode: io.reactivex.internal.queue.MpscLinkedQueue$LinkedQueueNode lvNext()
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
io.reactivex.internal.subscriptions.ArrayCompositeSubscription: ArrayCompositeSubscription(int)
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
io.reactivex.internal.operators.single.SingleTimeout$TimeoutMainObserver$TimeoutFallbackObserver: void onError(java.lang.Throwable)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.appspa.update.entity.UpdateEntity: com.appspa.update.proxy.IUpdateHttpService getIUpdateHttpService()
com.xuexiang.xhttp2.cache.stategy.BaseStrategy$3: io.reactivex.ObservableSource apply(java.lang.Object)
okio.ByteString: okio.ByteString md5()
retrofit2.adapter.rxjava2.CallEnqueueObservable: CallEnqueueObservable(retrofit2.Call)
com.appspa.update.proxy.impl.DefaultUpdateDownloader: boolean isDownloadUrl(com.appspa.update.entity.UpdateEntity)
androidx.cursoradapter.widget.SimpleCursorAdapter: androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()
com.xuexiang.xhttp2.callback.CallClazzProxy: java.lang.reflect.Type getCallType()
io.reactivex.internal.operators.single.SingleDematerialize: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.completable.CompletableFromSingle$CompletableFromSingleObserver: void onSuccess(java.lang.Object)
com.google.gson.reflect.TypeToken: boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
com.appspa.update.widget.UpdateDialogFragment: UpdateDialogFragment()
androidx.arch.core.R: R()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getEmptyLocaleList()
io.reactivex.internal.operators.single.SingleDoAfterSuccess: void subscribeActual(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableSampleTimed: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
io.reactivex.internal.subscriptions.BasicQueueSubscription: boolean isEmpty()
androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
androidx.appcompat.view.menu.MenuBuilder: void setExclusiveItemChecked(android.view.MenuItem)
androidx.appcompat.widget.AppCompatDrawableManager$1: AppCompatDrawableManager$1()
com.appspa.update.widget.UpdateDialogActivity: void doStart()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable: void subscribeActual(org.reactivestreams.Subscriber)
com.xuexiang.xhttp2.cache.core.CacheCore: boolean clear()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getColumnIndex()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: void fastPath(org.reactivestreams.Subscriber,java.util.Iterator)
androidx.versionedparcelable.VersionedParcel: byte readByte(byte,int)
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber: void cancel()
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader$1: ProgressDialogLoader$1(com.xuexiang.xhttp2.subsciber.ProgressDialogLoader)
androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
androidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(int)
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.drawable.Drawable getTickMark()
io.reactivex.internal.operators.observable.ObservableBuffer$BufferExactObserver: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableReplay$BoundedReplayBuffer: void trimHead()
io.reactivex.internal.operators.flowable.FlowableSwitchMap$SwitchMapInnerSubscriber: void onNext(java.lang.Object)
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerOpened(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: AppCompatSpinner$DropdownPopup$1(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner)
androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)
androidx.fragment.app.FragmentController: void doLoaderStart()
io.reactivex.internal.schedulers.ComputationScheduler: io.reactivex.Scheduler$Worker createWorker()
androidx.appcompat.app.ActionBar$Tab: java.lang.CharSequence getText()
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
io.reactivex.internal.operators.flowable.FlowableIgnoreElements$IgnoreElementsSubscriber: FlowableIgnoreElements$IgnoreElementsSubscriber(org.reactivestreams.Subscriber)
androidx.appcompat.widget.ScrollingTabContainerView: void onMeasure(int,int)
com.appspa.update.widget.NumberProgressBar: int getReachedBarColor()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: boolean isDisposed()
androidx.appcompat.view.menu.MenuBuilder: boolean isQwertyMode()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.completable.CompletableObserveOn$ObserveOnCompletableObserver: void onComplete()
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver: BodyObservable$BodyObserver(io.reactivex.Observer)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.core.view.ActionProvider: android.content.Context getContext()
io.reactivex.internal.operators.maybe.MaybeOnErrorReturn$OnErrorReturnMaybeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()
com.google.gson.TypeAdapter: com.google.gson.JsonElement toJsonTree(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableRetryWhen$RepeatWhenObserver: void innerError(java.lang.Throwable)
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] reset()
androidx.appcompat.view.menu.SubMenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
org.aspectj.internal.lang.reflect.AjTypeImpl: boolean isAnnotationPresent(java.lang.Class)
com.appspa.update.service.DownloadService$DownloadBinder: DownloadService$DownloadBinder(com.appspa.update.service.DownloadService)
retrofit2.adapter.rxjava2.ResultObservable: ResultObservable(io.reactivex.Observable)
retrofit2.adapter.rxjava2.BodyObservable$BodyObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.demo.activity.MainActivity: void initView()
io.reactivex.internal.observers.DisposableLambdaObserver: void dispose()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context)
io.reactivex.subjects.AsyncSubject$AsyncDisposable: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentState: FragmentState(android.os.Parcel)
io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver: void onError(java.lang.Throwable)
retrofit2.ParameterHandler$HeaderMap: ParameterHandler$HeaderMap(java.lang.reflect.Method,int,retrofit2.Converter)
io.reactivex.internal.observers.FutureSingleObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.single.SingleDelayWithSingle$OtherObserver: void dispose()
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable createFrom(io.reactivex.Flowable)
okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
io.reactivex.subjects.ReplaySubject$UnboundedReplayBuffer: int size()
com.xuexiang.xhttp2.annotation.RequestParams: boolean keepJson()
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()
androidx.loader.content.Loader: boolean isStarted()
io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver: ObservableWindowBoundarySelector$OperatorWindowBoundaryCloseObserver(io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector$WindowBoundaryMainObserver,io.reactivex.subjects.UnicastSubject)
io.reactivex.internal.operators.observable.ObservableConcatMap$SourceObserver$InnerObserver: void onError(java.lang.Throwable)
com.google.gson.JsonObject: java.util.Set entrySet()
com.google.gson.internal.ObjectConstructor: java.lang.Object construct()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
androidx.fragment.app.FragmentController: void dispatchResume()
androidx.appcompat.widget.ListPopupWindow: int getSoftInputMode()
androidx.appcompat.widget.DropDownListView: void onDetachedFromWindow()
androidx.core.content.pm.ShortcutInfoCompat: boolean getLongLivedFromExtra(android.os.PersistableBundle)
okio.RealBufferedSource: byte[] readByteArray(long)
io.reactivex.Observable: io.reactivex.Observable take(long)
androidx.appcompat.view.SupportMenuInflater$MenuState: SupportMenuInflater$MenuState(androidx.appcompat.view.SupportMenuInflater,android.view.Menu)
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1: androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()
androidx.versionedparcelable.VersionedParcel: void writeInt(int)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
androidx.appcompat.widget.ActionBarBackgroundDrawable: void getOutline(android.graphics.Outline)
io.reactivex.internal.subscriptions.BasicIntQueueSubscription: boolean isEmpty()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.util.concurrent.CompletableFuture adapt(retrofit2.Call)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTint(int)
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate: android.graphics.drawable.Drawable getThemeUpIndicator()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: void onTimeout(long)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Scheduler onSingleScheduler(io.reactivex.Scheduler)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean getHintLaunchesActivity()
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuPopup: boolean closeMenuOnSubMenuOpened()
okhttp3.internal.cache.DiskLruCache$Editor$1: void onException(java.io.IOException)
io.reactivex.internal.operators.flowable.FlowableElementAt: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void cancel()
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.appcompat.widget.SwitchCompat$1: SwitchCompat$1(java.lang.Class,java.lang.String)
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.viewpager.widget.ViewPager: boolean pageRight()
androidx.core.content.res.GradientColorInflaterCompat: GradientColorInflaterCompat()
androidx.collection.ArraySet: boolean isEmpty()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char,int)
androidx.appcompat.widget.AppCompatTextHelper: void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray)
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver: void onError(java.lang.Throwable)
com.zhy.http.okhttp.builder.PostStringBuilder: PostStringBuilder()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
io.reactivex.internal.operators.completable.CompletableDoFinally$DoFinallyObserver: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentHostCallback: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
okio.GzipSink: void flush()
io.reactivex.internal.operators.flowable.FlowableScan$ScanSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableMap$MapSubscriber: FlowableMap$MapSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.Function)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableTimeInterval$TimeIntervalSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowablePublish$InnerSubscriber: void cancel()
io.reactivex.observers.ResourceSingleObserver: void onStart()
io.reactivex.internal.operators.completable.CompletableAndThenCompletable$SourceObserver: void onError(java.lang.Throwable)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(java.io.File)
okhttp3.internal.http2.Http2Connection: void pushRequestLater(int,java.util.List)
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: $Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String capabilityToString(int)
com.xuexiang.xhttp2.XHttp$3: XHttp$3()
androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.core.view.ViewCompat$3: boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
com.xuexiang.xhttp2.subsciber.DownloadSubscriber: void handleDownLoadFinished(java.lang.String,com.xuexiang.xhttp2.callback.CallBack)
okio.Util: void sneakyRethrow(java.lang.Throwable)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplaySubscriber: void remove(io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription)
io.reactivex.internal.operators.flowable.FlowableEmpty: java.lang.Object call()
androidx.appcompat.widget.ActionBarContextView: void dismissPopupMenus()
com.appspa.update.widget.UpdateDialogActivity: void clearIPrompterProxy()
androidx.cursoradapter.widget.CursorAdapter: void onContentChanged()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver[] newArray(int)
androidx.drawerlayout.widget.DrawerLayout: void dispatchOnDrawerSlide(android.view.View,float)
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: void dispose()
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: void otherComplete()
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.annotation.InspectableProperty$FlagEntry: int target()
com.appspa.update.UpdateManager: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableSampleTimed$SampleTimedSubscriber: void cancelTimer()
androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: void onError(java.lang.Throwable)
com.google.gson.Gson$3: java.lang.Number read(com.google.gson.stream.JsonReader)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: ActionMenuPresenter$ActionButtonSubmenu(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View)
androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)
io.reactivex.android.plugins.RxAndroidPlugins: io.reactivex.Scheduler onMainThreadScheduler(io.reactivex.Scheduler)
io.reactivex.internal.observers.DeferredScalarObserver: void onComplete()
androidx.fragment.app.FragmentState$1: java.lang.Object[] newArray(int)
io.reactivex.internal.observers.ForEachWhileObserver: void onComplete()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer()
io.reactivex.processors.BehaviorProcessor: BehaviorProcessor()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
com.google.gson.internal.bind.TypeAdapters$32: TypeAdapters$32(java.lang.Class,com.google.gson.TypeAdapter)
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo)
androidx.fragment.app.Fragment: int getNextTransitionStyle()
androidx.appcompat.widget.SearchView: void onTextFocusChanged()
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)
androidx.loader.content.Loader: boolean takeContentChanged()
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int)
io.reactivex.Scheduler: io.reactivex.disposables.Disposable schedulePeriodicallyDirect(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.DecorContentParent: void setMenuPrepared()
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.xuexiang.xhttp2.utils.Utils: android.content.ContentResolver getContentResolver()
retrofit2.DefaultCallAdapterFactory$1: java.lang.reflect.Type responseType()
io.reactivex.internal.operators.maybe.MaybeConcatArrayDelayError$ConcatMaybeObserver: void cancel()
androidx.core.view.NestedScrollingChildHelper: int[] getTempNestedScrollConsumed()
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate getDelegate()
io.reactivex.internal.operators.single.SingleHide$HideSingleObserver: SingleHide$HideSingleObserver(io.reactivex.SingleObserver)
io.reactivex.internal.operators.flowable.FlowableAmb$AmbCoordinator: FlowableAmb$AmbCoordinator(org.reactivestreams.Subscriber,int)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)
androidx.core.app.NotificationCompat$CarExtender: int getColor()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.http2.Http2Connection$PingRunnable: Http2Connection$PingRunnable(okhttp3.internal.http2.Http2Connection,boolean,int,int)
io.reactivex.internal.operators.flowable.FlowableFlattenIterable$FlattenIterableSubscriber: void request(long)
com.google.gson.Gson$5: java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader)
androidx.core.provider.FontsContractCompat$2: FontsContractCompat$2(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable: boolean isDisposed()
androidx.fragment.app.FragmentManagerState$1: FragmentManagerState$1()
com.google.gson.internal.bind.TypeAdapters$34: java.lang.String toString()
io.reactivex.subscribers.SerializedSubscriber: void onNext(java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$14: java.lang.Number read(com.google.gson.stream.JsonReader)
io.reactivex.internal.operators.observable.ObservableAllSingle$AllObserver: void dispose()
okhttp3.Dispatcher: java.util.List queuedCalls()
com.google.gson.internal.bind.TypeAdapters$4: java.lang.Boolean read(com.google.gson.stream.JsonReader)
androidx.appcompat.resources.R$attr: R$attr()
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String getId()
io.reactivex.internal.operators.flowable.FlowableGenerate$GeneratorSubscription: FlowableGenerate$GeneratorSubscription(org.reactivestreams.Subscriber,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer,java.lang.Object)
okhttp3.internal.ws.WebSocketWriter$FrameSink: WebSocketWriter$FrameSink(okhttp3.internal.ws.WebSocketWriter)
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveGroup(int)
androidx.collection.SimpleArrayMap: java.lang.String toString()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int)
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.widget.Toolbar: void ensureLogoView()
io.reactivex.internal.operators.observable.ObservableTakeLast$TakeLastObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper$1: void onClick(android.view.View)
com.google.gson.internal.bind.TypeAdapters$19: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)
okhttp3.Cookie: java.lang.String toString(boolean)
io.reactivex.internal.functions.Functions$ToMapKeyValueSelector: void accept(java.lang.Object,java.lang.Object)
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
org.aspectj.internal.lang.reflect.TypePatternBasedPerClauseImpl: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)
okhttp3.internal.http2.Http2Connection: long access$608(okhttp3.internal.http2.Http2Connection)
io.reactivex.disposables.ActionDisposable: void onDisposed(io.reactivex.functions.Action)
androidx.appcompat.view.StandaloneActionMode: void invalidate()
com.xuexiang.xhttp2.reflect.TypeException: TypeException(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableTakeLast$TakeLastSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableWithLatestFromMany$WithLatestInnerObserver: void dispose()
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.parallel.ParallelMap$ParallelMapSubscriber: void onSubscribe(org.reactivestreams.Subscription)
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
com.xuexiang.xhttp2.request.GetRequest: GetRequest(java.lang.String)
com.xuexiang.xhttp2.XHttpProxy: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)
com.appspa.update.proxy.impl.DefaultUpdateParser: DefaultUpdateParser()
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: boolean isDisposed()
com.xuexiang.xhttp2.interceptor.NoCacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.collection.ArraySet: void clear()
okio.RealBufferedSink: okio.Buffer buffer()
androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: DropDownListView$GateKeeperDrawable(android.graphics.drawable.Drawable)
io.reactivex.internal.observers.BlockingLastObserver: void onError(java.lang.Throwable)
retrofit2.HttpServiceMethod$SuspendForResponse: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)
androidx.versionedparcelable.VersionedParcel: java.lang.Object[] readArray(java.lang.Object[],int)
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailTo()
io.reactivex.internal.operators.observable.ObservableReduceMaybe$ReduceObserver: ObservableReduceMaybe$ReduceObserver(io.reactivex.MaybeObserver,io.reactivex.functions.BiFunction)
androidx.core.view.LayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AlertController: void setupTitle(android.view.ViewGroup)
androidx.fragment.app.FragmentManagerImpl: void popBackStack(java.lang.String,int)
okhttp3.internal.http2.Http2Connection: void pushHeadersLater(int,java.util.List,boolean)
io.reactivex.internal.operators.parallel.ParallelFilter$BaseFilterSubscriber: void request(long)
io.reactivex.internal.operators.flowable.FlowableTakeWhile: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.SearchView$4: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
io.reactivex.internal.operators.flowable.FlowablePublish$PublishSubscriber: void onNext(java.lang.Object)
androidx.lifecycle.LifecycleRegistry: void popParentState()
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
com.google.gson.JsonNull: JsonNull()
io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle$ReduceSeedObserver: FlowableReduceSeedSingle$ReduceSeedObserver(io.reactivex.SingleObserver,io.reactivex.functions.BiFunction,java.lang.Object)
io.reactivex.internal.operators.maybe.MaybeCache: void onSuccess(java.lang.Object)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: ViewModelProvider$AndroidViewModelFactory(android.app.Application)
androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()
androidx.appcompat.widget.ListPopupWindow: boolean isDropDownAlwaysVisible()
androidx.appcompat.app.WindowDecorActionBar: void ensureTabsExist()
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isFullScreen()
io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback: void onError(java.lang.Throwable)
androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)
com.appspa.update.AppSpace: com.appspa.update.AppSpace supportSilentInstall(boolean)
io.reactivex.plugins.RxJavaPlugins: io.reactivex.Observable onAssembly(io.reactivex.Observable)
androidx.core.view.DragStartHelper: void attach()
androidx.fragment.app.FragmentManagerImpl: int getActiveFragmentCount()
com.appspa.update.widget.UpdateDialogFragment: void onStart()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)
io.reactivex.internal.operators.single.SingleNever: SingleNever()
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: void onComplete()
androidx.appcompat.app.ToolbarActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void onNext(java.lang.Object)
okhttp3.Address: java.util.List protocols()
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.ListPopupWindow: void setAnimationStyle(int)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
androidx.activity.R$string: R$string()
androidx.core.view.MarginLayoutParamsCompat: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet,int)
io.reactivex.internal.operators.observable.ObservableConcatMapEager$ConcatMapEagerMainObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableCache: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableSkipLastTimed$SkipLastTimedSubscriber: void onNext(java.lang.Object)
okhttp3.internal.http2.Http2Connection: long access$708(okhttp3.internal.http2.Http2Connection)
androidx.viewpager.widget.PagerTitleStrip: PagerTitleStrip(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)
androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()
io.reactivex.internal.operators.observable.ObservableCombineLatest$CombinerObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.google.gson.LongSerializationPolicy: LongSerializationPolicy(java.lang.String,int,com.google.gson.LongSerializationPolicy$1)
okhttp3.internal.http1.Http1Codec$ChunkedSource: Http1Codec$ChunkedSource(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl)
androidx.core.text.TextDirectionHeuristicsCompat: int isRtlTextOrFormat(int)
androidx.core.widget.AutoScrollHelper: int constrain(int,int,int)
com.appspa.update.entity.PromptEntity: int getTopResId()
androidx.fragment.app.FragmentTabHost$SavedState: FragmentTabHost$SavedState(android.os.Parcel)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservableWindow$WindowExactObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayFunction: io.reactivex.ObservableSource apply(io.reactivex.Observable)
io.reactivex.internal.operators.observable.ObservableFromUnsafeSource: ObservableFromUnsafeSource(io.reactivex.ObservableSource)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void run()
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: boolean tryOnNext(java.lang.Object)
androidx.appcompat.widget.PopupMenu: android.view.Menu getMenu()
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
com.xuexiang.xhttp2.cache.core.LruDiskCache: boolean doContainsKey(java.lang.String)
androidx.collection.MapCollections: int colIndexOfKey(java.lang.Object)
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
io.reactivex.internal.functions.Functions$ToMapKeyValueSelector: void accept(java.util.Map,java.lang.Object)
com.appspa.update.entity.UpdateEntity: boolean isSilent()
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator(int)
okhttp3.MediaType: boolean equals(java.lang.Object)
com.google.gson.internal.bind.DateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.util.Date)
io.reactivex.internal.operators.flowable.FlowableCreate$BaseEmitter: void complete()
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()
io.reactivex.subjects.SingleSubject: void onError(java.lang.Throwable)
okio.Buffer$2: int available()
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl: boolean onTouchEvent(android.view.MotionEvent)
com.google.gson.internal.$Gson$Types: boolean equal(java.lang.Object,java.lang.Object)
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
io.reactivex.internal.schedulers.ImmediateThinScheduler: io.reactivex.Scheduler$Worker createWorker()
io.reactivex.internal.operators.parallel.ParallelRunOn$BaseRunOnSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2: void onAnimationEnd(android.animation.Animator)
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable: TrampolineScheduler$TimedRunnable(java.lang.Runnable,java.lang.Long,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMaxTextLength(int)
io.reactivex.internal.operators.maybe.MaybeJust: java.lang.Object call()
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: void drain()
androidx.annotation.Size: long max()
io.reactivex.internal.operators.observable.ObservableCreate$SerializedEmitter: void drain()
io.reactivex.Flowable: io.reactivex.Flowable map(io.reactivex.functions.Function)
com.google.gson.DefaultDateTypeAdapter: DefaultDateTypeAdapter(java.lang.Class,int,int)
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
androidx.collection.LruCache: java.lang.Object create(java.lang.Object)
androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)
okhttp3.internal.cache.DiskLruCache$1: DiskLruCache$1(okhttp3.internal.cache.DiskLruCache)
okio.ForwardingTimeout: long deadlineNanoTime()
io.reactivex.internal.subscribers.QueueDrainSubscriber: void fastPathEmitMax(java.lang.Object,boolean,io.reactivex.disposables.Disposable)
androidx.core.provider.SelfDestructiveThread: SelfDestructiveThread(java.lang.String,int,int)
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedNoLast: void complete()
com.jakewharton.disklrucache.DiskLruCache$2: void write(int)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: float getInterpolation(float)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int)
androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int,int)
okio.Buffer: byte[] readByteArray(long)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
io.reactivex.internal.observers.SubscriberCompletableObserver: void request(long)
androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()
io.reactivex.internal.operators.flowable.FlowablePublishMulticast$MulticastProcessor: boolean isDisposed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getAlpha()
io.reactivex.internal.operators.observable.ObservablePublishAlt$InnerDisposable: ObservablePublishAlt$InnerDisposable(io.reactivex.Observer,io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void bindTab(androidx.appcompat.app.ActionBar$Tab)
io.reactivex.internal.operators.parallel.ParallelSortedJoin$SortedJoinInnerSubscriber: void onNext(java.lang.Object)
androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)
androidx.annotation.Size: long multiple()
androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)
androidx.fragment.app.Fragment: void performDestroy()
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: boolean isDisposed()
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
io.reactivex.internal.operators.flowable.FlowableMaterialize: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: boolean isDisposed()
com.google.gson.internal.LazilyParsedNumber: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableLift: void subscribeActual(org.reactivestreams.Subscriber)
com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility: com.appspa.update.widget.NumberProgressBar$ProgressTextVisibility valueOf(java.lang.String)
io.reactivex.internal.operators.maybe.MaybeToObservable$MaybeToObservableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier$WindowBoundaryMainObserver: void drain()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
io.reactivex.plugins.RxJavaPlugins: java.lang.Object apply(io.reactivex.functions.Function,java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)
okio.Buffer$1: void write(byte[],int,int)
io.reactivex.internal.operators.maybe.MaybeContains$ContainsMaybeObserver: MaybeContains$ContainsMaybeObserver(io.reactivex.SingleObserver,java.lang.Object)
okhttp3.internal.http.RealResponseBody: long contentLength()
io.reactivex.internal.operators.flowable.FlowableSingleMaybe$SingleElementSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
io.reactivex.internal.operators.flowable.FlowableMergeWithMaybe$MergeWithObserver$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setDither(boolean)
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.String toString()
com.google.gson.JsonArray: java.math.BigInteger getAsBigInteger()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
com.appspa.update.utils.Md5Utils: java.lang.String getFileMD5(java.io.File)
io.reactivex.internal.operators.mixed.ObservableSwitchMapMaybe$SwitchMapMaybeMainObserver: void onError(java.lang.Throwable)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
androidx.lifecycle.ReportFragment: void onDestroy()
androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean isReady()
io.reactivex.Maybe: void subscribe(io.reactivex.MaybeObserver)
com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.core.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)
androidx.appcompat.app.AppCompatDelegateImpl$5: AppCompatDelegateImpl$5(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
okhttp3.RequestBody$2: void writeTo(okio.BufferedSink)
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1: androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferBoundaryObserver$BufferOpenObserver: boolean isDisposed()
androidx.core.content.res.ComplexColorCompat: boolean isStateful()
androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)
io.reactivex.internal.operators.maybe.MaybeTakeUntilMaybe$TakeUntilMainMaybeObserver$TakeUntilOtherMaybeObserver: void onComplete()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe$ConcatMapMaybeMainObserver$ConcatMapMaybeObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableAny$AnyObserver: void dispose()
androidx.annotation.LongDef: boolean open()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: void onComplete()
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: void setShowDefaultActivity(boolean,boolean)
retrofit2.Utils$ParameterizedTypeImpl: Utils$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
io.reactivex.Flowable: io.reactivex.Flowable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void innerComplete(io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber$InnerConsumer)
io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnError: void run()
io.reactivex.internal.operators.flowable.FlowableFlatMapCompletable$FlatMapCompletableMainSubscriber: void onNext(java.lang.Object)
androidx.fragment.app.FragmentStatePagerAdapter: void finishUpdate(android.view.ViewGroup)
androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)
io.reactivex.internal.observers.FutureSingleObserver: void onSuccess(java.lang.Object)
com.google.gson.internal.$Gson$Types: java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)
io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.ActionBar$TabListener: void onTabReselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
okhttp3.internal.http2.Http2Connection$6: void execute()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
io.reactivex.internal.functions.Functions: Functions()
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void next()
okio.SegmentedByteString: java.nio.ByteBuffer asByteBuffer()
androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)
com.xuexiang.xhttp2.R$dimen: R$dimen()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean isAutoSizeEnabled()
okhttp3.internal.cache.DiskLruCache: void close()
io.reactivex.internal.operators.observable.ObservableSampleTimed$SampleTimedObserver: boolean isDisposed()
androidx.core.util.Pair: androidx.core.util.Pair create(java.lang.Object,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferOverlappingSubscriber: FlowableBuffer$PublisherBufferOverlappingSubscriber(org.reactivestreams.Subscriber,int,int,java.util.concurrent.Callable)
io.reactivex.schedulers.TestScheduler$TestWorker$QueueRemove: void run()
io.reactivex.subjects.PublishSubject: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: void disposeAfter()
androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()
com.google.gson.internal.bind.TypeAdapters$7: TypeAdapters$7()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.XHttp: int getRetryCount()
io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary$BufferExactBoundarySubscriber: FlowableBufferExactBoundary$BufferExactBoundarySubscriber(org.reactivestreams.Subscriber,java.util.concurrent.Callable,org.reactivestreams.Publisher)
androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)
io.reactivex.internal.operators.maybe.MaybeDetach: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: int requestFusion(int)
io.reactivex.internal.operators.flowable.FlowableNever: void subscribeActual(org.reactivestreams.Subscriber)
okhttp3.Headers: java.lang.String get(java.lang.String[],java.lang.String)
io.reactivex.internal.operators.completable.CompletableCache$InnerCompletableCache: void dispose()
io.reactivex.internal.schedulers.ComputationScheduler: void start()
com.xuexiang.xhttp2.subsciber.ProgressDialogLoader: void dismissLoading()
androidx.appcompat.app.ToolbarActionBar: void setHomeAsUpIndicator(int)
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver: void onError(java.lang.Throwable)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther$DelayObserver$OnComplete: void onNext(java.lang.Object)
io.reactivex.internal.operators.completable.CompletableResumeNext$ResumeNextObserver: boolean isDisposed()
androidx.core.app.Person$Builder: Person$Builder()
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl(long)
okhttp3.Response: okhttp3.Handshake handshake()
androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()
com.xuexiang.xhttp2.subsciber.DownloadSubscriber$2: void accept(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription: void fastPath()
io.reactivex.internal.operators.flowable.FlowableOnBackpressureError$BackpressureErrorSubscriber: void onComplete()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void sendUrgentData(int)
io.reactivex.internal.operators.parallel.ParallelFilter$ParallelFilterSubscriber: boolean tryOnNext(java.lang.Object)
okio.Buffer: okio.Buffer clone()
androidx.core.provider.FontsContractCompat$4$9: void run()
org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl: org.aspectj.lang.reflect.PointcutExpression getPointcutExpression()
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription: void fastPath()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()
androidx.core.app.Person: java.lang.String getUri()
com.xuexiang.xhttp2.cache.RxCache$Builder: com.xuexiang.xhttp2.cache.RxCache$Builder init(android.content.Context)
com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)
androidx.appcompat.widget.AppCompatImageHelper: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.xuexiang.xhttp2.cache.model.CacheResult: CacheResult(boolean,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: android.util.SizeF readSizeF(android.util.SizeF,int)
androidx.core.content.ContextCompat: ContextCompat()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent)
io.reactivex.internal.operators.flowable.FlowableAny: void subscribeActual(org.reactivestreams.Subscriber)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String)
io.reactivex.internal.util.QueueDrainHelper: boolean postCompleteDrain(long,org.reactivestreams.Subscriber,java.util.Queue,java.util.concurrent.atomic.AtomicLong,io.reactivex.functions.BooleanSupplier)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest$BackpressureLatestSubscriber: FlowableOnBackpressureLatest$BackpressureLatestSubscriber(org.reactivestreams.Subscriber)
okio.Buffer: java.lang.String toString()
okio.Buffer: okio.BufferedSink emit()
com.xuexiang.xhttp2.cache.RxCache$Builder: com.xuexiang.xhttp2.cache.RxCache$Builder diskConverter(com.xuexiang.xhttp2.cache.converter.IDiskConverter)
androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
io.reactivex.internal.operators.flowable.FlowableCount$CountSubscriber: void onComplete()
androidx.appcompat.app.AlertController$4: AlertController$4(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
okhttp3.internal.http1.Http1Codec$AbstractSource: Http1Codec$AbstractSource(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View)
io.reactivex.internal.operators.maybe.MaybeFlatMapCompletable$FlatMapCompletableObserver: MaybeFlatMapCompletable$FlatMapCompletableObserver(io.reactivex.CompletableObserver,io.reactivex.functions.Function)
io.reactivex.internal.disposables.EmptyDisposable: void dispose()
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver: void onComplete()
androidx.core.app.NotificationManagerCompat: void cancel(java.lang.String,int)
androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: void onNext(java.lang.Object)
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
io.reactivex.processors.MulticastProcessor: boolean add(io.reactivex.processors.MulticastProcessor$MulticastSubscription)
androidx.loader.content.ModernAsyncTask$AsyncTaskResult: ModernAsyncTask$AsyncTaskResult(androidx.loader.content.ModernAsyncTask,java.lang.Object[])
io.reactivex.internal.observers.SubscriberCompletableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplerSubscriber: void onNext(java.lang.Object)
androidx.collection.ArrayMap$1: void colRemoveAt(int)
io.reactivex.internal.operators.observable.ObservableAll$AllObserver: void dispose()
io.reactivex.plugins.RxJavaPlugins: void uncaught(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableMergeWithCompletable$MergeWithSubscriber: void onError(java.lang.Throwable)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
okhttp3.ResponseBody$1: okio.BufferedSource source()
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
androidx.core.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)
com.xuexiang.xhttp2.XHttp: java.lang.String getBaseUrl()
androidx.appcompat.view.SupportActionModeWrapper: android.view.View getCustomView()
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailBcc()
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setExitFadeDuration(int)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean)
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect onGetEpicenter(android.transition.Transition)
androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
io.reactivex.internal.operators.observable.ObservableFlatMapMaybe$FlatMapMaybeObserver: void onError(java.lang.Throwable)
androidx.appcompat.widget.LinearLayoutCompat: void measureVertical(int,int)
com.google.gson.internal.LinkedTreeMap: void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowSkipObserver: ObservableWindowTimed$WindowSkipObserver(io.reactivex.Observer,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler$Worker,int)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void post()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: AppCompatCompoundButtonHelper(android.widget.CompoundButton)
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: void dispose()
io.reactivex.internal.operators.observable.ObservableZipIterable$ZipIterableObserver: void onComplete()
androidx.fragment.app.FragmentController: androidx.loader.app.LoaderManager getSupportLoaderManager()
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel,java.lang.ClassLoader)
org.aspectj.internal.lang.reflect.DeclarePrecedenceImpl: java.lang.String toString()
io.reactivex.internal.operators.observable.ObservableFromPublisher$PublisherSubscriber: void onComplete()
io.reactivex.processors.UnicastProcessor: void onComplete()
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromObserver: boolean setOther(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.maybe.MaybeFilterSingle: void subscribeActual(io.reactivex.MaybeObserver)
io.reactivex.internal.operators.observable.AbstractObservableWithUpstream: AbstractObservableWithUpstream(io.reactivex.ObservableSource)
com.xuexiang.xhttp2.exception.ApiException$ERROR: ApiException$ERROR()
io.reactivex.internal.operators.observable.ObservableRange$RangeDisposable: int requestFusion(int)
androidx.appcompat.widget.ActivityChooserModel: boolean loadActivitiesIfNeeded()
io.reactivex.internal.operators.flowable.FlowableSkipLast$SkipLastSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: void cancel()
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: boolean isDisposed()
io.reactivex.subscribers.TestSubscriber: void dispose()
io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier$BufferBoundarySupplierSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: MaybeFilterSingle$FilterMaybeObserver(io.reactivex.MaybeObserver,io.reactivex.functions.Predicate)
io.reactivex.internal.subscriptions.EmptySubscription: void complete(org.reactivestreams.Subscriber)
retrofit2.HttpServiceMethod$SuspendForBody: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
io.reactivex.internal.operators.flowable.FlowableFlatMapSingle$FlatMapSingleSubscriber$InnerObserver: void onError(java.lang.Throwable)
com.google.gson.internal.Excluder: boolean isValidSince(com.google.gson.annotations.Since)
com.google.gson.JsonElement: JsonElement()
io.reactivex.internal.operators.completable.CompletableFromPublisher$FromPublisherSubscriber: boolean isDisposed()
com.xuexiang.xhttp2.R$interpolator: R$interpolator()
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap)
io.reactivex.internal.operators.flowable.FlowableReplay$ReplayBufferTask: java.lang.Object call()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()
androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
io.reactivex.internal.observers.FutureObserver: boolean isDisposed()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.SubMenu getSubMenu()
io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle$EqualCoordinator: void subscribe()
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: void dispose()
okhttp3.internal.io.FileSystem$1: void rename(java.io.File,java.io.File)
com.appspa.demo.http.OKHttpUpdateHttpService: void cancelDownload(java.lang.String)
androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()
androidx.fragment.app.FragmentTransition: FragmentTransition()
io.reactivex.internal.operators.flowable.FlowableTimeout$TimeoutFallbackSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.observable.ObservableElementAt$ElementAtObserver: void dispose()
androidx.appcompat.view.StandaloneActionMode: StandaloneActionMode(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)
androidx.core.view.WindowInsetsCompat: int hashCode()
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
io.reactivex.internal.schedulers.ExecutorScheduler$DelayedRunnable: void dispose()
io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver: void innerError(io.reactivex.internal.operators.mixed.ObservableSwitchMapSingle$SwitchMapSingleMainObserver$SwitchMapSingleObserver,java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
io.reactivex.internal.operators.observable.ObservableBufferTimed$BufferSkipBoundedObserver: void accept(io.reactivex.Observer,java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$FlatMapWithCombinerInner: FlowableInternalHelper$FlatMapWithCombinerInner(io.reactivex.functions.BiFunction,java.lang.Object)
io.reactivex.internal.operators.observable.ObserverResourceWrapper: void onComplete()
com.google.gson.internal.LinkedHashTreeMap$1: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.reactivex.subjects.PublishSubject: void subscribeActual(io.reactivex.Observer)
androidx.appcompat.widget.ListPopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
io.reactivex.internal.operators.completable.CompletableCreate$Emitter: boolean tryOnError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableAmb$AmbInnerSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.AbsActionBarView: boolean onHoverEvent(android.view.MotionEvent)
com.xuexiang.xhttp2.model.HttpHeaders: void setAcceptLanguage(java.lang.String)
io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver: void onError(java.lang.Throwable)
com.google.gson.annotations.SerializedName: java.lang.String[] alternate()
androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)
org.reactivestreams.FlowAdapters$FlowPublisherFromReactive: void subscribe(java.util.concurrent.Flow$Subscriber)
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
com.google.gson.JsonElement: short getAsShort()
io.reactivex.internal.operators.observable.ObservableScan$ScanObserver: boolean isDisposed()
androidx.appcompat.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: long now()
com.google.gson.internal.Excluder: com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()
io.reactivex.internal.operators.flowable.FlowableLastMaybe$LastSubscriber: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableMergeWithSingle$MergeWithObserver: void onNext(java.lang.Object)
com.google.gson.internal.bind.util.ISO8601Utils: java.lang.String format(java.util.Date)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onInvalidated()
io.reactivex.Notification: io.reactivex.Notification createOnNext(java.lang.Object)
okio.Okio: okio.BufferedSink buffer(okio.Sink)
androidx.core.view.KeyEventDispatcher$Component: boolean superDispatchKeyEvent(android.view.KeyEvent)
io.reactivex.internal.operators.flowable.BlockingFlowableNext: java.util.Iterator iterator()
com.jakewharton.disklrucache.DiskLruCache: java.io.File getDirectory()
io.reactivex.internal.operators.observable.ObservableAmb: void subscribeActual(io.reactivex.Observer)
com.appspa.update.proxy.impl.DefaultUpdateChecker$1: void onError(java.lang.Throwable)
io.reactivex.internal.operators.maybe.MaybeConcatIterable$ConcatMaybeObserver: MaybeConcatIterable$ConcatMaybeObserver(org.reactivestreams.Subscriber,java.util.Iterator)
androidx.appcompat.widget.AppCompatEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.reactivex.internal.operators.maybe.MaybeFlatMapIterableFlowable$FlatMapIterableObserver: int requestFusion(int)
com.google.gson.Gson$2: java.lang.Float read(com.google.gson.stream.JsonReader)
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
com.zhy.http.okhttp.cookie.store.SerializableHttpCookie: void writeObject(java.io.ObjectOutputStream)
com.xuexiang.xhttp2.model.HttpHeaders: java.util.Set getNames()
androidx.viewpager.widget.ViewPager$1: ViewPager$1()
io.reactivex.internal.operators.observable.ObservableSwitchMap$SwitchMapInnerObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableWindow$WindowSkipSubscriber: void onComplete()
io.reactivex.internal.operators.flowable.FlowableCombineLatest$CombineLatestCoordinator: void cancelAll()
androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.reactivex.internal.operators.observable.ObservableWindowTimed$WindowExactUnboundedObserver: void dispose()
okhttp3.internal.http2.Http2Connection$6: Http2Connection$6(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setEnterFadeDuration(int)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
androidx.core.provider.FontRequest: java.lang.String getIdentifier()
androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)
androidx.core.os.TraceCompat: void beginSection(java.lang.String)
androidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.gson.internal.ConstructorConstructor: com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)
androidx.core.provider.FontsContractCompat$2: void onReply(java.lang.Object)
androidx.appcompat.app.ToolbarActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.jakewharton.disklrucache.DiskLruCache: int access$402(com.jakewharton.disklrucache.DiskLruCache,int)
io.reactivex.internal.operators.flowable.FlowableTakeUntil$TakeUntilMainSubscriber: FlowableTakeUntil$TakeUntilMainSubscriber(org.reactivestreams.Subscriber)
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: FragmentManagerImpl$EndViewTransitionAnimation(android.view.animation.Animation,android.view.ViewGroup,android.view.View)
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)
io.reactivex.internal.operators.completable.CompletableToObservable: void subscribeActual(io.reactivex.Observer)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isAutoMirrored()
androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
io.reactivex.internal.operators.maybe.MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver: MaybeDelaySubscriptionOtherPublisher$DelayMaybeObserver(io.reactivex.MaybeObserver)
io.reactivex.internal.observers.CallbackCompletableObserver: CallbackCompletableObserver(io.reactivex.functions.Consumer,io.reactivex.functions.Action)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaX()
com.xuexiang.xhttp2.XHttp: long getCacheTime()
io.reactivex.internal.operators.observable.BlockingObservableIterable$BlockingObservableIterator: boolean hasNext()
androidx.core.content.ContextCompat: java.io.File getCodeCacheDir(android.content.Context)
io.reactivex.internal.operators.observable.ObservableGroupBy$GroupByObserver: void onError(java.lang.Throwable)
androidx.annotation.InspectableProperty$EnumEntry: int value()
androidx.appcompat.widget.PopupMenu: void setOnMenuItemClickListener(androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener)
androidx.core.widget.ScrollerCompat: float getCurrVelocity()
com.xuexiang.xhttp2.cache.stategy.CacheAndRemoteStrategy: io.reactivex.Observable execute(com.xuexiang.xhttp2.cache.RxCache,java.lang.String,long,io.reactivex.Observable,java.lang.reflect.Type)
com.google.gson.stream.JsonReader: void nextNull()
com.appspa.update._AppSpace: void startInstallApk(android.content.Context,java.io.File,com.appspa.update.entity.DownloadEntity)
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: void cancel()
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
io.reactivex.internal.operators.flowable.FlowableThrottleLatest$ThrottleLatestSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int)
androidx.appcompat.app.AppCompatDelegate: void onConfigurationChanged(android.content.res.Configuration)
com.jakewharton.disklrucache.DiskLruCache$1: DiskLruCache$1(com.jakewharton.disklrucache.DiskLruCache)
androidx.fragment.app.Fragment: boolean getRetainInstance()
io.reactivex.observers.ResourceObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
androidx.vectordrawable.R$attr: R$attr()
com.google.gson.internal.LinkedHashTreeMap$KeySet: LinkedHashTreeMap$KeySet(com.google.gson.internal.LinkedHashTreeMap)
com.appspa.update.widget.NumberProgressBar: int measure(int,boolean)
io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber: void onSubscribe(org.reactivestreams.Subscription)
androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)
okhttp3.internal.connection.RealConnection: java.lang.String toString()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])
androidx.appcompat.widget.TooltipCompatHandler: void hide()
com.google.gson.Gson$3: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
com.xuexiang.xhttp2.subsciber.BaseSubscriber: void onComplete()
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
io.reactivex.internal.operators.flowable.FlowableBuffer$PublisherBufferExactSubscriber: void onSubscribe(org.reactivestreams.Subscription)
org.aspectj.runtime.internal.CFlowCounter: org.aspectj.runtime.internal.cflowstack.ThreadStackFactory getThreadLocalStackFactoryFor11()
io.reactivex.internal.operators.observable.ObservableFromArray$FromArrayDisposable: java.lang.Object poll()
androidx.core.os.LocaleListPlatformWrapper: int indexOf(java.util.Locale)
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
okio.Okio: okio.Sink sink(java.net.Socket)
io.reactivex.internal.operators.parallel.ParallelCollect$ParallelCollectSubscriber: void onError(java.lang.Throwable)
androidx.collection.CircularIntArray: void doubleCapacity()
io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription: boolean isEmpty()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
io.reactivex.internal.operators.flowable.FlowableSamplePublisher$SamplePublisherSubscriber: void complete()
io.reactivex.internal.operators.observable.ObservableGroupJoin$GroupJoinDisposable: boolean isDisposed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.Region getTransparentRegion()
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.collection.SimpleArrayMap: int size()
io.reactivex.observers.BaseTestConsumer$TestWaitStrategy$1: void run()
androidx.appcompat.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)
com.google.gson.internal.bind.TypeAdapters$24: java.lang.Object read(com.google.gson.stream.JsonReader)
androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)
androidx.core.app.NotificationCompat$WearableExtender: int getContentIconGravity()
androidx.appcompat.widget.ActionBarContextView: boolean canShowOverflowMenu()
androidx.appcompat.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
io.reactivex.internal.operators.completable.CompletablePeek$CompletableObserverImplementation: void onError(java.lang.Throwable)
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener: void onSharedElementsReady()
androidx.viewpager.widget.PagerTitleStrip: void onDetachedFromWindow()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)
androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.appspa.update.entity.UpdateError: java.lang.String getDetailMsg()
io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction: void dispose()
androidx.core.graphics.TypefaceCompatApi24Impl: boolean isUsable()
androidx.customview.R$layout: R$layout()
androidx.appcompat.widget.AppCompatImageHelper: boolean hasOverlappingRendering()
androidx.drawerlayout.widget.DrawerLayout: void moveDrawerToOffset(android.view.View,float)
io.reactivex.internal.schedulers.IoScheduler$CachedWorkerPool: IoScheduler$CachedWorkerPool(long,java.util.concurrent.TimeUnit,java.util.concurrent.ThreadFactory)
io.reactivex.internal.util.OpenHashSet: void rehash()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()
io.reactivex.internal.operators.observable.ObservableWithLatestFrom$WithLatestFromOtherObserver: void onComplete()
androidx.appcompat.widget.ListPopupWindow: long getSelectedItemId()
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: ParallelReduceFull$ParallelReduceFullInnerSubscriber(io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullMainSubscriber,io.reactivex.functions.BiFunction)
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: void run()
io.reactivex.internal.operators.single.SingleInternalHelper$ToObservable: io.reactivex.Observable apply(io.reactivex.SingleSource)
io.reactivex.internal.operators.single.SingleTakeUntil$TakeUntilOtherSubscriber: void dispose()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int)
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
io.reactivex.internal.operators.observable.ObservablePublish$PublishObserver: void onComplete()
okhttp3.RequestBody$3: okhttp3.MediaType contentType()
io.reactivex.internal.operators.completable.CompletableFromObservable$CompletableFromObservableObserver: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableDelay$DelaySubscriber$OnError: void run()
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void removeSome(int)
io.reactivex.internal.queue.SpscLinkedArrayQueue: boolean offer(java.lang.Object)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: CompletableFutureCallAdapterFactory$BodyCallAdapter(java.lang.reflect.Type)
io.reactivex.internal.disposables.DisposableHelper: boolean isDisposed()
io.reactivex.internal.operators.observable.ObservableGroupJoin$LeftRightObserver: void dispose()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)
io.reactivex.internal.operators.observable.ObservableTake$TakeObserver: void onSubscribe(io.reactivex.disposables.Disposable)
okhttp3.internal.platform.OptionalMethod: java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[])
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3: Http2Connection$ReaderRunnable$3(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[])
androidx.appcompat.widget.SearchView: void onCloseClicked()
com.appspa.update.entity.UpdateEntity: boolean isAutoInstall()
okio.ByteString: okio.ByteString substring(int,int)
io.reactivex.internal.operators.maybe.MaybeFilterSingle$FilterMaybeObserver: void onError(java.lang.Throwable)
retrofit2.RequestFactory: retrofit2.RequestFactory parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method)
com.google.gson.internal.bind.JsonTreeReader: java.lang.String nextName()
io.reactivex.internal.operators.observable.ObservableTakeLastTimed$TakeLastTimedObserver: void dispose()
com.xuexiang.xhttp2.subsciber.BaseSubscriber: void onError(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerClosed(android.view.View)
io.reactivex.internal.operators.flowable.FlowableZipIterable: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: AppCompatDelegateImpl$6$1(androidx.appcompat.app.AppCompatDelegateImpl$6)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver: FlowableSwitchMapSingle$SwitchMapSingleSubscriber$SwitchMapSingleObserver(io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle$SwitchMapSingleSubscriber)
androidx.appcompat.widget.DecorToolbar: android.content.Context getContext()
okio.ForwardingSink: void write(okio.Buffer,long)
com.appspa.demo.R$xml: R$xml()
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: void onComplete()
androidx.appcompat.widget.ResourcesWrapper: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)
io.reactivex.internal.operators.completable.CompletableToSingle$ToSingle: void onError(java.lang.Throwable)
androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowing()
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: ShareActionProvider$ShareMenuItemOnMenuItemClickListener(androidx.appcompat.widget.ShareActionProvider)
io.reactivex.internal.observers.BlockingObserver: void onNext(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getChangingConfigurations()
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: boolean equals(java.lang.Object)
okhttp3.internal.http.CallServerInterceptor$CountingSink: CallServerInterceptor$CountingSink(okio.Sink)
io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: void onComplete()
io.reactivex.internal.operators.observable.ObservableDebounceTimed$DebounceTimedObserver: void onNext(java.lang.Object)
io.reactivex.internal.operators.single.SingleDoOnSuccess$DoOnSuccess: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.completable.CompletableToSingle: void subscribeActual(io.reactivex.SingleObserver)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle: void subscribeActual(io.reactivex.Observer)
androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
com.xuexiang.xhttp2.callback.UIProgressResponseCallBack$ProgressModel: UIProgressResponseCallBack$ProgressModel(com.xuexiang.xhttp2.callback.UIProgressResponseCallBack,long,long,boolean)
io.reactivex.internal.operators.flowable.FlowableRangeLong$RangeSubscription: void fastPath()
io.reactivex.internal.operators.observable.ObservableGenerate$GeneratorDisposable: void onNext(java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter: int getItemIndexOffset()
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.gson.internal.LinkedHashTreeMap: java.lang.Object remove(java.lang.Object)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int)
androidx.viewpager.widget.ViewPager: boolean resetTouch()
io.reactivex.subscribers.TestSubscriber: void request(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
okhttp3.internal.ws.RealWebSocket: void checkResponse(okhttp3.Response)
com.xuexiang.xhttp2.cache.RxCache$Builder: long calculateDiskCacheSize(java.io.File)
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.View onCreateActionView()
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int,boolean)
androidx.core.view.ViewCompat: void removeAccessibilityAction(android.view.View,int)
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter: long getItemId(int)
io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe$ConcatMapMaybeSubscriber$ConcatMapMaybeObserver: void onSuccess(java.lang.Object)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: boolean canApplyTheme()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
com.google.gson.internal.ConstructorConstructor$11: ConstructorConstructor$11(com.google.gson.internal.ConstructorConstructor)
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)
io.reactivex.internal.subscribers.BlockingSubscriber: boolean isCancelled()
androidx.fragment.app.FragmentManagerImpl$PopBackStackState: FragmentManagerImpl$PopBackStackState(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int)
io.reactivex.internal.operators.flowable.FlowableOnErrorReturn$OnErrorReturnSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn$UnsubscribeSubscriber: void onSubscribe(org.reactivestreams.Subscription)
io.reactivex.internal.operators.mixed.FlowableConcatMapSingle$ConcatMapSingleSubscriber: void onNext(java.lang.Object)
com.xuexiang.xhttp2.annotation.NetMethod: java.lang.String action()
retrofit2.RequestBuilder: void addFormField(java.lang.String,java.lang.String,boolean)
io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate$TakeUntilPredicateObserver: void onSubscribe(io.reactivex.disposables.Disposable)
com.appspa.update.widget.UpdateDialog: void onClick(android.view.View)
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
io.reactivex.internal.operators.parallel.ParallelJoin$JoinSubscriptionDelayError: ParallelJoin$JoinSubscriptionDelayError(org.reactivestreams.Subscriber,int,int)
io.reactivex.internal.operators.flowable.FlowableUsing$UsingSubscriber: void onComplete()
io.reactivex.internal.operators.single.SingleResumeNext$ResumeMainSingleObserver: void onSuccess(java.lang.Object)
org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl: org.aspectj.lang.reflect.AjType[] getParameterTypes()
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
io.reactivex.internal.operators.observable.ObservableBufferBoundary$BufferCloseObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: void requestPermission()
io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver: void dispose()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
io.reactivex.internal.operators.flowable.FlowableGroupBy$State: void onNext(java.lang.Object)
io.reactivex.internal.operators.flowable.FlowableConcatArray$ConcatArraySubscriber: void onComplete()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)
com.xuexiang.xhttp2.cache.RxCache$5: java.lang.Object execute()
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver: ObservableMergeWithCompletable$MergeWithObserver$OtherObserver(io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.xuexiang.xhttp2.utils.ApiUtils: ApiUtils()
com.jakewharton.disklrucache.StrictLineReader: StrictLineReader(java.io.InputStream,int,java.nio.charset.Charset)
com.jakewharton.disklrucache.DiskLruCache: java.io.OutputStream access$2000()
androidx.collection.LruCache: java.lang.String toString()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
io.reactivex.subscribers.SafeSubscriber: void request(long)
io.reactivex.internal.functions.Functions$EmptyRunnable: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: boolean isEmpty()
androidx.annotation.RestrictTo: androidx.annotation.RestrictTo$Scope[] value()
okio.Buffer: okio.BufferedSink emitCompleteSegments()
com.appspa.demo.http.OKHttpUpdateHttpService: OKHttpUpdateHttpService(boolean)
androidx.appcompat.app.AlertController: boolean onKeyDown(int,android.view.KeyEvent)
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$TimeoutFallbackObserver: void onSubscribe(io.reactivex.disposables.Disposable)
io.reactivex.internal.operators.completable.CompletableConcat$CompletableConcatSubscriber: boolean isDisposed()
androidx.core.widget.ScrollerCompat: boolean isOverScrolled()
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
io.reactivex.internal.operators.observable.ObservableCreate$CreateEmitter: java.lang.String toString()
io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable: int compareTo(io.reactivex.internal.schedulers.TrampolineScheduler$TimedRunnable)
androidx.appcompat.view.menu.ListMenuItemView: void setShortcut(boolean,char)
androidx.appcompat.app.WindowDecorActionBar: boolean isHideOnContentScrollEnabled()
androidx.appcompat.view.menu.MenuPopup: void setAnchorView(android.view.View)
io.reactivex.internal.util.VolatileSizeArrayList: int lastIndexOf(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()
okio.RealBufferedSource: byte readByte()
androidx.collection.SimpleArrayMap: void putAll(androidx.collection.SimpleArrayMap)
androidx.lifecycle.MediatorLiveData$Source: MediatorLiveData$Source(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
io.reactivex.internal.operators.observable.ObservableDistinct$DistinctObserver: void clear()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean onStateChanged(int[])
io.reactivex.subjects.ReplaySubject$SizeAndTimeBoundReplayBuffer: java.lang.Object[] getValues(java.lang.Object[])
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: boolean performAction(int,int,android.os.Bundle)
com.appspa.update.widget.NumberProgressBar: void setProgressTextSize(float)
io.reactivex.Emitter: void onNext(java.lang.Object)
io.reactivex.internal.util.VolatileSizeArrayList: boolean add(java.lang.Object)
io.reactivex.exceptions.OnErrorNotImplementedException: OnErrorNotImplementedException(java.lang.Throwable)
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
io.reactivex.subjects.BehaviorSubject: boolean add(io.reactivex.subjects.BehaviorSubject$BehaviorDisposable)
io.reactivex.internal.operators.maybe.MaybeDoOnTerminate$DoOnTerminate: MaybeDoOnTerminate$DoOnTerminate(io.reactivex.internal.operators.maybe.MaybeDoOnTerminate,io.reactivex.MaybeObserver)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()
io.reactivex.internal.operators.parallel.ParallelDoOnNextTry$ParallelDoOnNextConditionalSubscriber: void onError(java.lang.Throwable)
com.xuexiang.xhttp2.model.SchedulerType: com.xuexiang.xhttp2.model.SchedulerType[] values()
io.reactivex.internal.operators.flowable.FlowableFromArray$ArrayConditionalSubscription: void slowPath(long)
com.appspa.update.proxy.impl.DefaultUpdatePrompter: void beforeShowPrompt(com.appspa.update.entity.UpdateEntity,com.appspa.update.entity.PromptEntity)
com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.stream.JsonWriter value(long)
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: void run()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()
io.reactivex.internal.schedulers.SchedulerPoolFactory$ScheduledTask: SchedulerPoolFactory$ScheduledTask()
androidx.lifecycle.LifecycleRegistryOwner: androidx.lifecycle.LifecycleRegistry getLifecycle()
androidx.core.view.ScaleGestureDetectorCompat: ScaleGestureDetectorCompat()
androidx.core.net.DatagramSocketWrapper: DatagramSocketWrapper(java.net.DatagramSocket,java.io.FileDescriptor)
androidx.appcompat.app.WindowDecorActionBar$1: void onAnimationEnd(android.view.View)
androidx.core.util.Pools$SynchronizedPool: boolean release(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFromIterable$FromIterableDisposable: void dispose()
io.reactivex.internal.schedulers.NewThreadWorker: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
io.reactivex.internal.operators.flowable.FlowableDoFinally$DoFinallyConditionalSubscriber: void runFinally()
androidx.core.app.NotificationCompat$InboxStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup: android.graphics.drawable.Drawable getBackground()
androidx.annotation.FloatRange: double from()
io.reactivex.internal.operators.flowable.FlowableRepeatUntil$RepeatSubscriber: FlowableRepeatUntil$RepeatSubscriber(org.reactivestreams.Subscriber,io.reactivex.functions.BooleanSupplier,io.reactivex.internal.subscriptions.SubscriptionArbiter,org.reactivestreams.Publisher)
io.reactivex.internal.operators.flowable.FlowableReplay: io.reactivex.flowables.ConnectableFlowable create(io.reactivex.Flowable,int)
androidx.core.graphics.TypefaceCompatBaseImpl: void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
io.reactivex.internal.util.NotificationLite: boolean accept(java.lang.Object,io.reactivex.Observer)
androidx.appcompat.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
io.reactivex.internal.operators.maybe.MaybeOnErrorNext$OnErrorNextMaybeObserver$NextMaybeObserver: void onComplete()
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.loader.app.LoaderManagerImpl$LoaderObserver: boolean hasDeliveredData()
androidx.fragment.app.FragmentManagerImpl$5: void onAnimationEnd(android.animation.Animator)
androidx.appcompat.widget.ShareActionProvider: ShareActionProvider(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax: io.reactivex.internal.operators.flowable.FlowableInternalHelper$RequestMax[] values()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
androidx.annotation.StringDef: java.lang.String[] value()
com.appspa.update.entity.PromptEntity$1: PromptEntity$1()
io.reactivex.subjects.UnicastSubject$UnicastQueueDisposable: void clear()
androidx.appcompat.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)
io.reactivex.internal.operators.mixed.FlowableSwitchMapMaybe$SwitchMapMaybeSubscriber$SwitchMapMaybeObserver: void onSuccess(java.lang.Object)
io.reactivex.processors.AsyncProcessor: boolean add(io.reactivex.processors.AsyncProcessor$AsyncSubscription)
com.appspa.update.UpdateManager: void onBeforeCheck()
com.xuexiang.xhttp2.request.BaseBodyRequest: BaseBodyRequest(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths(java.lang.String[])
com.xuexiang.xhttp2.utils.RequestBodyUtils: okhttp3.RequestBody create(okhttp3.MediaType,java.io.InputStream)
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: FlowableInterval$IntervalSubscriber(org.reactivestreams.Subscriber)
androidx.core.os.EnvironmentCompat: EnvironmentCompat()
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
io.reactivex.internal.operators.flowable.FlowableCollectSingle$CollectSubscriber: FlowableCollectSingle$CollectSubscriber(io.reactivex.SingleObserver,java.lang.Object,io.reactivex.functions.BiConsumer)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: boolean isLongpressEnabled()
okhttp3.Cache$2: void remove()
okhttp3.internal.http2.Huffman: void buildTree()
com.appspa.update.widget.NumberProgressBar: int getTextColor()
okhttp3.CertificatePinner$Pin: int hashCode()
androidx.fragment.app.FragmentTransition: void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintHideIcon()
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getHeadsUpContentView()
com.google.gson.internal.bind.TypeAdapters$1: TypeAdapters$1()
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
com.xuexiang.xhttp2.R$attr: R$attr()
com.zhy.http.okhttp.OkHttpUtils: void sendSuccessResultCallback(java.lang.Object,com.zhy.http.okhttp.callback.Callback,int)
androidx.arch.core.internal.SafeIterableMap: int size()
io.reactivex.internal.operators.flowable.FlowableFromObservable$SubscriberObserver: void cancel()
io.reactivex.subscribers.SafeSubscriber: void onNext(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMaxTextLength()
io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.functions.Function)
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float lerp(float,float,float)
androidx.appcompat.view.menu.MenuBuilder: boolean isGroupDividerEnabled()
androidx.appcompat.content.res.AppCompatResources: AppCompatResources()
okhttp3.ConnectionSpec: java.lang.String toString()
io.reactivex.internal.operators.flowable.FlowableTakeLastTimed$TakeLastTimedSubscriber: boolean checkTerminated(boolean,org.reactivestreams.Subscriber,boolean)
io.reactivex.internal.operators.flowable.FlowableInterval$IntervalSubscriber: void request(long)
okhttp3.OkHttpClient: OkHttpClient()
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Response)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)
com.appspa.update._AppSpace: _AppSpace()
androidx.viewpager.widget.ViewPager: void drawableStateChanged()
io.reactivex.internal.observers.BlockingBaseObserver: boolean isDisposed()
com.appspa.update.entity.UpdateEntity: com.appspa.update.entity.UpdateEntity setIsSilent(boolean)
io.reactivex.internal.operators.observable.ObservableFlatMap$InnerObserver: ObservableFlatMap$InnerObserver(io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver,long)
com.google.gson.internal.$Gson$Types: java.lang.String typeToString(java.lang.reflect.Type)
okhttp3.internal.http1.Http1Codec: void writeRequest(okhttp3.Headers,java.lang.String)
com.google.gson.JsonElement: java.lang.String toString()
io.reactivex.internal.operators.maybe.MaybeFilter$FilterMaybeObserver: boolean isDisposed()
com.xuexiang.xhttp2.model.HttpHeaders: java.lang.String getUserAgent()
com.google.gson.internal.bind.TimeTypeAdapter$1: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
io.reactivex.internal.operators.observable.ObservableWindowBoundary$WindowBoundaryInnerObserver: void onComplete()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getBarThickness()
androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)
androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
io.reactivex.internal.operators.observable.ObservableMergeWithCompletable$MergeWithObserver$OtherObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.widget.ActionMenuPresenter: void setOverflowIcon(android.graphics.drawable.Drawable)
io.reactivex.internal.schedulers.NewThreadScheduler: io.reactivex.Scheduler$Worker createWorker()
io.reactivex.internal.operators.flowable.FlowableCountSingle$CountSubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.observers.QueueDrainObserver: boolean done()
io.reactivex.internal.operators.observable.ObservableJoin$JoinDisposable: void drain()
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor)
androidx.appcompat.widget.LinearLayoutCompat: void measureHorizontal(int,int)
androidx.fragment.R: R()
androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
io.reactivex.internal.operators.flowable.FlowableDistinct: void subscribeActual(org.reactivestreams.Subscriber)
androidx.appcompat.widget.Toolbar$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.appcompat.widget.ActivityChooserModel: androidx.appcompat.widget.ActivityChooserModel get(android.content.Context,java.lang.String)
okhttp3.MediaType: java.nio.charset.Charset charset()
com.appspa.update.utils.FileUtils: android.content.ContentResolver getContentResolver()
okhttp3.internal.http2.Http2Codec: okio.Sink createRequestBody(okhttp3.Request,long)
androidx.collection.SparseArrayCompat: java.lang.Object putIfAbsent(int,java.lang.Object)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1: void onAnimationStart(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStopped()
androidx.appcompat.app.ToolbarActionBar: void onConfigurationChanged(android.content.res.Configuration)
io.reactivex.internal.operators.single.SingleUsing$UsingSingleObserver: void onSuccess(java.lang.Object)
io.reactivex.internal.operators.observable.ObservableFlatMapSingle$FlatMapSingleObserver: boolean isDisposed()
com.zhy.http.okhttp.utils.L: L()
io.reactivex.internal.operators.observable.ObservableUsing$UsingObserver: void dispose()
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getGravity()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri()
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy$OnBackpressureBufferStrategySubscriber: void onError(java.lang.Throwable)
io.reactivex.internal.operators.flowable.FlowableAnySingle$AnySubscriber: void onComplete()
retrofit2.Utils$ParameterizedTypeImpl: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()
androidx.fragment.app.FragmentManagerImpl: java.util.List getActiveFragments()
io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)
retrofit2.KotlinExtensions$awaitResponse$2$2: void onResponse(retrofit2.Call,retrofit2.Response)
com.xuexiang.xhttp2.cache.RxCache$4: java.lang.Object execute()
io.reactivex.internal.operators.observable.ObservableTimeoutTimed$FallbackObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.ListFragment: int getSelectedItemPosition()
androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String)
okio.Buffer: okio.BufferedSink writeIntLe(int)
okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
retrofit2.ParameterHandler$Path: ParameterHandler$Path(java.lang.reflect.Method,int,java.lang.String,retrofit2.Converter,boolean)
io.reactivex.internal.observers.LambdaObserver: void onSubscribe(io.reactivex.disposables.Disposable)
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.widget.TooltipCompat: TooltipCompat()
androidx.appcompat.app.ActionBar: void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
okhttp3.Dns$1: Dns$1()
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcel)
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
io.reactivex.internal.operators.observable.ObservableDelay: void subscribeActual(io.reactivex.Observer)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
androidx.appcompat.app.ActionBar: void setSubtitle(int)
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat from(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableCache: void onNext(java.lang.Object)
io.reactivex.internal.operators.parallel.ParallelReduceFull$ParallelReduceFullInnerSubscriber: void onComplete()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)
androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)
io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription: java.lang.Object poll()
io.reactivex.internal.operators.observable.ObservableSampleWithObservable$SampleMainObserver: void emit()
com.xuexiang.xhttp2.transform.func.CacheResultFunc: java.lang.Object apply(com.xuexiang.xhttp2.cache.model.CacheResult)
retrofit2.DefaultCallAdapterFactory: DefaultCallAdapterFactory(java.util.concurrent.Executor)
androidx.appcompat.view.menu.MenuItemImpl: void actionFormatChanged()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: AppCompatSpinner$SavedState$1()
androidx.appcompat.widget.ActionMenuPresenter: ActionMenuPresenter(android.content.Context)
io.reactivex.internal.operators.flowable.FlowableConcatMap$BaseConcatMapSubscriber: void onComplete()
androidx.appcompat.graphics.drawable.StateListDrawable: int[] getStateSet(int)
io.reactivex.internal.operators.maybe.MaybeMergeArray$MpscFillOnceSimpleQueue: java.lang.Object poll()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.core.app.Person: Person(androidx.core.app.Person$Builder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()
okhttp3.Request: boolean isHttps()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)
androidx.appcompat.app.WindowDecorActionBar: java.lang.CharSequence getSubtitle()
com.google.gson.DefaultDateTypeAdapter: void write(com.google.gson.stream.JsonWriter,java.lang.Object)
androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)
io.reactivex.internal.operators.observable.ObservableTimeout$TimeoutFallbackObserver: void onNext(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.Movie getMovie(int)
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
io.reactivex.internal.operators.observable.ObservableMaterialize$MaterializeObserver: ObservableMaterialize$MaterializeObserver(io.reactivex.Observer)
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle(androidx.core.app.NotificationCompat$Builder)
okio.Segment: okio.Segment unsharedCopy()
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context)
androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getFetchStrategy()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
io.reactivex.internal.operators.observable.ObservableJust: java.lang.Object call()
io.reactivex.internal.operators.flowable.FlowableReplay$SizeBoundReplayBuffer: FlowableReplay$SizeBoundReplayBuffer(int)
androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)
io.reactivex.internal.operators.mixed.FlowableSwitchMapSingle: void subscribeActual(org.reactivestreams.Subscriber)
io.reactivex.internal.operators.flowable.FlowableDoOnEach$DoOnEachSubscriber: void onError(java.lang.Throwable)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: InputContentInfoCompat$InputContentInfoCompatApi25Impl(android.net.Uri,android.content.ClipDescription,android.net.Uri)
com.appspa.update.AppSpace: com.appspa.update.AppSpace isAutoMode(boolean)
okhttp3.internal.http2.Http2: java.io.IOException ioException(java.lang.String,java.lang.Object[])
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)
androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: java.lang.Object convert(java.lang.Object)
io.reactivex.Scheduler$DisposeTask: void dispose()
io.reactivex.schedulers.Schedulers$ComputationHolder: Schedulers$ComputationHolder()
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.appcompat.view.menu.MenuPopup: int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.google.gson.Gson: boolean serializeNulls()
androidx.lifecycle.LiveData: LiveData()
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawablesTints()
io.reactivex.exceptions.CompositeException: int size()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
org.aspectj.runtime.reflect.ConstructorSignatureImpl: java.lang.String getName()
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent)
androidx.appcompat.widget.LinearLayoutCompat: boolean isBaselineAligned()
com.appspa.update.utils.UpdateUtils: void saveIgnoreVersion(android.content.Context,java.lang.String)
io.reactivex.internal.operators.observable.ObservableCombineLatest$LatestCoordinator: void subscribe(io.reactivex.ObservableSource[])
androidx.fragment.app.FragmentTransaction: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
io.reactivex.internal.operators.flowable.FlowableReplay$BoundedReplayBuffer: void replay(io.reactivex.internal.operators.flowable.FlowableReplay$InnerSubscription)
androidx.appcompat.app.AlertController: void setCustomTitle(android.view.View)
androidx.fragment.app.FragmentManagerImpl$1: void handleOnBackPressed()
com.google.gson.internal.ConstructorConstructor$13: ConstructorConstructor$13(com.google.gson.internal.ConstructorConstructor)
okhttp3.Response: java.lang.String toString()
io.reactivex.internal.operators.single.SingleFlatMapMaybe$FlatMapMaybeObserver: void onComplete()
androidx.customview.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)
okhttp3.internal.cache.FaultHidingSink: void close()
com.xuexiang.xhttp2.transform.func.RetryExceptionFunc: long access$400(com.xuexiang.xhttp2.transform.func.RetryExceptionFunc)
io.reactivex.internal.operators.maybe.MaybeSubscribeOn: void subscribeActual(io.reactivex.MaybeObserver)
com.xuexiang.xhttp2.cache.core.BaseDiskCache: boolean clear()
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback: void onViewReleased(android.view.View,float,float)
io.reactivex.internal.operators.completable.CompletableMerge$CompletableMergeSubscriber: void onComplete()
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.google.gson.FieldNamingPolicy$1: java.lang.String translateName(java.lang.reflect.Field)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.core.app.ShareCompat$IntentReader: void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int)
io.reactivex.internal.operators.observable.ObservableGroupBy: void subscribeActual(io.reactivex.Observer)
io.reactivex.internal.operators.flowable.FlowableAny$AnySubscriber: void cancel()
androidx.core.view.ViewCompat: void setHasTransientState(android.view.View,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)
io.reactivex.observables.ConnectableObservable: ConnectableObservable()
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
androidx.core.app.BundleCompat$BundleCompatBaseImpl: BundleCompat$BundleCompatBaseImpl()
okio.Options: int size()
io.reactivex.internal.operators.completable.CompletableMergeArray$InnerCompletableObserver: CompletableMergeArray$InnerCompletableObserver(io.reactivex.CompletableObserver,java.util.concurrent.atomic.AtomicBoolean,io.reactivex.disposables.CompositeDisposable,int)
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
androidx.core.content.pm.ShortcutManagerCompat$1: void onReceive(android.content.Context,android.content.Intent)
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.core.os.LocaleListCompat: boolean isEmpty()
io.reactivex.internal.operators.mixed.ObservableConcatMapSingle$ConcatMapSingleMainObserver$ConcatMapSingleObserver: void dispose()
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void run()
